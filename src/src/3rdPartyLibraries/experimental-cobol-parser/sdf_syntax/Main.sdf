module Main                           %% Cobol grammar

imports CobolLex

exports 

context-free start-symbols 
  CobolSourceProgram

sorts

CobolSourceProgram
OptProgramSpec   
OptEndProgram
ProgramName

context-free syntax


%%%%%%%%%%
%% COBOL Source Program
%%%%%%%%%%

%%cobol-source-program = ( "IDENTIFICATION" | "ID" ) "DIVISION" "." program-id-cobol-source-program
%%[ identification-division-content ]
%%[ "ENVIRONMENT" "DIVISION" "." environment-division-content ]
%%[ "DATA" "DIVISION" "." data-division-content ]
%%[ procedure-division ]
%%[ { nested-cobol-source-program }* "END" "PROGRAM" program-name "." ]


%%   "IDENTIFICATION" "ID "DIVISION" "." "PROGRAM-ID"  ProgramName

  "IDENTIFICATION" "DIVISION" "." "PROGRAM-ID" "." ProgramName
   -> CobolSourceProgram  {cons("CobolSourceProgram")}

   ("IDENTIFICATION"|"ID") "DIVISION" "." "PROGRAM-ID" ("."|"") ProgramName
   OptProgramSpec   
   OptEndProgram  % TODO - not optional if there are nested source programs %
-> CobolSourceProgram  {cons("CobolSourceProgram")}

%% OptProgramSpec
%%
   (""|"IS") "RECURSIVE" (""|"PROGRAM") ("."|"")
-> OptProgramSpec                                                {cons("RECURSIVE")}

   ("IS"|"") "INITIAL"   ("PROGRAM"|"") ("."|"")
-> OptProgramSpec                                                {cons("INITIAL")}

   ("."|"")
-> OptProgramSpec                                                {cons("no-program-spec")}

%% OptEndProgram
%%
   "END" "PROGRAM" ProgramName "."
-> OptEndProgram                                                 {cons("EndProgram")}
-> OptEndProgram                                                 {cons("no-end-program")}

   Name
-> ProgramName                                                   {cons("Name")}

