# Makefile.in generated by automake 1.16.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2020 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# These definitions are for the benefit of independent software contained			-*- makefile -*-
# in ROSE.  (Currently, this means SAGE and ROSETTA.)
# It defines ROSE_INCLUDES and ROSE_LIBS so they can use the ROSE codes.

# ROSE_INCLUDES contains the include flags for compiling with ROSE code.
# (ROSE software should set the include paths in their respective Makefile.am
# files, since they are expected to know the ROSE source tree structure.)
# To use ROSE_INCLUDES, the independent software packages contained in ROSE
# should define the variable ROSE_HOME to be the relative path to the root
# of the ROSE directory tree.

# This fixes some problem caused by automake or autoconf
# (detailed documentation is in the ChangeLog)
# MAKE=gmake

# DQ (8/10/2007): Valentin suggested this be commented out.
# DQ (4/23/2006): This is the default when build using automake version 1.6.3 but it
# causes errors so we would like to specify --run automake instead
# AUTOMAKE = ${SHELL} $(top_srcdir)/config/missing --run automake-1.6
# AUTOMAKE = ${SHELL} $(top_srcdir)/config/missing --run automake

# force ranlib to just call touch so that *.so (dynamic libraries) will not
# be run with ranlib (which is a error).  This allows us to use dynamic
# libraries as the default within ROSE.
# JJW 7/25/2008: Do we really need this?
VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@

# DQ (10/23/2020): Pei-Hung and I think this may not be required (not available on my system).
# I get the error: 
#    /bin/ld: skipping incompatible /lib/libtinfo.so when searching for -ltinfo
#    clang-10: error: linker command failed with exit code 1 (use -v to see invocation)
# ROSE_LIBS += $(CLANG_LDFLAGS) -ltinfo
@ROSE_USE_CLANG_FRONTEND_TRUE@am__append_1 = $(CLANG_LDFLAGS)
@ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION_TRUE@am__append_2 = -R $(DOT_ASIS_LIB_DIR_) 
@USING_CLANG_COMPILER_FALSE@am__append_3 = \
@USING_CLANG_COMPILER_FALSE@   test2014_110.C


# DQ (9/19/2020): this test fails with the Intel v17 compiler (something regarding boost).
@USING_INTEL_COMPILER_FALSE@am__append_4 = \
@USING_INTEL_COMPILER_FALSE@   test2017_63.C 

@ROSE_USING_GCC_VERSION_LATER_4_4_TRUE@am__append_5 = \
@ROSE_USING_GCC_VERSION_LATER_4_4_TRUE@     test2017_31.C \
@ROSE_USING_GCC_VERSION_LATER_4_4_TRUE@     test2017_32.C \
@ROSE_USING_GCC_VERSION_LATER_4_4_TRUE@     test2017_46.C \
@ROSE_USING_GCC_VERSION_LATER_4_4_TRUE@     test2017_47.C \
@ROSE_USING_GCC_VERSION_LATER_4_4_TRUE@     test2016_96.C \
@ROSE_USING_GCC_VERSION_LATER_4_4_TRUE@     test2015_135.C \
@ROSE_USING_GCC_VERSION_LATER_4_4_TRUE@     test2015_136.C

@ROSE_USING_GCC_VERSION_LATER_4_4_TRUE@@USING_INTEL_COMPILER_TRUE@am__append_6 = test2017_69.C
@ROSE_USING_GCC_VERSION_LATER_4_4_TRUE@@USING_INTEL_COMPILER_FALSE@am__append_7 = test2017_69.C
@ROSE_USING_GCC_VERSION_LATER_4_4_FALSE@am__append_8 = \
@ROSE_USING_GCC_VERSION_LATER_4_4_FALSE@     test2017_31.C \
@ROSE_USING_GCC_VERSION_LATER_4_4_FALSE@     test2017_32.C \
@ROSE_USING_GCC_VERSION_LATER_4_4_FALSE@     test2017_44.C \
@ROSE_USING_GCC_VERSION_LATER_4_4_FALSE@     test2017_46.C \
@ROSE_USING_GCC_VERSION_LATER_4_4_FALSE@     test2017_47.C \
@ROSE_USING_GCC_VERSION_LATER_4_4_FALSE@     test2017_69.C \
@ROSE_USING_GCC_VERSION_LATER_4_4_FALSE@     test2016_96.C \
@ROSE_USING_GCC_VERSION_LATER_4_4_FALSE@     test2015_135.C \
@ROSE_USING_GCC_VERSION_LATER_4_4_FALSE@     test2015_136.C

@ROSE_USING_GCC_VERSION_LATER_4_8_TRUE@@USING_CLANG_COMPILER_FALSE@am__append_9 = \
@ROSE_USING_GCC_VERSION_LATER_4_8_TRUE@@USING_CLANG_COMPILER_FALSE@     test2015_126.C 

@ROSE_USING_GCC_VERSION_LATER_4_8_TRUE@am__append_10 = \
@ROSE_USING_GCC_VERSION_LATER_4_8_TRUE@     test2015_127.C \
@ROSE_USING_GCC_VERSION_LATER_4_8_TRUE@     test2015_129.C 

@ROSE_USING_GCC_VERSION_LATER_4_8_FALSE@am__append_11 = \
@ROSE_USING_GCC_VERSION_LATER_4_8_FALSE@     test2015_126.C \
@ROSE_USING_GCC_VERSION_LATER_4_8_FALSE@     test2015_127.C \
@ROSE_USING_GCC_VERSION_LATER_4_8_FALSE@     test2015_129.C 

@ROSE_USING_GCC_VERSION_LATER_6_0_TRUE@am__append_12 = \
@ROSE_USING_GCC_VERSION_LATER_6_0_TRUE@     test2018_01.C

@ROSE_USING_GCC_VERSION_LATER_6_0_TRUE@am__append_13 = \
@ROSE_USING_GCC_VERSION_LATER_6_0_TRUE@     rose-1701-1.C

@ROSE_USING_GCC_VERSION_LATER_6_0_FALSE@am__append_14 = \
@ROSE_USING_GCC_VERSION_LATER_6_0_FALSE@     test2018_01.C

@ROSE_USING_GCC_VERSION_LATER_6_0_FALSE@am__append_15 = \
@ROSE_USING_GCC_VERSION_LATER_6_0_FALSE@     rose-1701-1.C

@ROSE_USING_BOOST_VERSION_1_57_TRUE@am__append_16 = \
@ROSE_USING_BOOST_VERSION_1_57_TRUE@     test2014_77.C \
@ROSE_USING_BOOST_VERSION_1_57_TRUE@     test2014_78.C 

@ROSE_USING_BOOST_VERSION_1_57_FALSE@am__append_17 = \
@ROSE_USING_BOOST_VERSION_1_57_FALSE@     test2014_77.C \
@ROSE_USING_BOOST_VERSION_1_57_FALSE@     test2014_78.C 

@USING_CLANG_COMPILER_TRUE@am__append_18 = \
@USING_CLANG_COMPILER_TRUE@     test2014_71.C \
@USING_CLANG_COMPILER_TRUE@     test2014_111.C \
@USING_CLANG_COMPILER_TRUE@     test2015_70.C \
@USING_CLANG_COMPILER_TRUE@     test2015_81.C \
@USING_CLANG_COMPILER_TRUE@     test2016_82.C \
@USING_CLANG_COMPILER_TRUE@     test2005_50.C \
@USING_CLANG_COMPILER_TRUE@     test2007_141.C \
@USING_CLANG_COMPILER_TRUE@     test2012_188.C \
@USING_CLANG_COMPILER_TRUE@     test2013_243.C \
@USING_CLANG_COMPILER_TRUE@     test2014_187.C \
@USING_CLANG_COMPILER_TRUE@     test2014_187_work_around.C \
@USING_CLANG_COMPILER_TRUE@     test2014_188.C \
@USING_CLANG_COMPILER_TRUE@     test2015_120.C \
@USING_CLANG_COMPILER_TRUE@     test2013_304.C \
@USING_CLANG_COMPILER_TRUE@     test2014_81.C  \
@USING_CLANG_COMPILER_TRUE@     test2014_236.C \
@USING_CLANG_COMPILER_TRUE@     test2014_238.C \
@USING_CLANG_COMPILER_TRUE@     test2015_55.C \
@USING_CLANG_COMPILER_TRUE@     test2016_20.C \
@USING_CLANG_COMPILER_TRUE@     test2004_85.C \
@USING_CLANG_COMPILER_TRUE@     test2005_42.C \
@USING_CLANG_COMPILER_TRUE@     test2012_90.C \
@USING_CLANG_COMPILER_TRUE@     test2013_63.C \
@USING_CLANG_COMPILER_TRUE@     test2013_246.C \
@USING_CLANG_COMPILER_TRUE@     test2013_235.C 

@USING_CLANG_COMPILER_FALSE@am__append_19 = \
@USING_CLANG_COMPILER_FALSE@     test2014_71.C \
@USING_CLANG_COMPILER_FALSE@     test2014_111.C \
@USING_CLANG_COMPILER_FALSE@     test2015_70.C \
@USING_CLANG_COMPILER_FALSE@     test2015_81.C \
@USING_CLANG_COMPILER_FALSE@     test2016_82.C \
@USING_CLANG_COMPILER_FALSE@     test2005_50.C \
@USING_CLANG_COMPILER_FALSE@     test2007_141.C \
@USING_CLANG_COMPILER_FALSE@     test2012_188.C \
@USING_CLANG_COMPILER_FALSE@     test2013_243.C  \
@USING_CLANG_COMPILER_FALSE@     test2004_85.C \
@USING_CLANG_COMPILER_FALSE@     test2005_42.C \
@USING_CLANG_COMPILER_FALSE@     test2012_90.C \
@USING_CLANG_COMPILER_FALSE@     test2013_63.C \
@USING_CLANG_COMPILER_FALSE@     test2013_246.C \
@USING_CLANG_COMPILER_FALSE@     test2013_235.C 

@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@am__append_20 = \
@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@       test2014_187.C \
@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@       test2014_187_work_around.C \
@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@       test2014_188.C \
@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@       test2015_120.C \
@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@       test2013_304.C \
@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@       test2014_81.C  \
@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@       test2014_236.C \
@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@       test2014_238.C \
@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@       test2015_55.C \
@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@       test2016_20.C

@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_TRUE@am__append_21 = \
@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_TRUE@       test2014_187.C \
@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_TRUE@       test2014_187_work_around.C \
@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_TRUE@       test2014_188.C \
@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_TRUE@       test2015_120.C \
@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_TRUE@       test2013_304.C \
@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_TRUE@       test2014_81.C  \
@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_TRUE@       test2014_236.C \
@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_TRUE@       test2014_238.C \
@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_TRUE@       test2015_55.C \
@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_TRUE@       test2016_20.C

@USING_INTEL_COMPILER_TRUE@am__append_22 = \
@USING_INTEL_COMPILER_TRUE@     test2014_159.C \
@USING_INTEL_COMPILER_TRUE@     test2014_211.C \
@USING_INTEL_COMPILER_TRUE@     test2006_08.C \
@USING_INTEL_COMPILER_TRUE@     test2006_37.C

@USING_INTEL_COMPILER_TRUE@am__append_23 = \
@USING_INTEL_COMPILER_TRUE@     rose-1962.C

@USING_INTEL_COMPILER_FALSE@am__append_24 = \
@USING_INTEL_COMPILER_FALSE@     rose-1962.C

@USING_INTEL_COMPILER_FALSE@am__append_25 = \
@USING_INTEL_COMPILER_FALSE@     test2014_159.C \
@USING_INTEL_COMPILER_FALSE@     test2014_211.C \
@USING_INTEL_COMPILER_FALSE@     test2006_08.C \
@USING_INTEL_COMPILER_FALSE@     test2006_37.C

@OS_MACOSX_TRUE@am__append_26 = \
@OS_MACOSX_TRUE@     test2004_77.C \
@OS_MACOSX_TRUE@     test2006_20.C \
@OS_MACOSX_TRUE@     test2011_141.C \
@OS_MACOSX_TRUE@     test2011_142.C \
@OS_MACOSX_TRUE@     test2012_09.C \
@OS_MACOSX_TRUE@     test2013_09.C \
@OS_MACOSX_TRUE@     test2013_164.C \
@OS_MACOSX_TRUE@     test2013_212.C 

@OS_MACOSX_FALSE@am__append_27 = \
@OS_MACOSX_FALSE@     test2004_77.C \
@OS_MACOSX_FALSE@     test2006_20.C \
@OS_MACOSX_FALSE@     test2011_141.C \
@OS_MACOSX_FALSE@     test2011_142.C \
@OS_MACOSX_FALSE@     test2012_09.C \
@OS_MACOSX_FALSE@     test2013_09.C \
@OS_MACOSX_FALSE@     test2013_164.C \
@OS_MACOSX_FALSE@     test2013_212.C 


# DQ (9/17/2020): This is a new organization of the files that are passing only specific compilers.
# INTEL compiler
#      EXAMPLE_TESTCODES_REQUIRED_TO_PASS += 

# CLANG compiler
@USING_CLANG_COMPILER_TRUE@@USING_INTEL_COMPILER_FALSE@am__append_28 = \
@USING_CLANG_COMPILER_TRUE@@USING_INTEL_COMPILER_FALSE@   test2012_129.C \
@USING_CLANG_COMPILER_TRUE@@USING_INTEL_COMPILER_FALSE@   test2014_05.C \
@USING_CLANG_COMPILER_TRUE@@USING_INTEL_COMPILER_FALSE@   test2020_02.C

@USING_CLANG_COMPILER_TRUE@@USING_INTEL_COMPILER_FALSE@am__append_29 = \
@USING_CLANG_COMPILER_TRUE@@USING_INTEL_COMPILER_FALSE@   test2015_115.C \
@USING_CLANG_COMPILER_TRUE@@USING_INTEL_COMPILER_FALSE@   test2015_116.C \
@USING_CLANG_COMPILER_TRUE@@USING_INTEL_COMPILER_FALSE@   test2015_148.C \
@USING_CLANG_COMPILER_TRUE@@USING_INTEL_COMPILER_FALSE@   test2016_15.C \
@USING_CLANG_COMPILER_TRUE@@USING_INTEL_COMPILER_FALSE@   test2016_16.C \
@USING_CLANG_COMPILER_TRUE@@USING_INTEL_COMPILER_FALSE@   test2016_17.C \
@USING_CLANG_COMPILER_TRUE@@USING_INTEL_COMPILER_FALSE@   test2016_18.C \
@USING_CLANG_COMPILER_TRUE@@USING_INTEL_COMPILER_FALSE@   test2016_89.C \
@USING_CLANG_COMPILER_TRUE@@USING_INTEL_COMPILER_FALSE@   test2017_50.C 

@OS_MACOSX_FALSE@@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@am__append_30 = \
@OS_MACOSX_FALSE@@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@   test2012_129.C \
@OS_MACOSX_FALSE@@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@   test2014_05.C \
@OS_MACOSX_FALSE@@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@   test2015_115.C \
@OS_MACOSX_FALSE@@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@   test2015_116.C \
@OS_MACOSX_FALSE@@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@   test2015_148.C \
@OS_MACOSX_FALSE@@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@   test2016_15.C \
@OS_MACOSX_FALSE@@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@   test2016_16.C \
@OS_MACOSX_FALSE@@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@   test2016_17.C \
@OS_MACOSX_FALSE@@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@   test2016_18.C \
@OS_MACOSX_FALSE@@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@   test2016_89.C \
@OS_MACOSX_FALSE@@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@   test2017_50.C \
@OS_MACOSX_FALSE@@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@   test2020_02.C 

@ROSE_USE_CLANG_FRONTEND_FALSE@am__append_31 = --edg:no_warnings --edg:restrict
subdir = tests/nonsmoke/functional/CompileTests/Cxx_tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acmacros/canonicalize-symlink.m4 \
	$(top_srcdir)/acmacros/compiler-ar.m4 \
	$(top_srcdir)/acmacros/compiler-id.m4 \
	$(top_srcdir)/acmacros/configure-log.m4 \
	$(top_srcdir)/acmacros/pkg.m4 $(top_srcdir)/acmacros/upc.m4 \
	$(top_srcdir)/config/EDG.m4 $(top_srcdir)/config/ROSE.m4 \
	$(top_srcdir)/config/ac_pkg_swig.m4 \
	$(top_srcdir)/config/acinclude.m4 \
	$(top_srcdir)/config/ax_boost_base.m4 \
	$(top_srcdir)/config/ax_boost_chrono.m4 \
	$(top_srcdir)/config/ax_boost_date_time.m4 \
	$(top_srcdir)/config/ax_boost_filesystem.m4 \
	$(top_srcdir)/config/ax_boost_iostreams.m4 \
	$(top_srcdir)/config/ax_boost_program_options.m4 \
	$(top_srcdir)/config/ax_boost_random.m4 \
	$(top_srcdir)/config/ax_boost_regex.m4 \
	$(top_srcdir)/config/ax_boost_serialization.m4 \
	$(top_srcdir)/config/ax_boost_system.m4 \
	$(top_srcdir)/config/ax_boost_thread.m4 \
	$(top_srcdir)/config/ax_boost_wave.m4 \
	$(top_srcdir)/config/ax_compare_version.m4 \
	$(top_srcdir)/config/ax_compiler_vendor.m4 \
	$(top_srcdir)/config/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/config/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/config/ax_cxx_compile_stdcxx_14.m4 \
	$(top_srcdir)/config/ax_lib_mysql.m4 \
	$(top_srcdir)/config/ax_lib_sqlite3.m4 \
	$(top_srcdir)/config/ax_lib_xerces.m4 \
	$(top_srcdir)/config/ax_prog_bison_version.m4 \
	$(top_srcdir)/config/ax_python_devel.m4 \
	$(top_srcdir)/config/ax_with_prog.m4 \
	$(top_srcdir)/config/choose-backend-compiler.m4 \
	$(top_srcdir)/config/compiler-defs.m4 \
	$(top_srcdir)/config/determine-os.m4 \
	$(top_srcdir)/config/enable-rosehpct.m4 \
	$(top_srcdir)/config/generate-backend-compiler-specific-headers.m4 \
	$(top_srcdir)/config/libtool.m4 $(top_srcdir)/config/libxml.m4 \
	$(top_srcdir)/config/ltargz.m4 $(top_srcdir)/config/ltdl.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 \
	$(top_srcdir)/config/mdl_have_opengl_2014.m4 \
	$(top_srcdir)/config/qrose_indigo_1.m4 \
	$(top_srcdir)/config/qrose_indigo_1_windows.m4 \
	$(top_srcdir)/config/support-GraphViz.m4 \
	$(top_srcdir)/config/support-IntelPin.m4 \
	$(top_srcdir)/config/support-accelerator.m4 \
	$(top_srcdir)/config/support-aterm.m4 \
	$(top_srcdir)/config/support-backend-x10.m4 \
	$(top_srcdir)/config/support-bddbddb.m4 \
	$(top_srcdir)/config/support-binary.m4 \
	$(top_srcdir)/config/support-bison.m4 \
	$(top_srcdir)/config/support-blacklist.m4 \
	$(top_srcdir)/config/support-boost.m4 \
	$(top_srcdir)/config/support-capstone.m4 \
	$(top_srcdir)/config/support-clang.m4 \
	$(top_srcdir)/config/support-cobol.m4 \
	$(top_srcdir)/config/support-compass2.m4 \
	$(top_srcdir)/config/support-compiler-features.m4 \
	$(top_srcdir)/config/support-cuda.m4 \
	$(top_srcdir)/config/support-doxygen.m4 \
	$(top_srcdir)/config/support-dwarf.m4 \
	$(top_srcdir)/config/support-edg-debugging.m4 \
	$(top_srcdir)/config/support-edg.m4 \
	$(top_srcdir)/config/support-elf.m4 \
	$(top_srcdir)/config/support-fatal-rose-warnings.m4 \
	$(top_srcdir)/config/support-flang.m4 \
	$(top_srcdir)/config/support-gcc-omp.m4 \
	$(top_srcdir)/config/support-gcrypt.m4 \
	$(top_srcdir)/config/support-gmp.m4 \
	$(top_srcdir)/config/support-gnat.m4 \
	$(top_srcdir)/config/support-gomp-omp.m4 \
	$(top_srcdir)/config/support-haskell.m4 \
	$(top_srcdir)/config/support-i386.m4 \
	$(top_srcdir)/config/support-ida.m4 \
	$(top_srcdir)/config/support-insure.m4 \
	$(top_srcdir)/config/support-isl.m4 \
	$(top_srcdir)/config/support-java.m4 \
	$(top_srcdir)/config/support-languages.m4 \
	$(top_srcdir)/config/support-lcov.m4 \
	$(top_srcdir)/config/support-libffi.m4 \
	$(top_srcdir)/config/support-libharu.m4 \
	$(top_srcdir)/config/support-libpqxx.m4 \
	$(top_srcdir)/config/support-llvm.m4 \
	$(top_srcdir)/config/support-magic.m4 \
	$(top_srcdir)/config/support-maple.m4 \
	$(top_srcdir)/config/support-mint.m4 \
	$(top_srcdir)/config/support-mpi.m4 \
	$(top_srcdir)/config/support-octave.m4 \
	$(top_srcdir)/config/support-ofp.m4 \
	$(top_srcdir)/config/support-omp.m4 \
	$(top_srcdir)/config/support-php.m4 \
	$(top_srcdir)/config/support-pocc.m4 \
	$(top_srcdir)/config/support-projects.m4 \
	$(top_srcdir)/config/support-purify.m4 \
	$(top_srcdir)/config/support-python-api.m4 \
	$(top_srcdir)/config/support-python.m4 \
	$(top_srcdir)/config/support-readline.m4 \
	$(top_srcdir)/config/support-rose.m4 \
	$(top_srcdir)/config/support-rted.m4 \
	$(top_srcdir)/config/support-rtedupc.m4 \
	$(top_srcdir)/config/support-sanitizer.m4 \
	$(top_srcdir)/config/support-sat.m4 \
	$(top_srcdir)/config/support-spot.m4 \
	$(top_srcdir)/config/support-ssl.m4 \
	$(top_srcdir)/config/support-stratego.m4 \
	$(top_srcdir)/config/support-summary.m4 \
	$(top_srcdir)/config/support-swipl.m4 \
	$(top_srcdir)/config/support-valgrind.m4 \
	$(top_srcdir)/config/support-vectorization.m4 \
	$(top_srcdir)/config/support-visualization.m4 \
	$(top_srcdir)/config/support-windows.m4 \
	$(top_srcdir)/config/support-x10.m4 \
	$(top_srcdir)/config/support-yaml.m4 \
	$(top_srcdir)/config/support-yices.m4 \
	$(top_srcdir)/config/support-z3.m4 \
	$(top_srcdir)/config/support_POET.m4 \
	$(top_srcdir)/config/swig_enable_cxx.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/rose_config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
depcomp =
am__maybe_remake_depfiles =
SOURCES =
DIST_SOURCES =
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs \
	$(top_srcdir)/config/mkinstalldirs \
	$(top_srcdir)/tests/nonsmoke/functional/input_codes/cxx/Makefile_variables \
	README
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ABS_COMPASS2_XML_SRCDIR = @ABS_COMPASS2_XML_SRCDIR@
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
ARMA_PREFIX = @ARMA_PREFIX@
ATERM_BIN_PATH = @ATERM_BIN_PATH@
ATERM_INSTALL_PATH = @ATERM_INSTALL_PATH@
ATERM_LIBRARY_PATH = @ATERM_LIBRARY_PATH@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AUX_LINKER = @AUX_LINKER@
AWK = @AWK@
Axx_INCLUDES = @Axx_INCLUDES@
Axx_LIBS = @Axx_LIBS@
BACKEND_ADA_COMPILER = @BACKEND_ADA_COMPILER@
BACKEND_COBOL_COMPILER = @BACKEND_COBOL_COMPILER@
BACKEND_COMPILER_VERSION_MAJOR_NUMBER = @BACKEND_COMPILER_VERSION_MAJOR_NUMBER@
BACKEND_COMPILER_VERSION_MINOR_NUMBER = @BACKEND_COMPILER_VERSION_MINOR_NUMBER@
BACKEND_COMPILER_VERSION_NAME = @BACKEND_COMPILER_VERSION_NAME@
BACKEND_COMPILER_VERSION_PATCHLEVEL_NUMBER = @BACKEND_COMPILER_VERSION_PATCHLEVEL_NUMBER@
BACKEND_CSHARP_COMPILER = @BACKEND_CSHARP_COMPILER@
BACKEND_CXX_COMPILER = @BACKEND_CXX_COMPILER@
BACKEND_CXX_VENDOR_AND_VERSION2 = @BACKEND_CXX_VENDOR_AND_VERSION2@
BACKEND_CXX_VENDOR_AND_VERSION3 = @BACKEND_CXX_VENDOR_AND_VERSION3@
BACKEND_C_COMPILER = @BACKEND_C_COMPILER@
BACKEND_FORTRAN_COMPILER = @BACKEND_FORTRAN_COMPILER@
BACKEND_JAVA_COMPILER = @BACKEND_JAVA_COMPILER@
BACKEND_JOVIAL_COMPILER = @BACKEND_JOVIAL_COMPILER@
BACKEND_MATLAB_COMPILER = @BACKEND_MATLAB_COMPILER@
BACKEND_X10_COMPILER = @BACKEND_X10_COMPILER@
BISON = @BISON@
BISON_VERSION = @BISON_VERSION@
BOOST_CHRONO_LIB = @BOOST_CHRONO_LIB@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_DATE_TIME_LIB = @BOOST_DATE_TIME_LIB@
BOOST_FILESYSTEM_LIB = @BOOST_FILESYSTEM_LIB@
BOOST_IOSTREAMS_LIB = @BOOST_IOSTREAMS_LIB@
BOOST_LDFLAGS = @BOOST_LDFLAGS@
BOOST_PROGRAM_OPTIONS_LIB = @BOOST_PROGRAM_OPTIONS_LIB@
BOOST_RANDOM_LIB = @BOOST_RANDOM_LIB@
BOOST_REGEX_LIB = @BOOST_REGEX_LIB@
BOOST_SERIALIZATION_LIB = @BOOST_SERIALIZATION_LIB@
BOOST_SYSTEM_LIB = @BOOST_SYSTEM_LIB@
BOOST_THREAD_LIB = @BOOST_THREAD_LIB@
BOOST_WAVE_LIB = @BOOST_WAVE_LIB@
CANDL_PATH = @CANDL_PATH@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CCLD = @CCLD@
CFLAGS = @CFLAGS@
CFLAGS32 = @CFLAGS32@
CLANG_CXXFLAGS = @CLANG_CXXFLAGS@
CLANG_LDFLAGS = @CLANG_LDFLAGS@
CLANG_LIBDIR = @CLANG_LIBDIR@
CLASSPATH = @CLASSPATH@
CLOOG_PATH = @CLOOG_PATH@
COBPT_INSTALL_PATH = @COBPT_INSTALL_PATH@
COBPT_LIBRARY_PATH = @COBPT_LIBRARY_PATH@
CPP = @CPP@

# DQ (9/27/2015): Added to support new use of AM_CPPFLAGS instead of INCLUDES
# (depreicated in automake and for which many warnings are generated).
CPPFLAGS = $(AM_CPPFLAGS)
CUDA_BIN_DIR = @CUDA_BIN_DIR@
CUDA_INC_DIR = @CUDA_INC_DIR@
CUDA_LIB_DIR = @CUDA_LIB_DIR@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXXLD = @CXXLD@
CXX_DEBUG = @CXX_DEBUG@
CXX_OPTIMIZE = @CXX_OPTIMIZE@
CXX_SHARED_LIB_UPDATE = @CXX_SHARED_LIB_UPDATE@
CXX_STATIC_LIB_UPDATE = @CXX_STATIC_LIB_UPDATE@
CXX_TEMPLATE_OBJECTS = @CXX_TEMPLATE_OBJECTS@
CXX_TEMPLATE_REPOSITORY_PATH = @CXX_TEMPLATE_REPOSITORY_PATH@
CXX_WARNINGS = @CXX_WARNINGS@
CYGPATH_W = @CYGPATH_W@
C_DEBUG = @C_DEBUG@
C_OPTIMIZE = @C_OPTIMIZE@
C_WARNINGS = @C_WARNINGS@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLIB_PREFIX = @DLIB_PREFIX@
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
DOXYGEN_ADDED_DIRECTORY_1 = @DOXYGEN_ADDED_DIRECTORY_1@
DOXYGEN_ADDED_DIRECTORY_2 = @DOXYGEN_ADDED_DIRECTORY_2@
DOXYGEN_ENABLED_SECTIONS = @DOXYGEN_ENABLED_SECTIONS@
DOXYGEN_EXTRACT_ALL = @DOXYGEN_EXTRACT_ALL@
DOXYGEN_EXTRACT_PRIVATE = @DOXYGEN_EXTRACT_PRIVATE@
DOXYGEN_EXTRACT_STATIC = @DOXYGEN_EXTRACT_STATIC@
DOXYGEN_HIDE_FRIEND_COMPOUNDS = @DOXYGEN_HIDE_FRIEND_COMPOUNDS@
DOXYGEN_HIDE_UNDOC_CLASSES = @DOXYGEN_HIDE_UNDOC_CLASSES@
DOXYGEN_HIDE_UNDOC_MEMBERS = @DOXYGEN_HIDE_UNDOC_MEMBERS@
DOXYGEN_INTERNAL_DOCS = @DOXYGEN_INTERNAL_DOCS@
DOXYGEN_USE_TAG_FILE = @DOXYGEN_USE_TAG_FILE@
DOXYINDEXER = @DOXYINDEXER@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ETHER_PREFIX = @ETHER_PREFIX@
EXE = @EXE@
EXEEXT = @EXEEXT@
F77 = @F77@
FC = @FC@
FCFLAGS = @FCFLAGS@
FFLAGS = @FFLAGS@
FGREP = @FGREP@
FLANG_INSTALL_PATH = @FLANG_INSTALL_PATH@
FLANG_SOURCE_PATH = @FLANG_SOURCE_PATH@
FLTK_include_path = @FLTK_include_path@
FLTK_libs_path = @FLTK_libs_path@
FRONTEND_CXX_VENDOR_AND_VERSION2 = @FRONTEND_CXX_VENDOR_AND_VERSION2@
FRONTEND_CXX_VENDOR_AND_VERSION3 = @FRONTEND_CXX_VENDOR_AND_VERSION3@
GCC_MINOR_VERSION = @GCC_MINOR_VERSION@
GCC_VERSION = @GCC_VERSION@
GENERATED_COMPILER_NAME_AND_VERSION_SUFFIX = @GENERATED_COMPILER_NAME_AND_VERSION_SUFFIX@
GEN_BE = @GEN_BE@
GFORTRAN_PATH = @GFORTRAN_PATH@
GHCBIN = @GHCBIN@
GLUT_CFLAGS = @GLUT_CFLAGS@
GLUT_LIBS = ${glut_path}
GLUT_include_path = @GLUT_include_path@
GLUT_libs_path = @GLUT_libs_path@
GL_CFLAGS = @GL_CFLAGS@
GL_LIBS = @GL_LIBS@
GMP_INCLUDE_PATH = @GMP_INCLUDE_PATH@
GMP_INSTALL_PATH = @GMP_INSTALL_PATH@
GMP_LIBRARY_PATH = @GMP_LIBRARY_PATH@
GNAT_INCLUDES = @GNAT_INCLUDES@
GREP = @GREP@
GraphViz_include_path = @GraphViz_include_path@
GraphViz_libs_path = @GraphViz_libs_path@
HAVE_CXX11 = @HAVE_CXX11@
HAVE_CXX14 = @HAVE_CXX14@
HS_CONFIG_OPTS = @HS_CONFIG_OPTS@
INCLTDL = @INCLTDL@
INCLUDE_COMPASS_MAKEFILE_INC = @INCLUDE_COMPASS_MAKEFILE_INC@
INDENT = @INDENT@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSURE_OPTIONS = @INSURE_OPTIONS@
INTEL_FPP_PATH = @INTEL_FPP_PATH@
ISL_INCLUDE_PATH = @ISL_INCLUDE_PATH@
ISL_INSTALL_PATH = @ISL_INSTALL_PATH@
ISL_LIBRARY_PATH = @ISL_LIBRARY_PATH@
IntelPin_path = @IntelPin_path@
JAR = @JAR@
JAVA = @JAVA@
JAVAC = @JAVAC@
JAVA_JVM_INCLUDE = @JAVA_JVM_INCLUDE@
JAVA_JVM_LINK = @JAVA_JVM_LINK@
JAVA_JVM_PATH = @JAVA_JVM_PATH@
JAVA_PATH = @JAVA_PATH@
LD = @LD@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBADD_DL = @LIBADD_DL@
LIBADD_DLD_LINK = @LIBADD_DLD_LINK@
LIBADD_DLOPEN = @LIBADD_DLOPEN@
LIBADD_SHL_LOAD = @LIBADD_SHL_LOAD@
LIBDWARF_CPPFLAGS = @LIBDWARF_CPPFLAGS@
LIBDWARF_LDFLAGS = @LIBDWARF_LDFLAGS@
LIBDWARF_PREFIX = @LIBDWARF_PREFIX@
LIBELF_CPPFLAGS = @LIBELF_CPPFLAGS@
LIBELF_LDFLAGS = @LIBELF_LDFLAGS@
LIBELF_PREFIX = @LIBELF_PREFIX@
LIBFFI_CFLAGS = @LIBFFI_CFLAGS@
LIBFFI_LIBS = @LIBFFI_LIBS@
LIBGCRYPT_CPPFLAGS = @LIBGCRYPT_CPPFLAGS@
LIBGCRYPT_LDFLAGS = @LIBGCRYPT_LDFLAGS@
LIBGCRYPT_PREFIX = @LIBGCRYPT_PREFIX@
LIBLTDL = @LIBLTDL@
LIBOBJS = @LIBOBJS@
LIBREADLINE_INCLUDE_PATH = @LIBREADLINE_INCLUDE_PATH@
LIBREADLINE_INSTALL_PATH = @LIBREADLINE_INSTALL_PATH@
LIBREADLINE_LIBRARY_PATH = @LIBREADLINE_LIBRARY_PATH@
LIBREADLINE_LIBS = @LIBREADLINE_LIBS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LLVM_CONFIG = @LLVM_CONFIG@
LLVM_CPPFLAGS = @LLVM_CPPFLAGS@
LLVM_LDFLAGS = @LLVM_LDFLAGS@
LLVM_LIBS = @LLVM_LIBS@
LN_S = @LN_S@
LTDLDEPS = @LTDLDEPS@
LTDLINCL = @LTDLINCL@
LTDLOPEN = @LTDLOPEN@
LTLIBOBJS = @LTLIBOBJS@
LT_ARGZ_H = @LT_ARGZ_H@
LT_CONFIG_H = @LT_CONFIG_H@
LT_DLLOADERS = @LT_DLLOADERS@
LT_DLPREOPEN = @LT_DLPREOPEN@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MAPLE_INCLUDES = @MAPLE_INCLUDES@
MAPLE_LIBDIR = @MAPLE_LIBDIR@
MAPLE_LIBS = @MAPLE_LIBS@
MD5 = @MD5@
MINT = @MINT@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MPICC = @MPICC@
MPICXX = @MPICXX@
MPIF77 = @MPIF77@
MPIFC = @MPIFC@
MYSQL_CFLAGS = @MYSQL_CFLAGS@
MYSQL_CONFIG = @MYSQL_CONFIG@
MYSQL_INCLUDE = @MYSQL_INCLUDE@
MYSQL_LDFLAGS = @MYSQL_LDFLAGS@
MYSQL_VERSION = @MYSQL_VERSION@
NM = @NM@
NMEDIT = @NMEDIT@
NVCCBIN = @NVCCBIN@
OBJ = @OBJ@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OCTAVE_PARSER_INSTALL_TARFILE = @OCTAVE_PARSER_INSTALL_TARFILE@
OPENCL_INC_DIR = @OPENCL_INC_DIR@
OPENCL_LIB_DIR = @OPENCL_LIB_DIR@
OPEN_FORTRAN_PARSER_PATH = @OPEN_FORTRAN_PARSER_PATH@
OPTIONAL_PROJECTS = @OPTIONAL_PROJECTS@
OS_major_release_number = @OS_major_release_number@
OS_minor_release_number = @OS_minor_release_number@
OS_release = @OS_release@
OS_vendor = @OS_vendor@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PACKAGE_VERSION_NUMERIC = @PACKAGE_VERSION_NUMERIC@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
POET_INCL = @POET_INCL@
POET_LIB = @POET_LIB@
PPL_PATH = @PPL_PATH@
PURIFY_OPTIONS = @PURIFY_OPTIONS@
PYTHON = @PYTHON@
PYTHON_CPPFLAGS = @PYTHON_CPPFLAGS@
PYTHON_EXTRA_LDFLAGS = @PYTHON_EXTRA_LDFLAGS@
PYTHON_EXTRA_LIBS = @PYTHON_EXTRA_LIBS@
PYTHON_LDFLAGS = @PYTHON_LDFLAGS@
PYTHON_ROOT = @PYTHON_ROOT@
PYTHON_SITE_PKG = @PYTHON_SITE_PKG@
PYTHON_VERSION_MM = @PYTHON_VERSION_MM@
Pxx_INCLUDES = @Pxx_INCLUDES@
Pxx_LIBS = @Pxx_LIBS@
QROSE_PREFIX = @QROSE_PREFIX@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
QT_VERSION = @QT_VERSION@
QT_VERSION_MAJOR = @QT_VERSION_MAJOR@
QT_VERSION_MINOR = @QT_VERSION_MINOR@
RANLIB = @RANLIB@
RCC = @RCC@
ROSEHPCT_DEP_INCLUDES = @ROSEHPCT_DEP_INCLUDES@
ROSEHPCT_DEP_LIBS = @ROSEHPCT_DEP_LIBS@
ROSE_BOOST_NORMAL_INCLUDE_PATH = @ROSE_BOOST_NORMAL_INCLUDE_PATH@

# DQ (12/22/2008): Specification of Boost path for use with "-isystem" option (may be GNU
# specific).  We use this option only if the configuration of ROSE has detected a
# previously installed version of Boost (which we do not want to use).
# Note that only one of these will be non-empty makefile variables.
ROSE_BOOST_PREINCLUDE_PATH = @ROSE_BOOST_PREINCLUDE_PATH@
ROSE_CAPSTONE_PREFIX = @ROSE_CAPSTONE_PREFIX@
ROSE_EDG_MAJOR_VERSION_NUMBER = @ROSE_EDG_MAJOR_VERSION_NUMBER@
ROSE_EDG_MINOR_VERSION_NUMBER = @ROSE_EDG_MINOR_VERSION_NUMBER@
ROSE_HOME = @ROSE_HOME@
ROSE_LIBMAGIC_PREFIX = @ROSE_LIBMAGIC_PREFIX@
ROSE_LIBPQXX_PREFIX = @ROSE_LIBPQXX_PREFIX@
ROSE_LSB_RELEASE = @ROSE_LSB_RELEASE@
ROSE_OBJDUMP_PATH = @ROSE_OBJDUMP_PATH@
ROSE_OFP_JAR_FILE = @ROSE_OFP_JAR_FILE@
ROSE_OFP_MAJOR_VERSION_NUMBER = @ROSE_OFP_MAJOR_VERSION_NUMBER@
ROSE_OFP_MINOR_VERSION_NUMBER = @ROSE_OFP_MINOR_VERSION_NUMBER@
ROSE_OFP_PATCH_VERSION_NUMBER = @ROSE_OFP_PATCH_VERSION_NUMBER@
ROSE_OFP_VERSION_NUMBER = @ROSE_OFP_VERSION_NUMBER@
ROSE_PS2PDF_PATH = @ROSE_PS2PDF_PATH@
ROSE_SUPPORT_GNU_EXTENSIONS = @ROSE_SUPPORT_GNU_EXTENSIONS@
ROSE_SUPPORT_MICROSOFT_EXTENSIONS = @ROSE_SUPPORT_MICROSOFT_EXTENSIONS@
ROSE_USE_CANDL = @ROSE_USE_CANDL@
ROSE_USE_CLOOG = @ROSE_USE_CLOOG@
ROSE_USE_EDG_QUAD_FLOAT = @ROSE_USE_EDG_QUAD_FLOAT@
ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT = @ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT@
ROSE_USE_PPL = @ROSE_USE_PPL@
ROSE_USE_SCOPLIB = @ROSE_USE_SCOPLIB@
ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT = @ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT@
ROSE_WGET_PATH = @ROSE_WGET_PATH@
ROSE_WITH_MPI_CFLAGS = @ROSE_WITH_MPI_CFLAGS@
ROSE_WITH_MPI_CLDFLAGS = @ROSE_WITH_MPI_CLDFLAGS@
ROSE_WITH_MPI_CXXFLAGS = @ROSE_WITH_MPI_CXXFLAGS@
ROSE_WITH_MPI_CXXLDFLAGS = @ROSE_WITH_MPI_CXXLDFLAGS@
ROSE_WITH_MPI_F77FLAGS = @ROSE_WITH_MPI_F77FLAGS@
ROSE_WITH_MPI_F77LDFLAGS = @ROSE_WITH_MPI_F77LDFLAGS@
ROSE_WITH_MPI_FFLAGS = @ROSE_WITH_MPI_FFLAGS@
ROSE_WITH_MPI_FLDFLAGS = @ROSE_WITH_MPI_FLDFLAGS@
ROSE_YAML_PREFIX = @ROSE_YAML_PREFIX@
ROSE_YICES = @ROSE_YICES@
ROSE_YICES_PREFIX = @ROSE_YICES_PREFIX@
ROSE_Z3_PREFIX = @ROSE_Z3_PREFIX@
RT_LIBS = @RT_LIBS@
SCOPLIB_PATH = @SCOPLIB_PATH@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SPOT_INCLUDE_PATH = @SPOT_INCLUDE_PATH@
SPOT_INSTALL_PATH = @SPOT_INSTALL_PATH@
SPOT_LIBRARY_PATH = @SPOT_LIBRARY_PATH@
SQLITE3_CFLAGS = @SQLITE3_CFLAGS@
SQLITE3_LDFLAGS = @SQLITE3_LDFLAGS@
SQLITE3_VERSION = @SQLITE3_VERSION@
STRATEGO_BIN_PATH = @STRATEGO_BIN_PATH@
STRATEGO_INSTALL_PATH = @STRATEGO_INSTALL_PATH@
STRATEGO_LIBRARY_PATH = @STRATEGO_LIBRARY_PATH@
STRIP = @STRIP@
SWIG = @SWIG@
SWIG_LIB = @SWIG_LIB@
SWIPLBIN = @SWIPLBIN@
TCLSH = @TCLSH@
TEST_SMT_SOLVER = @TEST_SMT_SOLVER@
UIC = @UIC@
UPC = @UPC@
UPCDEPMODE = @UPCDEPMODE@
UPCFLAGS = @UPCFLAGS@
USING_WINDOWS = @USING_WINDOWS@
VALGRIND_BINARY = @VALGRIND_BINARY@
VALGRIND_BIN_PATH = @VALGRIND_BIN_PATH@
VALGRIND_INCLUDE_PATH = @VALGRIND_INCLUDE_PATH@
VALGRIND_INSTALL_PATH = @VALGRIND_INSTALL_PATH@
VALGRIND_LIBRARY_PATH = @VALGRIND_LIBRARY_PATH@
VECTORIZATION = @VECTORIZATION@
VERSION = @VERSION@
WT_PREFIX = @WT_PREFIX@
X10_BIN_PATH = @X10_BIN_PATH@
X10_INSTALL_PATH = @X10_INSTALL_PATH@
X10_LIBRARY_PATH = @X10_LIBRARY_PATH@
X10_VERSION = @X10_VERSION@
XERCES_CPPFLAGS = @XERCES_CPPFLAGS@
XERCES_LDFLAGS = @XERCES_LDFLAGS@
XERCES_LIBS = @XERCES_LIBS@
XERCES_VERSION = @XERCES_VERSION@
XMKMF = @XMKMF@
XML2_CONFIG = @XML2_CONFIG@
XML_CPPFLAGS = @XML_CPPFLAGS@
XML_LIBS = @XML_LIBS@
YACC = @YACC@
YFLAGS = @YFLAGS@
Z3BIN = @Z3BIN@
Z3_INCLUDE_PATH = @Z3_INCLUDE_PATH@
Z3_LIBRARY_PATH = @Z3_LIBRARY_PATH@
Z3_PREFIX = @Z3_PREFIX@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
absolute_path_srcdir = @absolute_path_srcdir@
ac_boost_path = @ac_boost_path@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_F77 = @ac_ct_F77@
ac_ct_FC = @ac_ct_FC@
ac_ct_MPICXX = @ac_ct_MPICXX@
ac_ct_UPC = @ac_ct_UPC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bddbddb_path = @bddbddb_path@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_triplet_without_redhat = @build_triplet_without_redhat@
build_vendor = @build_vendor@
builddir = @builddir@
configure_date = @configure_date@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
edg_union_struct_debugging_value = @edg_union_struct_debugging_value@
exec_prefix = @exec_prefix@
glut_path = @glut_path@
gnat_home = @gnat_home@
gnat_path = @gnat_path@
gomp_omp_runtime_library_path = @gomp_omp_runtime_library_path@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
ida_path = @ida_path@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
insure_BIN = @insure_BIN@
insure_LIBS = @insure_LIBS@
insure_PREFIX = @insure_PREFIX@
libdir = @libdir@
libexecdir = @libexecdir@
llvm_path = @llvm_path@
localedir = @localedir@
localstatedir = @localstatedir@
ltdl_LIBOBJS = @ltdl_LIBOBJS@
ltdl_LTLIBOBJS = @ltdl_LTLIBOBJS@
mandir = @mandir@
maple_path = @maple_path@
mkdir_p = @mkdir_p@
mono_home = @mono_home@
oldincludedir = @oldincludedir@
omni_omp_runtime_support_path = @omni_omp_runtime_support_path@
optional_Visualization_subdirs = @optional_Visualization_subdirs@
parallel_ast_traversal_omp_path = @parallel_ast_traversal_omp_path@
pdfdir = @pdfdir@
php_path = @php_path@
poet_dir = @poet_dir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
purify_BIN = @purify_BIN@
purify_INCLUDES = @purify_INCLUDES@
purify_LIBS = @purify_LIBS@
purify_PREFIX = @purify_PREFIX@
res_top_src = @res_top_src@
rosyln_home = @rosyln_home@
rted_path = @rted_path@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sys_symbol_underscore = @sys_symbol_underscore@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_pwd = @top_pwd@
top_srcdir = @top_srcdir@
wine_path = @wine_path@

# SQLite is a simpler database to use than MySQL
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_INCLUDE = $(SQLITE3_CFLAGS)
@ROSE_USE_SQLITE_DATABASE_TRUE@SQLITE_DATABASE_INCLUDE = $(SQLITE3_CFLAGS) -I$(top_srcdir)/src/roseExtensions/sqlite3x
@ROSE_USE_SQLITE_DATABASE_TRUE@SQLITE_DATABASE_LIBS = $(SQLITE3_LDFLAGS)
#   ROSE_SQLITE_DATABASE_OBJS     = $(top_builddir)/src/roseExtensions/sqlite3x/*o
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_LIB_NAME = RoseSQLite3xDatabase
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_LIB_FILE = lib$(ROSE_SQLITE_DATABASE_LIB_NAME).la
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_LIBS = -l$(ROSE_SQLITE_DATABASE_LIB_NAME)
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SIDEEFFECT_INCLUDE = -I$(top_srcdir)/src/midend/programAnalysis/sideEffectAnalysis
@ROSE_HAVE_LIBZ3_TRUE@Z3_LIB_NAME = z3
@ROSE_HAVE_LIBZ3_TRUE@Z3_LIB_FILE = lib$(Z3_LIB_NAME).so
@ROSE_HAVE_LIBZ3_TRUE@Z3_LIBS = -l$(Z3_LIB_NAME)
@ROSE_HAVE_LIBZ3_TRUE@Z3_INCLUDES = -I$(Z3_PREFIX)/include
@ROSE_HAVE_LIBZ3_TRUE@Z3_LIB_INCLUDES = -L$(Z3_PREFIX)/lib
@ROSE_HAVE_LIBZ3_TRUE@ROSE_Z3_INCLUDES = -I@ROSE_Z3_PREFIX@/include
@ROSE_HAVE_LIBZ3_TRUE@ROSE_Z3_LIBS = -lz3
@ROSE_HAVE_LIBZ3_TRUE@ROSE_Z3_LIBS_WITH_PATH = -L@ROSE_Z3_PREFIX@/lib -lz3

# This is properly handled by automake even when specified in an include file
EDG_LIBS = @EDG_LIBS@

# Conditional support for Gabriel's QRose GUI Library
#  ROSE_GUI_INCLUDE =   -I${QROSE_PREFIX}/include
@ROSE_USE_QT_TRUE@ROSE_GUI_INCLUDE = -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Framework -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Widgets -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/Common -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/QueryBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/TreeBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/QueryBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/SourceBox

# ROSE_GUI_LIBS = -lqrose
#  ROSE_GUI_LIBS_WITH_PATH = -L${QROSE_PREFIX}/lib -lqrose
#  ROSE_GUI_LIBS_WITH_PATH =  -L${top_builddir}/src/3rdPartyLibraries/qrose/QRoseLib/  -lqrose
@ROSE_USE_QT_TRUE@ROSE_GUI_LIBS_WITH_PATH = ${top_builddir}/src/3rdPartyLibraries/qrose/QRoseLib/libqrose.la

# ROSE_GUI_LIB_FILE = libqrose.a
@ROSE_USE_QT_TRUE@ROSE_QT_INCLUDE = $(QT_INCLUDES)
# ROSE_QT_LIBS = -lqt
@ROSE_USE_QT_TRUE@ROSE_QT_LIBS_WITH_PATH = ${QT_LDFLAGS}
# ROSE_QT_LIB_FILE = libqt.a

# ROSE-HPCToolkit module
@ROSE_BUILD_ROSEHPCT_TRUE@ROSE_ROSEHPCT_INCLUDES = -I$(top_srcdir)/src/roseExtensions/roseHPCToolkit/include
@ROSE_BUILD_ROSEHPCT_TRUE@ROSE_ROSEHPCT_LIBS = -lrosehpct
@ROSE_BUILD_ROSEHPCT_TRUE@ROSE_ROSEHPCT_LIBS_WITH_PATH = $(top_builddir)/src/roseExtensions/roseHPCToolkit/src/librosehpct.la
# ROSE_ROSEHPCT_LIB_FILE = librosehpct.so

# ROSE-YICES Package (destributed by SRI as a static library)
@ROSE_HAVE_LIBYICES_TRUE@ROSE_YICES_INCLUDES = -I@ROSE_YICES_PREFIX@/include
@ROSE_HAVE_LIBYICES_TRUE@ROSE_YICES_LIBS = -lyices
@ROSE_HAVE_LIBYICES_TRUE@ROSE_YICES_LIBS_WITH_PATH = @ROSE_YICES_PREFIX@/lib/libyices.a

# YAML-CPP package for parsing YAML/JSON files
@ROSE_HAVE_LIBYAML_TRUE@ROSE_YAML_INCLUDES = -I@ROSE_YAML_PREFIX@/include
@ROSE_HAVE_LIBYAML_TRUE@ROSE_YAML_LIBS = -lyaml-cpp
@ROSE_HAVE_LIBYAML_TRUE@ROSE_YAML_LIBS_WITH_PATH = -L@ROSE_YAML_PREFIX@/lib -lyaml-cpp

# GNU readline
@ROSE_WITH_LIBREADLINE_TRUE@ROSE_READLINE_INCLUDES = -I@LIBREADLINE_INCLUDE_PATH@
@ROSE_WITH_LIBREADLINE_TRUE@ROSE_READLINE_LIBS = @LIBREADLINE_LIBS@
@ROSE_WITH_LIBREADLINE_TRUE@ROSE_READLINE_LIBS_WITH_PATH = -L@LIBREADLINE_LIBRARY_PATH@ $(ROSE_READLINE_LIBS)

# libmagic for identifying file types based on magic numbers
@ROSE_HAVE_LIBMAGIC_TRUE@ROSE_LIBMAGIC_INCLUDES = -I@ROSE_LIBMAGIC_PREFIX@/include
@ROSE_HAVE_LIBMAGIC_TRUE@ROSE_LIBMAGIC_LIBS = -lmagic
@ROSE_HAVE_LIBMAGIC_TRUE@ROSE_LIBMAGIC_LIBS_WITH_PATH = -L@ROSE_LIBMAGIC_PREFIX@/lib -lmagic

# PostgreSQL C++ API
@ROSE_HAVE_LIBPQXX_TRUE@ROSE_LIBPQXX_INCLUDES = -I@ROSE_LIBPQXX_PREFIX@/include
@ROSE_HAVE_LIBPQXX_TRUE@ROSE_LIBPQXX_LIBS = -lpqxx -lpq
@ROSE_HAVE_LIBPQXX_TRUE@ROSE_LIBPQXX_LIBS_WITH_PATH = -L@ROSE_LIBPQXX_PREFIX@/lib -lpqxx -lpq

# Capstone disassembler
@ROSE_HAVE_CAPSTONE_TRUE@ROSE_CAPSTONE_INCLUDES = -I@ROSE_CAPSTONE_PREFIX@/include
@ROSE_HAVE_CAPSTONE_TRUE@ROSE_CAPSTONE_LIBS = -lcapstone
@ROSE_HAVE_CAPSTONE_TRUE@ROSE_CAPSTONE_LIBS_WITH_PATH = -L@ROSE_CAPSTONE_PREFIX@/lib -lcapstone

# Math algorithms from http://dlib.net. This is a headers-only library neede by some binary analyses.
@ROSE_HAVE_DLIB_TRUE@ROSE_DLIB_INCLUDES = -I@DLIB_PREFIX@
@ROSE_HAVE_DLIB_TRUE@ROSE_DLIB_LIBS = 
@ROSE_HAVE_DLIB_TRUE@ROSE_DLIB_LIBS_WITH_PATH = 

# DQ (11/4/2016): Adding support for use of Address Sanitizer (for where the ROSE Test Handler (RTH) is used.
# Note the quotes and escapes that are required:
ADDRESS_SANITIZER_OPTIONS = "ASAN_OPTIONS=halt_on_error=0:symbolize=1:detect_leaks=0 ASAN_SYMBOLIZER_PATH=\`which llvm-symbolizer\`"

# DQ(11/4/2016): Need a version when not using the ROSE Test Handler (RTH):
NON_RTH_ADDRESS_SANITIZER_OPTIONS = ASAN_OPTIONS=halt_on_error=1:symbolize=1:detect_leaks=0 ASAN_SYMBOLIZER_PATH=`which llvm-symbolizer`
@ROSE_HAVE_LIBELF_TRUE@ROSE_ELF_INCLUDES = @LIBELF_CPPFLAGS@
@ROSE_HAVE_LIBELF_TRUE@ROSE_ELF_LIBS_WITH_PATH = @LIBELF_LDFLAGS@

# ROSE gcrypt support (for things like md5, sha1, etc)
@ROSE_HAVE_LIBGCRYPT_TRUE@ROSE_GCRYPT_INCLUDES = @LIBGCRYPT_CPPFLAGS@
@ROSE_HAVE_LIBGCRYPT_TRUE@ROSE_GCRYPT_LIBS_WITH_PATH = @LIBGCRYPT_LDFLAGS@

# ROSE-DWARF libdwarf support
@ROSE_HAVE_LIBDWARF_TRUE@ROSE_DWARF_INCLUDES = @LIBDWARF_CPPFLAGS@
@ROSE_HAVE_LIBDWARF_TRUE@@ROSE_USE_INTEL_PIN_FALSE@ROSE_DWARF_LIBS_WITH_PATH = @LIBDWARF_LDFLAGS@

# DQ (3/13/2009):
# If Dwarf is used with Intel Pin then reference the same copy of libdwarf.a (in the same
# directory).  However, it does NOT work to link both references to libdwarf into more
# than one dynamic (shared) library, so we need to link libdwarf dynamically.
# To avoid additional LD_LIBRARY_PATH requirements, we do so using rpath.
# To support this the libdwarf.so should be placed into $(INTEL_PIN_PATH)/intel64/lib-ext
# and the static libdwarf.a moved out (renamed) so that it will not be used.
# Note that this will also cause librose.so to use the shared library for
# dwarf when used with Intel Pin.
@ROSE_HAVE_LIBDWARF_TRUE@@ROSE_USE_INTEL_PIN_TRUE@ROSE_DWARF_LIBS_WITH_PATH = -L$(INTEL_PIN_PATH)/intel64/lib-ext -ldwarf -lelf
# DQ (3/14/2009): This factors the lib paths.
@ROSE_HAVE_LIBDWARF_TRUE@@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_WITH_DWARF_LIBS_PATH = $(INTEL_PIN_LIB_PATHS) -lpin -lxed -ldl $(ROSE_DWARF_LIBS_WITH_PATH)

# ROSE-WINE Package (Wine is a package to permit execution of Windows binaries under Linux)
@ROSE_USE_WINDOWS_ANALYSIS_SUPPORT_TRUE@ROSE_WINE_INCLUDES = -I$(wine_path)/include
@ROSE_USE_PHP_TRUE@ROSE_PHP_INCLUDES = -I$(php_path)/include/phc -I$(php_path)/include/php
@ROSE_USE_PHP_TRUE@ROSE_PHP_LIBS = -lphp5 -lphc -lltdl
@ROSE_USE_PHP_TRUE@ROSE_PHP_LIBS_WITH_PATH = $(php_path)/lib/libphc.so $(php_path)/lib/libphp5.so $(LIBLTDL)

# ASR (06/09/2010): adding llvm support variables
@ROSE_USE_LLVM_TRUE@ROSE_LLVM_INCLUDES = -I$(llvm_path)/include
@ROSE_USE_LLVM_TRUE@ROSE_LLVM_LIBS = -L$(llvm_path)/lib \
@ROSE_USE_LLVM_TRUE@	-lLLVMXCoreCodeGen -lLLVMXCoreAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMXCoreInfo -lLLVMSystemZCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMSystemZAsmPrinter -lLLVMSystemZInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMSparcCodeGen -lLLVMSparcAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMSparcInfo -lLLVMPowerPCCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMPowerPCAsmPrinter -lLLVMPowerPCInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMpic16passes -lLLVMPIC16AsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMPIC16CodeGen -lLLVMPIC16Info \
@ROSE_USE_LLVM_TRUE@	-lLLVMMSP430CodeGen -lLLVMMSP430AsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMMSP430Info -lLLVMMSIL -lLLVMMSILInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMMipsAsmPrinter -lLLVMMipsCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMMipsInfo -lLLVMMBlazeAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMMBlazeCodeGen -lLLVMMBlazeInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMLinker -lLLVMipo -lLLVMInterpreter \
@ROSE_USE_LLVM_TRUE@	-lLLVMInstrumentation -lLLVMJIT \
@ROSE_USE_LLVM_TRUE@	-lLLVMExecutionEngine -lLLVMCppBackend \
@ROSE_USE_LLVM_TRUE@	-lLLVMCppBackendInfo -lLLVMCellSPUCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMCellSPUAsmPrinter -lLLVMCellSPUInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMCBackend -lLLVMCBackendInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMBlackfinCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMBlackfinAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMBlackfinInfo -lLLVMBitWriter \
@ROSE_USE_LLVM_TRUE@	-lLLVMX86Disassembler -lLLVMX86AsmParser \
@ROSE_USE_LLVM_TRUE@	-lLLVMX86AsmPrinter -lLLVMX86CodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMX86Info -lLLVMAsmParser \
@ROSE_USE_LLVM_TRUE@	-lLLVMARMAsmParser -lLLVMMCParser \
@ROSE_USE_LLVM_TRUE@	-lLLVMARMAsmPrinter -lLLVMARMCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMARMInfo -lLLVMArchive \
@ROSE_USE_LLVM_TRUE@	-lLLVMBitReader -lLLVMAlphaCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMSelectionDAG -lLLVMAlphaAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMAsmPrinter -lLLVMCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMScalarOpts -lLLVMInstCombine \
@ROSE_USE_LLVM_TRUE@	-lLLVMTransformUtils -lLLVMipa \
@ROSE_USE_LLVM_TRUE@	-lLLVMAnalysis -lLLVMTarget -lLLVMMC \
@ROSE_USE_LLVM_TRUE@	-lLLVMCore -lLLVMAlphaInfo -lLLVMSupport \
@ROSE_USE_LLVM_TRUE@	-lLLVMSystem

# adding all libraries for now

# Python API support
@ROSE_USE_PYTHON_DEV_TRUE@ROSE_PYTHON_INCLUDES = @PYTHON_CPPFLAGS@
@ROSE_USE_PYTHON_DEV_TRUE@ROSE_PYTHON_LIBS_WITH_PATH = @PYTHON_LDFLAGS@

# SSL support permits use of MD5 checksums internally for binary library identification.
@ROSE_USE_SSL_SUPPORT_TRUE@ROSE_SSL_LIBS = -lssl -lcrypto

# support for precompiled headers
@ROSE_PCH_TRUE@ROSE_PCH_INCLUDE = -Winvalid-pch -fPIC -DPIC
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_PATH = @IntelPin_path@
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_INCLUDE_PATHS = -I$(INTEL_PIN_PATH)/source/include -I$(INTEL_PIN_PATH)/source/include/gen -I$(INTEL_PIN_PATH)/extras/xed2-intel64/include -I$(INTEL_PIN_PATH)/source/tools/InstLib

# DQ (3/8/2009): These cause rose/src/testSharedRoseLib to fail, I don't know why (fails in system call to map()).
# INTEL_PIN_LIB_PATHS     = -L$(INTEL_PIN_PATH)/intel64/lib -L$(INTEL_PIN_PATH)/extras/xed2-intel64/lib -L$(INTEL_PIN_PATH)/intel64/lib-ext
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_LIB_PATHS = -L$(INTEL_PIN_PATH)/intel64/lib -L$(INTEL_PIN_PATH)/extras/xed2-intel64/lib

# Do we want to handle this differently when Dwarf is used optionally with ROSE.
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_LIBS = -lpin -lxed -ldwarf -lelf -ldl
#if ROSE_HAVE_LIBDWARF
#  INTEL_PIN_LIBS          = -lpin -lxed -lelf -ldl
#else
#  INTEL_PIN_LIBS          = -lpin -lxed -ldwarf -lelf -ldl
#endif
@ROSE_USE_ETHER_TRUE@ROSE_ETHER_INCLUDE = -I$(ETHER_PREFIX)/include
@ROSE_USE_ETHER_TRUE@ROSE_ETHER_LIBS = -L$(ETHER_PREFIX)/lib -lxenctrl
@ROSE_WITH_ATERM_TRUE@ROSE_ATERM_INCLUDE = -I$(ATERM_LIBRARY_PATH)/../include
@ROSE_WITH_ATERM_TRUE@ROSE_ATERM_LIBS = -L$(ATERM_LIBRARY_PATH) -lATerm

# Added support for Fortran front-end development using the flang (F18) compiler [Rasmussen 8/12/2019]
@ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION_TRUE@ROSE_FLANG_INCLUDES = -I$(FLANG_INSTALL_PATH)/include
@ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION_TRUE@ROSE_FLANG_LIBS = -L$(FLANG_INSTALL_PATH)/lib -lLLVMDemangle -lLLVMSupport -lLLVMFrontendOpenMP -lFortranParser -lFortranSemantics -lFortranEvaluate -lFortranCommon -lFortranDecimal -lFortranLower -lncurses

# DQ (5/9/2017): Adding Ada library support.
# ROSE_ADA_INCLUDES = -I$(ada_path)/include_xxx
@ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION_TRUE@ROSE_ADA_INCLUDES = -I$(ada_path)/include_xxx
@ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION_TRUE@DOT_ASIS_LIB_DIR_ = $(abs_top_builddir)/src/frontend/Experimental_Ada_ROSE_Connection/dot_asis/dot_asis_library/lib
#  ROSE_ADA_LIBS = -ldot_asis
#  ROSE_ADA_LIBS_WITH_PATH = $(DOT_ASIS_LIB_DIR_)/libdot_asis.so

# RASMUSSEN (10/24/2017): Adding the GnuCOBOL parse-tree library support.
@ROSE_EXPERIMENTAL_COBOL_ROSE_CONNECTION_TRUE@ROSE_COBOL_PT_LIBS_WITH_PATH = -L$(COBPT_LIBRARY_PATH) -lcob -lcobpt
@ROSE_USE_EDG_QUAD_FLOAT_TRUE@ROSE_QUAD_FLOAT_MATH = -lquadmath

# DQ (1/9/2010): Added use of libimf with libm (the two go together when using Intel icc and icpc)
#  ROSE_INTEL_COMPILER_MATH_LIBS = -limf -lm
# DQ (11/16/2017): We need to link in these Intel specific required libraries to avoid: error hidden symbol `__intel_cpu_features_init_x'
# ROSE_INTEL_COMPILER_MATH_LIBS =
#    ROSE_INTEL_COMPILER_MATH_LIBS += -limf
@USING_INTEL_COMPILER_TRUE@ROSE_INTEL_COMPILER_MATH_LIBS = -limf \
@USING_INTEL_COMPILER_TRUE@	-lirng -lintlc -lsvml -lm
# ROSE_INCLUDES =
#     $(ROSE_BOOST_PREINCLUDE_PATH)
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@ROSE_INCLUDES_WITHOUT_BOOST_ISYSTEM_PATH = \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_builddir)/src/roseSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_builddir)/src/frontend/SageIII \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astFixup \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astPostProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astMerge \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astVisualization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astFileIO \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/sageInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/virtualCFG \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astTokenStream \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astHiddenTypeAndDeclarationLists \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_builddir)/src/frontend/SageIII/astFileIO \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astFromString \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/includeDirectivesProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/sage_support \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/OpenFortranParser_SAGE_Connection \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/ECJ_ROSE_Connection \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I"$(JAVA_HOME)/include" \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/PHPFrontend \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_CLANG_FRONTEND_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/PythonFrontend \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/BinaryFormats \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/BinaryLoader \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/Disassemblers \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_CLANG_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/formatSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/languageIndependenceSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/CxxCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/JavaCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/FortranCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/PHPCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/PythonCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/X10CodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/AdaCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/JovialCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/asmUnparser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/support \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/graphs  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/stringSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/commandlineProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/abstractHandle \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/abstractMemoryObject \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/abstractLayer \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astDiagnostics \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/astInlining \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/astOutlining  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/transformationTracking \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astMatching \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astQuery \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astRewriteMechanism \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/annotation \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/astInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/astSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/symbolicVal \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/BinaryAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/BinaryAnalysis/dataflowanalyses \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/BinaryAnalysis/instructionSemantics \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/computation \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/depGraph \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/depInfo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/driver \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/outsideInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/prepostTransformation \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/ompLowering \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/extractFunctionArgumentsNormalization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/singleStatementToBlockNormalization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/arithmeticIntensity \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/annotationLanguageParser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/CFG \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/staticSingleAssignment \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/ssaUnfilteredCfg \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/systemDependenceGraph \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/systemDependenceGraph \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/CallGraphAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/OAWrap \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/bitvectorDataflow \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/VirtualFunctionAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/defUseAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/distributedMemoryAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/dominanceAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/pointerAnal \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/staticInterproceduralSlicing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/valuePropagation \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/variableRenaming \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_SIDEEFFECTS_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_DATABASE_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_GUI_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_QT_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_SQLITE_DATABASE_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@			$(ROSE_SIDEEFFECT_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(SQLITE_DATABASE_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/partialRedundancyElimination \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/finiteDifferencing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/functionCallNormalization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/constantFolding \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/implicitCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/roseSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/3rdPartyLibraries/MSTL \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/3rdPartyLibraries/libharu-2.1.0/include \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_builddir)/src/3rdPartyLibraries/libharu-2.1.0/include \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Framework \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Widgets  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/graphs \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/astInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/libltdl \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/roseExtensions/failSafe \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_PHP_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_PYTHON_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_YICES_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_Z3_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_YAML_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_LIBPQXX_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_CAPSTONE_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_READLINE_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_LIBMAGIC_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_DLIB_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_GCRYPT_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_ELF_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_DWARF_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_WINE_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(VALGRIND_CFLAGS) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(SQLITE3_CFLAGS) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_BOOST_NORMAL_INCLUDE_PATH) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_PCH_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(INTEL_PIN_INCLUDE_PATHS) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_ETHER_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_ATERM_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_FLANG_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_CSHARP_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_ADA_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_JOVIAL_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_COBOL_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(BOOST_CPPFLAGS)


# DQ (4/13/2016): Is there were we put the support to include -lstdc++.so on the link line directly?

# DQ (3/6/2013): We need to build a SWIG path that can't include the isystem option.
# Note use of "-isystem" option in ROSE_BOOST_PREINCLUDE_PATH to have the
# boost specified on the configure
# command-line be used instead of the OS version of boost that is sometimes
# installed with Linux (it is always a version too old to be used with ROSE).
# This is used only when the ROSE configuration detects a previously installed
# version of Boost (e.g /usr/include/boost) that we don't want to use.
# ROSE_INCLUDES =
#    $(ROSE_BOOST_PREINCLUDE_PATH)
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@ROSE_INCLUDES_WITHOUT_BOOST_ISYSTEM_PATH = \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_builddir)/src/roseSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_builddir)/src/frontend/SageIII \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/astFixup \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/astPostProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/astVisualization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/sageInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/includeDirectivesProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/sage_support \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/OpenFortranParser_SAGE_Connection \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/ECJ_ROSE_Connection \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I"$(JAVA_HOME)/include" \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/BinaryFormats \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/BinaryLoader \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/Disassemblers \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/formatSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/languageIndependenceSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/CxxCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/JavaCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/FortranCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/PHPCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/PythonCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/X10CodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/AdaCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/JovialCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/asmUnparser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/support \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/graphs  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/stringSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/commandlineProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/astDiagnostics \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/astProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/astMatching \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/astQuery \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/BinaryAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/programAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/roseSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/3rdPartyLibraries/MSTL \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/graphs \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/roseExtensions/failSafe \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     $(ROSE_ATERM_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     $(ROSE_FLANG_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     $(ROSE_BOOST_NORMAL_INCLUDE_PATH)


# DQ (10/23/2015): These paths have been replaces with the following variables.
# These variable are empty for now (reflecting the default usage, and need to
# be set properly where ever Clang support is processed as a configure option.
#    -I$(top_srcdir)/src/frontend/CxxFrontend/ClangFrontend
#    -I$(top_srcdir)/src/frontend/CxxFrontend/Clang
#    $(ROSE_CLANG_FRONTEND_INCLUDE)
#    $(ROSE_CLANG_INCLUDE)
SWIG_ROSE_INCLUDES = $(ROSE_INCLUDES_WITHOUT_BOOST_ISYSTEM_PATH)
ROSE_INCLUDES = $(ROSE_BOOST_PREINCLUDE_PATH) $(ROSE_INCLUDES_WITHOUT_BOOST_ISYSTEM_PATH)

# DQ (8/15/2010): I have removed these directories from the include paths since it no longer exists.
# I expect that the directories were removed and the include list not properly cleaned up.
# -I$(top_srcdir)/src/midend/binaryAnalyses/graph
# -I$(top_srcdir)/src/midend/programTransformation/runtimeTransformation
# -I$(top_srcdir)/projects/dataBase

# DQ (12/22/2008): Move Boost directory to front and used "-isystem" option so
# that a system with a previous (older) installation of boost does not interfer
# with the use of ROSE (and the version of boost specified using "--with-boost").
# $(BOOST_CPPFLAGS)

# DQ (10/28/2008): I think these should be included, I don't know why they
# were removed (used with Microsoft Windows tests, and Yices tests).
# DQ: Not used currently
#     $(ROSE_WINE_INCLUDES)

# DQ (5/3/2007): Removed from ROSE
#     -I$(top_srcdir)/src/midend/programAnalysis/dominatorTreesAndDominanceFrontiers
#     -I$(top_srcdir)/src/midend/programAnalysis/staticProgramSlicing

# DQ (10/22/2004): Removed when I could not get annotation work to compile properly with make distcheck rule
#     -I$(top_srcdir)/src/midend/programAnalysis/annotationLanguageParser

# New way using two libraries
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.a $(top_builddir)/src/libedg.a
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.so $(top_builddir)/src/libedg.so
# ROSE_LIBS_WITH_PATH = $(libdir)/librose.so $(libdir)/libedg.so
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.la
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.la $(JAVA_JVM_LIB)
# JJW 7/25/2008: This should probably just be the same as ROSE_LIBS
ROSE_LIBS_WITH_PATH = $(ROSE_LIBS)

# ROSE_LIBS = $(top_builddir)/src/librose.la -lm $(LEXLIB) $(SQLITE_DATABASE_LIBS) $(LIB_QT) $(WAVE_LDFLAGS) $(WAVE_LIBRARIES) $(WAVE_LIBS) $(JAVA_JVM_LIB) $(RT_LIBS)

# MS 10/19/2015: added ROSE_BOOST_LIBS variable to share exact same
# boost libs list in ROSE an in the ROSTTA Makefiles.
ROSE_BOOST_LIBS = $(BOOST_LDFLAGS) $(BOOST_DATE_TIME_LIB) $(BOOST_CHRONO_LIB) \
  $(BOOST_THREAD_LIB) $(BOOST_FILESYSTEM_LIB) $(BOOST_PROGRAM_OPTIONS_LIB) \
  $(BOOST_RANDOM_LIB) $(BOOST_REGEX_LIB)  $(BOOST_SYSTEM_LIB) $(BOOST_SERIALIZATION_LIB)  \
  $(BOOST_WAVE_LIB) $(BOOST_IOSTREAMS_LIB) $(BOOST_PYTHON_LIB)

ROSE_LIBS = $(abspath $(top_builddir)/src/librose.la) -lm \
	$(JAVA_JVM_LINK) $(SQLITE_DATABASE_LIBS) $(QT_LIBS) \
	$(ROSE_BOOST_LIBS) $(SQLITE3_LDFLAGS) $(RT_LIBS) \
	$(ROSE_YICES_LIBS_WITH_PATH) $(ROSE_Z3_LIBS_WITH_PATH) \
	$(ROSE_PHP_LIBS_WITH_PATH) $(ROSE_DWARF_LIBS_WITH_PATH) \
	$(ROSE_ELF_LIBS_WITH_PATH) $(ROSE_GUI_LIBS_WITH_PATH) \
	$(ROSE_QT_LIBS_WITH_PATH) $(ROSE_SSL_LIBS) $(ROSE_ETHER_LIBS) \
	$(ROSE_INTEL_COMPILER_MATH_LIBS) $(ROSE_ATERM_LIBS) \
	$(ROSE_FLANG_LIBS) $(ROSE_YAML_LIBS_WITH_PATH) \
	$(ROSE_LIBMAGIC_LIBS_WITH_PATH) \
	$(ROSE_READLINE_LIBS_WITH_PATH) $(ROSE_DLIB_LIBS_WITH_PATH) \
	$(ROSE_GCRYPT_LIBS_WITH_PATH) $(ROSE_LIBPQXX_LIBS_WITH_PATH) \
	$(ROSE_COBOL_PT_LIBS_WITH_PATH) $(ROSE_PYTHON_LIBS_WITH_PATH) \
	$(ROSE_QUAD_FLOAT_MATH) $(ROSE_CAPSTONE_LIBS_WITH_PATH) \
	$(am__append_1)

#if ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION
#ROSE_LIBS += $(libroseAdalibraries) 
#endif

#========================================================================================================================
# These are the "-R directory" switches that need to be passed to libtool running in link mode to make sure that ROSE
# executables have rpath properties that point to the directories containing the libraries we're using. Do not add
# system directories (or at least not at the front of this list) because that will cause the system-installed version of
# a library to be used rather than some user-specific version.
#
# Here's the motivation for using rpath instead of LD_LIBRARY_PATH: Consider what happens if some ROSE tool, call it
# myTranslator, is compiled and linked against a custom, user-installed version of libz.so (perhaps because myTranslator
# is using a custom version of some graphics library, like libgraphicsmagick.so, that needs a newer libz.so than what's
# installed on the system).  If I then set LD_LIBRARY_PATH to point to the directory with my libz.so I'll be able to run
# myTranslator, however I probably won't be able any system installed tool that uses libz.so. This includes not being
# able to run /usr/bin/as, which might be called indirectly when myTranslator invokes the backend compiler (because
# LD_LIBRARY_PATH overrides the rpath built into /usr/bin/as).  Run-time linking with the wrong dynamic library at best
# produces an error message from the linker, but more often just results in a fault of some sort.
#
# How does rpath fix this problem? It encodes into each executable the list of directories that should be searched when
# the executable is run, similar to LD_LIBRARY_PATH but on a per-executable basis.
#
# The filter-out is removing specific libraries (-lwhatever), the GCC's POSIX thread switch (-pthread), static libraries
# (whatever.a), and various system directories that might have the wrong library versions and which are searched
# automatically anyway. The outer patsubst is changing "-Ldirectory" to just "directory", and the addprefix is changing
# each directory to "-R directory" which is libtool's switch for adding an rpath to an executable.
#
# The inner-most patsubst needs more explanation: Although most low-level libraries like libz, libpng, etc. are normally
# installed in well-known system-wide locations (like /usr/lib), when testing ROSE in matrix testing using RMC, these
# libraries are often compiled and installed locally in such ways that they're not binary compatible with the
# system-installed versions. However, ROSE doesn't have configuration or cmake options for all these libraries because
# there could eventually be far too many. Therefore, we use the fact that RMC has already chosen the correct library
# directories and added their names to various environment variables. The lines of the form
#     $(subst :, ,# $(whatever_LIBDIRS))
# split the named environment variable into individual directory names.  If there's a ROSE configure option to specify
# the library location, then DO NOT list an environment variable here--use the directory from configure instead (which
# goes into ROSE_LIBS above).
ROSE_RPATHS = $(patsubst -L%,-R %, $(filter-out -L/lib% -L/usr/lib% \
	-L/usr/local/lib% -L/var/lib%, $(filter -L%, $(ROSE_LIBS) \
	$(subst :, , $(GNU_COMPILERS_LIBDIRS)) $(subst :, , \
	$(LIBBZ2_LIBDIRS)) $(subst :, , $(LIBGRAPHICSMAGICK_LIBDIRS)) \
	$(subst :, , $(LIBJPEG_LIBDIRS)) $(subst :, , \
	$(LIBLCMS_LIBDIRS)) $(subst :, , $(LIBLZMA_LIBDIRS)) $(subst \
	:, , $(LIBPNG_LIBDIRS)) $(subst :, , $(LIBTIFF_LIBDIRS)) \
	$(subst :, , $(PYTHON_LIBDIRS)) $(subst :, , $(SPOT_LIBDIRS)) \
	$(subst :, , $(ZLIB_LIBDIRS)) $(subst :, , \
	$(INTEL_COMPILER_RPATHS)) ) ) ) $(am__append_2)
@OS_MACOSX_FALSE@ROSE_LINK_RPATHS = $(addprefix -Wl$(comma)-rpath , $(filter-out -R , $(ROSE_RPATHS)))

# Rasmussen (3/23/2018): Added ROSE_LINK_RPATHS to enable linking on Mac OSX with ROSE installation
@OS_MACOSX_TRUE@ROSE_LINK_RPATHS = $(addprefix -Xlinker -rpath -Xlinker , $(filter-out -R , $(ROSE_RPATHS)))
@OS_MACOSX_FALSE@comma = ,
INTEL_COMPILER_RPATHS = $(shell $(top_srcdir)/scripts/intel-compiler-rpaths.sh)

# DQ (3/8/2009): This fails when I try to include it (fails in rose/src/testSharedRoseLib).
#  $(INTEL_PIN_LIB_PATHS) $(INTEL_PIN_LIBS)

# DQ (3/14/2009): It is cleaner to just required that Intel Pin support require setting
# the LD_LIBRARYPATH to include: $(INTEL_PIN_PATH)/intel64/lib-ext

# This ROSE_SEPARATE_LIBS is used for the linking of preprocessor.C used within
# development. The use of the seperate libraries make the linking faster where the
# main librose library is not built.  Libtool may have changed this so that we could
# just link to librose now just as easily, but one has to rebuild librose each time
# instead of just the individual shared library.
# JJW 7/25/2008: This should probably just be the same as ROSE_LIBS
ROSE_SEPARATE_LIBS = $(ROSE_LIBS)

# QY (11/2/04): removed -lastoutlining from ROSE_SEPARATE_LIBS

# DQ (10/22/2004): Removed when I could not get annotation work to compile properly
# with make distcheck rule
# -lannotationLanguageParser(appears after -lvaluePropagation)

# Test harness variables. See "rth_run.pl --help" for more info.  The RTH_RUN_FLAGS is meant to be set on the
# "make" command-line, but the default depends on the value of the verbosity $(V) flag.
RTH_RUN_FLAGS_V_ = 
RTH_RUN_FLAGS_V_0 = 
RTH_RUN_FLAGS_V_1 = --immediate-output
RTH_RUN_FLAGS = $(RTH_RUN_FLAGS_V_$(V))

# Default timeout that you can override on the "make" commandline. Valid values
# are integers followed by "s" (seconds), "m" (minutes), "h" (hours), or the
# word "never".  See scripts/rth_run.pl for detailed documentation.
RTH_TIMEOUT = 15m
RTH_RUN = $(top_srcdir)/scripts/rth_run.pl $(RTH_RUN_FLAGS) \
	srcdir=$(abspath $(srcdir)) top_srcdir=$(abspath $(top_srcdir)) \
	blddir=$$(pwd) top_blddir=$(abspath $(top_builddir)) \
	VALGRIND=$(VALGRIND) TIMEOUT=$(RTH_TIMEOUT)

RTH_STATS = $(top_srcdir)/scripts/rth_stats.pl
ROSE__CXX_TESTS_DIR = $(top_srcdir)/tests/nonsmoke/functional/CompileTests/Cxx_tests
ROSE__CXX_TESTS = \
	test_CplusplusMacro_Cpp.C \
	test2001_01.C \
	test2001_02.C \
	test2001_03.C \
	test2001_04.C \
	test2001_05.C \
	test2001_06.C \
	test2001_07.C \
	test2001_08.C \
	test2001_09.C \
	test2001_10.C \
	test2001_11.C \
	test2001_12.C \
	test2001_13.C \
	test2001_14.C \
	test2001_15.C \
	test2001_16.C \
	test2001_17.C \
	test2001_18.C \
	test2001_19.C \
	test2001_20.C \
	test2001_21.C \
	test2001_22.C \
	test2001_23.C \
	test2001_24.C \
	test2001_25.C \
	test2001_26.C \
	test2001_27.C \
	test2001_28.C \
	test2001_29.C \
	test2002_01.C \
	test2003_01.C \
	test2003_02.C \
	test2003_03.C \
	test2003_04.C \
	test2003_05.C \
	test2003_06.C \
	test2003_08.C \
	test2003_09.C \
	test2003_10.C \
	test2003_11.C \
	test2003_12.C \
	test2003_13.C \
	test2003_14.C \
	test2003_15.C \
	test2003_16.C \
	test2003_17.C \
	test2003_18.C \
	test2003_19.C \
	test2003_20.C \
	test2003_21.C \
	test2003_23.C \
	test2003_25.C \
	test2003_26.C \
	test2003_27.C \
	test2003_28.C \
	test2003_29.C \
	test2003_30.C \
	test2003_31.C \
	test2003_32.C \
	test2003_35.C \
	test2003_36.C \
	test2003_37.C \
	test2003_38.C \
	test2004_01.C \
	test2004_02.C \
	test2004_03.C \
	test2004_04.C \
	test2004_05.C \
	test2004_06.C \
	test2004_07.C \
	test2004_08.C \
	test2004_09.C \
	test2004_10.C \
	test2004_11.C \
	test2004_12.C \
	test2004_13.C \
	test2004_14.C \
	test2004_15.C \
	test2004_16.C \
	test2004_17.C \
	test2004_18.C \
	test2004_19.C \
	test2004_23.C \
	test2004_24.C \
	test2004_26.C \
	test2004_27.C \
	test2004_28.C \
	test2004_29.C \
	test2004_30.C \
	test2004_31.C \
	test2004_32.C \
	test2004_33.C \
	test2004_34.C \
	test2004_36.C \
	test2004_37.C \
	test2004_38.C \
	test2004_39.C \
	test2004_40.C \
	test2004_42.C \
	test2004_43.C \
	test2004_44.C \
	test2004_45.C \
	test2004_47.C \
	test2004_48.C \
	test2004_49.C \
	test2004_50.C \
	test2004_51.C \
	test2004_52.C \
	test2004_53.C \
	test2004_54.C \
	test2004_55.C \
	test2004_56.C \
	test2004_58.C \
	test2004_59.C \
	test2004_60.C \
	test2004_61.C \
	test2004_62.C \
	test2004_63.C \
	test2004_64.C \
	test2004_65.C \
	test2004_67.C \
	test2004_68.C \
	test2004_69.C \
	test2004_70.C \
	test2004_71.C \
	test2004_72.C \
	test2004_73.C \
	test2004_74.C \
	test2004_75.C \
	test2004_76.C \
	test2004_78.C \
	test2004_79.C \
	test2004_80.C \
	test2004_81.C \
	test2004_83.C \
	test2004_84.C \
	test2004_86.C \
	test2004_87.C \
	test2004_88.C \
	test2004_89.C \
	test2004_90.C \
	test2004_91.C \
	test2004_93.C \
	test2004_94.C \
	test2004_95.C \
	test2004_96.C \
	test2004_97.C \
	test2004_98.C \
	test2004_99.C \
	test2004_100.C \
	test2004_101.C \
	test2004_102.C \
	test2004_103.C \
	test2004_104.C \
	test2004_105.C \
	test2004_106.C \
	test2004_107.C \
	test2004_108.C \
	test2004_109.C \
	test2004_110.C \
	test2004_111.C \
	test2004_112.C \
	test2004_113.C \
	test2004_114.C \
	test2004_115.C \
	test2004_116.C \
	test2004_117.C \
	test2004_118.C \
	test2004_119.C \
	test2004_120.C \
	test2004_121.C \
	test2004_122.C \
	test2004_123.C \
	test2004_124.C \
	test2004_125.C \
	test2004_127.C \
	test2004_128.C \
	test2004_129.C \
	test2004_130.C \
	test2004_131.C \
	test2004_132.C \
	test2004_133.C \
	test2004_134.C \
	test2004_135.C \
	test2004_136.C \
	test2004_137.C \
	test2004_138.C \
	test2004_139.C \
	test2004_140.C \
	test2004_141.C \
	test2004_142.C \
	test2004_143.C \
	test2004_144.C \
	test2004_145.C \
	test2004_146.C \
	test2004_147.C \
	test2004_148.C \
	test2004_149.C \
	test2004_150.C \
	test2004_151.C \
	test2004_152.C \
	test2004_153.C \
	test2004_154.C \
	test2004_155.C \
	test2004_156.C \
	test2004_157.C \
	test2004_158.C \
	test2004_159.C \
	test2004_160.C \
	test2004_161.C \
	test2004_162.C \
	test2004_163.C \
	test2004_164.C \
	test2005_01.C \
	test2005_02.C \
	test2005_03.C \
	test2005_04.C \
	test2005_05.C \
	test2005_07.C \
	test2005_09.C \
	test2005_10.C \
	test2005_11.C \
	test2005_12.C \
	test2005_13.C \
	test2005_14.C \
	test2005_15.C \
	test2005_16.C \
	test2005_17.C \
	test2005_19.C \
	test2005_20.C \
	test2005_21.C \
	test2005_22.C \
	test2005_23.C \
	test2005_24.C \
	test2005_25.C \
	test2005_26.C \
	test2005_27.C \
	test2005_28.C \
	test2005_29.C \
	test2005_30.C \
	test2005_31.C \
	test2005_32.C \
	test2005_33.C \
	test2005_34.C \
	test2005_35.C \
	test2005_36.C \
	test2005_37.C \
	test2005_38.C \
	test2005_39.C \
	test2005_40.C \
	test2005_41.C \
	test2005_43.C \
	test2005_44.C \
	test2005_45.C \
	test2005_46.C \
	test2005_47.C \
	test2005_48.C \
	test2005_49.C \
	test2005_51.C \
	test2005_52.C \
	test2005_53.C \
	test2005_55.C \
	test2005_57.C \
	test2005_58.C \
	test2005_59.C \
	test2005_61.C \
	test2005_62.C \
	test2005_63.C \
	test2005_64.C \
	test2005_65.C \
	test2005_66.C \
	test2005_67.C \
	test2005_68.C \
	test2005_70.C \
	test2005_71.C \
	test2005_72.C \
	test2005_73.C \
	test2005_74.C \
	test2005_75a.C \
	test2005_75b.C \
	test2005_76.C \
	test2005_77.C \
	test2005_78.C \
	test2005_79.C \
	test2005_80.C \
	test2005_81.C \
	test2005_82.C \
	test2005_83.C \
	test2005_84.C \
	test2005_86.C \
	test2005_87.C \
	test2005_88.C \
	test2005_89.C \
	test2005_90.C \
	test2005_91.C \
	test2005_92.C \
	test2005_93.C \
	test2005_94.C \
	test2005_95.C \
	test2005_96.C \
	test2005_97.C \
	test2005_98.C \
	test2005_99.C \
	test2005_100.C \
	test2005_101.C \
	test2005_102.C \
	test2005_103.C \
	test2005_104.C \
	test2005_105.C \
	test2005_106.C \
	test2005_107.C \
	test2005_108.C \
	test2005_109.C \
	test2005_110.C \
	test2005_111.C \
	test2005_112.C \
	test2005_113.C \
	test2005_114.C \
	test2005_116.C \
	test2005_117.C \
	test2005_118.C \
	test2005_119.C \
	test2005_120.C \
	test2005_121.C \
	test2005_122.C \
	test2005_123.C \
	test2005_124.C \
	test2005_125.C \
	test2005_126.C \
	test2005_127.C \
	test2005_128.C \
	test2005_129.C \
	test2005_130.C \
	test2005_131.C \
	test2005_132.C \
	test2005_133.C \
	test2005_134.C \
	test2005_135.C \
	test2005_136.C \
	test2005_137.C \
	test2005_138.C \
	test2005_139.C \
	test2005_140.C \
	test2005_141.C \
	test2005_142.C \
	test2005_143.C \
	test2005_144.C \
	test2005_145.C \
	test2005_146.C \
	test2005_147.C \
	test2005_148.C \
	test2005_149.C \
	test2005_150.C \
	test2005_152.C \
	test2005_153.C \
	test2005_154.C \
	test2005_155.C \
	test2005_156.C \
	test2005_157.C \
	test2005_158.C \
	test2005_159.C \
	test2005_160.C \
	test2005_161.C \
	test2005_162.C \
	test2005_163.C \
	test2005_164.C \
	test2005_165.C \
	test2005_166.C \
	test2005_167.C \
	test2005_168.C \
	test2005_169.C \
	test2005_170.C \
	test2005_171.C \
	test2005_172.C \
	test2005_173.C \
	test2005_174.C \
	test2005_175.C \
	test2005_176.C \
	test2005_177.C \
	test2005_178.C \
	test2005_179.C \
	test2005_180.C \
	test2005_181.C \
	test2005_182.C \
	test2005_183.C \
	test2005_184.C \
	test2005_185.C \
	test2005_187.C \
	test2005_189.C \
	test2005_190.C \
	test2005_191.C \
	test2005_192.C \
	test2005_193.C \
	test2005_194.C \
	test2005_195.C \
	test2005_196.C \
	test2005_197.C \
	test2005_198.C \
	test2005_199.C \
	test2005_202.C \
	test2005_203.C \
	test2005_206.C \
	test2005_207.C \
	test2005_208.C \
	test2005_209.C \
	test2006_01.C \
	test2006_02.C \
	test2006_03.C \
	test2006_04.C \
	test2006_05.C \
	test2006_06.C \
	test2006_07.C \
	test2006_10.C \
	test2006_12.C \
	test2006_13.C \
	test2006_14.C \
	test2006_16.C \
	test2006_17.C \
	test2006_18.C \
	test2006_19.C \
	test2006_22.C \
	test2006_23.C \
	test2006_25.C \
	test2006_26.C \
	test2006_28.C \
	test2006_34.C \
	test2006_38.C \
	test2006_39.C \
	test2006_40.C \
	test2006_41.C \
	test2006_42.C \
	test2006_44.C \
	test2006_46.C \
	test2006_47.C \
	test2006_50.C \
	test2006_52.C \
	test2006_53.C \
	test2006_54.C \
	test2006_55.C \
	test2006_56.C \
	test2006_57.C \
	test2006_58.C \
	test2006_59.C \
	test2005_60.C \
	test2006_61.C \
	test2006_62.C \
	test2006_63.C \
	test2006_66.C \
	test2006_67.C \
	test2006_68.C \
	test2006_69.C \
	test2006_70.C \
	test2006_71.C \
	test2006_72.C \
	test2006_73.C \
	test2006_74.C \
	test2006_75.C \
	test2006_76.C \
	test2006_77.C \
	test2006_78.C \
	test2006_79.C \
	test2006_80.C \
	test2006_81.C \
	test2006_82.C \
	test2006_83.C \
	test2006_84.C \
	test2006_85.C \
	test2006_86.C \
	test2006_87.C \
	test2006_88.C \
	test2006_89.C \
	test2006_90.C \
	test2006_91.C \
	test2006_92.C \
	test2006_93.C \
	test2006_94.C \
	test2006_95.C \
	test2006_96.C \
	test2006_97.C \
	test2006_98.C \
	test2006_99.C \
	test2006_101.C \
	test2006_102.C \
	test2006_103.C \
	test2006_104.C \
	test2006_105.C \
	test2006_106.C \
	test2006_107.C \
	test2006_108.C \
	test2006_109.C \
	test2006_111.C \
	test2006_113.C \
	test2006_114.C \
	test2006_115.C \
	test2006_116.C \
	test2006_117.C \
	test2006_118.C \
	test2006_119.C \
	test2006_120.C \
	test2006_121.C \
	test2006_122.C \
	test2006_123.C \
	test2006_124.C \
	test2006_125.C \
	test2006_126.C \
	test2006_129.C \
	test2006_139.C \
	test2006_140.C \
	test2006_141.C \
	test2006_142.C \
	test2006_143.C \
	test2006_144.C \
	test2006_145.C \
	test2006_146.C \
	test2006_147.C \
	test2006_148.C \
	test2006_149.C \
	test2006_150.C \
	test2006_151.C \
	test2006_152.C \
	test2006_153.C \
	test2006_154.C \
	test2006_155.C \
	test2006_156.C \
	test2006_157.C \
	test2006_158.C \
	test2006_159.C \
	test2006_160.C \
	test2006_161.C \
	test2006_162.C \
	test2006_163.C \
	test2006_164.C \
	test2006_165.C \
	test2006_166.C \
	test2006_177.C \
	test2006_178.C \
	test2006_179.C \
	test2006_181.C \
	test2006_183.C \
	test2006_185.C \
	test2006_189.C \
	test2007_01.C \
	test2007_02.C \
	test2007_03.C \
	test2007_04.C \
	test2007_05.C \
	test2007_06.C \
	test2007_07.C \
	test2007_08.C \
	test2007_09.C \
	test2007_10.C \
	test2007_11.C \
	test2007_12.C \
	test2007_13.C \
	test2007_14.C \
	test2007_15.C \
	test2007_16.C \
	test2007_17.C \
	test2007_21.C \
	test2007_23.C \
	test2007_24.C \
	test2007_25.C \
	test2007_26.C \
	test2007_28.C \
	test2007_29.C \
	test2007_38.C \
	test2007_40.C \
	test2007_41.C \
	test2007_43.C \
	test2007_44.C \
	test2007_46.C \
	test2007_47.C \
	test2007_48.C \
	test2007_49.C \
	test2007_50.C \
	test2007_51.C \
	test2007_52.C \
	test2007_53.C \
	test2007_55.C \
	test2007_57.C \
	test2007_59.C \
	test2007_70.C \
	test2007_72.C \
	test2007_75.C \
	test2007_77.C \
	test2007_78.C \
	test2007_81.C \
	test2007_82.C \
	test2007_83.C \
	test2007_84.C \
	test2007_85.C \
	test2007_90.C \
	test2007_94.C \
	test2007_98.C \
	test2007_102.C \
	test2007_103.C \
	test2007_128.C \
	test2007_130.C \
	test2007_133.C \
	test2007_135.C \
	test2007_137.C \
	test2007_140.C \
	test2007_142.C \
	test2007_147.C \
	test2007_150.C \
	test2007_151.C \
	test2007_152.C \
	test2007_154.C \
	test2007_155.C \
	test2007_157.C \
	test2007_158.C \
	test2007_159.C \
	test2007_160.C \
	test2007_161.C \
	test2007_162.C \
	test2007_163.C \
	test2007_164.C \
	test2007_165.C \
	test2007_166.C \
	test2007_167.C \
	test2007_169.C \
	test2007_170.C \
	test2007_171.C \
	test2007_172.C \
	test2007_173.C \
	test2008_01.C \
	test2008_03.C \
	test2008_04.C \
	test2008_05.C \
	test2008_06.C \
	test2008_08.C \
	test2008_09.C \
	test2008_10.C \
	test2008_11.C \
	test2008_12.C \
	test2008_13.C \
	test2008_14.C \
	test2008_16.C \
	test2009_01.C \
	test2009_02.C \
	test2009_03.C \
	test2009_04.C \
	test2009_05.C \
	test2009_06.C \
	test2009_08.C \
	test2009_09.C \
	test2009_10.C \
	test2009_11.C \
	test2009_12.C \
	test2009_14.C \
	test2009_15.C \
	test2009_18.C \
	test2009_19.C \
	test2009_20.C \
	test2009_21.C \
	test2009_24.C \
	test2009_27.C \
	test2009_28.C \
	test2009_30.C \
	test2009_31.C \
	test2009_37.C \
	test2009_39.C \
	test2009_40.C \
	test2009_41.C \
	test2009_42.C \
	test2010_03.C \
	test2010_04.C \
	test2010_05.C \
	test2010_06.C \
	test2010_18.C \
	test2010_19.C \
	test2010_24.C \
	test2011_01.C \
	test2011_02.C \
	test2011_05.C \
	test2011_07.C \
	test2011_19.C \
	test2011_20.C \
	test2011_21.C \
	test2011_22.C \
	test2011_23.C \
	test2011_24.C \
	test2011_25.C \
	test2011_26.C \
	test2011_27.C \
	test2011_28.C \
	test2011_29.C \
	test2011_30.C \
	test2011_31.C \
	test2011_32.C \
	test2011_33.C \
	test2011_34.C \
	test2011_35.C \
	test2011_36.C \
	test2011_37.C \
	test2011_38.C \
	test2011_39.C \
	test2011_40.C \
	test2011_41.C \
	test2011_42.C \
	test2011_43.C \
	test2011_44.C \
	test2011_45.C \
	test2011_46.C \
	test2011_47.C \
	test2011_48.C \
	test2011_49.C \
	test2011_50.C \
	test2011_51.C \
	test2011_52.C \
	test2011_53.C \
	test2011_54.C \
	test2011_55.C \
	test2011_56.C \
	test2011_57.C \
	test2011_58.C \
	test2011_59.C \
	test2011_60.C \
	test2011_61.C \
	test2011_62.C \
	test2011_63.C \
	test2011_64.C \
	test2011_65.C \
	test2011_66.C \
	test2011_67.C \
	test2011_68.C \
	test2011_69.C \
	test2011_70.C \
	test2011_71.C \
	test2011_72.C \
	test2011_73.C \
	test2011_74.C \
	test2011_75.C \
	test2011_76.C \
	test2011_77.C \
	test2011_78.C \
	test2011_79.C \
	test2011_80.C \
	test2011_81.C \
	test2011_82.C \
	test2011_83.C \
	test2011_84.C \
	test2011_85.C \
	test2011_86.C \
	test2011_87.C \
	test2011_88.C \
	test2011_89.C \
	test2011_90.C \
	test2011_91.C \
	test2011_92.C \
	test2011_93.C \
	test2011_94.C \
	test2011_95.C \
	test2011_96.C \
	test2011_97.C \
	test2011_98.C \
	test2011_99.C \
	test2011_100.C \
	test2011_101.C \
	test2011_110.C \
	test2011_111.C \
	test2011_115.C \
	test2011_117.C \
	test2011_118.C \
	test2011_119.C \
	test2011_120.C \
	test2011_121.C \
	test2011_133.C \
	test2011_135.C \
	test2011_136.C \
	test2011_137.C \
	test2011_138.C \
	test2011_139.C \
	test2011_140.C \
	test2011_143.C \
	test2011_146.C \
	test2011_147.C \
	test2011_149.C \
	test2011_150.C \
	test2011_151.C \
	test2011_152.C \
	test2011_153.C \
	test2011_154.C \
	test2011_155.C \
	test2011_156.C \
	test2011_157.C \
	test2011_158.C \
	test2011_159.C \
	test2011_160.C \
	test2011_161.C \
	test2011_162.C \
	test2011_163.C \
	test2011_164.C \
	test2011_165.C \
	test2011_166.C \
	test2011_167.C \
	test2011_168.C \
	test2011_169.C \
	test2011_170.C \
	test2011_171.C \
	test2011_172.C \
	test2011_173.C \
	test2011_174.C \
	test2011_175.C \
	test2011_176.C \
	test2011_177.C \
	test2011_179.C \
	test2011_180.C \
	test2011_181.C \
	test2011_182.C \
	test2011_183.C \
	test2011_184.C \
	test2011_185.C \
	test2011_186.C \
	test2011_187.C \
	test2011_188.C \
	test2011_189.C \
	test2011_190.C \
	test2011_191.C \
	test2011_192.C \
	test2011_193.C \
	test2011_194.C \
	test2011_195.C \
	test2012_01.C \
	test2012_02.C \
	test2012_03.C \
	test2012_04.C \
	test2012_05.C \
	test2012_06.C \
	test2012_07.C \
	test2012_08.C \
	test2012_10.C \
	test2012_11.C \
	test2012_12.C \
	test2012_13.C \
	test2012_14.C \
	test2012_15.C \
	test2012_16.C \
	test2012_17.C \
	test2012_18.C \
	test2012_19.C \
	test2012_20.C \
	test2012_21.C \
	test2012_22.C \
	test2012_23.C \
	test2012_24.C \
	test2012_25.C \
	test2012_26.C \
	test2012_27.C \
	test2012_28.C \
	test2012_29.C \
	test2012_30.C \
	test2012_31.C \
	test2012_32.C \
	test2012_33.C \
	test2012_34.C \
	test2012_36.C \
	test2012_37.C \
	test2012_38.C \
	test2012_39.C \
	test2012_40.C \
	test2012_41.C \
	test2012_42.C \
	test2012_43.C \
	test2012_44.C \
	test2012_45.C \
	test2012_46.C \
	test2012_47.C \
	test2012_48.C \
	test2012_49.C \
	test2012_50.C \
	test2012_51.C \
	test2012_52.C \
	test2012_53.C \
	test2012_54.C \
	test2012_55.C \
	test2012_56.C \
	test2012_58.C \
	test2012_60.C \
	test2012_61.C \
	test2012_62.C \
	test2012_63.C \
	test2012_64.C \
	test2012_65.C \
	test2012_66.C \
	test2012_67.C \
	test2012_69.C \
	test2012_70.C \
	test2012_71.C \
	test2012_72.C \
	test2012_73.C \
	test2012_74.C \
	test2012_75.C \
	test2012_76.C \
	test2012_77.C \
	test2012_78.C \
	test2012_80.C \
	test2012_81.C \
	test2012_82.C \
	test2012_83.C \
	test2012_84.C \
	test2012_85.C \
	test2012_87.C \
	test2012_88.C \
	test2012_89.C \
	test2012_91.C \
	test2012_92.C \
	test2012_93.C \
	test2012_94.C \
	test2012_95.C \
	test2012_96.C \
	test2012_97.C \
	test2012_98.C \
	test2012_99.C \
	test2012_100.C \
	test2012_101.C \
	test2012_102.C \
	test2012_103.C \
	test2012_104.C \
	test2012_105.C \
	test2012_106.C \
	test2012_107.C \
	test2012_108.C \
	test2012_109.C \
	test2012_110.C \
	test2012_111.C \
	test2012_112.C \
	test2012_113.C \
	test2012_114.C \
	test2012_115.C \
	test2012_116.C \
	test2012_117.C \
	test2012_118.C \
	test2012_119.C \
	test2012_120.C \
	test2012_121.C \
	test2012_122.C \
	test2012_123.C \
	test2012_124.C \
	test2012_125.C \
	test2012_126.C \
	test2012_127.C \
	test2012_128.C \
	test2012_129.C \
	test2012_130.C \
	test2012_131.C \
	test2012_132.C \
	test2012_136.C \
	test2012_137.C \
	test2012_138.C \
	test2012_141.C \
	test2012_142.C \
	test2012_143.C \
	test2012_144.C \
	test2012_145.C \
	test2012_146.C \
	test2012_147.C \
	test2012_148.C \
	test2012_149.C \
	test2012_150.C \
	test2012_151.C \
	test2012_152.C \
	test2012_153.C \
	test2012_154.C \
	test2012_155.C \
	test2012_156.C \
	test2012_157.C \
	test2012_158.C \
	test2012_159.C \
	test2012_160.C \
	test2012_161.C \
	test2012_162.C \
	test2012_163.C \
	test2012_164.C \
	test2012_165.C \
	test2012_166.C \
	test2012_167.C \
	test2012_168.C \
	test2012_169.C \
	test2012_170.C \
	test2012_171.C \
	test2012_172.C \
	test2012_173.C \
	test2012_174.C \
	test2012_175.C \
	test2012_176.C \
	test2012_177.C \
	test2012_178.C \
	test2012_179.C \
	test2012_180.C \
	test2012_181.C \
	test2012_182.C \
	test2012_183.C \
	test2012_184.C \
	test2012_185.C \
	test2012_186.C \
	test2012_187.C \
	test2012_190.C \
	test2012_191.C \
	test2012_192.C \
	test2012_193.C \
	test2012_194.C \
	test2012_195.C \
	test2012_196.C \
	test2012_197.C \
	test2012_198.C \
	test2012_199.C \
	test2012_200.C \
	test2012_201.C \
	test2012_202.C \
	test2012_203.C \
	test2012_204.C \
	test2012_205.C \
	test2012_206.C \
	test2012_207.C \
	test2012_208.C \
	test2012_209.C \
	test2012_210.C \
	test2012_211.C \
	test2012_212.C \
	test2012_213.C \
	test2012_214.C \
	test2012_215.C \
	test2012_216.C \
	test2012_217.C \
	test2012_218.C \
	test2012_219.C \
	test2012_220.C \
	test2012_221.C \
	test2012_222.C \
	test2012_223.C \
	test2012_224.C \
	test2012_225.C \
	test2012_226.C \
	test2012_227.C \
	test2012_228.C \
	test2012_229.C \
	test2012_230.C \
	test2012_231.C \
	test2012_232.C \
	test2012_233.C \
	test2012_234.C \
	test2012_235.C \
	test2012_236.C \
	test2012_237.C \
	test2012_238.C \
	test2012_239.C \
	test2012_240.C \
	test2012_241.C \
	test2012_242.C \
	test2012_243.C \
	test2012_244.C \
	test2012_245.C \
	test2012_246a.C \
	test2012_246b.C \
	test2012_247.C \
	test2012_248.C \
	test2012_249.C \
	test2012_250.C \
	test2012_251.C \
	test2012_253.C \
	test2012_254.C \
	test2012_255.C \
	test2012_256.C \
	test2012_257.C \
	test2012_258.C \
	test2012_259.C \
	test2012_260.C \
	test2012_262.C \
	test2012_263.C \
	test2012_264.C \
	test2012_265.C \
	test2012_266.C \
	test2012_267.C \
	test2012_268.C \
	test2012_269.C \
	test2012_270.C \
	test2012_271.C \
	test2013_01.C \
	test2013_02.C \
	test2013_03.C \
	test2013_04.C \
	test2013_05.C \
	test2013_06.C \
	test2013_07.C \
	test2013_08.C \
	test2013_09.C \
	test2013_10.C \
	test2013_11.C \
	test2013_12.C \
	test2013_16.C \
	test2013_17.C \
	test2013_18.C \
	test2013_20.C \
	test2013_21.C \
	test2013_22.C \
	test2013_23.C \
	test2013_25.C \
	test2013_26.C \
	test2013_27.C \
	test2013_28.C \
	test2013_29.C \
	test2013_31.C \
	test2013_32.C \
	test2013_33.C \
	test2013_34.C \
	test2013_36.C \
	test2013_37.C \
	test2013_38.C \
	test2013_39.C \
	test2013_40.C \
	test2013_44.C \
	test2013_46.C \
	test2013_47.C \
	test2013_48.C \
	test2013_50.C \
	test2013_51.C \
	test2013_52.C \
	test2013_53.C \
	test2013_54.C \
	test2013_55.C \
	test2013_56.C \
	test2013_57.C \
	test2013_58.C \
	test2013_59.C \
	test2013_60.C \
	test2013_61.C \
	test2013_64.C \
	test2013_65.C \
	test2013_66.C \
	test2013_67.C \
	test2013_68.C \
	test2013_69.C \
	test2013_70.C \
	test2013_71.C \
	test2013_72.C \
	test2013_73.C \
	test2013_74.C \
	test2013_75.C \
	test2013_76.C \
	test2013_77.C \
	test2013_78.C \
	test2013_79.C \
	test2013_80.C \
	test2013_81.C \
	test2013_82.C \
	test2013_83.C \
	test2013_84.C \
	test2013_85.C \
	test2013_86.C \
	test2013_87.C \
	test2013_88.C \
	test2013_89.C \
	test2013_90.C \
	test2013_91.C \
	test2013_92.C \
	test2013_93.C \
	test2013_94.C \
	test2013_95.C \
	test2013_96.C \
	test2013_97.C \
	test2013_98.C \
	test2013_99.C \
	test2013_100.C \
	test2013_101.C \
	test2013_102.C \
	test2013_103.C \
	test2013_104.C \
	test2013_105.C \
	test2013_106.C \
	test2013_107.C \
	test2013_108.C \
	test2013_109.C \
	test2013_110.C \
	test2013_111.C \
	test2013_112.C \
	test2013_113.C \
	test2013_114.C \
	test2013_115.C \
	test2013_116.C \
	test2013_118.C \
	test2013_119.C \
	test2013_120.C \
	test2013_121.C \
	test2013_122.C \
	test2013_123.C \
	test2013_124.C \
	test2013_125.C \
	test2013_126.C \
	test2013_127.C \
	test2013_128.C \
	test2013_129.C \
	test2013_130.C \
	test2013_131.C \
	test2013_132.C \
	test2013_133.C \
	test2013_134.C \
	test2013_135.C \
	test2013_136.C \
	test2013_137.C \
	test2013_138.C \
	test2013_139.C \
	test2013_140.C \
	test2013_141.C \
	test2013_142.C \
	test2013_143.C \
	test2013_144.C \
	test2013_145.C \
	test2013_146.C \
	test2013_147.C \
	test2013_148.C \
	test2013_149.C \
	test2013_150.C \
	test2013_151.C \
	test2013_152.C \
	test2013_153.C \
	test2013_154.C \
	test2013_155.C \
	test2013_156.C \
	test2013_157.C \
	test2013_158.C \
	test2013_159.C \
	test2013_160.C \
	test2013_161.C \
	test2013_162.C \
	test2013_163.C \
	test2013_165.C \
	test2013_166.C \
	test2013_167.C \
	test2013_168.C \
	test2013_169.C \
	test2013_170.C \
	test2013_171.C \
	test2013_172.C \
	test2013_173.C \
	test2013_174.C \
	test2013_175.C \
	test2013_176.C \
	test2013_177.C \
	test2013_178.C \
	test2013_179.C \
	test2013_180.C \
	test2013_181.C \
	test2013_182.C \
	test2013_183.C \
	test2013_184.C \
	test2013_186.C \
	test2013_187.C \
	test2013_188.C \
	test2013_189.C \
	test2013_190.C \
	test2013_191.C \
	test2013_192.C \
	test2013_193.C \
	test2013_194.C \
	test2013_195.C \
	test2013_196.C \
	test2013_198.C \
	test2013_199.C \
	test2013_200.C \
	test2013_201.C \
	test2013_202.C \
	test2013_203.C \
	test2013_204.C \
	test2013_205.C \
	test2013_206.C \
	test2013_207.C \
	test2013_208.C \
	test2013_209.C \
	test2013_210.C \
	test2013_211.C \
	test2013_213.C \
	test2013_214.C \
	test2013_215.C \
	test2013_216.C \
	test2013_217.C \
	test2013_218.C \
	test2013_219.C \
	test2013_220.C \
	test2013_221.C \
	test2013_222.C \
	test2013_223.C \
	test2013_225.C \
	test2013_226.C \
	test2013_227.C \
	test2013_228.C \
	test2013_229.C \
	test2013_230.C \
	test2013_231.C \
	test2013_232.C \
	test2013_237.C \
	test2013_238.C \
	test2013_239.C \
	test2013_244.C \
	test2013_250.C \
	test2013_251.C \
	test2013_252.C \
	test2013_300.C \
	test2013_301.C \
	test2013_302.C \
	test2013_303.C \
	test2013_305.C \
	test2013_306.C \
	test2013_307.C \
	test2013_308.C \
	test2013_310.C \
	test2013_311.C \
	test2013_312.C \
	test2013_313.C \
	test2013_314.C \
	test2013_315.C \
	test2013_316.C \
	test2013_317.C \
	test2013_318.C \
	test2013_319.C \
	test2013_320.C \
	test_int_lexemes.C \
	test_int_lexemes_donot_pass.C \
	test_simple_int.C \
	test_wchars.C \
	lexPhase2003_01.C \
	inputForLoopLocator.C \
	inputBug317.C \
	inputBug327.C \
	X.C \
	dynamic_cast.C \
	fstream.C \
	test2005_06.C \
	test2005_08.C \
	test2012_57.C \
	test2012_59.C \
        test2013_milind_01.C 


# Import list of C++ test cases that should pass:
#   EXAMPLE_TESTCODES_REQUIRED_TO_PASS
#   EXAMPLE_TESTCODES_REQUIRED_TO_PASS_SHORT
#

# EXAMPLE_TESTCODES_REQUIRED_TO_PASS = \
#  $(TESTCODE_CURRENTLY_FAILING)

# EXAMPLE_TESTCODES_REQUIRED_TO_PASS = $(NEVER_PASING_TESTCODE_CURRENTLY_FAILING)

# TOO1 (2013-08-05): Refactored testcode specification into separate global file:
#
#                      $ROSE/tests/nonsmoke/functional/input_codes/cxx/Makefile_variables
#
#                  This way all $ROSE/tests can utilize the same growing suite
#                  of ROSE testcodes.
#
EXAMPLE_TESTCODES_REQUIRED_TO_PASS = Area-01.C dynamic_cast.C \
	fstream.C inputBug317.C inputBug327.C inputForLoopLocator.C \
	lexPhase2003_01.C lulesh.C luleshTALC.C \
	method-defn-in-tpldecl-0.C method-defn-in-tpldecl-1.C \
	rose-1431-0.C rose-1540-0.C rose-1541-0.C rose-1701-0.C \
	rose-1766.C rose-1789-001.C rose-1814.C rose-1834.C \
	rose-1839.C rose-1846.C rose-1860.C rose-1998.C rose-2000-01.C \
	rose-2000-02.C rose-2007-01.C rose-2007-02.C rose-2008.C \
	rose-2073.C test2001_01.C test2001_02.C test2001_03.C \
	test2001_04.C test2001_05.C test2001_06.C test2001_07.C \
	test2001_08.C test2001_09.C test2001_10.C test2001_11.C \
	test2001_12.C test2001_13.C test2001_14.C test2001_15.C \
	test2001_16.C test2001_17.C test2001_18.C test2001_19.C \
	test2001_20.C test2001_21.C test2001_22.C test2001_23.C \
	test2001_24.C test2001_25.C test2001_26.C test2001_27.C \
	test2001_28.C test2001_29.C test2002_01.C test2003_01.C \
	test2003_02.C test2003_03.C test2003_04.C test2003_05.C \
	test2003_06.C test2003_08.C test2003_09.C test2003_10.C \
	test2003_11.C test2003_12.C test2003_13.C test2003_14.C \
	test2003_15.C test2003_16.C test2003_17.C test2003_18.C \
	test2003_19.C test2003_20.C test2003_21.C test2003_23.C \
	test2003_25.C test2003_26.C test2003_27.C test2003_28.C \
	test2003_29.C test2003_30.C test2003_31.C test2003_32.C \
	test2003_35.C test2003_36.C test2003_37.C test2003_38.C \
	test2004_01.C test2004_02.C test2004_03.C test2004_04.C \
	test2004_05.C test2004_06.C test2004_07.C test2004_08.C \
	test2004_09.C test2004_100.C test2004_101.C test2004_102.C \
	test2004_103.C test2004_104.C test2004_105.C test2004_106.C \
	test2004_107.C test2004_108.C test2004_109.C test2004_10.C \
	test2004_110.C test2004_111.C test2004_112.C test2004_113.C \
	test2004_114.C test2004_115.C test2004_116.C test2004_117.C \
	test2004_118.C test2004_119.C test2004_11.C test2004_120.C \
	test2004_121.C test2004_122.C test2004_123.C test2004_124.C \
	test2004_125.C test2004_127.C test2004_128.C test2004_129.C \
	test2004_12.C test2004_130.C test2004_131.C test2004_132.C \
	test2004_133.C test2004_134.C test2004_135.C test2004_136.C \
	test2004_137.C test2004_138.C test2004_139.C test2004_13.C \
	test2004_140.C test2004_141.C test2004_142.C test2004_143.C \
	test2004_144.C test2004_145.C test2004_146.C test2004_147.C \
	test2004_148.C test2004_149.C test2004_14.C test2004_150.C \
	test2004_151.C test2004_152.C test2004_153.C test2004_154.C \
	test2004_155.C test2004_156.C test2004_157.C test2004_158.C \
	test2004_159.C test2004_15.C test2004_160.C test2004_161.C \
	test2004_162.C test2004_163.C test2004_164.C test2004_16.C \
	test2004_17.C test2004_18.C test2004_19.C test2004_23.C \
	test2004_24.C test2004_26.C test2004_27.C test2004_28.C \
	test2004_29.C test2004_30.C test2004_31.C test2004_32.C \
	test2004_33.C test2004_34.C test2004_36.C test2004_37.C \
	test2004_38.C test2004_39.C test2004_40.C test2004_42.C \
	test2004_43.C test2004_44.C test2004_45.C test2004_47.C \
	test2004_48.C test2004_49.C test2004_50.C test2004_51.C \
	test2004_52.C test2004_53.C test2004_54.C test2004_55.C \
	test2004_56.C test2004_58.C test2004_59.C test2004_60.C \
	test2004_61.C test2004_62.C test2004_63.C test2004_64.C \
	test2004_65.C test2004_67.C test2004_68.C test2004_69.C \
	test2004_70.C test2004_71.C test2004_72.C test2004_73.C \
	test2004_74.C test2004_75.C test2004_76.C test2004_78.C \
	test2004_79.C test2004_80.C test2004_81.C test2004_83.C \
	test2004_84.C test2004_86.C test2004_87.C test2004_88.C \
	test2004_89.C test2004_90.C test2004_91.C test2004_93.C \
	test2004_94.C test2004_95.C test2004_96.C test2004_97.C \
	test2004_98.C test2004_99.C test2005_01.C test2005_02.C \
	test2005_03.C test2005_04.C test2005_05.C test2005_06.C \
	test2005_07.C test2005_08.C test2005_09.C test2005_100.C \
	test2005_101.C test2005_102.C test2005_103.C test2005_104.C \
	test2005_105.C test2005_106.C test2005_107.C test2005_108.C \
	test2005_109.C test2005_10.C test2005_110.C test2005_111.C \
	test2005_112.C test2005_113.C test2005_114.C test2005_116.C \
	test2005_117.C test2005_118.C test2005_119.C test2005_11.C \
	test2005_120.C test2005_121.C test2005_122.C test2005_123.C \
	test2005_124.C test2005_125.C test2005_126.C test2005_127.C \
	test2005_128.C test2005_129.C test2005_12.C test2005_130.C \
	test2005_131.C test2005_132.C test2005_133.C test2005_134.C \
	test2005_135.C test2005_136.C test2005_137.C test2005_138.C \
	test2005_139.C test2005_13.C test2005_140.C test2005_141.C \
	test2005_142.C test2005_143.C test2005_144.C test2005_145.C \
	test2005_146.C test2005_147.C test2005_148.C test2005_149.C \
	test2005_14.C test2005_150.C test2005_152.C test2005_153.C \
	test2005_154.C test2005_155.C test2005_156.C test2005_157.C \
	test2005_158.C test2005_159.C test2005_15.C test2005_160.C \
	test2005_161.C test2005_162.C test2005_163.C test2005_164.C \
	test2005_165.C test2005_166.C test2005_167.C test2005_168.C \
	test2005_169.C test2005_16.C test2005_170.C test2005_171.C \
	test2005_172.C test2005_173.C test2005_174.C test2005_175.C \
	test2005_176.C test2005_177.C test2005_178.C test2005_179.C \
	test2005_17.C test2005_180.C test2005_181.C test2005_182.C \
	test2005_183.C test2005_184.C test2005_185.C test2005_187.C \
	test2005_189.C test2005_190.C test2005_191.C test2005_192.C \
	test2005_193.C test2005_194.C test2005_195.C test2005_196.C \
	test2005_197.C test2005_198.C test2005_199.C test2005_19.C \
	test2005_202.C test2005_203.C test2005_206.C test2005_207.C \
	test2005_208.C test2005_209.C test2005_20.C test2005_21.C \
	test2005_22.C test2005_23.C test2005_24.C test2005_25.C \
	test2005_26.C test2005_27.C test2005_28.C test2005_29.C \
	test2005_30.C test2005_31.C test2005_32.C test2005_33.C \
	test2005_34.C test2005_35.C test2005_36.C test2005_37.C \
	test2005_38.C test2005_39.C test2005_40.C test2005_41.C \
	test2005_43.C test2005_44.C test2005_45.C test2005_46.C \
	test2005_47.C test2005_48.C test2005_49.C test2005_51.C \
	test2005_52.C test2005_53.C test2005_55.C test2005_57.C \
	test2005_58.C test2005_59.C test2005_60.C test2005_61.C \
	test2005_62.C test2005_63.C test2005_64.C test2005_65.C \
	test2005_66.C test2005_67.C test2005_68.C test2005_70.C \
	test2005_71.C test2005_72.C test2005_73.C test2005_74.C \
	test2005_75a.C test2005_75b.C test2005_76.C test2005_77.C \
	test2005_78.C test2005_79.C test2005_80.C test2005_81.C \
	test2005_82.C test2005_83.C test2005_84.C test2005_86.C \
	test2005_87.C test2005_88.C test2005_89.C test2005_90.C \
	test2005_91.C test2005_92.C test2005_93.C test2005_94.C \
	test2005_95.C test2005_96.C test2005_97.C test2005_98.C \
	test2005_99.C test2006_01.C test2006_02.C test2006_03.C \
	test2006_04.C test2006_05.C test2006_06.C test2006_07.C \
	test2006_101.C test2006_102.C test2006_103.C test2006_104.C \
	test2006_105.C test2006_106.C test2006_107.C test2006_108.C \
	test2006_109.C test2006_10.C test2006_111.C test2006_113.C \
	test2006_114.C test2006_115.C test2006_116.C test2006_117.C \
	test2006_118.C test2006_119.C test2006_120.C test2006_121.C \
	test2006_122.C test2006_123.C test2006_124.C test2006_125.C \
	test2006_126.C test2006_129.C test2006_12.C test2006_139.C \
	test2006_13.C test2006_140.C test2006_141.C test2006_142.C \
	test2006_143.C test2006_144.C test2006_145.C test2006_146.C \
	test2006_147.C test2006_148.C test2006_149.C test2006_14.C \
	test2006_150.C test2006_151.C test2006_152.C test2006_153.C \
	test2006_154.C test2006_155.C test2006_156.C test2006_157.C \
	test2006_158.C test2006_159.C test2006_160.C test2006_161.C \
	test2006_162.C test2006_163.C test2006_164.C test2006_165.C \
	test2006_166.C test2006_16.C test2006_177.C test2006_178.C \
	test2006_179.C test2006_17.C test2006_181.C test2006_183.C \
	test2006_185.C test2006_189.C test2006_18.C test2006_19.C \
	test2006_22.C test2006_23.C test2006_25.C test2006_26.C \
	test2006_28.C test2006_34.C test2006_38.C test2006_39.C \
	test2006_40.C test2006_41.C test2006_42.C test2006_44.C \
	test2006_46.C test2006_47.C test2006_50.C test2006_52.C \
	test2006_53.C test2006_54.C test2006_55.C test2006_56.C \
	test2006_57.C test2006_58.C test2006_59.C test2006_61.C \
	test2006_62.C test2006_63.C test2006_66.C test2006_67.C \
	test2006_68.C test2006_69.C test2006_70.C test2006_71.C \
	test2006_72.C test2006_73.C test2006_74.C test2006_75.C \
	test2006_76.C test2006_77.C test2006_78.C test2006_79.C \
	test2006_80.C test2006_81.C test2006_82.C test2006_83.C \
	test2006_84.C test2006_85.C test2006_86.C test2006_87.C \
	test2006_88.C test2006_89.C test2006_90.C test2006_91.C \
	test2006_92.C test2006_93.C test2006_94.C test2006_95.C \
	test2006_96.C test2006_97.C test2006_98.C test2006_99.C \
	test2007_01.C test2007_02.C test2007_03.C test2007_04.C \
	test2007_05.C test2007_06.C test2007_07.C test2007_08.C \
	test2007_09.C test2007_102.C test2007_103.C test2007_10.C \
	test2007_11.C test2007_128.C test2007_12.C test2007_130.C \
	test2007_133.C test2007_135.C test2007_137.C test2007_13.C \
	test2007_140.C test2007_142.C test2007_147.C test2007_14.C \
	test2007_150.C test2007_151.C test2007_152.C test2007_154.C \
	test2007_155.C test2007_157.C test2007_158.C test2007_159.C \
	test2007_15.C test2007_160.C test2007_161.C test2007_162.C \
	test2007_163.C test2007_164.C test2007_165.C test2007_166.C \
	test2007_167.C test2007_169.C test2007_16.C test2007_170.C \
	test2007_171.C test2007_172.C test2007_173.C test2007_17.C \
	test2007_21.C test2007_23.C test2007_24.C test2007_25.C \
	test2007_26.C test2007_28.C test2007_29.C test2007_38.C \
	test2007_40.C test2007_41.C test2007_43.C test2007_44.C \
	test2007_46.C test2007_47.C test2007_48.C test2007_49.C \
	test2007_50.C test2007_51.C test2007_52.C test2007_53.C \
	test2007_55.C test2007_57.C test2007_59.C test2007_70.C \
	test2007_72.C test2007_75.C test2007_77.C test2007_78.C \
	test2007_81.C test2007_82.C test2007_83.C test2007_84.C \
	test2007_85.C test2007_90.C test2007_94.C test2007_98.C \
	test2008_01.C test2008_03.C test2008_04.C test2008_05.C \
	test2008_06.C test2008_08.C test2008_09.C test2008_10.C \
	test2008_11.C test2008_12.C test2008_13.C test2008_14.C \
	test2008_16.C test2009_01.C test2009_02.C test2009_03.C \
	test2009_04.C test2009_05.C test2009_06.C test2009_08.C \
	test2009_09.C test2009_10.C test2009_11.C test2009_12.C \
	test2009_14.C test2009_15.C test2009_18.C test2009_19.C \
	test2009_20.C test2009_21.C test2009_24.C test2009_27.C \
	test2009_28.C test2009_30.C test2009_31.C test2009_37.C \
	test2009_39.C test2009_40.C test2009_41.C test2009_42.C \
	test2010_03.C test2010_04.C test2010_05.C test2010_06.C \
	test2010_18.C test2010_19.C test2010_24.C test2011_01.C \
	test2011_02.C test2011_05.C test2011_07.C test2011_100.C \
	test2011_101.C test2011_110.C test2011_111.C test2011_115.C \
	test2011_117.C test2011_118.C test2011_119.C test2011_120.C \
	test2011_121.C test2011_133.C test2011_135.C test2011_136.C \
	test2011_137.C test2011_138.C test2011_139.C test2011_140.C \
	test2011_143.C test2011_146.C test2011_147.C test2011_149.C \
	test2011_150.C test2011_151.C test2011_152.C test2011_153.C \
	test2011_154.C test2011_155.C test2011_156.C test2011_157.C \
	test2011_158.C test2011_159.C test2011_160.C test2011_161.C \
	test2011_162.C test2011_163.C test2011_164.C test2011_165.C \
	test2011_166.C test2011_167.C test2011_168.C test2011_169.C \
	test2011_170.C test2011_171.C test2011_172.C test2011_173.C \
	test2011_174.C test2011_175.C test2011_176.C test2011_177.C \
	test2011_179.C test2011_180.C test2011_181.C test2011_182.C \
	test2011_183.C test2011_184.C test2011_185.C test2011_186.C \
	test2011_187.C test2011_188.C test2011_189.C test2011_190.C \
	test2011_191.C test2011_192.C test2011_193.C test2011_194.C \
	test2011_195.C test2011_19.C test2011_20.C test2011_21.C \
	test2011_22.C test2011_23.C test2011_24.C test2011_25.C \
	test2011_26.C test2011_27.C test2011_28.C test2011_29.C \
	test2011_30.C test2011_31.C test2011_32.C test2011_33.C \
	test2011_34.C test2011_35.C test2011_36.C test2011_37.C \
	test2011_38.C test2011_39.C test2011_40.C test2011_41.C \
	test2011_42.C test2011_43.C test2011_44.C test2011_45.C \
	test2011_46.C test2011_47.C test2011_48.C test2011_49.C \
	test2011_50.C test2011_51.C test2011_52.C test2011_53.C \
	test2011_54.C test2011_55.C test2011_56.C test2011_57.C \
	test2011_58.C test2011_59.C test2011_60.C test2011_61.C \
	test2011_62.C test2011_63.C test2011_64.C test2011_65.C \
	test2011_66.C test2011_67.C test2011_68.C test2011_69.C \
	test2011_70.C test2011_71.C test2011_72.C test2011_73.C \
	test2011_74.C test2011_75.C test2011_76.C test2011_77.C \
	test2011_78.C test2011_79.C test2011_80.C test2011_81.C \
	test2011_82.C test2011_83.C test2011_84.C test2011_85.C \
	test2011_86.C test2011_87.C test2011_88.C test2011_89.C \
	test2011_90.C test2011_91.C test2011_92.C test2011_93.C \
	test2011_94.C test2011_95.C test2011_96.C test2011_97.C \
	test2011_98.C test2011_99.C test2012_01.C test2012_02.C \
	test2012_03.C test2012_04.C test2012_05.C test2012_06.C \
	test2012_07.C test2012_08.C test2012_100.C test2012_101.C \
	test2012_102.C test2012_103.C test2012_104.C test2012_105.C \
	test2012_106.C test2012_107.C test2012_108.C test2012_109.C \
	test2012_10.C test2012_110.C test2012_111.C test2012_112.C \
	test2012_113.C test2012_114.C test2012_115.C test2012_116.C \
	test2012_117.C test2012_118.C test2012_119.C test2012_11.C \
	test2012_120.C test2012_121.C test2012_122.C test2012_123.C \
	test2012_124.C test2012_125.C test2012_126.C test2012_127.C \
	test2012_128.C test2012_12.C test2012_130.C test2012_131.C \
	test2012_132.C test2012_136.C test2012_137.C test2012_138.C \
	test2012_13.C test2012_141.C test2012_142.C test2012_143.C \
	test2012_144.C test2012_145.C test2012_146.C test2012_147.C \
	test2012_148.C test2012_149.C test2012_14.C test2012_150.C \
	test2012_151.C test2012_152.C test2012_153.C test2012_154.C \
	test2012_155.C test2012_156.C test2012_157.C test2012_158.C \
	test2012_159.C test2012_15.C test2012_160.C test2012_161.C \
	test2012_162.C test2012_163.C test2012_164.C test2012_165.C \
	test2012_166.C test2012_167.C test2012_168.C test2012_169.C \
	test2012_16.C test2012_170.C test2012_171.C test2012_172.C \
	test2012_173.C test2012_174.C test2012_175.C test2012_176.C \
	test2012_177.C test2012_178.C test2012_179.C test2012_17.C \
	test2012_180.C test2012_181.C test2012_182.C test2012_183.C \
	test2012_184.C test2012_185.C test2012_186.C test2012_187.C \
	test2012_18.C test2012_190.C test2012_191.C test2012_192.C \
	test2012_193.C test2012_194.C test2012_195.C test2012_196.C \
	test2012_197.C test2012_198.C test2012_199.C test2012_19.C \
	test2012_200.C test2012_201.C test2012_202.C test2012_203.C \
	test2012_204.C test2012_205.C test2012_206.C test2012_207.C \
	test2012_208.C test2012_209.C test2012_20.C test2012_210.C \
	test2012_211.C test2012_212.C test2012_213.C test2012_214.C \
	test2012_215.C test2012_216.C test2012_217.C test2012_218.C \
	test2012_219.C test2012_21.C test2012_220.C test2012_221.C \
	test2012_222.C test2012_223.C test2012_224.C test2012_225.C \
	test2012_226.C test2012_227.C test2012_228.C test2012_229.C \
	test2012_22.C test2012_230.C test2012_231.C test2012_232.C \
	test2012_233.C test2012_234.C test2012_235.C test2012_236.C \
	test2012_237.C test2012_238.C test2012_239.C test2012_23.C \
	test2012_240.C test2012_241.C test2012_242.C test2012_243.C \
	test2012_244.C test2012_245.C test2012_246a.C test2012_246b.C \
	test2012_247.C test2012_248.C test2012_249.C test2012_24.C \
	test2012_250.C test2012_251.C test2012_253.C test2012_254.C \
	test2012_255.C test2012_256.C test2012_257.C test2012_258.C \
	test2012_259.C test2012_25.C test2012_260.C test2012_262.C \
	test2012_263.C test2012_264.C test2012_265.C test2012_266.C \
	test2012_267.C test2012_268.C test2012_269.C test2012_26.C \
	test2012_270.C test2012_271.C test2012_27.C test2012_28.C \
	test2012_29.C test2012_30.C test2012_31.C test2012_32.C \
	test2012_33.C test2012_34.C test2012_36.C test2012_37.C \
	test2012_38.C test2012_39.C test2012_40.C test2012_41.C \
	test2012_42.C test2012_43.C test2012_44.C test2012_45.C \
	test2012_46.C test2012_47.C test2012_48.C test2012_49.C \
	test2012_50.C test2012_51.C test2012_52.C test2012_53.C \
	test2012_54.C test2012_55.C test2012_56.C test2012_57.C \
	test2012_58.C test2012_59.C test2012_60.C test2012_61.C \
	test2012_62.C test2012_63.C test2012_64.C test2012_65.C \
	test2012_66.C test2012_67.C test2012_69.C test2012_70.C \
	test2012_71.C test2012_72.C test2012_73.C test2012_74.C \
	test2012_75.C test2012_76.C test2012_77.C test2012_78.C \
	test2012_80.C test2012_81.C test2012_82.C test2012_83.C \
	test2012_84.C test2012_85.C test2012_87.C test2012_88.C \
	test2012_89.C test2012_91.C test2012_92.C test2012_93.C \
	test2012_94.C test2012_95.C test2012_96.C test2012_97.C \
	test2012_98.C test2012_99.C test2013_01.C test2013_02.C \
	test2013_03.C test2013_04.C test2013_05.C test2013_06.C \
	test2013_07.C test2013_08.C test2013_09.C test2013_100.C \
	test2013_101.C test2013_102.C test2013_103.C test2013_104.C \
	test2013_105.C test2013_106.C test2013_107.C test2013_108.C \
	test2013_109.C test2013_10.C test2013_110.C test2013_111.C \
	test2013_112.C test2013_113.C test2013_114.C test2013_115.C \
	test2013_116.C test2013_117.C test2013_118.C test2013_119.C \
	test2013_11.C test2013_120.C test2013_121.C test2013_122.C \
	test2013_123.C test2013_124.C test2013_125.C test2013_126.C \
	test2013_127.C test2013_128.C test2013_129.C test2013_12.C \
	test2013_130.C test2013_131.C test2013_132.C test2013_133.C \
	test2013_134.C test2013_135.C test2013_136.C test2013_137.C \
	test2013_138.C test2013_139.C test2013_140.C test2013_141.C \
	test2013_142.C test2013_143.C test2013_144.C test2013_145.C \
	test2013_146.C test2013_147.C test2013_148.C test2013_149.C \
	test2013_150.C test2013_151.C test2013_152.C test2013_153.C \
	test2013_154.C test2013_155.C test2013_156.C test2013_157.C \
	test2013_158.C test2013_159.C test2013_160.C test2013_161.C \
	test2013_162.C test2013_163.C test2013_165.C test2013_166.C \
	test2013_167.C test2013_168.C test2013_169.C test2013_16.C \
	test2013_170.C test2013_171.C test2013_172.C test2013_173.C \
	test2013_174.C test2013_175.C test2013_176.C test2013_177.C \
	test2013_178.C test2013_179.C test2013_17.C test2013_180.C \
	test2013_181.C test2013_182.C test2013_183.C test2013_184.C \
	test2013_186.C test2013_187.C test2013_188.C test2013_189.C \
	test2013_18.C test2013_190.C test2013_191.C test2013_192.C \
	test2013_193.C test2013_194.C test2013_195.C test2013_196.C \
	test2013_198.C test2013_199.C test2013_200.C test2013_201.C \
	test2013_202.C test2013_203.C test2013_204.C test2013_205.C \
	test2013_206.C test2013_207.C test2013_208.C test2013_209.C \
	test2013_20.C test2013_210.C test2013_211.C test2013_213.C \
	test2013_214.C test2013_215.C test2013_216.C test2013_217.C \
	test2013_218.C test2013_219.C test2013_21.C test2013_220.C \
	test2013_221.C test2013_222.C test2013_223.C test2013_225.C \
	test2013_226.C test2013_227.C test2013_228.C test2013_229.C \
	test2013_22.C test2013_230.C test2013_231.C test2013_232.C \
	test2013_237.C test2013_238.C test2013_239.C test2013_23.C \
	test2013_244.C test2013_250.C test2013_251.C test2013_252.C \
	test2013_253.C test2013_255.C test2013_256.C test2013_258.C \
	test2013_259.C test2013_25.C test2013_261.C test2013_26.C \
	test2013_271.C test2013_272.C test2013_273.C test2013_274.C \
	test2013_275.C test2013_276.C test2013_277.C test2013_278.C \
	test2013_279.C test2013_27.C test2013_280.C test2013_281.C \
	test2013_282.C test2013_283.C test2013_284.C test2013_285.C \
	test2013_286.C test2013_287.C test2013_288.C test2013_289.C \
	test2013_28.C test2013_290.C test2013_291.C test2013_292.C \
	test2013_293.C test2013_294.C test2013_295.C test2013_296.C \
	test2013_29.C test2013_300.C test2013_301.C test2013_302.C \
	test2013_303.C test2013_305.C test2013_306.C test2013_307.C \
	test2013_308.C test2013_310.C test2013_311.C test2013_312.C \
	test2013_313.C test2013_314.C test2013_315.C test2013_316.C \
	test2013_317.C test2013_318.C test2013_319.C test2013_31.C \
	test2013_320.C test2013_32.C test2013_33.C test2013_34.C \
	test2013_36.C test2013_37.C test2013_38.C test2013_39.C \
	test2013_40.C test2013_44.C test2013_46.C test2013_47.C \
	test2013_48.C test2013_50.C test2013_51.C test2013_52.C \
	test2013_53.C test2013_54.C test2013_55.C test2013_56.C \
	test2013_57.C test2013_58.C test2013_59.C test2013_60.C \
	test2013_61.C test2013_64.C test2013_65.C test2013_66.C \
	test2013_67.C test2013_68.C test2013_69.C test2013_70.C \
	test2013_71.C test2013_72.C test2013_73.C test2013_74.C \
	test2013_75.C test2013_76.C test2013_77.C test2013_78.C \
	test2013_79.C test2013_80.C test2013_81.C test2013_82.C \
	test2013_83.C test2013_84.C test2013_85.C test2013_86.C \
	test2013_87.C test2013_88.C test2013_89.C test2013_90.C \
	test2013_91.C test2013_92.C test2013_93.C test2013_94.C \
	test2013_95.C test2013_96.C test2013_97.C test2013_98.C \
	test2013_99.C test2013_milind_01.C test2014_01.C test2014_02.C \
	test2014_03.C test2014_04.C test2014_06.C test2014_07.C \
	test2014_08.C test2014_09.C test2014_100.C test2014_101.C \
	test2014_102.C test2014_107.C test2014_108.C test2014_109.C \
	test2014_10.C test2014_112.C test2014_114.C test2014_115.C \
	test2014_116.C test2014_117.C test2014_118.C test2014_119.C \
	test2014_11.C test2014_120.C test2014_121.C test2014_122.C \
	test2014_123.C test2014_124.C test2014_125.C test2014_126.C \
	test2014_127.C test2014_128.C test2014_129.C test2014_12.C \
	test2014_130.C test2014_131.C test2014_132.C test2014_133.C \
	test2014_134.C test2014_135.C test2014_136.C test2014_137.C \
	test2014_139.C test2014_13.C test2014_140.C test2014_141.C \
	test2014_142.C test2014_143.C test2014_144.C test2014_145.C \
	test2014_146.C test2014_147.C test2014_148.C test2014_149.C \
	test2014_150.C test2014_151.C test2014_152.C test2014_153.C \
	test2014_154.C test2014_155.C test2014_156.C test2014_157.C \
	test2014_160.C test2014_161.C test2014_162.C test2014_163.C \
	test2014_165.C test2014_166.C test2014_167.C test2014_168.C \
	test2014_169.C test2014_16.C test2014_170.C test2014_171.C \
	test2014_172.C test2014_174.C test2014_176.C test2014_177.C \
	test2014_178.C test2014_179.C test2014_17.C test2014_182.C \
	test2014_183.C test2014_184.C test2014_185.C test2014_186.C \
	test2014_189.C test2014_18.C test2014_190.C test2014_191.C \
	test2014_192.C test2014_193.C test2014_194.C test2014_195.C \
	test2014_196.C test2014_197.C test2014_198.C test2014_199.C \
	test2014_19.C test2014_200.C test2014_201.C test2014_202.C \
	test2014_203.C test2014_204.C test2014_205.C test2014_206.C \
	test2014_207.C test2014_208.C test2014_209.C test2014_20.C \
	test2014_210.C test2014_212.C test2014_215.C test2014_216.C \
	test2014_217.C test2014_218.C test2014_219.C test2014_21.C \
	test2014_220.C test2014_221.C test2014_222.C test2014_223.C \
	test2014_224.C test2014_225.C test2014_226.C test2014_230.C \
	test2014_231.C test2014_232.C test2014_233.C test2014_234.C \
	test2014_235.C test2014_239.C test2014_240.C test2014_241.C \
	test2014_242.C test2014_243.C test2014_24.C test2014_26.C \
	test2014_27.C test2014_28.C test2014_29.C test2014_30.C \
	test2014_31.C test2014_32.C test2014_33.C test2014_34.C \
	test2014_35.C test2014_36.C test2014_37.C test2014_38.C \
	test2014_39.C test2014_40.C test2014_41.C test2014_43.C \
	test2014_45.C test2014_47.C test2014_48.C test2014_49.C \
	test2014_50.C test2014_53.C test2014_54.C test2014_55.C \
	test2014_56.C test2014_57.C test2014_58.C test2014_60.C \
	test2014_61.C test2014_62.C test2014_67.C test2014_68.C \
	test2014_70.C test2014_72.C test2014_73.C test2014_74.C \
	test2014_75.C test2014_76.C test2014_79.C test2014_80.C \
	test2014_82.C test2014_83.C test2014_84.C test2014_85.C \
	test2014_86.C test2014_87.C test2014_88.C test2014_89.C \
	test2014_90.C test2014_91.C test2014_92.C test2014_93.C \
	test2014_94.C test2014_95.C test2014_96.C test2014_97.C \
	test2014_98.C test2014_99.C test2015_01.C test2015_02.C \
	test2015_03.C test2015_04.C test2015_05.C test2015_07.C \
	test2015_08.C test2015_09.C test2015_100.C test2015_101.C \
	test2015_102.C test2015_103.C test2015_104.C test2015_106.C \
	test2015_107.C test2015_108.C test2015_110.C test2015_111.C \
	test2015_112.C test2015_113.C test2015_114.C test2015_117.C \
	test2015_118.C test2015_119.C test2015_121.C test2015_122.C \
	test2015_123.C test2015_124.C test2015_125.C test2015_128.C \
	test2015_130.C test2015_131.C test2015_132.C test2015_133.C \
	test2015_134.C test2015_137.C test2015_138.C test2015_139.C \
	test2015_140.C test2015_141.C test2015_142.C test2015_143.C \
	test2015_144.C test2015_145.C test2015_146.C test2015_147.C \
	test2015_149.C test2015_150.C test2015_151.C test2015_152.C \
	test2015_153.C test2015_154.C test2015_20.C test2015_21.C \
	test2015_22.C test2015_24.C test2015_26.C test2015_27.C \
	test2015_28.C test2015_29.C test2015_30.C test2015_32.C \
	test2015_33.C test2015_34.C test2015_35.C test2015_36.C \
	test2015_40.C test2015_43.C test2015_44.C test2015_45.C \
	test2015_50.C test2015_52.C test2015_57.C test2015_58.C \
	test2015_59.C test2015_60.C test2015_61.C test2015_76.C \
	test2015_77.C test2015_78.C test2015_79.C test2015_80.C \
	test2015_85.C test2015_86.C test2015_88.C test2015_89.C \
	test2015_97.C test2015_99.C test2016_01.C test2016_02.C \
	test2016_03.C test2016_04.C test2016_05.C test2016_06.C \
	test2016_07.C test2016_08.C test2016_09.C test2016_10.C \
	test2016_11.C test2016_12.C test2016_13.C test2016_14.C \
	test2016_19.C test2016_21.C test2016_25.C test2016_26.C \
	test2016_27.C test2016_28.C test2016_29.C test2016_30.C \
	test2016_31.C test2016_32.C test2016_33.C test2016_34.C \
	test2016_36.C test2016_37.C test2016_38.C test2016_40.C \
	test2016_41.C test2016_42.C test2016_43.C test2016_44.C \
	test2016_45.C test2016_46.C test2016_47.C test2016_48.C \
	test2016_49.C test2016_50.C test2016_51.C test2016_53.C \
	test2016_54.C test2016_55.C test2016_56.C test2016_57.C \
	test2016_59.C test2016_60.C test2016_61.C test2016_62.C \
	test2016_63.C test2016_64.C test2016_65.C test2016_66.C \
	test2016_67.C test2016_68.C test2016_69.C test2016_70.C \
	test2016_71.C test2016_80.C test2016_81.C test2016_83.C \
	test2016_85.C test2016_86.C test2016_87.C test2016_88.C \
	test2016_91.C test2016_93.C test2017_01.C test2017_02.C \
	test2017_03.C test2017_04.C test2017_09.C test2017_100.C \
	test2017_101.C test2017_102.C test2017_103.C test2017_104.C \
	test2017_105.C test2017_106.C test2017_107.C test2017_10.C \
	test2017_11.C test2017_13.C test2017_14.C test2017_15.C \
	test2017_16.C test2017_17.C test2017_18.C test2017_19.C \
	test2017_21.C test2017_22.C test2017_23.C test2017_26.C \
	test2017_27.C test2017_28.C test2017_30.C test2017_35.C \
	test2017_36.C test2017_37.C test2017_38.C test2017_39.C \
	test2017_40.C test2017_41.C test2017_42.C test2017_43.C \
	test2017_45.C test2017_48.C test2017_49.C test2017_51.C \
	test2017_52.C test2017_53.C test2017_54.C test2017_55.C \
	test2017_56.C test2017_57.C test2017_58.C test2017_60.C \
	test2017_61.C test2017_62.C test2017_64.C test2017_65.C \
	test2017_66.C test2017_68.C test2017_70.C test2017_71.C \
	test2017_72.C test2017_73.C test2017_74.C test2017_75.C \
	test2017_76.C test2017_77.C test2017_78.C test2017_79.C \
	test2017_80.C test2017_81.C test2017_82.C test2017_83.C \
	test2017_84.C test2017_87.C test2017_88.C test2017_89.C \
	test2017_90.C test2017_91.C test2017_92.C test2017_93.C \
	test2017_94.C test2017_95.C test2017_96.C test2017_97.C \
	test2017_98.C test2018_02.C test2018_03.C test2018_04.C \
	test2018_05.C test2018_06.C test2018_07.C test2018_08.C \
	test2018_09.C test2018_10.C test2018_11.C test2018_12.C \
	test2018_13.C test2018_14.C test2018_15.C test2018_16.C \
	test2018_17.C test2018_18.C test2018_19.C test2018_20.C \
	test2018_21.C test2018_24.C test2018_27.C test2018_29.C \
	test2018_30.C test2018_32.C test2018_33.C test2018_34.C \
	test2018_35.C test2018_36.C test2018_37.C test2018_38.C \
	test2018_39.C test2018_40.C test2018_41.C test2018_42.C \
	test2018_43.C test2018_44.C test2018_45.C test2018_46.C \
	test2018_47.C test2018_48.C test2018_49.C test2018_50.C \
	test2018_51.C test2018_52.C test2018_53.C test2018_54.C \
	test2018_55.C test2018_56.C test2018_57.C test2018_58.C \
	test2018_59.C test2018_60.C test2018_61.C test2018_62.C \
	test2018_63.C test2018_64.C test2019_01.C test2019_02.C \
	test2019_03.C test2019_04.C test2019_05.C test2019_06.C \
	test2019_07.C test2019_08.C test2019_09.C test2019_10.C \
	test2019_11.C test2019_12.C test2019_13.C test2019_14.C \
	test2019_15.C test2019_16.C test2019_17.C test2019_18.C \
	test2019_19.C test2019_20.C test2019_21.C test2019_22.C \
	test2019_23.C test2019_24.C test2020_01.C test2020_03.C \
	test2020_04.C test2020_05.C test2020_06.C test2020_07.C \
	test2020_08.C test2020_09.C test2020_10.C test2020_11.C \
	test2020_12.C test2020_13.C test2020_14.C test2020_15.C \
	test2020_16.C test2020_17.C test2020_18.C test2020_19.C \
	test2020_20.C test2020_21.C test2020_22.C test2020_23.C \
	test2020_24.C test2020_25.C test2020_26.C test2020_27.C \
	test2020_28.C test2020_29.C test2020_30.C test2020_31.C \
	test2020_32.C test2020_33.C test2020_34.C test2020_37.C \
	test2020_38.C test2020_39.C test2020_40.C test2020_41.C \
	test2020_42.C test2020_43.C test2020_44.C test2020_45.C \
	test2020_46.C test2020_47.C test2020_49.C test2020_50.C \
	test2020_51.C test2020_52.C test2020_53.C test2020_54.C \
	test2020_55.C test2020_56.C test2020_57.C test2020_58.C \
	test2020_59.C test2020_60.C test2020_61.C test2020_62.C \
	test2020_63.C test2020_64.C test2020_65.C test2020_66.C \
	test2020_67.C test2020_68.C test2020_69.C test2020_70.C \
	test2020_71.C test2020_72.C test2020_73.C test2020_74.C \
	test2020_75.C test2020_76.C test2020_77.C test2020_78.C \
	test2020_79.C test2020_80.C test_CplusplusMacro_Cpp.C \
	test_int_lexemes.C test_int_lexemes_donot_pass.C \
	test_simple_int.C test_wchars.C X.C $(am__append_3) \
	$(am__append_4) $(am__append_5) $(am__append_7) \
	$(am__append_9) $(am__append_10) $(am__append_13) \
	$(am__append_14) $(am__append_17) $(am__append_19) \
	$(am__append_20) $(am__append_23) $(am__append_25) \
	$(am__append_27) $(am__append_28) $(am__append_30)
TESTCODE_CURRENTLY_FAILING = certSignalExample.C c++trick.C \
	lexPhase2003_02.C longFile.C math.C \
	restrict_template_parameter.C test2004_25.C test2004_35.C \
	test2005_06.C test2005_115.C test2005_151.C test2005_188.C \
	test2005_200.C test2005_201.C test2005_204.C test2005_205.C \
	test2005_69.C test2005_85.C test2006_09.C test2006_11.C \
	test2006_127.C test2006_128.C test2006_130.C test2006_131.C \
	test2006_138.C test2006_15.C test2006_167.C test2006_168.C \
	test2006_169.C test2006_170.C test2006_171.C test2006_172.C \
	test2006_173.C test2006_174.C test2006_175.C test2006_176.C \
	test2006_180.C test2006_182.C test2006_184.C test2006_186.C \
	test2006_187.C test2006_188.C test2006_21.C test2006_24.C \
	test2006_27.C test2006_33.C test2006_35.C test2006_36.C \
	test2006_49.C test2006_60.C test2006_64.C test2007_100.C \
	test2007_101.C test2007_104.C test2007_105.C test2007_106.C \
	test2007_107.C test2007_108.C test2007_109.C test2007_110.C \
	test2007_111.C test2007_112.C test2007_113.C test2007_114.C \
	test2007_115.C test2007_116.C test2007_117.C test2007_118.C \
	test2007_119.C test2007_120.C test2007_121.C test2007_122.C \
	test2007_123.C test2007_124.C test2007_125.C test2007_126.C \
	test2007_127.C test2007_129.C test2007_131.C test2007_132.C \
	test2007_134.C test2007_136.C test2007_138.C test2007_139.C \
	test2007_143.C test2007_144.C test2007_145.C test2007_146.C \
	test2007_148.C test2007_149.C test2007_153.C test2007_156.C \
	test2007_168.C test2007_174.C test2007_175.C test2007_176.C \
	test2007_18.C test2007_19.C test2007_20.C test2007_22.C \
	test2007_27.C test2007_30.C test2007_31.C test2007_32.C \
	test2007_33.C test2007_34.C test2007_35.C test2007_36.C \
	test2007_37.C test2007_39.C test2007_42.C test2007_45.C \
	test2007_51.C test2007_52.C test2007_54.C test2007_56.C \
	test2007_58.C test2007_60.C test2007_61.C test2007_62.C \
	test2007_63.C test2007_64.C test2007_65.C test2007_66.C \
	test2007_67.C test2007_68.C test2007_69.C test2007_71.C \
	test2007_73.C test2007_74.C test2007_76.C test2007_79.C \
	test2007_80.C test2007_86.C test2007_87.C test2007_88.C \
	test2007_89.C test2007_91.C test2007_92.C test2007_93.C \
	test2007_95.C test2007_96.C test2007_97.C test2007_99.C \
	test2008_07.C test2008_15.C test2009_07.C test2009_13.C \
	test2009_17.C test2009_21.C test2009_22.C test2009_23.C \
	test2009_25.C test2009_26.C test2009_29.C test2009_32.C \
	test2009_33.C test2009_34.C test2009_35.C test2009_36.C \
	test2009_38.C test2009_43.C test2009_44.C test2009_45.C \
	test2009_46.C test2009_47.C test2010_01.C test2010_02.C \
	test2010_07.C test2010_08.C test2010_09.C test2010_10.C \
	test2010_11.C test2010_12.C test2010_15.C test2010_16.C \
	test2010_17.C test2010_20.C test2010_21.C test2010_22.C \
	test2010_23.C test2010_26.C test2010_27.C test2011_01.C \
	test2011_02.C test2011_05.C test2011_06.C test2011_07.C \
	test2011_08.C test2011_09.C test2011_102.C test2011_103.C \
	test2011_104.C test2011_105.C test2011_106.C test2011_107.C \
	test2011_108.C test2011_109.C test2011_10.C test2011_112.C \
	test2011_11.C test2011_122.C test2011_123.C test2011_124.C \
	test2011_125.C test2011_126.C test2011_127.C test2011_128.C \
	test2011_129.C test2011_12.C test2011_130.C test2011_131.C \
	test2011_132.C test2011_134.C test2011_13.C test2011_144.C \
	test2011_145.C test2011_148.C test2011_14.C test2011_15.C \
	test2011_16.C test2011_178.C test2011_17.C test2011_18.C \
	test2011_191.C test2011_196.C test2011_197.C test2011_198.C \
	test2011_199.C test2011_200.C test2011_201.C test2011_202.C \
	test2011_203.C test2012_133.C test2012_134.C test2012_135.C \
	test2012_139.C test2012_140.C test2012_189.C test2012_252.C \
	test2012_261.C test2012_272.C test2012_273.C test2012_274.C \
	test2012_275.C test2012_276.C test2012_277.C test2012_278.C \
	test2012_35.C test2012_57.C test2012_59.C test2012_68.C \
	test2012_79.C test2012_81.C test2012_86.C test2013_09.C \
	test2013_13.C test2013_14.C test2013_15.C test2013_16.C \
	test2013_17.C test2013_185.C test2013_195.C test2013_197.C \
	test2013_19.C test2013_224.C test2013_233.C test2013_234.C \
	test2013_235.C test2013_236.C test2013_240.C test2013_241.C \
	test2013_242.C\ test2013_245.C test2013_246.C test2013_247.C \
	test2013_248.C test2013_249.C test2013_24.C test2013_254.C \
	test2013_257.C test2013_260.C test2013_262.C test2013_263.C \
	test2013_264.C test2013_265.C test2013_266.C test2013_267.C \
	test2013_268.C test2013_269.C test2013_270.C test2013_309.C \
	test2013_30.C test2013_321.C test2013_322.C test2013_323.C \
	test2013_35.C test2013_40.C test2013_41.C test2013_42.C \
	test2013_43.C test2013_45.C test2013_49.C test2013_62.C \
	test2013_84.C test2013_85.C test2013_96.C test2014_100.C \
	test2014_101.C test2014_102.C test2014_103.C test2014_104.C \
	test2014_105.C test2014_106.C test2014_113.C test2014_118.C \
	test2014_119.C test2014_120.C test2014_121.C test2014_138.C \
	test2014_14.C test2014_158.C test2014_15.C test2014_164.C \
	test2014_173.C test2014_175.C test2014_180.C test2014_181.C \
	test2014_213.C test2014_214.C test2014_227.C test2014_228.C \
	test2014_229.C test2014_22.C test2014_237.C test2014_23.C \
	test2014_25.C test2014_42.C test2014_44.C test2014_46.C \
	test2014_51.C test2014_52.C test2014_59.C test2014_63.C \
	test2014_64.C test2014_65.C test2014_66.C test2014_69.C \
	test2014_99.C test2015_105.C test2015_109.C test2015_25.C \
	test2015_62.C test2015_63.C test2015_64.C test2015_72_icpc.C \
	test2015_82.C test2015_83.C test2015_84.C test2015_87.C \
	test2015_90.C test2015_91.C test2015_92.C test2015_93.C \
	test2015_94.C test2015_95.C test2015_96.C test2015_98.C \
	test2016_24.C test2016_35.C test2016_39.C test2016_52.C \
	test2016_58.C test2016_90.C test2016_92.C test2016_94.C \
	test2016_95.C test2017_05.C test2017_06.C test2017_07.C \
	test2017_08.C test2017_12.C test2017_20.C test2017_24.C \
	test2017_33.C test2017_34.C test2017_67.C test2017_85.C \
	test2017_86.C test2017_99.C test2018_22.C test2018_23.C \
	test2018_25.C test2018_26.C test2018_28.C test2018_31.C \
	test2019_25.C test2020_35.C test2020_36.C test_gnu.C \
	$(am__append_6) $(am__append_8) $(am__append_11) \
	$(am__append_12) $(am__append_15) $(am__append_16) \
	$(am__append_18) $(am__append_21) $(am__append_22) \
	$(am__append_24) $(am__append_26) $(am__append_29)
@ROSE_USE_LONG_MAKE_CHECK_RULE_FALSE@TESTCODES_REQUIRED_TO_PASS = $(EXAMPLE_TESTCODES_REQUIRED_TO_PASS_SHORT)

# Switch between full and short list of test codes
@ROSE_USE_LONG_MAKE_CHECK_RULE_TRUE@TESTCODES_REQUIRED_TO_PASS = $(EXAMPLE_TESTCODES_REQUIRED_TO_PASS)

# Automake's testing mechanism (which defines the "make check" rule) requires passing tests.
TESTCODES = \
   $(TESTCODES_REQUIRED_TO_PASS) 


# QMTest allows both passing and failing tests.
ALL_TESTCODES = \
   $(EXAMPLE_TESTCODES_REQUIRED_TO_PASS) \
   $(TESTCODE_CURRENTLY_FAILING) 


# Note the quotes and escapes that are required:
# ADDRESS_SANITIZER_OPTIONS = "ASAN_OPTIONS=symbolize=1 ASAN_SYMBOLIZER_PATH=\`which llvm-symbolizer\`"
# VALGRIND_OPTIONS = -v --num-callers=12 --leak-check=yes --error-limit=no --show-reachable=yes
VALGRIND_OPTIONS = --tool=memcheck -v --num-callers=30 --leak-check=no --error-limit=no --show-reachable=yes --trace-children=yes --suppressions=$(top_srcdir)/scripts/rose-suppressions-for-valgrind
@ROSE_USE_SANITIZER_FALSE@VALGRIND = 
# VALGRIND = valgrind $(VALGRIND_OPTIONS)
# VALGRIND =

# DQ (11/5/2016): Adding support for address sanitizer (borrowing the VALGRIND variable to support 
# this, this implementation needs review).  It might be better to prepend the information to the 
# CC and CXX variables. I think that the purify support uses this approach.
@ROSE_USE_SANITIZER_TRUE@VALGRIND = $(ADDRESS_SANITIZER_OPTIONS)
TESTCODE_INCLUDES = -I$(srcdir) $(ROSE_BOOST_NORMAL_INCLUDE_PATH) -I$(top_srcdir)/tests/nonsmoke/functional/CompileTests/A++Code -I$(top_builddir)

#########
# Targets lists
PASSING_TEST_Source_passed = ${TESTCODES:.C=.C.passed}
TEST_Source_passed = ${ALL_TESTCODES:.C=.C.passed}
TEST_TRANSLATOR = ../../testTranslator

#########
# ROSE_FLAGS
LANG_FLAGS = 
ROSE_FLAGS = -std=c++ $(am__append_31) -w -rose:verbose 0 \
	-rose:skip_unparse_asm_commands

#
############

# DQ (9/18/2011): Added testing for new option to use folded constants or the original express trees.
TEST_Objects_FoldedConstants = ${EXAMPLE_TESTCODES_REQUIRED_TO_PASS_FOLDED_CONSTANTS:.C=.foldedConstants-o}
TEST_Objects_UnfoldedConstants = ${ALL_TESTCODES:.C=.unfoldedConstants-o}
TEST_TEMPLATE_TRANSLATOR = ../../testTemplates
@ROSE_WITH_LIBHARU_TRUE@TEST_PDF_TRANSLATOR = ../../testPDFGeneration

# Make sure that all the test codes end up in the distribution
#      $(TESTCODE_CURRENTLY_FAILING_ON_OSX) $(STATISTICALLY_FAILING_TESTS) $(UNMENTIONED_SOURCE_FILES)
EXTRA_DIST = $(EXAMPLE_TESTCODES_REQUIRED_TO_PASS) $(TESTCODE_CURRENTLY_FAILING) \
     $(TESTCODE_CURRENTLY_FAILING_ON_OSX) $(STATISTICALLY_FAILING_TESTS) $(UNMENTIONED_SOURCE_FILES) \
     test_CplusplusMacro_C.C test2006_137.C \
     confdefs.h  test2001_05.h  test2001_11.h test2001_18A.h  test2003_08.h  test2003_12.h  test2003_24.h  test2004_40.h \
     test2005_154.h  test2005_158.h  test2005_15.h   test2005_26.h  test2005_81.h  test2006_33.h foo.h \
     test2001_15.h  test2001_18B.h  test2003_09.h  test2003_14.h  test2003_25.h  test2005_133.h  test2005_157.h \
     test2005_159.h  test2005_160.h  test2005_75.h  test2005_88.h  test2006_36.h test2006_42.h test2006_187a.h \
     test2006_187b.h test2007_08.h test2007_41.h  test2007_42.h test2007_47.h test2007_48.h test2007_97.h \
     test2007_101.h test2007_136.h test2007_137.h test2007_160.h test2007_160a.h test2007_167.h \
     test2008_11.h test2014_66.h test2014_112.h LogicalPath.cpp test2005_56.C test2010_25.h test2012_242.h test2012_268.h \
     test2013_235.C test2013_236.C conftest.C conftest_2.C conftest_3.C test2006_112.C test2010_25.C test2003_24.C \
     test2004_82.C test2014_130.h test2015_08.h test2015_29.h test2015_85.h \
     method-defn-in-tpldecl-1.h sgnodee.hpp test2006_136.h test2007_113.h test2007_114.h test2007_40.h test2012_178.h


# DQ (10/23/2010): Added MPI tests that I can at least run locally to debug when Hudson MPI tests fail.
MPI_LOCATION = /home/dquinlan/ROSE/ROSE_TESTS/MPI_header_tests/MPI_header_tests_64bit
all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs $(top_srcdir)/tests/nonsmoke/functional/input_codes/cxx/Makefile_variables $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign --ignore-deps tests/nonsmoke/functional/CompileTests/Cxx_tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign --ignore-deps tests/nonsmoke/functional/CompileTests/Cxx_tests/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs $(top_srcdir)/tests/nonsmoke/functional/input_codes/cxx/Makefile_variables $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
tags TAGS:

ctags CTAGS:

cscope cscopelist:


distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-local mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: all all-am check check-am check-local clean clean-generic \
	clean-libtool clean-local cscopelist-am ctags-am distclean \
	distclean-generic distclean-libtool distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags-am uninstall \
	uninstall-am

.PRECIOUS: Makefile


# JJW (2/25/2008): set a flag (only used when running ROSE applications) to
# have them run using the build tree rather than the install tree -- this is
# important for "make check" in an uninstalled copy of ROSE.
@USE_ROSE_IN_BUILD_TREE_VAR_TRUE@export ROSE_IN_BUILD_TREE=$(top_builddir)

@ROSE_HAVE_LIBZ3_TRUE@  # The previous "Z3_*" variables should have been named "ROSE_Z3_*" following the pattern in the rest of this
@ROSE_HAVE_LIBZ3_TRUE@  # makefile. I don't want to break code that uses the wrong names, so I'll just add the correct ones. [Matzke 2017-10-17]

show-rpaths:
	@echo "ROSE_LIBS = $(ROSE_LIBS)"
	@echo "ROSE_RPATHS = $(ROSE_RPATHS)"
	@echo "ROSE_LINK_RPATHS = $(ROSE_LINK_RPATHS)"

clean-test-targets:
	rm -f $(TEST_TARGETS)
	rm -f $(TEST_TARGETS:.passed=.failed)
	rm -f $(TEST_TARGETS:.passed=.out)
	rm -f $(TEST_TARGETS:.passed=.err)

clean-local: clean-test-targets

.PHONY: clean-test-targets

@USING_CLANG_COMPILER_TRUE@@USING_INTEL_COMPILER_FALSE@ # These are all just mising builtins

#      EXAMPLE_TESTCODES_REQUIRED_TO_PASS += 
#  EXAMPLE_TESTCODES_REQUIRED_TO_PASS += 

# GNU compiler
@OS_MACOSX_FALSE@@ROSE_USING_GCC_VERSION_LATER_10_1_TRUE@@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@      # skip these codes when using GNU 10.1 (testing)
@OS_MACOSX_FALSE@@ROSE_USING_GCC_VERSION_LATER_10_1_FALSE@@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@      # DQ (7/23/2020): These are failing code for EDG 6.0 and GNU 10.1 (debugging this).
#     EXAMPLE_TESTCODES_REQUIRED_TO_PASS += 
@OS_MACOSX_FALSE@@USING_CLANG_COMPILER_FALSE@@USING_INTEL_COMPILER_FALSE@ # The test codes fail CLANG 10.0

#########
# Translator to be used: calling "make TEST_TRANSLATOR=../../testBackend" uses the backend compiler only

../../testTranslator:
	cd ../..; $(MAKE) testTranslator

../../testBackend:
	cd ../..; $(MAKE) testBackend

testCompiler:
	ln -s `which @BACKEND_CXX_COMPILER@` testCompiler

#########
# RTH test targets

$(TEST_Source_passed): %.passed: $(srcdir)/% $(TEST_TRANSLATOR) $(top_srcdir)/scripts/test_exit_status
@ROSE_USE_INSURE_FALSE@	@$(RTH_RUN) \
@ROSE_USE_INSURE_FALSE@	   CMD="$(TEST_TRANSLATOR) $(LANG_FLAGS) $(ROSE_FLAGS) $(TESTCODE_INCLUDES) -c $(srcdir)/$(@:.C.passed=.C)" \
@ROSE_USE_INSURE_FALSE@	   TITLE="TEST: $(TEST_TRANSLATOR) $(@:.C.passed=.C)" \
@ROSE_USE_INSURE_FALSE@	   $(top_srcdir)/scripts/test_exit_status $@
@ROSE_USE_INSURE_TRUE@	$(VALGRIND) $(TEST_TRANSLATOR) $(LANG_FLAGS) $(ROSE_FLAGS)  $(TESTCODE_INCLUDES) -c $(srcdir)/$(@:.C.passed=.C)

# EDG versions 6.0 and later do not require the -rose:unparse_edg_normalized_method_ROSE_1392 
# option (it appears that template declarations mihgt no longer be normalized).
@ROSE_USE_EDG_VERSION_5_0_TRUE@method-defn-in-tpldecl-0.C.passed: $(srcdir)/method-defn-in-tpldecl-0.C $(TEST_TRANSLATOR) $(top_srcdir)/scripts/test_exit_status
@ROSE_USE_EDG_VERSION_5_0_TRUE@	@$(RTH_RUN) \
@ROSE_USE_EDG_VERSION_5_0_TRUE@	    CMD="$(TEST_TRANSLATOR) $(LANG_FLAGS) $(ROSE_FLAGS) -I$(top_builddir) $(APP_INCLUDES) $(srcdir)/$(@:.C.passed=.C) -o method-defn-in-tpldecl-0 -rose:unparse_edg_normalized_method_ROSE_1392; test -e method-defn-in-tpldecl-0" \
@ROSE_USE_EDG_VERSION_5_0_TRUE@	    TITLE="testTranslator $(notdir $<) [$@]" \
@ROSE_USE_EDG_VERSION_5_0_TRUE@	    $(top_srcdir)/scripts/test_exit_status $@

# EDG versions 6.0 and later do not require the -rose:unparse_edg_normalized_method_ROSE_1392 
# option (it appears that template declarations mihgt no longer be normalized).
@ROSE_USE_EDG_VERSION_5_0_TRUE@method-defn-in-tpldecl-1.C.passed: $(srcdir)/method-defn-in-tpldecl-1.C $(srcdir)/method-defn-in-tpldecl-1.h $(TEST_TRANSLATOR) $(top_srcdir)/scripts/test_exit_status
@ROSE_USE_EDG_VERSION_5_0_TRUE@	@$(RTH_RUN) \
@ROSE_USE_EDG_VERSION_5_0_TRUE@	    CMD="$(TEST_TRANSLATOR) $(LANG_FLAGS) $(ROSE_FLAGS) -I$(top_builddir) $(APP_INCLUDES) $(srcdir)/$(@:.C.passed=.C) -o method-defn-in-tpldecl-1 -rose:unparse_edg_normalized_method_ROSE_1392; test -e method-defn-in-tpldecl-1" \
@ROSE_USE_EDG_VERSION_5_0_TRUE@	    TITLE="testTranslator $(notdir $<) [$@]" \
@ROSE_USE_EDG_VERSION_5_0_TRUE@	    $(top_srcdir)/scripts/test_exit_status $@

# DQ (9/18/2011): This is testing the option to process the AST to use the constant folded values (contained in the AST).
$(TEST_Objects_FoldedConstants): ../../testTranslatorFoldedConstants
	$(VALGRIND) ../../testTranslatorFoldedConstants $(ROSE_FLAGS) $(TESTCODE_INCLUDES) -I$(srcdir) -c $(srcdir)/$(@:.foldedConstants-o=.C) && touch $@

# DQ (9/18/2011): This is the equivalent to the default using testTranslator (so not critical to run this).
$(TEST_Objects_UnfoldedConstants): ../../testTranslatorUnfoldedConstants
	$(VALGRIND) ../../testTranslatorUnfoldedConstants $(ROSE_FLAGS) $(TESTCODE_INCLUDES) -I$(srcdir) -c $(srcdir)/$(@:.unfoldedConstants-o=.C) && touch $@

# DQ (9/18/2011): This is testing the option to process the AST to use the constant folded values (contained in the AST).
$(TEST_Objects_unnormalized): ../../testTranslator
	$(VALGRIND) ../../testTranslator -rose:suppress_variable_declaration_normalization $(ROSE_FLAGS) $(TESTCODE_INCLUDES) -I$(srcdir) -c $(srcdir)/$(@:.unnormalized-o=.C) && touch $@

# DQ (4/6/2010): Added test for parsing only (tested here for C++ code)
testParser:../../testParser
	$(VALGRIND) ../../testParser $(ROSE_FLAGS) $(TESTCODE_INCLUDES) -I$(srcdir) -c $(srcdir)/test2001_01.C

# This requires a special makefile rule
test2005_56.o: $(TEST_TRANSLATOR)
	$(TEST_TRANSLATOR) $(LANG_FLAGS) $(ROSE_FLAGS) -DTEST_STRING_MACRO=\""Thu Apr 14 08:18:33 PDT 2005"\" -c $(srcdir)/test2005_56.C -o test2005_56.o

test2014_54.o: $(TEST_TRANSLATOR)
	@echo "Running boost specific test."
	$(VALGRIND) $(TEST_TRANSLATOR) $(LANG_FLAGS) $(ROSE_FLAGS) $(ROSE_INCLUDES) -c $(srcdir)/test2010_01.C -o test2010_01.o

test2010_01.o: $(TEST_TRANSLATOR)
	@echo "Running boost specific test."
	$(VALGRIND) $(TEST_TRANSLATOR) $(LANG_FLAGS) $(ROSE_FLAGS) $(ROSE_INCLUDES) -c $(srcdir)/test2010_01.C -o test2010_01.o

test2010_02.o: $(TEST_TRANSLATOR)
	@echo "Running boost specific test."
	$(TEST_TRANSLATOR) $(LANG_FLAGS) $(ROSE_FLAGS) -I$(top_builddir) $(ROSE_INCLUDES) -c $(srcdir)/test2010_02.C -o test2010_02.o

test2010_07.o: $(TEST_TRANSLATOR)
	@echo "Running boost specific test."
	$(TEST_TRANSLATOR) $(LANG_FLAGS) $(ROSE_FLAGS) -I$(top_builddir) $(ROSE_INCLUDES) -c $(srcdir)/test2010_07.C -o test2010_07.o

test2010_08.o: $(TEST_TRANSLATOR)
	@echo "Running boost specific test."
	$(TEST_TRANSLATOR) $(LANG_FLAGS) $(ROSE_FLAGS) -I$(top_builddir) $(ROSE_INCLUDES) -c $(srcdir)/test2010_08.C -o test2010_08.o

cpp_test2010_07: $(TEST_TRANSLATOR)
	@echo "Running boost specific test."
	g++ -E -I$(top_builddir) $(ROSE_INCLUDES) -c $(srcdir)/test2010_07.C

# DQ (9/13/2013): Added new test for -rose:unparse_includes (which has a bug in how it unparses C++ style comments
# and should maybe not be unparsing declarations that are front-end specific (e.g. builtin function declarations).
test_unparse_includes_option.passed: $(TEST_TRANSLATOR)
	@$(RTH_RUN) CMD="$(TEST_TRANSLATOR) $(LANG_FLAGS) $(ROSE_FLAGS) -rose:unparse_includes -rose:verbose 0 -I$(top_builddir) -c $(srcdir)/test2013_257.C -o test2013_257_unparse_headers.o" $(top_srcdir)/scripts/test_exit_status $@

# DQ (9/16/2013): Test linking the resulting translated file. Phil Miller reported an error and the issue
# is that va_start() and va_end() must be unparsed to be __builtin_va_start() and __builtin_va_end() (at least for GNU).
test_unparse_includes_option_with_link.passed: $(TEST_TRANSLATOR)
	@$(RTH_RUN) CMD="$(TEST_TRANSLATOR) $(LANG_FLAGS) $(ROSE_FLAGS) -rose:unparse_includes -rose:verbose 0 -I$(top_builddir) $(srcdir)/test2013_260.C -o test2013_260_unparse_headers" $(top_srcdir)/scripts/test_exit_status $@

# DQ (9/17/2013): Added autoconf style link test.
test_common_configure_test_with_link_part_1.passed: $(TEST_TRANSLATOR)
	@cp $(srcdir)/conftest.C conftest.C
	@$(RTH_RUN) CMD="$(TEST_TRANSLATOR) $(LANG_FLAGS) $(ROSE_FLAGS) -I$(srcdir) conftest.C -o conftest_configure_test_part_1" $(top_srcdir)/scripts/test_exit_status $@

# DQ (9/22/2013): Added autoconf style link test.
test_common_configure_test_with_link_part_2.passed: $(TEST_TRANSLATOR)
# DQ (9/22/2020): Need to use a different filename so that these tests can run in parallel.
#	@cp $(srcdir)/conftest_2.C conftest.C
	@cp $(srcdir)/conftest_2.C conftest_2.C
	@$(RTH_RUN) CMD="$(TEST_TRANSLATOR) $(LANG_FLAGS) $(ROSE_FLAGS) -I$(srcdir) conftest_2.C -o conftest_configure_test_part_2" $(top_srcdir)/scripts/test_exit_status $@

# DQ (9/22/2013): Added autoconf style link test.
test_common_configure_test_with_link_part_3.passed: $(TEST_TRANSLATOR)
# DQ (9/22/2020): Need to use a different filename so that these tests can run in parallel.
#	@cp $(srcdir)/conftest_3.C conftest.C
	@cp $(srcdir)/conftest_3.C conftest_3.C
	@$(RTH_RUN) CMD="$(TEST_TRANSLATOR) $(LANG_FLAGS) $(ROSE_FLAGS) -I$(srcdir) conftest_3.C -o conftest_configure_test_part_3" $(top_srcdir)/scripts/test_exit_status $@

# DQ (12/28/2015): Added test for new option to not normalize variable declarations.
test_suppress_variable_declaration_normalization.passed: $(TEST_TRANSLATOR)
	@$(RTH_RUN) CMD="$(TEST_TRANSLATOR) -rose:suppress_variable_declaration_normalization $(ROSE_FLAGS) -c $(srcdir)/test_multible_variables_in_variable_declaration.C" $(top_srcdir)/scripts/test_exit_status $@

testOption:
	$(TEST_TRANSLATOR) -rose:verbose 0 -nostdinc -c $(srcdir)/test2015_08.C

# DQ (7/20/2015): Added template tests using new testTemplates translator that forces 
# output of instantiated templates (part of ongoing improvements to template support).
# This test translator will work for test2015_32.C - test2015_36.C
# I will make this in the a better organized set of tests later.
# DQ (10/12/2015): Note that tests test2015_37.C through test2015_54.C are these tests.
testTemplateExample: testTemplateExample_1 testTemplateExample_2 testTemplateExample_3 testTemplateExample_4 testTemplateExample_5

testTemplateExample_1: $(TEST_TEMPLATE_TRANSLATOR) 
	$(TEST_TEMPLATE_TRANSLATOR) $(ROSE_FLAGS) -c $(srcdir)/test2015_32.C

testTemplateExample_2: $(TEST_TEMPLATE_TRANSLATOR)
	$(TEST_TEMPLATE_TRANSLATOR) $(ROSE_FLAGS) -c $(srcdir)/test2015_33.C

testTemplateExample_3: $(TEST_TEMPLATE_TRANSLATOR)
	$(TEST_TEMPLATE_TRANSLATOR) $(ROSE_FLAGS) -c $(srcdir)/test2015_34.C

testTemplateExample_4: $(TEST_TEMPLATE_TRANSLATOR)
	$(TEST_TEMPLATE_TRANSLATOR) $(ROSE_FLAGS) -c $(srcdir)/test2015_35.C

testTemplateExample_5: $(TEST_TEMPLATE_TRANSLATOR)
	$(TEST_TEMPLATE_TRANSLATOR) $(ROSE_FLAGS) -c $(srcdir)/test2015_36.C

@ROSE_WITH_LIBHARU_TRUE@$(TEST_PDF_TRANSLATOR):
@ROSE_WITH_LIBHARU_TRUE@	cd ../..; $(MAKE) testPDFGeneration

../../testTranslatorFoldedConstants:
	cd ../..; $(MAKE) testTranslatorFoldedConstants

../../testTranslatorUnfoldedConstants:
	cd ../..; $(MAKE) testTranslatorUnfoldedConstants

$(TEST_TEMPLATE_TRANSLATOR):
	cd ../..; $(MAKE) testTemplates

# DQ (6/18/2008): All of these should be present...
# confdefs.h     test2001_11.h   test2001_18B.h  test2003_12.h  test2003_25.h   test2005_154.h  test2005_159.h  test2005_26.h  test2005_88.h    test2006_187b.h  test2006_42.h   test2007_113.h  test2007_137.h   test2007_167.h  test2007_42.h  test2007_97.h
# foo.h          test2001_15.h   test2003_08.h   test2003_14.h  test2004_40.h   test2005_157.h  test2005_15.h   test2005_75.h  test2006_136.h   test2006_33.h    test2007_08.h   test2007_114.h  test2007_160a.h  test2007_40.h   test2007_47.h
# test2001_05.h  test2001_18A.h  test2003_09.h   test2003_24.h  test2005_133.h  test2005_158.h  test2005_160.h  test2005_81.h  test2006_187a.h  test2006_36.h    test2007_101.h  test2007_136.h  test2007_160.h   test2007_41.h   test2007_48.h

# This was a bug specific to the normalization of source file names to absolute paths
# DQ (12/11/2009): At the moment it is an failing test because "thisIsAnError" will be 
# interpreted to be a file.
testUsingBadCommandline: $(TEST_TRANSLATOR)
	echo "class A { int x; float y;}; int main() { int x=0; return x; }" > roseTestProgram.C; \
	$(TEST_TRANSLATOR) -DthisIsOK -D thisIsAnError -rose:verbose 0 roseTestProgram.C

# This was a bug specific to the normalization of source file names to absolute paths
testBuildUsingNoPath: $(TEST_TRANSLATOR)
	echo "class A { int x; float y;}; int main() { int x=0; return x; }" > roseTestProgram.C; \
	$(TEST_TRANSLATOR) -rose:verbose 0 roseTestProgram.C

# This was a bug specific to the normalization of source file names to absolute paths
testBuildUsingRelativePath: $(TEST_TRANSLATOR)
	echo "class A { int x; float y;}; int main() { int x=0; return x; }" > roseTestProgram.C; \
	$(TEST_TRANSLATOR) -rose:verbose 0 ../Cxx_tests/roseTestProgram.C

# This was always worked but is the alternative to the normalization of source file names to absolute paths
testBuildUsingAbsolutePath: $(TEST_TRANSLATOR)
	echo "class A { int x; float y;}; int main() { int x=0; return x; }" > roseTestProgram.C; \
	$(TEST_TRANSLATOR) -rose:verbose 0 `pwd`/roseTestProgram.C

# DQ (4/26/2019): Test the use of the -ansi option in ROSE.
test_ansi_and_nonansi_modes:
# DQ (4/26/2019): It appears that -edg:strict option does not work.
#	$(TEST_TRANSLATOR) -rose:verbose 0 -edg:strict $(srcdir)/test_ansi.C
#	$(TEST_TRANSLATOR) -rose:verbose 0 $(srcdir)/test_nonansi.C
	$(TEST_TRANSLATOR) -rose:verbose 0 -ansi -c $(srcdir)/test_ansi.C
	$(TEST_TRANSLATOR) -rose:verbose 0 -c $(srcdir)/test_nonansi.C

multipleDeclarationsBug: $(srcdir)/markus_1a.C $(srcdir)/markus_1b.C $(srcdir)/markus_1.h
	$(TEST_TRANSLATOR) -rose:verbose 0 -c $(srcdir)/markus_1a.C $(srcdir)/markus_1b.C
test_MPI_LAM:
	$(TEST_TRANSLATOR) -rose:verbose 0 -I$(MPI_LOCATION)/LAM_MPI/include -c $(MPI_LOCATION)/tests/input.C

test_multiple_files: $(srcdir)/test2012_246a.C $(srcdir)/test2012_246b.C
	../../testTranslator -rose:verbose 1 -c $(srcdir)/test2012_246a.C $(srcdir)/test2012_246b.C 

# DQ (7/24/2018): Test for output spew from multiple files on the same command line.
test_multiple_files_2: $(srcdir)/test2018_01.C $(srcdir)/test2018_02.C
	../../testTranslator -rose:verbose 0 -c $(srcdir)/test2018_01.C $(srcdir)/test2018_02.C 

test_multiple_files_3: $(srcdir)/test2019_30a.C $(srcdir)/test2019_30b.C $(srcdir)/test2019_30.h 
	../../testTranslator -rose:verbose 0 -c $(srcdir)/test2019_30a.C $(srcdir)/test2019_30b.C 

# DQ (7/9/2019): This test demonstrates a failing case for older versions of EDG (pre 5.0) 
# when using at least GNU 5.1.  Not clear if we should worry about this since we are moving
# to have EDG 5.0 be the default shortly.  This issue reproduces a problem that is only see
# in one of the CFG tests.  It is not a problem with EDG 5.0, as I understand it.
test_multiple_files_4: $(srcdir)/test2019_42a.C $(srcdir)/test2019_42b.C 
	../../testTranslator -rose:verbose 0 -c $(srcdir)/test2019_42a.C $(srcdir)/test2019_42b.C 

# DQ (7/24/2011): These test fail the AST IO but pass the compilation tests.  Debug these for AST File I/O separately.
failingAST_IO_tests: test2011_113.o test2011_114.o test2011_116.o

print_testcodes:
#	echo $(TESTCODES)
	echo "PASSING_TEST_Source_passed = $(PASSING_TEST_Source_passed)"

# Added performance test for ROSE evaluation:
performance_timing:
	../../testGraphGeneration --edg:no_warnings -w -rose:verbose 3 -rose:skip_unparse_asm_commands -rose:skipAstConsistancyTests -rose:skip_commentsAndDirectives -rose:skip_unparse -I$(srcdir) -c $(srcdir)/testPerformance.C

# DQ (3/17/2017): Added PDF test for ROSE evaluation (forces testing of parts of ROSE for lcov):
@ROSE_WITH_LIBHARU_TRUE@test_pdf_generation: $(TEST_PDF_TRANSLATOR)
@ROSE_WITH_LIBHARU_TRUE@	../../testPDFGeneration --edg:no_warnings -w -rose:verbose 0 -rose:skip_unparse_asm_commands -rose:skipAstConsistancyTests -rose:skip_commentsAndDirectives -rose:skip_unparse -I$(srcdir) -c $(srcdir)/test2004_77.C
@ROSE_WITH_LIBHARU_TRUE@	ls -l *.pdf
@ROSE_WITH_LIBHARU_TRUE@	@echo "Removing the generated PDF file because it is up to 150Meg and we want to save disk space."
@ROSE_WITH_LIBHARU_TRUE@	rm *.pdf
@ROSE_WITH_LIBHARU_FALSE@test_pdf_generation:
@ROSE_WITH_LIBHARU_FALSE@	@echo "libharu support is not enabled"

# DQ (11/19/2012): HPCToolKit use.  This makes some significant assumptions on how we have setup HPCToolKit.
hpctoolkit:
	hpcrun -e WALLCLOCK -- ../../testTranslator --edg:no_warnings -w -rose:verbose 0 -rose:skip_unparse_asm_commands -rose:skipAstConsistancyTests -rose:skip_commentsAndDirectives -rose:skip_unparse -I/home/dquinlan/ROSE/git-dq-edg4x-rc/tests/nonsmoke/functional/CompileTests/Cxx_tests -c /home/dquinlan/ROSE/git-dq-edg4x-rc/tests/nonsmoke/functional/CompileTests/Cxx_tests/testPerformance.C
#	hpcprof hpctoolkit-lt-testTranslator-measurements/lt-testTranslator-000000-000-0f802c45-7612-0.hpcrun
	hpcprof hpctoolkit-lt-testTranslator-measurements/lt-testTranslator-000000-000-0f802c45-3676-0.hpcrun
#	hpcviewer /home/dquinlan/ROSE/ROSE_CompileTree/git-LINUX-64bit-4.2.4-dq-edg4x-rc-debug_mode_off/tests/nonsmoke/functional/CompileTests/Cxx_tests/hpctoolkit-lt-testTranslator-database-11205 &

check-local:
#	@$(MAKE) $(PASSING_TEST_Source_passed)
	@$(MAKE) test_pdf_generation $(PASSING_TEST_Source_passed) \
          test_unparse_includes_option.passed test_unparse_includes_option_with_link.passed \
          test_common_configure_test_with_link_part_1.passed test_common_configure_test_with_link_part_2.passed testTemplateExample
#	@$(MAKE) test_pdf_generation
#	I'm not sure why these are coded to run in serial [RPM 2014-08-29]
	@$(MAKE) test_unparse_includes_option.passed
	@$(MAKE) test_unparse_includes_option_with_link.passed
	@$(MAKE) test_common_configure_test_with_link_part_1.passed
	@$(MAKE) test_common_configure_test_with_link_part_2.passed
#	DQ (9/22/2013): I think this failes on later versions of GNU (e.g. gnu 4.4.5).
#	@$(MAKE) test_common_configure_test_with_link_part_3
	@$(MAKE) testTemplateExample
	@echo "*******************************************************************************************************************"
	@echo "****** ROSE/tests/nonsmoke/functional/CompileTests/Cxx_tests: make check rule complete (terminated normally) ******"
	@echo "*******************************************************************************************************************"

clean-local:
	rm -f a.out *.o rose_*.[cC] roseTestProgram.C *.dot *.ti *.pdf
	rm -f *.foldedConstants-o
	rm -f *.unfoldedConstants-o
	rm -rf QMTest
	rm -f *.int.c
	rm -f test2013_260_unparse_headers conftest_configure_test*
	rm -f conftest.C
	rm -f conftest_2.C
	rm -f conftest_3.C
	rm -f *.passed *.failed *.err
	rm -f method-defn-in-tpldecl-0 method-defn-in-tpldecl-1

#------------------------------------------------------------------------------
#                           Performance Timing Tests
#------------------------------------------------------------------------------
#
#  Enforce a time limit constraint on testcode compilation.
#
### Make Targets
#
#  Note: A testcode's object files are removed before running the individual
#  steps in these make targets.
#
#### Default
#
#  $ make <testcode>.timed
#
#    Compiles <testcode> with a $TIMEOUT limit
#
#    E.g.  $ make test2005_35.timed
#
#  $ make check-performance-timing
#
#    Compiles all testcodes with a $TIMEOUT limit
#
#### Threshold
#
#  $ make <testcode>.timed_with_threshold
#
#    Compiles <testcode> with g++ and then uses the g++ compile time
#    as a $TIMEOUT threshold to compile <testcode> with ROSE.
#
#    E.g.  $ make test2005_35.timed_with_threshold
#
#  $ make check-performance-timing-with-threshold
#
#    Compiles all testcodes with a $TIMEOUT limit calculated from
#    the g++ compile time threshold.
#
### Environment Variables
#
#  TIMEOUT              Maximum time limit for the compilation of a <testcode>
#  TIMEOUT_TOLERANCE    $gnu_time * $TIMEOUT_TOLERANCE (threshold tests only)
#------------------------------------------------------------------------------

# DQ (6/30/2013): Increased this to support compiling Boost example tests. We 
# need to rethink how we want to handl this. I suggest restricting this to a 
# few tests instead of each test. Compiling with optimization also makes about
# a factor of four difference for test2013_241.C (boost example test code).
# Since Jenkins testing is currently done without optimization we need the 
# larger timeout value just to handle the newer boost test codes.
# TIMEOUT            ?= 60  # Default timeout value
TIMEOUT            ?= 420  # Default timeout value
TIMEOUT_TOLERANCE  ?= 20  # Default timeout tolerance value for threshold
                          # tests = $gnu_time * $TIMEOUT_TOLERANCE

check-performance-timing:
	@$(MAKE) $(TEST_Source_passed:.C.passed=.timed)

check-performance-timing-with-threshold:
	@$(MAKE) $(TEST_Source_passed:.C.passed=.timed_with_threshold)

$(TEST_Source_passed:.C.passed=.timed):
	rm -f $(@:.timed=.C.passed) &&                                               \
	$(top_srcdir)/scripts/timeout.sh $(TIMEOUT) $(MAKE) $(@:.timed=.C.passed) || \
			(                                                                        \
				test $$? -eq 124 &&                                                    \
				echo "[ERROR] '$@' compilation timed out after '$(TIMEOUT)' seconds" &&  \
				exit 1                                                                 \
			)

# 1. Time and Compile testcode with g++
# 2. Compile with ROSE, using TIMEOUT relative to time results from g++
#
# Uses $(TESTCODES_REQUIRED_TO_PASS)
#
$(TEST_Source_passed:.C.passed=.timed_with_threshold):
	rm -f $(@:.timed_with_threshold=.C.passed) &&                                          \
	SECONDS=0 &&                                                                           \
			$(MAKE) TEST_TRANSLATOR=g++ ROSE_FLAGS=  $(@:.timed_with_threshold=.C.passed) &&   \
	gnu_time="$$((($$SECONDS + 1)))" &&                                                    \
	echo "[INFO] '$@' compiled with GNU in '$$gnu_time' seconds" &&                        \
	rm -f $(@:.timed_with_threshold=.C.passed) &&                                          \
	TIMEOUT="$$((($$gnu_time * $(TIMEOUT_TOLERANCE))))" &&                                 \
	echo "[INFO] '$@' performance test is set to timeout after '$$TIMEOUT' seconds" &&     \
	$(MAKE) TIMEOUT="$$TIMEOUT" $(@:.timed_with_threshold=.timed)

status:
	@$(MAKE) $(TEST_Source_passed)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
