// Code added to bottom of winperf.h
typedef struct _PERF_DATA_BLOCK {
     WCHAR Signature[4];
     DWORD LittleEndian;
     DWORD Version;
     DWORD Revision;
     DWORD TotalByteLength;
     DWORD HeaderLength;
     DWORD NumObjectTypes;
     LONG DefaultObject;
     SYSTEMTIME SystemTime;
     LARGE_INTEGER PerfTime;
     LARGE_INTEGER PerfFreq;
     LARGE_INTEGER PerfTime100nSec;
     DWORD SystemNameLength;
     DWORD SystemNameOffset;
 } PERF_DATA_BLOCK, *PPERF_DATA_BLOCK;
typedef struct _PERF_OBJECT_TYPE {
     DWORD TotalByteLength;
     DWORD DefinitionLength;
     DWORD HeaderLength;
     DWORD ObjectNameTitleIndex;
     LPWSTR ObjectNameTitle;
     DWORD ObjectHelpTitleIndex;
     LPWSTR ObjectHelpTitle;
     DWORD DetailLevel;
     DWORD NumCounters;
     LONG DefaultCounter;
     LONG NumInstances;
     DWORD CodePage;
     LARGE_INTEGER PerfTime;
     LARGE_INTEGER PerfFreq;
 } PERF_OBJECT_TYPE, *PPERF_OBJECT_TYPE;
typedef struct _PERF_COUNTER_DEFINITION {
     DWORD ByteLength;
     DWORD CounterNameTitleIndex;
     LPWSTR CounterNameTitle;
     DWORD CounterHelpTitleIndex;
     LPWSTR CounterHelpTitle;
     LONG DefaultScale;
     DWORD DetailLevel;
     DWORD CounterType;
     DWORD CounterSize;
     DWORD CounterOffset;
 } PERF_COUNTER_DEFINITION,*PPERF_COUNTER_DEFINITION;
 typedef struct _PERF_INSTANCE_DEFINITION {
     DWORD ByteLength;
     DWORD ParentObjectTitleIndex;
     DWORD ParentObjectInstance;
     LONG UniqueID;
     DWORD NameOffset;
     DWORD NameLength;
 } PERF_INSTANCE_DEFINITION,*PPERF_INSTANCE_DEFINITION;
typedef struct _PERF_COUNTER_BLOCK {
     DWORD ByteLength;
 } PERF_COUNTER_BLOCK, *PPERF_COUNTER_BLOCK;
typedef DWORD(CALLBACK PM_OPEN_PROC)(LPWSTR);
typedef DWORD(CALLBACK PM_COLLECT_PROC)(LPWSTR,PVOID*,PDWORD,PDWORD);
typedef DWORD(CALLBACK PM_CLOSE_PROC)(void);
