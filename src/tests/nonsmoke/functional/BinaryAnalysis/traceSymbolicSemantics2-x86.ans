=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x080482c8: push ebp
Symbolic: startInstruction(0x080482c8: push ebp)
Symbolic insn@0x080482c8[0]: number_(32, 134513352) = 0x080482c8<134513352>[u32]
Symbolic insn@0x080482c8[0]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080482c8[0]: add(0x080482c8<134513352>[u32], 0x00000001[u32]) = 0x080482c9<134513353>[u32]
Symbolic insn@0x080482c8[0]: writeRegister(eip, 0x080482c9<134513353>[u32])
Symbolic insn@0x080482c8[0]: undefined_(32) = V1[u32]
Symbolic insn@0x080482c8[0]: readRegister(ebp, V1[u32]) = ebp_0[u32]
Symbolic insn@0x080482c8[0]: undefined_(32) = V2[u32]
Symbolic insn@0x080482c8[0]: readRegister(esp, V2[u32]) = esp_0[u32]
Symbolic insn@0x080482c8[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x080482c8[0]: add(esp_0[u32], 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x080482c8[0]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x080482c8[0]: boolean_(1) = true[u1]
Symbolic insn@0x080482c8[0]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), ebp_0[u32], true[u1])
Symbolic insn@0x080482c8[0]: finishInstruction(push ebp)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080482c9<134513353>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x080482c9: mov ebp, esp
Symbolic: startInstruction(0x080482c9: mov ebp, esp)
Symbolic insn@0x080482c9[1]: number_(32, 134513353) = 0x080482c9<134513353>[u32]
Symbolic insn@0x080482c9[1]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x080482c9[1]: add(0x080482c9<134513353>[u32], 0x00000002[u32]) = 0x080482cb<134513355>[u32]
Symbolic insn@0x080482c9[1]: writeRegister(eip, 0x080482cb<134513355>[u32])
Symbolic insn@0x080482c9[1]: undefined_(32) = V3[u32]
Symbolic insn@0x080482c9[1]: readRegister(esp, V3[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x080482c9[1]: writeRegister(ebp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x080482c9[1]: finishInstruction(mov ebp, esp)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080482cb<134513355>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x080482cb: sub esp, 0x08
Symbolic: startInstruction(0x080482cb: sub esp, 0x08)
Symbolic insn@0x080482cb[2]: number_(32, 134513355) = 0x080482cb<134513355>[u32]
Symbolic insn@0x080482cb[2]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x080482cb[2]: add(0x080482cb<134513355>[u32], 0x00000003[u32]) = 0x080482ce<134513358>[u32]
Symbolic insn@0x080482cb[2]: writeRegister(eip, 0x080482ce<134513358>[u32])
Symbolic insn@0x080482cb[2]: undefined_(32) = V4[u32]
Symbolic insn@0x080482cb[2]: readRegister(esp, V4[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x080482cb[2]: number_(8, 8) = 0x08[u8]
Symbolic insn@0x080482cb[2]: signExtend(0x08[u8], 32) = 0x00000008[u32]
Symbolic insn@0x080482cb[2]: boolean_(0) = false[u1]
Symbolic insn@0x080482cb[2]: invert(0x00000008[u32]) = 0xfffffff7<4294967287,-9>[u32]
Symbolic insn@0x080482cb[2]: invert(false[u1]) = true[u1]
Symbolic insn@0x080482cb[2]: addWithCarries((add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), 0xfffffff7<4294967287,-9>[u32], true[u1]) = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
Symbolic insn@0x080482cb[2]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x080482cb[2]: extract((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x080482cb[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x080482cb[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x080482cb[2]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x080482cb[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x080482cb[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x080482cb[2]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x080482cb[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x080482cb[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x080482cb[2]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x080482cb[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x080482cb[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x080482cb[2]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x080482cb[2]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x080482cb[2]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x080482cb[2]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x080482cb[2]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))))
Symbolic insn@0x080482cb[2]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))))
Symbolic insn@0x080482cb[2]: extract((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x080482cb[2]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x080482cb[2]: equalToZero((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) = (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x080482cb[2]: writeRegister(zf, (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x080482cb[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x080482cb[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x080482cb[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x080482cb[2]: invert((extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))) = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
Symbolic insn@0x080482cb[2]: writeRegister(af, (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))))
Symbolic insn@0x080482cb[2]: invert((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))) = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
Symbolic insn@0x080482cb[2]: writeRegister(cf, (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))))
Symbolic insn@0x080482cb[2]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
Symbolic insn@0x080482cb[2]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))))
Symbolic insn@0x080482cb[2]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x080482cb[2]: finishInstruction(sub esp, 0x08)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080482ce<134513358>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x080482ce: call 0x08048364<(func)call_gmon_start>
Symbolic: startInstruction(0x080482ce: call 0x08048364<(func)call_gmon_start>)
Symbolic insn@0x080482ce[3]: number_(32, 134513358) = 0x080482ce<134513358>[u32]
Symbolic insn@0x080482ce[3]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x080482ce[3]: add(0x080482ce<134513358>[u32], 0x00000005[u32]) = 0x080482d3<134513363>[u32]
Symbolic insn@0x080482ce[3]: writeRegister(eip, 0x080482d3<134513363>[u32])
Symbolic insn@0x080482ce[3]: number_(32, 134513508) = 0x08048364<134513508>[u32]
Symbolic insn@0x080482ce[3]: unsignedExtend(0x08048364<134513508>[u32], 32) = 0x08048364<134513508>[u32]
Symbolic insn@0x080482ce[3]: undefined_(32) = V5[u32]
Symbolic insn@0x080482ce[3]: readRegister(esp, V5[u32]) = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
Symbolic insn@0x080482ce[3]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x080482ce[3]: add((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])
Symbolic insn@0x080482ce[3]: boolean_(1) = true[u1]
Symbolic insn@0x080482ce[3]: undefined_(32) = V6[u32]
Symbolic insn@0x080482ce[3]: readRegister(eip, V6[u32]) = 0x080482d3<134513363>[u32]
Symbolic insn@0x080482ce[3]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]), 0x080482d3<134513363>[u32], true[u1])
Symbolic insn@0x080482ce[3]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]))
Symbolic insn@0x080482ce[3]: filterCallTarget(0x08048364<134513508>[u32]) = 0x08048364<134513508>[u32]
Symbolic insn@0x080482ce[3]: writeRegister(eip, 0x08048364<134513508>[u32])
Symbolic insn@0x080482ce[3]: finishInstruction(call 0x08048364<(func)call_gmon_start>)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip = 0x08048364<134513508>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xfffffff3<4294967283,-13>[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff2<4294967282,-14>[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff1<4294967281,-15>[u32]) write-only value=0x82<-126>[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]) write-only value=0xd3<-45>[u8]
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x080482d3: call 0x080483d0<(func)frame_dummy>
Symbolic: startInstruction(0x080482d3: call 0x080483d0<(func)frame_dummy>)
Symbolic insn@0x080482d3[0]: number_(32, 134513363) = 0x080482d3<134513363>[u32]
Symbolic insn@0x080482d3[0]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x080482d3[0]: add(0x080482d3<134513363>[u32], 0x00000005[u32]) = 0x080482d8<134513368>[u32]
Symbolic insn@0x080482d3[0]: writeRegister(eip, 0x080482d8<134513368>[u32])
Symbolic insn@0x080482d3[0]: number_(32, 134513616) = 0x080483d0<134513616>[u32]
Symbolic insn@0x080482d3[0]: unsignedExtend(0x080483d0<134513616>[u32], 32) = 0x080483d0<134513616>[u32]
Symbolic insn@0x080482d3[0]: undefined_(32) = V1[u32]
Symbolic insn@0x080482d3[0]: readRegister(esp, V1[u32]) = esp_0[u32]
Symbolic insn@0x080482d3[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x080482d3[0]: add(esp_0[u32], 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x080482d3[0]: boolean_(1) = true[u1]
Symbolic insn@0x080482d3[0]: undefined_(32) = V2[u32]
Symbolic insn@0x080482d3[0]: readRegister(eip, V2[u32]) = 0x080482d8<134513368>[u32]
Symbolic insn@0x080482d3[0]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), 0x080482d8<134513368>[u32], true[u1])
Symbolic insn@0x080482d3[0]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x080482d3[0]: filterCallTarget(0x080483d0<134513616>[u32]) = 0x080483d0<134513616>[u32]
Symbolic insn@0x080482d3[0]: writeRegister(eip, 0x080483d0<134513616>[u32])
Symbolic insn@0x080482d3[0]: finishInstruction(call 0x080483d0<(func)frame_dummy>)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip = 0x080483d0<134513616>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=0x82<-126>[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=0xd8<-40>[u8]
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x080482d8: call 0x08048580<(func)__do_global_ctors_aux>
Symbolic: startInstruction(0x080482d8: call 0x08048580<(func)__do_global_ctors_aux>)
Symbolic insn@0x080482d8[0]: number_(32, 134513368) = 0x080482d8<134513368>[u32]
Symbolic insn@0x080482d8[0]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x080482d8[0]: add(0x080482d8<134513368>[u32], 0x00000005[u32]) = 0x080482dd<134513373>[u32]
Symbolic insn@0x080482d8[0]: writeRegister(eip, 0x080482dd<134513373>[u32])
Symbolic insn@0x080482d8[0]: number_(32, 134514048) = 0x08048580<134514048>[u32]
Symbolic insn@0x080482d8[0]: unsignedExtend(0x08048580<134514048>[u32], 32) = 0x08048580<134514048>[u32]
Symbolic insn@0x080482d8[0]: undefined_(32) = V1[u32]
Symbolic insn@0x080482d8[0]: readRegister(esp, V1[u32]) = esp_0[u32]
Symbolic insn@0x080482d8[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x080482d8[0]: add(esp_0[u32], 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x080482d8[0]: boolean_(1) = true[u1]
Symbolic insn@0x080482d8[0]: undefined_(32) = V2[u32]
Symbolic insn@0x080482d8[0]: readRegister(eip, V2[u32]) = 0x080482dd<134513373>[u32]
Symbolic insn@0x080482d8[0]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), 0x080482dd<134513373>[u32], true[u1])
Symbolic insn@0x080482d8[0]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x080482d8[0]: filterCallTarget(0x08048580<134514048>[u32]) = 0x08048580<134514048>[u32]
Symbolic insn@0x080482d8[0]: writeRegister(eip, 0x08048580<134514048>[u32])
Symbolic insn@0x080482d8[0]: finishInstruction(call 0x08048580<(func)__do_global_ctors_aux>)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip = 0x08048580<134514048>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=0x82<-126>[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=0xdd<-35>[u8]
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x080482dd: leave 
Symbolic: startInstruction(0x080482dd: leave)
Symbolic insn@0x080482dd[0]: number_(32, 134513373) = 0x080482dd<134513373>[u32]
Symbolic insn@0x080482dd[0]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080482dd[0]: add(0x080482dd<134513373>[u32], 0x00000001[u32]) = 0x080482de<134513374>[u32]
Symbolic insn@0x080482dd[0]: writeRegister(eip, 0x080482de<134513374>[u32])
Symbolic insn@0x080482dd[0]: undefined_(32) = V1[u32]
Symbolic insn@0x080482dd[0]: readRegister(ebp, V1[u32]) = ebp_0[u32]
Symbolic insn@0x080482dd[0]: writeRegister(esp, ebp_0[u32])
Symbolic insn@0x080482dd[0]: undefined_(32) = V2[u32]
Symbolic insn@0x080482dd[0]: readRegister(esp, V2[u32]) = ebp_0[u32]
Symbolic insn@0x080482dd[0]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x080482dd[0]: add(ebp_0[u32], 0x00000004[u32]) = (add[u32] ebp_0[u32] 0x00000004[u32])
Symbolic insn@0x080482dd[0]: boolean_(1) = true[u1]
Symbolic insn@0x080482dd[0]: undefined_(32) = V3[u32]
Symbolic insn@0x080482dd[0]: readMemory(ss, ebp_0[u32], V3[u32], true[u1]) = V3[u32]
Symbolic insn@0x080482dd[0]: writeRegister(ebp, V3[u32])
Symbolic insn@0x080482dd[0]: writeRegister(esp, (add[u32] ebp_0[u32] 0x00000004[u32]))
Symbolic insn@0x080482dd[0]: finishInstruction(leave)
registers:
 esp = (add[u32] ebp_0[u32] 0x00000004[u32])
 ebp read-before-write = V3[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080482de<134513374>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] ebp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] ebp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=ebp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])

0x080482de: ret 
Symbolic: startInstruction(0x080482de: ret)
Symbolic insn@0x080482de[1]: number_(32, 134513374) = 0x080482de<134513374>[u32]
Symbolic insn@0x080482de[1]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080482de[1]: add(0x080482de<134513374>[u32], 0x00000001[u32]) = 0x080482df<134513375>[u32]
Symbolic insn@0x080482de[1]: writeRegister(eip, 0x080482df<134513375>[u32])
Symbolic insn@0x080482de[1]: undefined_(32) = V4[u32]
Symbolic insn@0x080482de[1]: readRegister(esp, V4[u32]) = (add[u32] ebp_0[u32] 0x00000004[u32])
Symbolic insn@0x080482de[1]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x080482de[1]: add((add[u32] ebp_0[u32] 0x00000004[u32]), 0x00000004[u32]) = (add[u32] ebp_0[u32] 0x00000008[u32])
Symbolic insn@0x080482de[1]: boolean_(1) = true[u1]
Symbolic insn@0x080482de[1]: undefined_(32) = V5[u32]
Symbolic insn@0x080482de[1]: readMemory(ss, (add[u32] ebp_0[u32] 0x00000004[u32]), V5[u32], true[u1]) = V5[u32]
Symbolic insn@0x080482de[1]: filterReturnTarget(V5[u32]) = V5[u32]
Symbolic insn@0x080482de[1]: writeRegister(eip, V5[u32])
Symbolic insn@0x080482de[1]: writeRegister(esp, (add[u32] ebp_0[u32] 0x00000008[u32]))
Symbolic insn@0x080482de[1]: finishInstruction(ret)
registers:
 esp = (add[u32] ebp_0[u32] 0x00000008[u32])
 ebp read-before-write = V3[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = V5[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebp_0[u32] 0x00000007[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V5[u32])
 addr=(add[u32] ebp_0[u32] 0x00000006[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V5[u32])
 addr=(add[u32] ebp_0[u32] 0x00000005[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V5[u32])
 addr=(add[u32] ebp_0[u32] 0x00000004[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
 addr=(add[u32] ebp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] ebp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] ebp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=ebp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x080482e0: push dword ds:[0x080496cc<.got.plt+4>]
Symbolic: startInstruction(0x080482e0: push dword ds:[0x080496cc<.got.plt+4>])
Symbolic insn@0x080482e0[0]: number_(32, 134513376) = 0x080482e0<134513376>[u32]
Symbolic insn@0x080482e0[0]: number_(32, 6) = 0x00000006[u32]
Symbolic insn@0x080482e0[0]: add(0x080482e0<134513376>[u32], 0x00000006[u32]) = 0x080482e6<134513382>[u32]
Symbolic insn@0x080482e0[0]: writeRegister(eip, 0x080482e6<134513382>[u32])
Symbolic insn@0x080482e0[0]: number_(32, 134518476) = 0x080496cc<134518476>[u32]
Symbolic insn@0x080482e0[0]: undefined_(32) = V1[u32]
Symbolic insn@0x080482e0[0]: boolean_(1) = true[u1]
Symbolic insn@0x080482e0[0]: readMemory(ds, 0x080496cc<134518476>[u32], V1[u32], true[u1]) = V1[u32]
Symbolic insn@0x080482e0[0]: undefined_(32) = V2[u32]
Symbolic insn@0x080482e0[0]: readRegister(esp, V2[u32]) = esp_0[u32]
Symbolic insn@0x080482e0[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x080482e0[0]: add(esp_0[u32], 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x080482e0[0]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x080482e0[0]: boolean_(1) = true[u1]
Symbolic insn@0x080482e0[0]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), V1[u32], true[u1])
Symbolic insn@0x080482e0[0]: finishInstruction(push dword ds:[0x080496cc<.got.plt+4>])
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = 0x080482e6<134513382>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V1[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V1[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V1[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V1[u32])
 addr=0x080496cf<134518479>[u32] read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V1[u32])
 addr=0x080496ce<134518478>[u32] read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V1[u32])
 addr=0x080496cd<134518477>[u32] read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V1[u32])
 addr=0x080496cc<134518476>[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V1[u32])

0x080482e6: jmp dword ds:[0x080496d0<.got.plt+8>]
Symbolic: startInstruction(0x080482e6: jmp dword ds:[0x080496d0<.got.plt+8>])
Symbolic insn@0x080482e6[1]: number_(32, 134513382) = 0x080482e6<134513382>[u32]
Symbolic insn@0x080482e6[1]: number_(32, 6) = 0x00000006[u32]
Symbolic insn@0x080482e6[1]: add(0x080482e6<134513382>[u32], 0x00000006[u32]) = 0x080482ec<134513388>[u32]
Symbolic insn@0x080482e6[1]: writeRegister(eip, 0x080482ec<134513388>[u32])
Symbolic insn@0x080482e6[1]: number_(32, 134518480) = 0x080496d0<134518480>[u32]
Symbolic insn@0x080482e6[1]: undefined_(32) = V3[u32]
Symbolic insn@0x080482e6[1]: boolean_(1) = true[u1]
Symbolic insn@0x080482e6[1]: readMemory(ds, 0x080496d0<134518480>[u32], V3[u32], true[u1]) = V3[u32]
Symbolic insn@0x080482e6[1]: unsignedExtend(V3[u32], 32) = V3[u32]
Symbolic insn@0x080482e6[1]: filterIndirectJumpTarget(V3[u32]) = V3[u32]
Symbolic insn@0x080482e6[1]: writeRegister(eip, V3[u32])
Symbolic insn@0x080482e6[1]: finishInstruction(jmp dword ds:[0x080496d0<.got.plt+8>])
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = V3[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=0x080496d3<134518483>[u32] read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=0x080496d2<134518482>[u32] read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=0x080496d1<134518481>[u32] read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=0x080496d0<134518480>[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V1[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V1[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V1[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V1[u32])
 addr=0x080496cf<134518479>[u32] read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V1[u32])
 addr=0x080496ce<134518478>[u32] read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V1[u32])
 addr=0x080496cd<134518477>[u32] read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V1[u32])
 addr=0x080496cc<134518476>[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V1[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x080482f0: jmp dword ds:[0x080496d4<.got.plt+0x0c>]
Symbolic: startInstruction(0x080482f0: jmp dword ds:[0x080496d4<.got.plt+0x0c>])
Symbolic insn@0x080482f0[0]: number_(32, 134513392) = 0x080482f0<134513392>[u32]
Symbolic insn@0x080482f0[0]: number_(32, 6) = 0x00000006[u32]
Symbolic insn@0x080482f0[0]: add(0x080482f0<134513392>[u32], 0x00000006[u32]) = 0x080482f6<134513398>[u32]
Symbolic insn@0x080482f0[0]: writeRegister(eip, 0x080482f6<134513398>[u32])
Symbolic insn@0x080482f0[0]: number_(32, 134518484) = 0x080496d4<134518484>[u32]
Symbolic insn@0x080482f0[0]: undefined_(32) = V1[u32]
Symbolic insn@0x080482f0[0]: boolean_(1) = true[u1]
Symbolic insn@0x080482f0[0]: readMemory(ds, 0x080496d4<134518484>[u32], V1[u32], true[u1]) = V1[u32]
Symbolic insn@0x080482f0[0]: unsignedExtend(V1[u32], 32) = V1[u32]
Symbolic insn@0x080482f0[0]: filterIndirectJumpTarget(V1[u32]) = V1[u32]
Symbolic insn@0x080482f0[0]: writeRegister(eip, V1[u32])
Symbolic insn@0x080482f0[0]: finishInstruction(jmp dword ds:[0x080496d4<.got.plt+0x0c>])
registers:
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = V1[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=0x080496d7<134518487>[u32] read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V1[u32])
 addr=0x080496d6<134518486>[u32] read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V1[u32])
 addr=0x080496d5<134518485>[u32] read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V1[u32])
 addr=0x080496d4<134518484>[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V1[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x08048300: jmp dword ds:[0x080496d8<.got.plt+0x10>]
Symbolic: startInstruction(0x08048300: jmp dword ds:[0x080496d8<.got.plt+0x10>])
Symbolic insn@0x08048300[0]: number_(32, 134513408) = 0x08048300<134513408>[u32]
Symbolic insn@0x08048300[0]: number_(32, 6) = 0x00000006[u32]
Symbolic insn@0x08048300[0]: add(0x08048300<134513408>[u32], 0x00000006[u32]) = 0x08048306<134513414>[u32]
Symbolic insn@0x08048300[0]: writeRegister(eip, 0x08048306<134513414>[u32])
Symbolic insn@0x08048300[0]: number_(32, 134518488) = 0x080496d8<134518488>[u32]
Symbolic insn@0x08048300[0]: undefined_(32) = V1[u32]
Symbolic insn@0x08048300[0]: boolean_(1) = true[u1]
Symbolic insn@0x08048300[0]: readMemory(ds, 0x080496d8<134518488>[u32], V1[u32], true[u1]) = V1[u32]
Symbolic insn@0x08048300[0]: unsignedExtend(V1[u32], 32) = V1[u32]
Symbolic insn@0x08048300[0]: filterIndirectJumpTarget(V1[u32]) = V1[u32]
Symbolic insn@0x08048300[0]: writeRegister(eip, V1[u32])
Symbolic insn@0x08048300[0]: finishInstruction(jmp dword ds:[0x080496d8<.got.plt+0x10>])
registers:
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = V1[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=0x080496db<134518491>[u32] read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V1[u32])
 addr=0x080496da<134518490>[u32] read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V1[u32])
 addr=0x080496d9<134518489>[u32] read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V1[u32])
 addr=0x080496d8<134518488>[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V1[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x08048310: jmp dword ds:[0x080496dc<.got.plt+0x14>]
Symbolic: startInstruction(0x08048310: jmp dword ds:[0x080496dc<.got.plt+0x14>])
Symbolic insn@0x08048310[0]: number_(32, 134513424) = 0x08048310<134513424>[u32]
Symbolic insn@0x08048310[0]: number_(32, 6) = 0x00000006[u32]
Symbolic insn@0x08048310[0]: add(0x08048310<134513424>[u32], 0x00000006[u32]) = 0x08048316<134513430>[u32]
Symbolic insn@0x08048310[0]: writeRegister(eip, 0x08048316<134513430>[u32])
Symbolic insn@0x08048310[0]: number_(32, 134518492) = 0x080496dc<134518492>[u32]
Symbolic insn@0x08048310[0]: undefined_(32) = V1[u32]
Symbolic insn@0x08048310[0]: boolean_(1) = true[u1]
Symbolic insn@0x08048310[0]: readMemory(ds, 0x080496dc<134518492>[u32], V1[u32], true[u1]) = V1[u32]
Symbolic insn@0x08048310[0]: unsignedExtend(V1[u32], 32) = V1[u32]
Symbolic insn@0x08048310[0]: filterIndirectJumpTarget(V1[u32]) = V1[u32]
Symbolic insn@0x08048310[0]: writeRegister(eip, V1[u32])
Symbolic insn@0x08048310[0]: finishInstruction(jmp dword ds:[0x080496dc<.got.plt+0x14>])
registers:
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = V1[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=0x080496df<134518495>[u32] read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V1[u32])
 addr=0x080496de<134518494>[u32] read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V1[u32])
 addr=0x080496dd<134518493>[u32] read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V1[u32])
 addr=0x080496dc<134518492>[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V1[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x08048320: jmp dword ds:[0x080496e0<.got.plt+0x18>]
Symbolic: startInstruction(0x08048320: jmp dword ds:[0x080496e0<.got.plt+0x18>])
Symbolic insn@0x08048320[0]: number_(32, 134513440) = 0x08048320<134513440>[u32]
Symbolic insn@0x08048320[0]: number_(32, 6) = 0x00000006[u32]
Symbolic insn@0x08048320[0]: add(0x08048320<134513440>[u32], 0x00000006[u32]) = 0x08048326<134513446>[u32]
Symbolic insn@0x08048320[0]: writeRegister(eip, 0x08048326<134513446>[u32])
Symbolic insn@0x08048320[0]: number_(32, 134518496) = 0x080496e0<134518496>[u32]
Symbolic insn@0x08048320[0]: undefined_(32) = V1[u32]
Symbolic insn@0x08048320[0]: boolean_(1) = true[u1]
Symbolic insn@0x08048320[0]: readMemory(ds, 0x080496e0<134518496>[u32], V1[u32], true[u1]) = V1[u32]
Symbolic insn@0x08048320[0]: unsignedExtend(V1[u32], 32) = V1[u32]
Symbolic insn@0x08048320[0]: filterIndirectJumpTarget(V1[u32]) = V1[u32]
Symbolic insn@0x08048320[0]: writeRegister(eip, V1[u32])
Symbolic insn@0x08048320[0]: finishInstruction(jmp dword ds:[0x080496e0<.got.plt+0x18>])
registers:
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = V1[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=0x080496e3<134518499>[u32] read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V1[u32])
 addr=0x080496e2<134518498>[u32] read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V1[u32])
 addr=0x080496e1<134518497>[u32] read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V1[u32])
 addr=0x080496e0<134518496>[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V1[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x08048330: jmp dword ds:[0x080496e4<.got.plt+0x1c>]
Symbolic: startInstruction(0x08048330: jmp dword ds:[0x080496e4<.got.plt+0x1c>])
Symbolic insn@0x08048330[0]: number_(32, 134513456) = 0x08048330<134513456>[u32]
Symbolic insn@0x08048330[0]: number_(32, 6) = 0x00000006[u32]
Symbolic insn@0x08048330[0]: add(0x08048330<134513456>[u32], 0x00000006[u32]) = 0x08048336<134513462>[u32]
Symbolic insn@0x08048330[0]: writeRegister(eip, 0x08048336<134513462>[u32])
Symbolic insn@0x08048330[0]: number_(32, 134518500) = 0x080496e4<134518500>[u32]
Symbolic insn@0x08048330[0]: undefined_(32) = V1[u32]
Symbolic insn@0x08048330[0]: boolean_(1) = true[u1]
Symbolic insn@0x08048330[0]: readMemory(ds, 0x080496e4<134518500>[u32], V1[u32], true[u1]) = V1[u32]
Symbolic insn@0x08048330[0]: unsignedExtend(V1[u32], 32) = V1[u32]
Symbolic insn@0x08048330[0]: filterIndirectJumpTarget(V1[u32]) = V1[u32]
Symbolic insn@0x08048330[0]: writeRegister(eip, V1[u32])
Symbolic insn@0x08048330[0]: finishInstruction(jmp dword ds:[0x080496e4<.got.plt+0x1c>])
registers:
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = V1[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=0x080496e7<134518503>[u32] read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V1[u32])
 addr=0x080496e6<134518502>[u32] read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V1[u32])
 addr=0x080496e5<134518501>[u32] read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V1[u32])
 addr=0x080496e4<134518500>[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V1[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x08048340: xor ebp, ebp
Symbolic: startInstruction(0x08048340: xor ebp, ebp)
Symbolic insn@0x08048340[0]: number_(32, 134513472) = 0x08048340<134513472>[u32]
Symbolic insn@0x08048340[0]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x08048340[0]: add(0x08048340<134513472>[u32], 0x00000002[u32]) = 0x08048342<134513474>[u32]
Symbolic insn@0x08048340[0]: writeRegister(eip, 0x08048342<134513474>[u32])
Symbolic insn@0x08048340[0]: number_(32, 0) = 0x00000000[u32]
Symbolic insn@0x08048340[0]: extract(0x00000000[u32], 0, 8) = 0x00[u8]
Symbolic insn@0x08048340[0]: extract(0x00[u8], 1, 2) = false[u1]
Symbolic insn@0x08048340[0]: extract(0x00[u8], 0, 1) = false[u1]
Symbolic insn@0x08048340[0]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x08048340[0]: extract(0x00[u8], 3, 4) = false[u1]
Symbolic insn@0x08048340[0]: extract(0x00[u8], 2, 3) = false[u1]
Symbolic insn@0x08048340[0]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x08048340[0]: extract(0x00[u8], 5, 6) = false[u1]
Symbolic insn@0x08048340[0]: extract(0x00[u8], 4, 5) = false[u1]
Symbolic insn@0x08048340[0]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x08048340[0]: extract(0x00[u8], 7, 8) = false[u1]
Symbolic insn@0x08048340[0]: extract(0x00[u8], 6, 7) = false[u1]
Symbolic insn@0x08048340[0]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x08048340[0]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x08048340[0]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x08048340[0]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x08048340[0]: invert(false[u1]) = true[u1]
Symbolic insn@0x08048340[0]: writeRegister(pf, true[u1])
Symbolic insn@0x08048340[0]: extract(0x00000000[u32], 31, 32) = false[u1]
Symbolic insn@0x08048340[0]: writeRegister(sf, false[u1])
Symbolic insn@0x08048340[0]: equalToZero(0x00000000[u32]) = true[u1]
Symbolic insn@0x08048340[0]: writeRegister(zf, true[u1])
Symbolic insn@0x08048340[0]: writeRegister(ebp, 0x00000000[u32])
Symbolic insn@0x08048340[0]: boolean_(0) = false[u1]
Symbolic insn@0x08048340[0]: writeRegister(of, false[u1])
Symbolic insn@0x08048340[0]: unspecified_(1) = V1[u1]<unspec>
Symbolic insn@0x08048340[0]: writeRegister(af, V1[u1]<unspec>)
Symbolic insn@0x08048340[0]: boolean_(0) = false[u1]
Symbolic insn@0x08048340[0]: writeRegister(cf, false[u1])
Symbolic insn@0x08048340[0]: finishInstruction(xor ebp, ebp)
registers:
 ebp write-only = 0x00000000[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048342<134513474>[u32]
 cf write-only = false[u1]
 pf write-only = true[u1]
 af write-only = V1[u1]<unspec>
 zf write-only = true[u1]
 sf write-only = false[u1]
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:

0x08048342: pop esi
Symbolic: startInstruction(0x08048342: pop esi)
Symbolic insn@0x08048342[1]: number_(32, 134513474) = 0x08048342<134513474>[u32]
Symbolic insn@0x08048342[1]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048342[1]: add(0x08048342<134513474>[u32], 0x00000001[u32]) = 0x08048343<134513475>[u32]
Symbolic insn@0x08048342[1]: writeRegister(eip, 0x08048343<134513475>[u32])
Symbolic insn@0x08048342[1]: undefined_(32) = V2[u32]
Symbolic insn@0x08048342[1]: readRegister(esp, V2[u32]) = esp_0[u32]
Symbolic insn@0x08048342[1]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x08048342[1]: add(esp_0[u32], 0x00000004[u32]) = (add[u32] esp_0[u32] 0x00000004[u32])
Symbolic insn@0x08048342[1]: writeRegister(esp, (add[u32] esp_0[u32] 0x00000004[u32]))
Symbolic insn@0x08048342[1]: boolean_(1) = true[u1]
Symbolic insn@0x08048342[1]: undefined_(32) = V3[u32]
Symbolic insn@0x08048342[1]: readMemory(ss, esp_0[u32], V3[u32], true[u1]) = V3[u32]
Symbolic insn@0x08048342[1]: writeRegister(esi, V3[u32])
Symbolic insn@0x08048342[1]: finishInstruction(pop esi)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0x00000004[u32])
 ebp write-only = 0x00000000[u32]
 esi write-only = V3[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048343<134513475>[u32]
 cf write-only = false[u1]
 pf write-only = true[u1]
 af write-only = V1[u1]<unspec>
 zf write-only = true[u1]
 sf write-only = false[u1]
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])

0x08048343: mov ecx, esp
Symbolic: startInstruction(0x08048343: mov ecx, esp)
Symbolic insn@0x08048343[2]: number_(32, 134513475) = 0x08048343<134513475>[u32]
Symbolic insn@0x08048343[2]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x08048343[2]: add(0x08048343<134513475>[u32], 0x00000002[u32]) = 0x08048345<134513477>[u32]
Symbolic insn@0x08048343[2]: writeRegister(eip, 0x08048345<134513477>[u32])
Symbolic insn@0x08048343[2]: undefined_(32) = V4[u32]
Symbolic insn@0x08048343[2]: readRegister(esp, V4[u32]) = (add[u32] esp_0[u32] 0x00000004[u32])
Symbolic insn@0x08048343[2]: writeRegister(ecx, (add[u32] esp_0[u32] 0x00000004[u32]))
Symbolic insn@0x08048343[2]: finishInstruction(mov ecx, esp)
registers:
 ecx write-only = (add[u32] esp_0[u32] 0x00000004[u32])
 esp read-before-write = (add[u32] esp_0[u32] 0x00000004[u32])
 ebp write-only = 0x00000000[u32]
 esi write-only = V3[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048345<134513477>[u32]
 cf write-only = false[u1]
 pf write-only = true[u1]
 af write-only = V1[u1]<unspec>
 zf write-only = true[u1]
 sf write-only = false[u1]
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])

0x08048345: and esp, 0xf0<-16>
Symbolic: startInstruction(0x08048345: and esp, 0xf0<-16>)
Symbolic insn@0x08048345[3]: number_(32, 134513477) = 0x08048345<134513477>[u32]
Symbolic insn@0x08048345[3]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x08048345[3]: add(0x08048345<134513477>[u32], 0x00000003[u32]) = 0x08048348<134513480>[u32]
Symbolic insn@0x08048345[3]: writeRegister(eip, 0x08048348<134513480>[u32])
Symbolic insn@0x08048345[3]: undefined_(32) = V5[u32]
Symbolic insn@0x08048345[3]: readRegister(esp, V5[u32]) = (add[u32] esp_0[u32] 0x00000004[u32])
Symbolic insn@0x08048345[3]: number_(8, 18446744073709551600) = 0xf0<-16>[u8]
Symbolic insn@0x08048345[3]: signExtend(0xf0<-16>[u8], 32) = 0xfffffff0<4294967280,-16>[u32]
Symbolic insn@0x08048345[3]: and_((add[u32] esp_0[u32] 0x00000004[u32]), 0xfffffff0<4294967280,-16>[u32]) = (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])
Symbolic insn@0x08048345[3]: extract((and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
Symbolic insn@0x08048345[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
Symbolic insn@0x08048345[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
Symbolic insn@0x08048345[3]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])))
Symbolic insn@0x08048345[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
Symbolic insn@0x08048345[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
Symbolic insn@0x08048345[3]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])))
Symbolic insn@0x08048345[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
Symbolic insn@0x08048345[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
Symbolic insn@0x08048345[3]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])))
Symbolic insn@0x08048345[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
Symbolic insn@0x08048345[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
Symbolic insn@0x08048345[3]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])))
Symbolic insn@0x08048345[3]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])))
Symbolic insn@0x08048345[3]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])))
Symbolic insn@0x08048345[3]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])))
Symbolic insn@0x08048345[3]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))))
Symbolic insn@0x08048345[3]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])))))
Symbolic insn@0x08048345[3]: extract((and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
Symbolic insn@0x08048345[3]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])))
Symbolic insn@0x08048345[3]: equalToZero((and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) = (zerop[u1] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
Symbolic insn@0x08048345[3]: writeRegister(zf, (zerop[u1] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])))
Symbolic insn@0x08048345[3]: writeRegister(esp, (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
Symbolic insn@0x08048345[3]: boolean_(0) = false[u1]
Symbolic insn@0x08048345[3]: writeRegister(of, false[u1])
Symbolic insn@0x08048345[3]: unspecified_(1) = V6[u1]<unspec>
Symbolic insn@0x08048345[3]: writeRegister(af, V6[u1]<unspec>)
Symbolic insn@0x08048345[3]: boolean_(0) = false[u1]
Symbolic insn@0x08048345[3]: writeRegister(cf, false[u1])
Symbolic insn@0x08048345[3]: finishInstruction(and esp, 0xf0<-16>)
registers:
 ecx write-only = (add[u32] esp_0[u32] 0x00000004[u32])
 esp read-before-write = (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])
 ebp write-only = 0x00000000[u32]
 esi write-only = V3[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048348<134513480>[u32]
 cf write-only = false[u1]
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))))
 af write-only = V6[u1]<unspec>
 zf write-only = (zerop[u1] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])

0x08048348: push eax
Symbolic: startInstruction(0x08048348: push eax)
Symbolic insn@0x08048348[4]: number_(32, 134513480) = 0x08048348<134513480>[u32]
Symbolic insn@0x08048348[4]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048348[4]: add(0x08048348<134513480>[u32], 0x00000001[u32]) = 0x08048349<134513481>[u32]
Symbolic insn@0x08048348[4]: writeRegister(eip, 0x08048349<134513481>[u32])
Symbolic insn@0x08048348[4]: undefined_(32) = V7[u32]
Symbolic insn@0x08048348[4]: readRegister(eax, V7[u32]) = eax_0[u32]
Symbolic insn@0x08048348[4]: undefined_(32) = V8[u32]
Symbolic insn@0x08048348[4]: readRegister(esp, V8[u32]) = (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])
Symbolic insn@0x08048348[4]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048348[4]: add((and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048348[4]: writeRegister(esp, (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048348[4]: boolean_(1) = true[u1]
Symbolic insn@0x08048348[4]: writeMemory(ss, (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]), eax_0[u32], true[u1])
Symbolic insn@0x08048348[4]: finishInstruction(push eax)
registers:
 ecx write-only = (add[u32] esp_0[u32] 0x00000004[u32])
 esp read-before-write = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32])
 ebp write-only = 0x00000000[u32]
 esi write-only = V3[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048349<134513481>[u32]
 cf write-only = false[u1]
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))))
 af write-only = V6[u1]<unspec>
 zf write-only = (zerop[u1] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] eax_0[u32])
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])

0x08048349: push esp
Symbolic: startInstruction(0x08048349: push esp)
Symbolic insn@0x08048349[5]: number_(32, 134513481) = 0x08048349<134513481>[u32]
Symbolic insn@0x08048349[5]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048349[5]: add(0x08048349<134513481>[u32], 0x00000001[u32]) = 0x0804834a<134513482>[u32]
Symbolic insn@0x08048349[5]: writeRegister(eip, 0x0804834a<134513482>[u32])
Symbolic insn@0x08048349[5]: undefined_(32) = V9[u32]
Symbolic insn@0x08048349[5]: readRegister(esp, V9[u32]) = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048349[5]: undefined_(32) = V10[u32]
Symbolic insn@0x08048349[5]: readRegister(esp, V10[u32]) = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048349[5]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048349[5]: add((add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff8<4294967288,-8>[u32])
Symbolic insn@0x08048349[5]: writeRegister(esp, (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff8<4294967288,-8>[u32]))
Symbolic insn@0x08048349[5]: boolean_(1) = true[u1]
Symbolic insn@0x08048349[5]: writeMemory(ss, (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff8<4294967288,-8>[u32]), (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]), true[u1])
Symbolic insn@0x08048349[5]: finishInstruction(push esp)
registers:
 ecx write-only = (add[u32] esp_0[u32] 0x00000004[u32])
 esp read-before-write = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff8<4294967288,-8>[u32])
 ebp write-only = 0x00000000[u32]
 esi write-only = V3[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x0804834a<134513482>[u32]
 cf write-only = false[u1]
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))))
 af write-only = V6[u1]<unspec>
 zf write-only = (zerop[u1] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] eax_0[u32])
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])

0x0804834a: push edx
Symbolic: startInstruction(0x0804834a: push edx)
Symbolic insn@0x0804834a[6]: number_(32, 134513482) = 0x0804834a<134513482>[u32]
Symbolic insn@0x0804834a[6]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x0804834a[6]: add(0x0804834a<134513482>[u32], 0x00000001[u32]) = 0x0804834b<134513483>[u32]
Symbolic insn@0x0804834a[6]: writeRegister(eip, 0x0804834b<134513483>[u32])
Symbolic insn@0x0804834a[6]: undefined_(32) = V11[u32]
Symbolic insn@0x0804834a[6]: readRegister(edx, V11[u32]) = edx_0[u32]
Symbolic insn@0x0804834a[6]: undefined_(32) = V12[u32]
Symbolic insn@0x0804834a[6]: readRegister(esp, V12[u32]) = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff8<4294967288,-8>[u32])
Symbolic insn@0x0804834a[6]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x0804834a[6]: add((add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff8<4294967288,-8>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff4<4294967284,-12>[u32])
Symbolic insn@0x0804834a[6]: writeRegister(esp, (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x0804834a[6]: boolean_(1) = true[u1]
Symbolic insn@0x0804834a[6]: writeMemory(ss, (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff4<4294967284,-12>[u32]), edx_0[u32], true[u1])
Symbolic insn@0x0804834a[6]: finishInstruction(push edx)
registers:
 ecx write-only = (add[u32] esp_0[u32] 0x00000004[u32])
 esp read-before-write = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff4<4294967284,-12>[u32])
 ebp write-only = 0x00000000[u32]
 esi write-only = V3[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x0804834b<134513483>[u32]
 cf write-only = false[u1]
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))))
 af write-only = V6[u1]<unspec>
 zf write-only = (zerop[u1] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff7<4294967287,-9>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff6<4294967286,-10>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff5<4294967285,-11>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff4<4294967284,-12>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] eax_0[u32])
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])

0x0804834b: push 0x08048520<(func)__libc_csu_fini>
Symbolic: startInstruction(0x0804834b: push 0x08048520<(func)__libc_csu_fini>)
Symbolic insn@0x0804834b[7]: number_(32, 134513483) = 0x0804834b<134513483>[u32]
Symbolic insn@0x0804834b[7]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x0804834b[7]: add(0x0804834b<134513483>[u32], 0x00000005[u32]) = 0x08048350<134513488>[u32]
Symbolic insn@0x0804834b[7]: writeRegister(eip, 0x08048350<134513488>[u32])
Symbolic insn@0x0804834b[7]: number_(32, 134513952) = 0x08048520<134513952>[u32]
Symbolic insn@0x0804834b[7]: undefined_(32) = V13[u32]
Symbolic insn@0x0804834b[7]: readRegister(esp, V13[u32]) = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff4<4294967284,-12>[u32])
Symbolic insn@0x0804834b[7]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x0804834b[7]: add((add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff4<4294967284,-12>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff0<4294967280,-16>[u32])
Symbolic insn@0x0804834b[7]: writeRegister(esp, (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff0<4294967280,-16>[u32]))
Symbolic insn@0x0804834b[7]: boolean_(1) = true[u1]
Symbolic insn@0x0804834b[7]: writeMemory(ss, (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff0<4294967280,-16>[u32]), 0x08048520<134513952>[u32], true[u1])
Symbolic insn@0x0804834b[7]: finishInstruction(push 0x08048520<(func)__libc_csu_fini>)
registers:
 ecx write-only = (add[u32] esp_0[u32] 0x00000004[u32])
 esp read-before-write = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff0<4294967280,-16>[u32])
 ebp write-only = 0x00000000[u32]
 esi write-only = V3[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048350<134513488>[u32]
 cf write-only = false[u1]
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))))
 af write-only = V6[u1]<unspec>
 zf write-only = (zerop[u1] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff3<4294967283,-13>[u32]) write-only value=0x08[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff2<4294967282,-14>[u32]) write-only value=0x04[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff1<4294967281,-15>[u32]) write-only value=0x85<-123>[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff0<4294967280,-16>[u32]) write-only value=0x20[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff7<4294967287,-9>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff6<4294967286,-10>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff5<4294967285,-11>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff4<4294967284,-12>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] eax_0[u32])
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])

0x08048350: push 0x080484b0<(func)__libc_csu_init>
Symbolic: startInstruction(0x08048350: push 0x080484b0<(func)__libc_csu_init>)
Symbolic insn@0x08048350[8]: number_(32, 134513488) = 0x08048350<134513488>[u32]
Symbolic insn@0x08048350[8]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x08048350[8]: add(0x08048350<134513488>[u32], 0x00000005[u32]) = 0x08048355<134513493>[u32]
Symbolic insn@0x08048350[8]: writeRegister(eip, 0x08048355<134513493>[u32])
Symbolic insn@0x08048350[8]: number_(32, 134513840) = 0x080484b0<134513840>[u32]
Symbolic insn@0x08048350[8]: undefined_(32) = V14[u32]
Symbolic insn@0x08048350[8]: readRegister(esp, V14[u32]) = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff0<4294967280,-16>[u32])
Symbolic insn@0x08048350[8]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048350[8]: add((add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff0<4294967280,-16>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffec<4294967276,-20>[u32])
Symbolic insn@0x08048350[8]: writeRegister(esp, (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffec<4294967276,-20>[u32]))
Symbolic insn@0x08048350[8]: boolean_(1) = true[u1]
Symbolic insn@0x08048350[8]: writeMemory(ss, (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffec<4294967276,-20>[u32]), 0x080484b0<134513840>[u32], true[u1])
Symbolic insn@0x08048350[8]: finishInstruction(push 0x080484b0<(func)__libc_csu_init>)
registers:
 ecx write-only = (add[u32] esp_0[u32] 0x00000004[u32])
 esp read-before-write = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffec<4294967276,-20>[u32])
 ebp write-only = 0x00000000[u32]
 esi write-only = V3[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048355<134513493>[u32]
 cf write-only = false[u1]
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))))
 af write-only = V6[u1]<unspec>
 zf write-only = (zerop[u1] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffef<4294967279,-17>[u32]) write-only value=0x08[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffee<4294967278,-18>[u32]) write-only value=0x04[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffed<4294967277,-19>[u32]) write-only value=0x84<-124>[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffec<4294967276,-20>[u32]) write-only value=0xb0<-80>[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff3<4294967283,-13>[u32]) write-only value=0x08[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff2<4294967282,-14>[u32]) write-only value=0x04[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff1<4294967281,-15>[u32]) write-only value=0x85<-123>[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff0<4294967280,-16>[u32]) write-only value=0x20[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff7<4294967287,-9>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff6<4294967286,-10>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff5<4294967285,-11>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff4<4294967284,-12>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] eax_0[u32])
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])

0x08048355: push ecx
Symbolic: startInstruction(0x08048355: push ecx)
Symbolic insn@0x08048355[9]: number_(32, 134513493) = 0x08048355<134513493>[u32]
Symbolic insn@0x08048355[9]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048355[9]: add(0x08048355<134513493>[u32], 0x00000001[u32]) = 0x08048356<134513494>[u32]
Symbolic insn@0x08048355[9]: writeRegister(eip, 0x08048356<134513494>[u32])
Symbolic insn@0x08048355[9]: undefined_(32) = V15[u32]
Symbolic insn@0x08048355[9]: readRegister(ecx, V15[u32]) = (add[u32] esp_0[u32] 0x00000004[u32])
Symbolic insn@0x08048355[9]: undefined_(32) = V16[u32]
Symbolic insn@0x08048355[9]: readRegister(esp, V16[u32]) = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffec<4294967276,-20>[u32])
Symbolic insn@0x08048355[9]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048355[9]: add((add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffec<4294967276,-20>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe8<4294967272,-24>[u32])
Symbolic insn@0x08048355[9]: writeRegister(esp, (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe8<4294967272,-24>[u32]))
Symbolic insn@0x08048355[9]: boolean_(1) = true[u1]
Symbolic insn@0x08048355[9]: writeMemory(ss, (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe8<4294967272,-24>[u32]), (add[u32] esp_0[u32] 0x00000004[u32]), true[u1])
Symbolic insn@0x08048355[9]: finishInstruction(push ecx)
registers:
 ecx = (add[u32] esp_0[u32] 0x00000004[u32])
 esp read-before-write = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe8<4294967272,-24>[u32])
 ebp write-only = 0x00000000[u32]
 esi write-only = V3[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048356<134513494>[u32]
 cf write-only = false[u1]
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))))
 af write-only = V6[u1]<unspec>
 zf write-only = (zerop[u1] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffeb<4294967275,-21>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x00000004[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffea<4294967274,-22>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] (add[u32] esp_0[u32] 0x00000004[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe9<4294967273,-23>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] (add[u32] esp_0[u32] 0x00000004[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe8<4294967272,-24>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x00000004[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffef<4294967279,-17>[u32]) write-only value=0x08[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffee<4294967278,-18>[u32]) write-only value=0x04[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffed<4294967277,-19>[u32]) write-only value=0x84<-124>[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffec<4294967276,-20>[u32]) write-only value=0xb0<-80>[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff3<4294967283,-13>[u32]) write-only value=0x08[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff2<4294967282,-14>[u32]) write-only value=0x04[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff1<4294967281,-15>[u32]) write-only value=0x85<-123>[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff0<4294967280,-16>[u32]) write-only value=0x20[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff7<4294967287,-9>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff6<4294967286,-10>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff5<4294967285,-11>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff4<4294967284,-12>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] eax_0[u32])
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])

0x08048356: push esi
Symbolic: startInstruction(0x08048356: push esi)
Symbolic insn@0x08048356[10]: number_(32, 134513494) = 0x08048356<134513494>[u32]
Symbolic insn@0x08048356[10]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048356[10]: add(0x08048356<134513494>[u32], 0x00000001[u32]) = 0x08048357<134513495>[u32]
Symbolic insn@0x08048356[10]: writeRegister(eip, 0x08048357<134513495>[u32])
Symbolic insn@0x08048356[10]: undefined_(32) = V17[u32]
Symbolic insn@0x08048356[10]: readRegister(esi, V17[u32]) = V3[u32]
Symbolic insn@0x08048356[10]: undefined_(32) = V18[u32]
Symbolic insn@0x08048356[10]: readRegister(esp, V18[u32]) = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe8<4294967272,-24>[u32])
Symbolic insn@0x08048356[10]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048356[10]: add((add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe8<4294967272,-24>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe4<4294967268,-28>[u32])
Symbolic insn@0x08048356[10]: writeRegister(esp, (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe4<4294967268,-28>[u32]))
Symbolic insn@0x08048356[10]: boolean_(1) = true[u1]
Symbolic insn@0x08048356[10]: writeMemory(ss, (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe4<4294967268,-28>[u32]), V3[u32], true[u1])
Symbolic insn@0x08048356[10]: finishInstruction(push esi)
registers:
 ecx = (add[u32] esp_0[u32] 0x00000004[u32])
 esp read-before-write = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe4<4294967268,-28>[u32])
 ebp write-only = 0x00000000[u32]
 esi = V3[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048357<134513495>[u32]
 cf write-only = false[u1]
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))))
 af write-only = V6[u1]<unspec>
 zf write-only = (zerop[u1] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe7<4294967271,-25>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe6<4294967270,-26>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe5<4294967269,-27>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe4<4294967268,-28>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffeb<4294967275,-21>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x00000004[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffea<4294967274,-22>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] (add[u32] esp_0[u32] 0x00000004[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe9<4294967273,-23>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] (add[u32] esp_0[u32] 0x00000004[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe8<4294967272,-24>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x00000004[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffef<4294967279,-17>[u32]) write-only value=0x08[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffee<4294967278,-18>[u32]) write-only value=0x04[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffed<4294967277,-19>[u32]) write-only value=0x84<-124>[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffec<4294967276,-20>[u32]) write-only value=0xb0<-80>[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff3<4294967283,-13>[u32]) write-only value=0x08[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff2<4294967282,-14>[u32]) write-only value=0x04[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff1<4294967281,-15>[u32]) write-only value=0x85<-123>[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff0<4294967280,-16>[u32]) write-only value=0x20[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff7<4294967287,-9>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff6<4294967286,-10>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff5<4294967285,-11>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff4<4294967284,-12>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] eax_0[u32])
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])

0x08048357: push 0x08048410<(func)main>
Symbolic: startInstruction(0x08048357: push 0x08048410<(func)main>)
Symbolic insn@0x08048357[11]: number_(32, 134513495) = 0x08048357<134513495>[u32]
Symbolic insn@0x08048357[11]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x08048357[11]: add(0x08048357<134513495>[u32], 0x00000005[u32]) = 0x0804835c<134513500>[u32]
Symbolic insn@0x08048357[11]: writeRegister(eip, 0x0804835c<134513500>[u32])
Symbolic insn@0x08048357[11]: number_(32, 134513680) = 0x08048410<134513680>[u32]
Symbolic insn@0x08048357[11]: undefined_(32) = V19[u32]
Symbolic insn@0x08048357[11]: readRegister(esp, V19[u32]) = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe4<4294967268,-28>[u32])
Symbolic insn@0x08048357[11]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048357[11]: add((add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe4<4294967268,-28>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe0<4294967264,-32>[u32])
Symbolic insn@0x08048357[11]: writeRegister(esp, (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe0<4294967264,-32>[u32]))
Symbolic insn@0x08048357[11]: boolean_(1) = true[u1]
Symbolic insn@0x08048357[11]: writeMemory(ss, (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe0<4294967264,-32>[u32]), 0x08048410<134513680>[u32], true[u1])
Symbolic insn@0x08048357[11]: finishInstruction(push 0x08048410<(func)main>)
registers:
 ecx = (add[u32] esp_0[u32] 0x00000004[u32])
 esp read-before-write = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe0<4294967264,-32>[u32])
 ebp write-only = 0x00000000[u32]
 esi = V3[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x0804835c<134513500>[u32]
 cf write-only = false[u1]
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))))
 af write-only = V6[u1]<unspec>
 zf write-only = (zerop[u1] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe3<4294967267,-29>[u32]) write-only value=0x08[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe2<4294967266,-30>[u32]) write-only value=0x04[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe1<4294967265,-31>[u32]) write-only value=0x84<-124>[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe0<4294967264,-32>[u32]) write-only value=0x10[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe7<4294967271,-25>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe6<4294967270,-26>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe5<4294967269,-27>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe4<4294967268,-28>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffeb<4294967275,-21>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x00000004[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffea<4294967274,-22>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] (add[u32] esp_0[u32] 0x00000004[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe9<4294967273,-23>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] (add[u32] esp_0[u32] 0x00000004[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe8<4294967272,-24>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x00000004[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffef<4294967279,-17>[u32]) write-only value=0x08[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffee<4294967278,-18>[u32]) write-only value=0x04[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffed<4294967277,-19>[u32]) write-only value=0x84<-124>[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffec<4294967276,-20>[u32]) write-only value=0xb0<-80>[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff3<4294967283,-13>[u32]) write-only value=0x08[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff2<4294967282,-14>[u32]) write-only value=0x04[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff1<4294967281,-15>[u32]) write-only value=0x85<-123>[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff0<4294967280,-16>[u32]) write-only value=0x20[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff7<4294967287,-9>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff6<4294967286,-10>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff5<4294967285,-11>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff4<4294967284,-12>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] eax_0[u32])
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])

0x0804835c: call 0x08048310<__libc_start_main@plt>
Symbolic: startInstruction(0x0804835c: call 0x08048310<__libc_start_main@plt>)
Symbolic insn@0x0804835c[12]: number_(32, 134513500) = 0x0804835c<134513500>[u32]
Symbolic insn@0x0804835c[12]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x0804835c[12]: add(0x0804835c<134513500>[u32], 0x00000005[u32]) = 0x08048361<134513505>[u32]
Symbolic insn@0x0804835c[12]: writeRegister(eip, 0x08048361<134513505>[u32])
Symbolic insn@0x0804835c[12]: number_(32, 134513424) = 0x08048310<134513424>[u32]
Symbolic insn@0x0804835c[12]: unsignedExtend(0x08048310<134513424>[u32], 32) = 0x08048310<134513424>[u32]
Symbolic insn@0x0804835c[12]: undefined_(32) = V20[u32]
Symbolic insn@0x0804835c[12]: readRegister(esp, V20[u32]) = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe0<4294967264,-32>[u32])
Symbolic insn@0x0804835c[12]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x0804835c[12]: add((add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe0<4294967264,-32>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffdc<4294967260,-36>[u32])
Symbolic insn@0x0804835c[12]: boolean_(1) = true[u1]
Symbolic insn@0x0804835c[12]: undefined_(32) = V21[u32]
Symbolic insn@0x0804835c[12]: readRegister(eip, V21[u32]) = 0x08048361<134513505>[u32]
Symbolic insn@0x0804835c[12]: writeMemory(ss, (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffdc<4294967260,-36>[u32]), 0x08048361<134513505>[u32], true[u1])
Symbolic insn@0x0804835c[12]: writeRegister(esp, (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffdc<4294967260,-36>[u32]))
Symbolic insn@0x0804835c[12]: filterCallTarget(0x08048310<134513424>[u32]) = 0x08048310<134513424>[u32]
Symbolic insn@0x0804835c[12]: writeRegister(eip, 0x08048310<134513424>[u32])
Symbolic insn@0x0804835c[12]: finishInstruction(call 0x08048310<__libc_start_main@plt>)
registers:
 ecx = (add[u32] esp_0[u32] 0x00000004[u32])
 esp read-before-write = (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffdc<4294967260,-36>[u32])
 ebp write-only = 0x00000000[u32]
 esi = V3[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip = 0x08048310<134513424>[u32]
 cf write-only = false[u1]
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))))
 af write-only = V6[u1]<unspec>
 zf write-only = (zerop[u1] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]))
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffdf<4294967263,-33>[u32]) write-only value=0x08[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffde<4294967262,-34>[u32]) write-only value=0x04[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffdd<4294967261,-35>[u32]) write-only value=0x83<-125>[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffdc<4294967260,-36>[u32]) write-only value=0x61[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe3<4294967267,-29>[u32]) write-only value=0x08[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe2<4294967266,-30>[u32]) write-only value=0x04[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe1<4294967265,-31>[u32]) write-only value=0x84<-124>[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe0<4294967264,-32>[u32]) write-only value=0x10[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe7<4294967271,-25>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe6<4294967270,-26>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe5<4294967269,-27>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe4<4294967268,-28>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffeb<4294967275,-21>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x00000004[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffea<4294967274,-22>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] (add[u32] esp_0[u32] 0x00000004[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe9<4294967273,-23>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] (add[u32] esp_0[u32] 0x00000004[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffe8<4294967272,-24>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x00000004[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffef<4294967279,-17>[u32]) write-only value=0x08[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffee<4294967278,-18>[u32]) write-only value=0x04[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffed<4294967277,-19>[u32]) write-only value=0x84<-124>[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffec<4294967276,-20>[u32]) write-only value=0xb0<-80>[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff3<4294967283,-13>[u32]) write-only value=0x08[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff2<4294967282,-14>[u32]) write-only value=0x04[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff1<4294967281,-15>[u32]) write-only value=0x85<-123>[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff0<4294967280,-16>[u32]) write-only value=0x20[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff7<4294967287,-9>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff6<4294967286,-10>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff5<4294967285,-11>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff4<4294967284,-12>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] edx_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] eax_0[u32])
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0x00000004[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] eax_0[u32])
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x08048361: hlt 
Symbolic: startInstruction(0x08048361: hlt)
Symbolic insn@0x08048361[0]: number_(32, 134513505) = 0x08048361<134513505>[u32]
Symbolic insn@0x08048361[0]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048361[0]: add(0x08048361<134513505>[u32], 0x00000001[u32]) = 0x08048362<134513506>[u32]
Symbolic insn@0x08048361[0]: writeRegister(eip, 0x08048362<134513506>[u32])
Symbolic insn@0x08048361[0]: hlt()
Symbolic insn@0x08048361[0]: number_(32, 134513505) = 0x08048361<134513505>[u32]
Symbolic insn@0x08048361[0]: writeRegister(eip, 0x08048361<134513505>[u32])
Symbolic insn@0x08048361[0]: finishInstruction(hlt)
registers:
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048361<134513505>[u32]
 fpstatus_top = 0x0[u3]
memory:
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x08048364: push ebp
Symbolic: startInstruction(0x08048364: push ebp)
Symbolic insn@0x08048364[0]: number_(32, 134513508) = 0x08048364<134513508>[u32]
Symbolic insn@0x08048364[0]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048364[0]: add(0x08048364<134513508>[u32], 0x00000001[u32]) = 0x08048365<134513509>[u32]
Symbolic insn@0x08048364[0]: writeRegister(eip, 0x08048365<134513509>[u32])
Symbolic insn@0x08048364[0]: undefined_(32) = V1[u32]
Symbolic insn@0x08048364[0]: readRegister(ebp, V1[u32]) = ebp_0[u32]
Symbolic insn@0x08048364[0]: undefined_(32) = V2[u32]
Symbolic insn@0x08048364[0]: readRegister(esp, V2[u32]) = esp_0[u32]
Symbolic insn@0x08048364[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048364[0]: add(esp_0[u32], 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048364[0]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048364[0]: boolean_(1) = true[u1]
Symbolic insn@0x08048364[0]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), ebp_0[u32], true[u1])
Symbolic insn@0x08048364[0]: finishInstruction(push ebp)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048365<134513509>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048365: mov ebp, esp
Symbolic: startInstruction(0x08048365: mov ebp, esp)
Symbolic insn@0x08048365[1]: number_(32, 134513509) = 0x08048365<134513509>[u32]
Symbolic insn@0x08048365[1]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x08048365[1]: add(0x08048365<134513509>[u32], 0x00000002[u32]) = 0x08048367<134513511>[u32]
Symbolic insn@0x08048365[1]: writeRegister(eip, 0x08048367<134513511>[u32])
Symbolic insn@0x08048365[1]: undefined_(32) = V3[u32]
Symbolic insn@0x08048365[1]: readRegister(esp, V3[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048365[1]: writeRegister(ebp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048365[1]: finishInstruction(mov ebp, esp)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048367<134513511>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048367: push ebx
Symbolic: startInstruction(0x08048367: push ebx)
Symbolic insn@0x08048367[2]: number_(32, 134513511) = 0x08048367<134513511>[u32]
Symbolic insn@0x08048367[2]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048367[2]: add(0x08048367<134513511>[u32], 0x00000001[u32]) = 0x08048368<134513512>[u32]
Symbolic insn@0x08048367[2]: writeRegister(eip, 0x08048368<134513512>[u32])
Symbolic insn@0x08048367[2]: undefined_(32) = V4[u32]
Symbolic insn@0x08048367[2]: readRegister(ebx, V4[u32]) = ebx_0[u32]
Symbolic insn@0x08048367[2]: undefined_(32) = V5[u32]
Symbolic insn@0x08048367[2]: readRegister(esp, V5[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048367[2]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048367[2]: add((add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])
Symbolic insn@0x08048367[2]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]))
Symbolic insn@0x08048367[2]: boolean_(1) = true[u1]
Symbolic insn@0x08048367[2]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]), ebx_0[u32], true[u1])
Symbolic insn@0x08048367[2]: finishInstruction(push ebx)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048368<134513512>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048368: push ecx
Symbolic: startInstruction(0x08048368: push ecx)
Symbolic insn@0x08048368[3]: number_(32, 134513512) = 0x08048368<134513512>[u32]
Symbolic insn@0x08048368[3]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048368[3]: add(0x08048368<134513512>[u32], 0x00000001[u32]) = 0x08048369<134513513>[u32]
Symbolic insn@0x08048368[3]: writeRegister(eip, 0x08048369<134513513>[u32])
Symbolic insn@0x08048368[3]: undefined_(32) = V6[u32]
Symbolic insn@0x08048368[3]: readRegister(ecx, V6[u32]) = ecx_0[u32]
Symbolic insn@0x08048368[3]: undefined_(32) = V7[u32]
Symbolic insn@0x08048368[3]: readRegister(esp, V7[u32]) = (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])
Symbolic insn@0x08048368[3]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048368[3]: add((add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
Symbolic insn@0x08048368[3]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048368[3]: boolean_(1) = true[u1]
Symbolic insn@0x08048368[3]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), ecx_0[u32], true[u1])
Symbolic insn@0x08048368[3]: finishInstruction(push ecx)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048369<134513513>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xfffffff7<4294967287,-9>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ecx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff6<4294967286,-10>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ecx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff5<4294967285,-11>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ecx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ecx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048369: call 0x0804836e<<Insn>>
Symbolic: startInstruction(0x08048369: call 0x0804836e<<Insn>>)
Symbolic insn@0x08048369[4]: number_(32, 134513513) = 0x08048369<134513513>[u32]
Symbolic insn@0x08048369[4]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x08048369[4]: add(0x08048369<134513513>[u32], 0x00000005[u32]) = 0x0804836e<134513518>[u32]
Symbolic insn@0x08048369[4]: writeRegister(eip, 0x0804836e<134513518>[u32])
Symbolic insn@0x08048369[4]: number_(32, 134513518) = 0x0804836e<134513518>[u32]
Symbolic insn@0x08048369[4]: unsignedExtend(0x0804836e<134513518>[u32], 32) = 0x0804836e<134513518>[u32]
Symbolic insn@0x08048369[4]: undefined_(32) = V8[u32]
Symbolic insn@0x08048369[4]: readRegister(esp, V8[u32]) = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
Symbolic insn@0x08048369[4]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048369[4]: add((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])
Symbolic insn@0x08048369[4]: boolean_(1) = true[u1]
Symbolic insn@0x08048369[4]: undefined_(32) = V9[u32]
Symbolic insn@0x08048369[4]: readRegister(eip, V9[u32]) = 0x0804836e<134513518>[u32]
Symbolic insn@0x08048369[4]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]), 0x0804836e<134513518>[u32], true[u1])
Symbolic insn@0x08048369[4]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]))
Symbolic insn@0x08048369[4]: filterCallTarget(0x0804836e<134513518>[u32]) = 0x0804836e<134513518>[u32]
Symbolic insn@0x08048369[4]: writeRegister(eip, 0x0804836e<134513518>[u32])
Symbolic insn@0x08048369[4]: finishInstruction(call 0x0804836e<<Insn>>)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip = 0x0804836e<134513518>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xfffffff3<4294967283,-13>[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff2<4294967282,-14>[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff1<4294967281,-15>[u32]) write-only value=0x83<-125>[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]) write-only value=0x6e[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff7<4294967287,-9>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ecx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff6<4294967286,-10>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ecx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff5<4294967285,-11>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ecx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ecx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x0804836e: pop ebx
Symbolic: startInstruction(0x0804836e: pop ebx)
Symbolic insn@0x0804836e[0]: number_(32, 134513518) = 0x0804836e<134513518>[u32]
Symbolic insn@0x0804836e[0]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x0804836e[0]: add(0x0804836e<134513518>[u32], 0x00000001[u32]) = 0x0804836f<134513519>[u32]
Symbolic insn@0x0804836e[0]: writeRegister(eip, 0x0804836f<134513519>[u32])
Symbolic insn@0x0804836e[0]: undefined_(32) = V1[u32]
Symbolic insn@0x0804836e[0]: readRegister(esp, V1[u32]) = esp_0[u32]
Symbolic insn@0x0804836e[0]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x0804836e[0]: add(esp_0[u32], 0x00000004[u32]) = (add[u32] esp_0[u32] 0x00000004[u32])
Symbolic insn@0x0804836e[0]: writeRegister(esp, (add[u32] esp_0[u32] 0x00000004[u32]))
Symbolic insn@0x0804836e[0]: boolean_(1) = true[u1]
Symbolic insn@0x0804836e[0]: undefined_(32) = V2[u32]
Symbolic insn@0x0804836e[0]: readMemory(ss, esp_0[u32], V2[u32], true[u1]) = V2[u32]
Symbolic insn@0x0804836e[0]: writeRegister(ebx, V2[u32])
Symbolic insn@0x0804836e[0]: finishInstruction(pop ebx)
registers:
 ebx write-only = V2[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x00000004[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x0804836f<134513519>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x0804836f: add ebx, 0x0000135a<4954>
Symbolic: startInstruction(0x0804836f: add ebx, 0x0000135a<4954>)
Symbolic insn@0x0804836f[1]: number_(32, 134513519) = 0x0804836f<134513519>[u32]
Symbolic insn@0x0804836f[1]: number_(32, 6) = 0x00000006[u32]
Symbolic insn@0x0804836f[1]: add(0x0804836f<134513519>[u32], 0x00000006[u32]) = 0x08048375<134513525>[u32]
Symbolic insn@0x0804836f[1]: writeRegister(eip, 0x08048375<134513525>[u32])
Symbolic insn@0x0804836f[1]: boolean_(0) = false[u1]
Symbolic insn@0x0804836f[1]: number_(32, 4954) = 0x0000135a<4954>[u32]
Symbolic insn@0x0804836f[1]: undefined_(32) = V3[u32]
Symbolic insn@0x0804836f[1]: readRegister(ebx, V3[u32]) = V2[u32]
Symbolic insn@0x0804836f[1]: addWithCarries(V2[u32], 0x0000135a<4954>[u32], false[u1]) = (add[u32] V2[u32] 0x0000135a<4954>[u32])
Symbolic insn@0x0804836f[1]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]))
Symbolic insn@0x0804836f[1]: extract((add[u32] V2[u32] 0x0000135a<4954>[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32]))
Symbolic insn@0x0804836f[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32]))
Symbolic insn@0x0804836f[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32]))
Symbolic insn@0x0804836f[1]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])))
Symbolic insn@0x0804836f[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32]))
Symbolic insn@0x0804836f[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32]))
Symbolic insn@0x0804836f[1]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])))
Symbolic insn@0x0804836f[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32]))
Symbolic insn@0x0804836f[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32]))
Symbolic insn@0x0804836f[1]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])))
Symbolic insn@0x0804836f[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32]))
Symbolic insn@0x0804836f[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32]))
Symbolic insn@0x0804836f[1]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])))
Symbolic insn@0x0804836f[1]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])))
Symbolic insn@0x0804836f[1]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])))
Symbolic insn@0x0804836f[1]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])))
Symbolic insn@0x0804836f[1]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32]))))
Symbolic insn@0x0804836f[1]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])))))
Symbolic insn@0x0804836f[1]: extract((add[u32] V2[u32] 0x0000135a<4954>[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32]))
Symbolic insn@0x0804836f[1]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])))
Symbolic insn@0x0804836f[1]: equalToZero((add[u32] V2[u32] 0x0000135a<4954>[u32])) = (zerop[u1] (add[u32] V2[u32] 0x0000135a<4954>[u32]))
Symbolic insn@0x0804836f[1]: writeRegister(zf, (zerop[u1] (add[u32] V2[u32] 0x0000135a<4954>[u32])))
Symbolic insn@0x0804836f[1]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33])), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]))
Symbolic insn@0x0804836f[1]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33])), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]))
Symbolic insn@0x0804836f[1]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33])), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]))
Symbolic insn@0x0804836f[1]: writeRegister(af, (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33])))
Symbolic insn@0x0804836f[1]: writeRegister(cf, (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33])))
Symbolic insn@0x0804836f[1]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33])), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33])))
Symbolic insn@0x0804836f[1]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]))))
Symbolic insn@0x0804836f[1]: writeRegister(ebx, (add[u32] V2[u32] 0x0000135a<4954>[u32]))
Symbolic insn@0x0804836f[1]: finishInstruction(add ebx, 0x0000135a<4954>)
registers:
 ebx = (add[u32] V2[u32] 0x0000135a<4954>[u32])
 esp read-before-write = (add[u32] esp_0[u32] 0x00000004[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048375<134513525>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]))
 zf write-only = (zerop[u1] (add[u32] V2[u32] 0x0000135a<4954>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x08048375: mov edx, dword ds:[ebx + 0xfffffffc<-4>]
Symbolic: startInstruction(0x08048375: mov edx, dword ds:[ebx + 0xfffffffc<-4>])
Symbolic insn@0x08048375[2]: number_(32, 134513525) = 0x08048375<134513525>[u32]
Symbolic insn@0x08048375[2]: number_(32, 6) = 0x00000006[u32]
Symbolic insn@0x08048375[2]: add(0x08048375<134513525>[u32], 0x00000006[u32]) = 0x0804837b<134513531>[u32]
Symbolic insn@0x08048375[2]: writeRegister(eip, 0x0804837b<134513531>[u32])
Symbolic insn@0x08048375[2]: undefined_(32) = V4[u32]
Symbolic insn@0x08048375[2]: readRegister(ebx, V4[u32]) = (add[u32] V2[u32] 0x0000135a<4954>[u32])
Symbolic insn@0x08048375[2]: number_(32, 4294967292) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048375[2]: add((add[u32] V2[u32] 0x0000135a<4954>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] V2[u32] 0x00001356<4950>[u32])
Symbolic insn@0x08048375[2]: undefined_(32) = V5[u32]
Symbolic insn@0x08048375[2]: boolean_(1) = true[u1]
Symbolic insn@0x08048375[2]: readMemory(ds, (add[u32] V2[u32] 0x00001356<4950>[u32]), V5[u32], true[u1]) = V5[u32]
Symbolic insn@0x08048375[2]: writeRegister(edx, V5[u32])
Symbolic insn@0x08048375[2]: finishInstruction(mov edx, dword ds:[ebx + 0xfffffffc<-4>])
registers:
 edx write-only = V5[u32]
 ebx = (add[u32] V2[u32] 0x0000135a<4954>[u32])
 esp read-before-write = (add[u32] esp_0[u32] 0x00000004[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = 0x0804837b<134513531>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]))
 zf write-only = (zerop[u1] (add[u32] V2[u32] 0x0000135a<4954>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V2[u32] 0x0000135a<4954>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000135a<4954>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] V2[u32] 0x00001359<4953>[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V5[u32])
 addr=(add[u32] V2[u32] 0x00001358<4952>[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V5[u32])
 addr=(add[u32] V2[u32] 0x00001357<4951>[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V5[u32])
 addr=(add[u32] V2[u32] 0x00001356<4950>[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x0804837b: test edx, edx
Symbolic: startInstruction(0x0804837b: test edx, edx)
Symbolic insn@0x0804837b[3]: number_(32, 134513531) = 0x0804837b<134513531>[u32]
Symbolic insn@0x0804837b[3]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x0804837b[3]: add(0x0804837b<134513531>[u32], 0x00000002[u32]) = 0x0804837d<134513533>[u32]
Symbolic insn@0x0804837b[3]: writeRegister(eip, 0x0804837d<134513533>[u32])
Symbolic insn@0x0804837b[3]: undefined_(32) = V6[u32]
Symbolic insn@0x0804837b[3]: readRegister(edx, V6[u32]) = V5[u32]
Symbolic insn@0x0804837b[3]: undefined_(32) = V7[u32]
Symbolic insn@0x0804837b[3]: readRegister(edx, V7[u32]) = V5[u32]
Symbolic insn@0x0804837b[3]: and_(V5[u32], V5[u32]) = V5[u32]
Symbolic insn@0x0804837b[3]: extract(V5[u32], 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
Symbolic insn@0x0804837b[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32]), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u32])
Symbolic insn@0x0804837b[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32]), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u32])
Symbolic insn@0x0804837b[3]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u32]), (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u32])) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u32]))
Symbolic insn@0x0804837b[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32]), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u32])
Symbolic insn@0x0804837b[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32]), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u32])
Symbolic insn@0x0804837b[3]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u32]), (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u32])) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u32]))
Symbolic insn@0x0804837b[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32]), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u32])
Symbolic insn@0x0804837b[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32]), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u32])
Symbolic insn@0x0804837b[3]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u32]), (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u32])) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u32]))
Symbolic insn@0x0804837b[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32]), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u32])
Symbolic insn@0x0804837b[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32]), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u32])
Symbolic insn@0x0804837b[3]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u32]), (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u32])) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u32]))
Symbolic insn@0x0804837b[3]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u32])), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u32]))
Symbolic insn@0x0804837b[3]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u32])), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u32]))
Symbolic insn@0x0804837b[3]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u32])), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u32]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u32]))
Symbolic insn@0x0804837b[3]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u32]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u32]))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u32]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u32])))
Symbolic insn@0x0804837b[3]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u32]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u32]))))
Symbolic insn@0x0804837b[3]: extract(V5[u32], 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] V5[u32])
Symbolic insn@0x0804837b[3]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] V5[u32]))
Symbolic insn@0x0804837b[3]: equalToZero(V5[u32]) = (zerop[u1] V5[u32])
Symbolic insn@0x0804837b[3]: writeRegister(zf, (zerop[u1] V5[u32]))
Symbolic insn@0x0804837b[3]: boolean_(0) = false[u1]
Symbolic insn@0x0804837b[3]: writeRegister(of, false[u1])
Symbolic insn@0x0804837b[3]: unspecified_(1) = V8[u1]<unspec>
Symbolic insn@0x0804837b[3]: writeRegister(af, V8[u1]<unspec>)
Symbolic insn@0x0804837b[3]: boolean_(0) = false[u1]
Symbolic insn@0x0804837b[3]: writeRegister(cf, false[u1])
Symbolic insn@0x0804837b[3]: finishInstruction(test edx, edx)
registers:
 edx = V5[u32]
 ebx = (add[u32] V2[u32] 0x0000135a<4954>[u32])
 esp read-before-write = (add[u32] esp_0[u32] 0x00000004[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = 0x0804837d<134513533>[u32]
 cf write-only = false[u1]
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u32]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u32])))
 af write-only = V8[u1]<unspec>
 zf write-only = (zerop[u1] V5[u32])
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] V5[u32])
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] V2[u32] 0x00001359<4953>[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V5[u32])
 addr=(add[u32] V2[u32] 0x00001358<4952>[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V5[u32])
 addr=(add[u32] V2[u32] 0x00001357<4951>[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V5[u32])
 addr=(add[u32] V2[u32] 0x00001356<4950>[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x0804837d: je 0x08048384<<BBlock>>
Symbolic: startInstruction(0x0804837d: je 0x08048384<<BBlock>>)
Symbolic insn@0x0804837d[4]: number_(32, 134513533) = 0x0804837d<134513533>[u32]
Symbolic insn@0x0804837d[4]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x0804837d[4]: add(0x0804837d<134513533>[u32], 0x00000002[u32]) = 0x0804837f<134513535>[u32]
Symbolic insn@0x0804837d[4]: writeRegister(eip, 0x0804837f<134513535>[u32])
Symbolic insn@0x0804837d[4]: undefined_(1) = V9[u1]
Symbolic insn@0x0804837d[4]: readRegister(zf, V9[u1]) = (zerop[u1] V5[u32])
Symbolic insn@0x0804837d[4]: undefined_(32) = V10[u32]
Symbolic insn@0x0804837d[4]: readRegister(eip, V10[u32]) = 0x0804837f<134513535>[u32]
Symbolic insn@0x0804837d[4]: number_(32, 134513540) = 0x08048384<134513540>[u32]
Symbolic insn@0x0804837d[4]: unsignedExtend(0x08048384<134513540>[u32], 32) = 0x08048384<134513540>[u32]
Symbolic insn@0x0804837d[4]: ite((zerop[u1] V5[u32]), 0x08048384<134513540>[u32], 0x0804837f<134513535>[u32]) = (ite[u32] (zerop[u1] V5[u32]) 0x08048384<134513540>[u32] 0x0804837f<134513535>[u32])
Symbolic insn@0x0804837d[4]: writeRegister(eip, (ite[u32] (zerop[u1] V5[u32]) 0x08048384<134513540>[u32] 0x0804837f<134513535>[u32]))
Symbolic insn@0x0804837d[4]: finishInstruction(je 0x08048384<<BBlock>>)
registers:
 edx = V5[u32]
 ebx = (add[u32] V2[u32] 0x0000135a<4954>[u32])
 esp read-before-write = (add[u32] esp_0[u32] 0x00000004[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip = (ite[u32] (zerop[u1] V5[u32]) 0x08048384<134513540>[u32] 0x0804837f<134513535>[u32])
 cf write-only = false[u1]
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u32]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u32])))
 af write-only = V8[u1]<unspec>
 zf = (zerop[u1] V5[u32])
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] V5[u32])
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] V2[u32] 0x00001359<4953>[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V5[u32])
 addr=(add[u32] V2[u32] 0x00001358<4952>[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V5[u32])
 addr=(add[u32] V2[u32] 0x00001357<4951>[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V5[u32])
 addr=(add[u32] V2[u32] 0x00001356<4950>[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x0804837f: call 0x08048330<__gmon_start__@plt>
Symbolic: startInstruction(0x0804837f: call 0x08048330<__gmon_start__@plt>)
Symbolic insn@0x0804837f[0]: number_(32, 134513535) = 0x0804837f<134513535>[u32]
Symbolic insn@0x0804837f[0]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x0804837f[0]: add(0x0804837f<134513535>[u32], 0x00000005[u32]) = 0x08048384<134513540>[u32]
Symbolic insn@0x0804837f[0]: writeRegister(eip, 0x08048384<134513540>[u32])
Symbolic insn@0x0804837f[0]: number_(32, 134513456) = 0x08048330<134513456>[u32]
Symbolic insn@0x0804837f[0]: unsignedExtend(0x08048330<134513456>[u32], 32) = 0x08048330<134513456>[u32]
Symbolic insn@0x0804837f[0]: undefined_(32) = V1[u32]
Symbolic insn@0x0804837f[0]: readRegister(esp, V1[u32]) = esp_0[u32]
Symbolic insn@0x0804837f[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x0804837f[0]: add(esp_0[u32], 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x0804837f[0]: boolean_(1) = true[u1]
Symbolic insn@0x0804837f[0]: undefined_(32) = V2[u32]
Symbolic insn@0x0804837f[0]: readRegister(eip, V2[u32]) = 0x08048384<134513540>[u32]
Symbolic insn@0x0804837f[0]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), 0x08048384<134513540>[u32], true[u1])
Symbolic insn@0x0804837f[0]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x0804837f[0]: filterCallTarget(0x08048330<134513456>[u32]) = 0x08048330<134513456>[u32]
Symbolic insn@0x0804837f[0]: writeRegister(eip, 0x08048330<134513456>[u32])
Symbolic insn@0x0804837f[0]: finishInstruction(call 0x08048330<__gmon_start__@plt>)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip = 0x08048330<134513456>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=0x83<-125>[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=0x84<-124>[u8]
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x08048384: pop eax
Symbolic: startInstruction(0x08048384: pop eax)
Symbolic insn@0x08048384[0]: number_(32, 134513540) = 0x08048384<134513540>[u32]
Symbolic insn@0x08048384[0]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048384[0]: add(0x08048384<134513540>[u32], 0x00000001[u32]) = 0x08048385<134513541>[u32]
Symbolic insn@0x08048384[0]: writeRegister(eip, 0x08048385<134513541>[u32])
Symbolic insn@0x08048384[0]: undefined_(32) = V1[u32]
Symbolic insn@0x08048384[0]: readRegister(esp, V1[u32]) = esp_0[u32]
Symbolic insn@0x08048384[0]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x08048384[0]: add(esp_0[u32], 0x00000004[u32]) = (add[u32] esp_0[u32] 0x00000004[u32])
Symbolic insn@0x08048384[0]: writeRegister(esp, (add[u32] esp_0[u32] 0x00000004[u32]))
Symbolic insn@0x08048384[0]: boolean_(1) = true[u1]
Symbolic insn@0x08048384[0]: undefined_(32) = V2[u32]
Symbolic insn@0x08048384[0]: readMemory(ss, esp_0[u32], V2[u32], true[u1]) = V2[u32]
Symbolic insn@0x08048384[0]: writeRegister(eax, V2[u32])
Symbolic insn@0x08048384[0]: finishInstruction(pop eax)
registers:
 eax write-only = V2[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x00000004[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048385<134513541>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x08048385: pop ebx
Symbolic: startInstruction(0x08048385: pop ebx)
Symbolic insn@0x08048385[1]: number_(32, 134513541) = 0x08048385<134513541>[u32]
Symbolic insn@0x08048385[1]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048385[1]: add(0x08048385<134513541>[u32], 0x00000001[u32]) = 0x08048386<134513542>[u32]
Symbolic insn@0x08048385[1]: writeRegister(eip, 0x08048386<134513542>[u32])
Symbolic insn@0x08048385[1]: undefined_(32) = V3[u32]
Symbolic insn@0x08048385[1]: readRegister(esp, V3[u32]) = (add[u32] esp_0[u32] 0x00000004[u32])
Symbolic insn@0x08048385[1]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x08048385[1]: add((add[u32] esp_0[u32] 0x00000004[u32]), 0x00000004[u32]) = (add[u32] esp_0[u32] 0x00000008[u32])
Symbolic insn@0x08048385[1]: writeRegister(esp, (add[u32] esp_0[u32] 0x00000008[u32]))
Symbolic insn@0x08048385[1]: boolean_(1) = true[u1]
Symbolic insn@0x08048385[1]: undefined_(32) = V4[u32]
Symbolic insn@0x08048385[1]: readMemory(ss, (add[u32] esp_0[u32] 0x00000004[u32]), V4[u32], true[u1]) = V4[u32]
Symbolic insn@0x08048385[1]: writeRegister(ebx, V4[u32])
Symbolic insn@0x08048385[1]: finishInstruction(pop ebx)
registers:
 eax write-only = V2[u32]
 ebx write-only = V4[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x00000008[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048386<134513542>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000007[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000006[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000005[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000004[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x08048386: leave 
Symbolic: startInstruction(0x08048386: leave)
Symbolic insn@0x08048386[2]: number_(32, 134513542) = 0x08048386<134513542>[u32]
Symbolic insn@0x08048386[2]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048386[2]: add(0x08048386<134513542>[u32], 0x00000001[u32]) = 0x08048387<134513543>[u32]
Symbolic insn@0x08048386[2]: writeRegister(eip, 0x08048387<134513543>[u32])
Symbolic insn@0x08048386[2]: undefined_(32) = V5[u32]
Symbolic insn@0x08048386[2]: readRegister(ebp, V5[u32]) = ebp_0[u32]
Symbolic insn@0x08048386[2]: writeRegister(esp, ebp_0[u32])
Symbolic insn@0x08048386[2]: undefined_(32) = V6[u32]
Symbolic insn@0x08048386[2]: readRegister(esp, V6[u32]) = ebp_0[u32]
Symbolic insn@0x08048386[2]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x08048386[2]: add(ebp_0[u32], 0x00000004[u32]) = (add[u32] ebp_0[u32] 0x00000004[u32])
Symbolic insn@0x08048386[2]: boolean_(1) = true[u1]
Symbolic insn@0x08048386[2]: undefined_(32) = V7[u32]
Symbolic insn@0x08048386[2]: readMemory(ss, ebp_0[u32], V7[u32], true[u1]) = V7[u32]
Symbolic insn@0x08048386[2]: writeRegister(ebp, V7[u32])
Symbolic insn@0x08048386[2]: writeRegister(esp, (add[u32] ebp_0[u32] 0x00000004[u32]))
Symbolic insn@0x08048386[2]: finishInstruction(leave)
registers:
 eax write-only = V2[u32]
 ebx write-only = V4[u32]
 esp read-before-write = (add[u32] ebp_0[u32] 0x00000004[u32])
 ebp read-before-write = V7[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048387<134513543>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V7[u32])
 addr=(add[u32] ebp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V7[u32])
 addr=(add[u32] ebp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V7[u32])
 addr=ebp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000007[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000006[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000005[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000004[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x08048387: ret 
Symbolic: startInstruction(0x08048387: ret)
Symbolic insn@0x08048387[3]: number_(32, 134513543) = 0x08048387<134513543>[u32]
Symbolic insn@0x08048387[3]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048387[3]: add(0x08048387<134513543>[u32], 0x00000001[u32]) = 0x08048388<134513544>[u32]
Symbolic insn@0x08048387[3]: writeRegister(eip, 0x08048388<134513544>[u32])
Symbolic insn@0x08048387[3]: undefined_(32) = V8[u32]
Symbolic insn@0x08048387[3]: readRegister(esp, V8[u32]) = (add[u32] ebp_0[u32] 0x00000004[u32])
Symbolic insn@0x08048387[3]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x08048387[3]: add((add[u32] ebp_0[u32] 0x00000004[u32]), 0x00000004[u32]) = (add[u32] ebp_0[u32] 0x00000008[u32])
Symbolic insn@0x08048387[3]: boolean_(1) = true[u1]
Symbolic insn@0x08048387[3]: undefined_(32) = V9[u32]
Symbolic insn@0x08048387[3]: readMemory(ss, (add[u32] ebp_0[u32] 0x00000004[u32]), V9[u32], true[u1]) = V9[u32]
Symbolic insn@0x08048387[3]: filterReturnTarget(V9[u32]) = V9[u32]
Symbolic insn@0x08048387[3]: writeRegister(eip, V9[u32])
Symbolic insn@0x08048387[3]: writeRegister(esp, (add[u32] ebp_0[u32] 0x00000008[u32]))
Symbolic insn@0x08048387[3]: finishInstruction(ret)
registers:
 eax write-only = V2[u32]
 ebx write-only = V4[u32]
 esp read-before-write = (add[u32] ebp_0[u32] 0x00000008[u32])
 ebp read-before-write = V7[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = V9[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebp_0[u32] 0x00000007[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V9[u32])
 addr=(add[u32] ebp_0[u32] 0x00000006[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V9[u32])
 addr=(add[u32] ebp_0[u32] 0x00000005[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V9[u32])
 addr=(add[u32] ebp_0[u32] 0x00000004[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V9[u32])
 addr=(add[u32] ebp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V7[u32])
 addr=(add[u32] ebp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V7[u32])
 addr=(add[u32] ebp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V7[u32])
 addr=ebp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000007[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000006[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000005[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000004[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x08048390: push ebp
Symbolic: startInstruction(0x08048390: push ebp)
Symbolic insn@0x08048390[0]: number_(32, 134513552) = 0x08048390<134513552>[u32]
Symbolic insn@0x08048390[0]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048390[0]: add(0x08048390<134513552>[u32], 0x00000001[u32]) = 0x08048391<134513553>[u32]
Symbolic insn@0x08048390[0]: writeRegister(eip, 0x08048391<134513553>[u32])
Symbolic insn@0x08048390[0]: undefined_(32) = V1[u32]
Symbolic insn@0x08048390[0]: readRegister(ebp, V1[u32]) = ebp_0[u32]
Symbolic insn@0x08048390[0]: undefined_(32) = V2[u32]
Symbolic insn@0x08048390[0]: readRegister(esp, V2[u32]) = esp_0[u32]
Symbolic insn@0x08048390[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048390[0]: add(esp_0[u32], 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048390[0]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048390[0]: boolean_(1) = true[u1]
Symbolic insn@0x08048390[0]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), ebp_0[u32], true[u1])
Symbolic insn@0x08048390[0]: finishInstruction(push ebp)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048391<134513553>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048391: mov ebp, esp
Symbolic: startInstruction(0x08048391: mov ebp, esp)
Symbolic insn@0x08048391[1]: number_(32, 134513553) = 0x08048391<134513553>[u32]
Symbolic insn@0x08048391[1]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x08048391[1]: add(0x08048391<134513553>[u32], 0x00000002[u32]) = 0x08048393<134513555>[u32]
Symbolic insn@0x08048391[1]: writeRegister(eip, 0x08048393<134513555>[u32])
Symbolic insn@0x08048391[1]: undefined_(32) = V3[u32]
Symbolic insn@0x08048391[1]: readRegister(esp, V3[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048391[1]: writeRegister(ebp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048391[1]: finishInstruction(mov ebp, esp)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048393<134513555>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048393: sub esp, 0x08
Symbolic: startInstruction(0x08048393: sub esp, 0x08)
Symbolic insn@0x08048393[2]: number_(32, 134513555) = 0x08048393<134513555>[u32]
Symbolic insn@0x08048393[2]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x08048393[2]: add(0x08048393<134513555>[u32], 0x00000003[u32]) = 0x08048396<134513558>[u32]
Symbolic insn@0x08048393[2]: writeRegister(eip, 0x08048396<134513558>[u32])
Symbolic insn@0x08048393[2]: undefined_(32) = V4[u32]
Symbolic insn@0x08048393[2]: readRegister(esp, V4[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048393[2]: number_(8, 8) = 0x08[u8]
Symbolic insn@0x08048393[2]: signExtend(0x08[u8], 32) = 0x00000008[u32]
Symbolic insn@0x08048393[2]: boolean_(0) = false[u1]
Symbolic insn@0x08048393[2]: invert(0x00000008[u32]) = 0xfffffff7<4294967287,-9>[u32]
Symbolic insn@0x08048393[2]: invert(false[u1]) = true[u1]
Symbolic insn@0x08048393[2]: addWithCarries((add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), 0xfffffff7<4294967287,-9>[u32], true[u1]) = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
Symbolic insn@0x08048393[2]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x08048393[2]: extract((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048393[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048393[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048393[2]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048393[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048393[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048393[2]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048393[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048393[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048393[2]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048393[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048393[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048393[2]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048393[2]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048393[2]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048393[2]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048393[2]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))))
Symbolic insn@0x08048393[2]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))))
Symbolic insn@0x08048393[2]: extract((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048393[2]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048393[2]: equalToZero((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) = (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048393[2]: writeRegister(zf, (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048393[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x08048393[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x08048393[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x08048393[2]: invert((extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))) = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
Symbolic insn@0x08048393[2]: writeRegister(af, (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))))
Symbolic insn@0x08048393[2]: invert((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))) = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
Symbolic insn@0x08048393[2]: writeRegister(cf, (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))))
Symbolic insn@0x08048393[2]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
Symbolic insn@0x08048393[2]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))))
Symbolic insn@0x08048393[2]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048393[2]: finishInstruction(sub esp, 0x08)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048396<134513558>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048396: cmp byte ds:[0x080496f4<_edata>], 0x00
Symbolic: startInstruction(0x08048396: cmp byte ds:[0x080496f4<_edata>], 0x00)
Symbolic insn@0x08048396[3]: number_(32, 134513558) = 0x08048396<134513558>[u32]
Symbolic insn@0x08048396[3]: number_(32, 7) = 0x00000007[u32]
Symbolic insn@0x08048396[3]: add(0x08048396<134513558>[u32], 0x00000007[u32]) = 0x0804839d<134513565>[u32]
Symbolic insn@0x08048396[3]: writeRegister(eip, 0x0804839d<134513565>[u32])
Symbolic insn@0x08048396[3]: number_(32, 134518516) = 0x080496f4<134518516>[u32]
Symbolic insn@0x08048396[3]: undefined_(8) = V5[u8]
Symbolic insn@0x08048396[3]: boolean_(1) = true[u1]
Symbolic insn@0x08048396[3]: readMemory(ds, 0x080496f4<134518516>[u32], V5[u8], true[u1]) = V5[u8]
Symbolic insn@0x08048396[3]: number_(8, 0) = 0x00[u8]
Symbolic insn@0x08048396[3]: boolean_(0) = false[u1]
Symbolic insn@0x08048396[3]: invert(0x00[u8]) = 0xff<-1>[u8]
Symbolic insn@0x08048396[3]: invert(false[u1]) = true[u1]
Symbolic insn@0x08048396[3]: addWithCarries(V5[u8], 0xff<-1>[u8], true[u1]) = V5[u8]
Symbolic insn@0x08048396[3]: also returns: (extract[u8] 0x00000001[u32] 0x00000009[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9]))
Symbolic insn@0x08048396[3]: extract(V5[u8], 0, 8) = V5[u8]
Symbolic insn@0x08048396[3]: extract(V5[u8], 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u8])
Symbolic insn@0x08048396[3]: extract(V5[u8], 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u8])
Symbolic insn@0x08048396[3]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u8]), (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u8])) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u8]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u8]))
Symbolic insn@0x08048396[3]: extract(V5[u8], 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u8])
Symbolic insn@0x08048396[3]: extract(V5[u8], 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u8])
Symbolic insn@0x08048396[3]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u8]), (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u8])) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u8]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u8]))
Symbolic insn@0x08048396[3]: extract(V5[u8], 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u8])
Symbolic insn@0x08048396[3]: extract(V5[u8], 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u8])
Symbolic insn@0x08048396[3]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u8]), (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u8])) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u8]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u8]))
Symbolic insn@0x08048396[3]: extract(V5[u8], 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u8])
Symbolic insn@0x08048396[3]: extract(V5[u8], 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u8])
Symbolic insn@0x08048396[3]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u8]), (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u8])) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u8]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u8]))
Symbolic insn@0x08048396[3]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u8]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u8])), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u8]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u8]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u8]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u8]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u8]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u8]))
Symbolic insn@0x08048396[3]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u8]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u8])), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u8]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u8]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u8]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u8]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u8]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u8]))
Symbolic insn@0x08048396[3]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u8]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u8]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u8]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u8])), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u8]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u8]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u8]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u8]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u8]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u8]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u8]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u8]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u8]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u8]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u8]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u8]))
Symbolic insn@0x08048396[3]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u8]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u8]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u8]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u8]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u8]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u8]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u8]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u8]))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u8]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u8]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u8]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u8]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u8]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u8]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u8]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u8])))
Symbolic insn@0x08048396[3]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u8]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u8]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u8]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u8]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u8]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u8]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u8]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u8]))))
Symbolic insn@0x08048396[3]: extract(V5[u8], 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u8])
Symbolic insn@0x08048396[3]: writeRegister(sf, (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u8]))
Symbolic insn@0x08048396[3]: equalToZero(V5[u8]) = (zerop[u1] V5[u8])
Symbolic insn@0x08048396[3]: writeRegister(zf, (zerop[u1] V5[u8]))
Symbolic insn@0x08048396[3]: extract((extract[u8] 0x00000001[u32] 0x00000009[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9])), 7, 8) = (extract[u1] 0x00000008[u32] 0x00000009[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9]))
Symbolic insn@0x08048396[3]: extract((extract[u8] 0x00000001[u32] 0x00000009[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9])), 6, 7) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9]))
Symbolic insn@0x08048396[3]: extract((extract[u8] 0x00000001[u32] 0x00000009[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9])), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9]))
Symbolic insn@0x08048396[3]: invert((extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9]))) = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9])))
Symbolic insn@0x08048396[3]: writeRegister(af, (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9]))))
Symbolic insn@0x08048396[3]: invert((extract[u1] 0x00000008[u32] 0x00000009[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9]))) = (invert[u1] (extract[u1] 0x00000008[u32] 0x00000009[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9])))
Symbolic insn@0x08048396[3]: writeRegister(cf, (invert[u1] (extract[u1] 0x00000008[u32] 0x00000009[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9]))))
Symbolic insn@0x08048396[3]: xor_((extract[u1] 0x00000008[u32] 0x00000009[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9]))) = (xor[u1] (extract[u1] 0x00000007[u32] 0x00000008[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9])) (extract[u1] 0x00000008[u32] 0x00000009[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9])))
Symbolic insn@0x08048396[3]: writeRegister(of, (xor[u1] (extract[u1] 0x00000007[u32] 0x00000008[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9])) (extract[u1] 0x00000008[u32] 0x00000009[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9]))))
Symbolic insn@0x08048396[3]: finishInstruction(cmp byte ds:[0x080496f4<_edata>], 0x00)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = 0x0804839d<134513565>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000008[u32] 0x00000009[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u8]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u8]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u8]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u8]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u8]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u8]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u8]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u8])))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9])))
 zf write-only = (zerop[u1] V5[u8])
 sf write-only = (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u8])
 of write-only = (xor[u1] (extract[u1] 0x00000007[u32] 0x00000008[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9])) (extract[u1] 0x00000008[u32] 0x00000009[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9])))
 fpstatus_top = 0x0[u3]
memory:
 addr=0x080496f4<134518516>[u32] read-before-write value=V5[u8]
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x0804839d: jne 0x080483cc<<BBlock>>
Symbolic: startInstruction(0x0804839d: jne 0x080483cc<<BBlock>>)
Symbolic insn@0x0804839d[4]: number_(32, 134513565) = 0x0804839d<134513565>[u32]
Symbolic insn@0x0804839d[4]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x0804839d[4]: add(0x0804839d<134513565>[u32], 0x00000002[u32]) = 0x0804839f<134513567>[u32]
Symbolic insn@0x0804839d[4]: writeRegister(eip, 0x0804839f<134513567>[u32])
Symbolic insn@0x0804839d[4]: undefined_(1) = V6[u1]
Symbolic insn@0x0804839d[4]: readRegister(zf, V6[u1]) = (zerop[u1] V5[u8])
Symbolic insn@0x0804839d[4]: invert((zerop[u1] V5[u8])) = (invert[u1] (zerop[u1] V5[u8]))
Symbolic insn@0x0804839d[4]: undefined_(32) = V7[u32]
Symbolic insn@0x0804839d[4]: readRegister(eip, V7[u32]) = 0x0804839f<134513567>[u32]
Symbolic insn@0x0804839d[4]: number_(32, 134513612) = 0x080483cc<134513612>[u32]
Symbolic insn@0x0804839d[4]: unsignedExtend(0x080483cc<134513612>[u32], 32) = 0x080483cc<134513612>[u32]
Symbolic insn@0x0804839d[4]: ite((invert[u1] (zerop[u1] V5[u8])), 0x080483cc<134513612>[u32], 0x0804839f<134513567>[u32]) = (ite[u32] (zerop[u1] V5[u8]) 0x0804839f<134513567>[u32] 0x080483cc<134513612>[u32])
Symbolic insn@0x0804839d[4]: writeRegister(eip, (ite[u32] (zerop[u1] V5[u8]) 0x0804839f<134513567>[u32] 0x080483cc<134513612>[u32]))
Symbolic insn@0x0804839d[4]: finishInstruction(jne 0x080483cc<<BBlock>>)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip = (ite[u32] (zerop[u1] V5[u8]) 0x0804839f<134513567>[u32] 0x080483cc<134513612>[u32])
 cf write-only = (invert[u1] (extract[u1] 0x00000008[u32] 0x00000009[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u8]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u8]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u8]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u8]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u8]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u8]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u8]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u8])))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9])))
 zf = (zerop[u1] V5[u8])
 sf write-only = (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u8])
 of write-only = (xor[u1] (extract[u1] 0x00000007[u32] 0x00000008[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9])) (extract[u1] 0x00000008[u32] 0x00000009[u32] (xor[u9] (add[u9] (uextend[u9] 0x00000009[u32] V5[u8]) 0x100<256,-256>[u9]) (uextend[u9] 0x00000009[u32] V5[u8]) 0x0ff[u9])))
 fpstatus_top = 0x0[u3]
memory:
 addr=0x080496f4<134518516>[u32] read-before-write value=V5[u8]
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x0804839f: mov eax, dword ds:[0x080496f0<(data)p.0>]
Symbolic: startInstruction(0x0804839f: mov eax, dword ds:[0x080496f0<(data)p.0>])
Symbolic insn@0x0804839f[0]: number_(32, 134513567) = 0x0804839f<134513567>[u32]
Symbolic insn@0x0804839f[0]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x0804839f[0]: add(0x0804839f<134513567>[u32], 0x00000005[u32]) = 0x080483a4<134513572>[u32]
Symbolic insn@0x0804839f[0]: writeRegister(eip, 0x080483a4<134513572>[u32])
Symbolic insn@0x0804839f[0]: number_(32, 134518512) = 0x080496f0<134518512>[u32]
Symbolic insn@0x0804839f[0]: undefined_(32) = V1[u32]
Symbolic insn@0x0804839f[0]: boolean_(1) = true[u1]
Symbolic insn@0x0804839f[0]: readMemory(ds, 0x080496f0<134518512>[u32], V1[u32], true[u1]) = V1[u32]
Symbolic insn@0x0804839f[0]: writeRegister(eax, V1[u32])
Symbolic insn@0x0804839f[0]: finishInstruction(mov eax, dword ds:[0x080496f0<(data)p.0>])
registers:
 eax write-only = V1[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = 0x080483a4<134513572>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=0x080496f3<134518515>[u32] read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V1[u32])
 addr=0x080496f2<134518514>[u32] read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V1[u32])
 addr=0x080496f1<134518513>[u32] read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V1[u32])
 addr=0x080496f0<134518512>[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V1[u32])

0x080483a4: mov edx, dword ds:[eax]
Symbolic: startInstruction(0x080483a4: mov edx, dword ds:[eax])
Symbolic insn@0x080483a4[1]: number_(32, 134513572) = 0x080483a4<134513572>[u32]
Symbolic insn@0x080483a4[1]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x080483a4[1]: add(0x080483a4<134513572>[u32], 0x00000002[u32]) = 0x080483a6<134513574>[u32]
Symbolic insn@0x080483a4[1]: writeRegister(eip, 0x080483a6<134513574>[u32])
Symbolic insn@0x080483a4[1]: undefined_(32) = V2[u32]
Symbolic insn@0x080483a4[1]: readRegister(eax, V2[u32]) = V1[u32]
Symbolic insn@0x080483a4[1]: undefined_(32) = V3[u32]
Symbolic insn@0x080483a4[1]: boolean_(1) = true[u1]
Symbolic insn@0x080483a4[1]: readMemory(ds, V1[u32], V3[u32], true[u1]) = V3[u32]
Symbolic insn@0x080483a4[1]: writeRegister(edx, V3[u32])
Symbolic insn@0x080483a4[1]: finishInstruction(mov edx, dword ds:[eax])
registers:
 eax = V1[u32]
 edx write-only = V3[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = 0x080483a6<134513574>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] V1[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] V1[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] V1[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=V1[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])
 addr=0x080496f3<134518515>[u32] read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V1[u32])
 addr=0x080496f2<134518514>[u32] read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V1[u32])
 addr=0x080496f1<134518513>[u32] read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V1[u32])
 addr=0x080496f0<134518512>[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V1[u32])

0x080483a6: test edx, edx
Symbolic: startInstruction(0x080483a6: test edx, edx)
Symbolic insn@0x080483a6[2]: number_(32, 134513574) = 0x080483a6<134513574>[u32]
Symbolic insn@0x080483a6[2]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x080483a6[2]: add(0x080483a6<134513574>[u32], 0x00000002[u32]) = 0x080483a8<134513576>[u32]
Symbolic insn@0x080483a6[2]: writeRegister(eip, 0x080483a8<134513576>[u32])
Symbolic insn@0x080483a6[2]: undefined_(32) = V4[u32]
Symbolic insn@0x080483a6[2]: readRegister(edx, V4[u32]) = V3[u32]
Symbolic insn@0x080483a6[2]: undefined_(32) = V5[u32]
Symbolic insn@0x080483a6[2]: readRegister(edx, V5[u32]) = V3[u32]
Symbolic insn@0x080483a6[2]: and_(V3[u32], V3[u32]) = V3[u32]
Symbolic insn@0x080483a6[2]: extract(V3[u32], 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])
Symbolic insn@0x080483a6[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32]), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] V3[u32])
Symbolic insn@0x080483a6[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32]), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] V3[u32])
Symbolic insn@0x080483a6[2]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] V3[u32]), (extract[u1] 0x00000001[u32] 0x00000002[u32] V3[u32])) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V3[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V3[u32]))
Symbolic insn@0x080483a6[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32]), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] V3[u32])
Symbolic insn@0x080483a6[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32]), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] V3[u32])
Symbolic insn@0x080483a6[2]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] V3[u32]), (extract[u1] 0x00000003[u32] 0x00000004[u32] V3[u32])) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] V3[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V3[u32]))
Symbolic insn@0x080483a6[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32]), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] V3[u32])
Symbolic insn@0x080483a6[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32]), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] V3[u32])
Symbolic insn@0x080483a6[2]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] V3[u32]), (extract[u1] 0x00000005[u32] 0x00000006[u32] V3[u32])) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] V3[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V3[u32]))
Symbolic insn@0x080483a6[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32]), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] V3[u32])
Symbolic insn@0x080483a6[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32]), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] V3[u32])
Symbolic insn@0x080483a6[2]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] V3[u32]), (extract[u1] 0x00000007[u32] 0x00000008[u32] V3[u32])) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] V3[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V3[u32]))
Symbolic insn@0x080483a6[2]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V3[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V3[u32])), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] V3[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V3[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V3[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V3[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V3[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V3[u32]))
Symbolic insn@0x080483a6[2]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] V3[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V3[u32])), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] V3[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V3[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] V3[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V3[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V3[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V3[u32]))
Symbolic insn@0x080483a6[2]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V3[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V3[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V3[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V3[u32])), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] V3[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V3[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V3[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V3[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V3[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V3[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V3[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V3[u32]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V3[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V3[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V3[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V3[u32]))
Symbolic insn@0x080483a6[2]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V3[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V3[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V3[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V3[u32]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V3[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V3[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V3[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V3[u32]))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V3[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V3[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V3[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V3[u32]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V3[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V3[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V3[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V3[u32])))
Symbolic insn@0x080483a6[2]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V3[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V3[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V3[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V3[u32]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V3[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V3[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V3[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V3[u32]))))
Symbolic insn@0x080483a6[2]: extract(V3[u32], 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] V3[u32])
Symbolic insn@0x080483a6[2]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] V3[u32]))
Symbolic insn@0x080483a6[2]: equalToZero(V3[u32]) = (zerop[u1] V3[u32])
Symbolic insn@0x080483a6[2]: writeRegister(zf, (zerop[u1] V3[u32]))
Symbolic insn@0x080483a6[2]: boolean_(0) = false[u1]
Symbolic insn@0x080483a6[2]: writeRegister(of, false[u1])
Symbolic insn@0x080483a6[2]: unspecified_(1) = V6[u1]<unspec>
Symbolic insn@0x080483a6[2]: writeRegister(af, V6[u1]<unspec>)
Symbolic insn@0x080483a6[2]: boolean_(0) = false[u1]
Symbolic insn@0x080483a6[2]: writeRegister(cf, false[u1])
Symbolic insn@0x080483a6[2]: finishInstruction(test edx, edx)
registers:
 eax = V1[u32]
 edx = V3[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = 0x080483a8<134513576>[u32]
 cf write-only = false[u1]
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V3[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V3[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V3[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V3[u32]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V3[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V3[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V3[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V3[u32])))
 af write-only = V6[u1]<unspec>
 zf write-only = (zerop[u1] V3[u32])
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] V3[u32])
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] V1[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] V1[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] V1[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=V1[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])
 addr=0x080496f3<134518515>[u32] read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V1[u32])
 addr=0x080496f2<134518514>[u32] read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V1[u32])
 addr=0x080496f1<134518513>[u32] read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V1[u32])
 addr=0x080496f0<134518512>[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V1[u32])

0x080483a8: je 0x080483c5<<BBlock>>
Symbolic: startInstruction(0x080483a8: je 0x080483c5<<BBlock>>)
Symbolic insn@0x080483a8[3]: number_(32, 134513576) = 0x080483a8<134513576>[u32]
Symbolic insn@0x080483a8[3]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x080483a8[3]: add(0x080483a8<134513576>[u32], 0x00000002[u32]) = 0x080483aa<134513578>[u32]
Symbolic insn@0x080483a8[3]: writeRegister(eip, 0x080483aa<134513578>[u32])
Symbolic insn@0x080483a8[3]: undefined_(1) = V7[u1]
Symbolic insn@0x080483a8[3]: readRegister(zf, V7[u1]) = (zerop[u1] V3[u32])
Symbolic insn@0x080483a8[3]: undefined_(32) = V8[u32]
Symbolic insn@0x080483a8[3]: readRegister(eip, V8[u32]) = 0x080483aa<134513578>[u32]
Symbolic insn@0x080483a8[3]: number_(32, 134513605) = 0x080483c5<134513605>[u32]
Symbolic insn@0x080483a8[3]: unsignedExtend(0x080483c5<134513605>[u32], 32) = 0x080483c5<134513605>[u32]
Symbolic insn@0x080483a8[3]: ite((zerop[u1] V3[u32]), 0x080483c5<134513605>[u32], 0x080483aa<134513578>[u32]) = (ite[u32] (zerop[u1] V3[u32]) 0x080483c5<134513605>[u32] 0x080483aa<134513578>[u32])
Symbolic insn@0x080483a8[3]: writeRegister(eip, (ite[u32] (zerop[u1] V3[u32]) 0x080483c5<134513605>[u32] 0x080483aa<134513578>[u32]))
Symbolic insn@0x080483a8[3]: finishInstruction(je 0x080483c5<<BBlock>>)
registers:
 eax = V1[u32]
 edx = V3[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip = (ite[u32] (zerop[u1] V3[u32]) 0x080483c5<134513605>[u32] 0x080483aa<134513578>[u32])
 cf write-only = false[u1]
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V3[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V3[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V3[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V3[u32]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V3[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V3[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V3[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V3[u32])))
 af write-only = V6[u1]<unspec>
 zf = (zerop[u1] V3[u32])
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] V3[u32])
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] V1[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] V1[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] V1[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=V1[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])
 addr=0x080496f3<134518515>[u32] read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V1[u32])
 addr=0x080496f2<134518514>[u32] read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V1[u32])
 addr=0x080496f1<134518513>[u32] read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V1[u32])
 addr=0x080496f0<134518512>[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V1[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x080483aa: lea esi, [esi + 0x00000000]
Symbolic: startInstruction(0x080483aa: lea esi, [esi + 0x00000000])
Symbolic insn@0x080483aa[0]: number_(32, 134513578) = 0x080483aa<134513578>[u32]
Symbolic insn@0x080483aa[0]: number_(32, 6) = 0x00000006[u32]
Symbolic insn@0x080483aa[0]: add(0x080483aa<134513578>[u32], 0x00000006[u32]) = 0x080483b0<134513584>[u32]
Symbolic insn@0x080483aa[0]: writeRegister(eip, 0x080483b0<134513584>[u32])
Symbolic insn@0x080483aa[0]: undefined_(32) = V1[u32]
Symbolic insn@0x080483aa[0]: readRegister(esi, V1[u32]) = esi_0[u32]
Symbolic insn@0x080483aa[0]: number_(32, 0) = 0x00000000[u32]
Symbolic insn@0x080483aa[0]: add(esi_0[u32], 0x00000000[u32]) = esi_0[u32]
Symbolic insn@0x080483aa[0]: unsignedExtend(esi_0[u32], 32) = esi_0[u32]
Symbolic insn@0x080483aa[0]: writeRegister(esi, esi_0[u32])
Symbolic insn@0x080483aa[0]: finishInstruction(lea esi, [esi + 0x00000000])
registers:
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080483b0<134513584>[u32]
 fpstatus_top = 0x0[u3]
memory:

0x080483b0: add eax, 0x04
Symbolic: startInstruction(0x080483b0: add eax, 0x04)
Symbolic insn@0x080483b0[1]: number_(32, 134513584) = 0x080483b0<134513584>[u32]
Symbolic insn@0x080483b0[1]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x080483b0[1]: add(0x080483b0<134513584>[u32], 0x00000003[u32]) = 0x080483b3<134513587>[u32]
Symbolic insn@0x080483b0[1]: writeRegister(eip, 0x080483b3<134513587>[u32])
Symbolic insn@0x080483b0[1]: boolean_(0) = false[u1]
Symbolic insn@0x080483b0[1]: number_(8, 4) = 0x04[u8]
Symbolic insn@0x080483b0[1]: undefined_(32) = V2[u32]
Symbolic insn@0x080483b0[1]: readRegister(eax, V2[u32]) = eax_0[u32]
Symbolic insn@0x080483b0[1]: signExtend(0x04[u8], 32) = 0x00000004[u32]
Symbolic insn@0x080483b0[1]: addWithCarries(eax_0[u32], 0x00000004[u32], false[u1]) = (add[u32] eax_0[u32] 0x00000004[u32])
Symbolic insn@0x080483b0[1]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]))
Symbolic insn@0x080483b0[1]: extract((add[u32] eax_0[u32] 0x00000004[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] eax_0[u32] 0x00000004[u32]))
Symbolic insn@0x080483b0[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] eax_0[u32] 0x00000004[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] eax_0[u32] 0x00000004[u32]))
Symbolic insn@0x080483b0[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] eax_0[u32] 0x00000004[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] eax_0[u32] 0x00000004[u32]))
Symbolic insn@0x080483b0[1]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] eax_0[u32] 0x00000004[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] eax_0[u32] 0x00000004[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] eax_0[u32] 0x00000004[u32])))
Symbolic insn@0x080483b0[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] eax_0[u32] 0x00000004[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] eax_0[u32] 0x00000004[u32]))
Symbolic insn@0x080483b0[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] eax_0[u32] 0x00000004[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] eax_0[u32] 0x00000004[u32]))
Symbolic insn@0x080483b0[1]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] eax_0[u32] 0x00000004[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] eax_0[u32] 0x00000004[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] eax_0[u32] 0x00000004[u32])))
Symbolic insn@0x080483b0[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] eax_0[u32] 0x00000004[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] eax_0[u32] 0x00000004[u32]))
Symbolic insn@0x080483b0[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] eax_0[u32] 0x00000004[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] eax_0[u32] 0x00000004[u32]))
Symbolic insn@0x080483b0[1]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] eax_0[u32] 0x00000004[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] eax_0[u32] 0x00000004[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] eax_0[u32] 0x00000004[u32])))
Symbolic insn@0x080483b0[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] eax_0[u32] 0x00000004[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] eax_0[u32] 0x00000004[u32]))
Symbolic insn@0x080483b0[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] eax_0[u32] 0x00000004[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] eax_0[u32] 0x00000004[u32]))
Symbolic insn@0x080483b0[1]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] eax_0[u32] 0x00000004[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] eax_0[u32] 0x00000004[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] eax_0[u32] 0x00000004[u32])))
Symbolic insn@0x080483b0[1]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] eax_0[u32] 0x00000004[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] eax_0[u32] 0x00000004[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] eax_0[u32] 0x00000004[u32])))
Symbolic insn@0x080483b0[1]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] eax_0[u32] 0x00000004[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] eax_0[u32] 0x00000004[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] eax_0[u32] 0x00000004[u32])))
Symbolic insn@0x080483b0[1]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] eax_0[u32] 0x00000004[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] eax_0[u32] 0x00000004[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] eax_0[u32] 0x00000004[u32])))
Symbolic insn@0x080483b0[1]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] eax_0[u32] 0x00000004[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] eax_0[u32] 0x00000004[u32]))))
Symbolic insn@0x080483b0[1]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] eax_0[u32] 0x00000004[u32])))))
Symbolic insn@0x080483b0[1]: extract((add[u32] eax_0[u32] 0x00000004[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] eax_0[u32] 0x00000004[u32]))
Symbolic insn@0x080483b0[1]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] eax_0[u32] 0x00000004[u32])))
Symbolic insn@0x080483b0[1]: equalToZero((add[u32] eax_0[u32] 0x00000004[u32])) = (zerop[u1] (add[u32] eax_0[u32] 0x00000004[u32]))
Symbolic insn@0x080483b0[1]: writeRegister(zf, (zerop[u1] (add[u32] eax_0[u32] 0x00000004[u32])))
Symbolic insn@0x080483b0[1]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33])), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]))
Symbolic insn@0x080483b0[1]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33])), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]))
Symbolic insn@0x080483b0[1]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33])), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]))
Symbolic insn@0x080483b0[1]: writeRegister(af, (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33])))
Symbolic insn@0x080483b0[1]: writeRegister(cf, (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33])))
Symbolic insn@0x080483b0[1]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33])), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33])))
Symbolic insn@0x080483b0[1]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]))))
Symbolic insn@0x080483b0[1]: writeRegister(eax, (add[u32] eax_0[u32] 0x00000004[u32]))
Symbolic insn@0x080483b0[1]: finishInstruction(add eax, 0x04)
registers:
 eax read-before-write = (add[u32] eax_0[u32] 0x00000004[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080483b3<134513587>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] eax_0[u32] 0x00000004[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]))
 zf write-only = (zerop[u1] (add[u32] eax_0[u32] 0x00000004[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] eax_0[u32] 0x00000004[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33])))
 fpstatus_top = 0x0[u3]
memory:

0x080483b3: mov dword ds:[0x080496f0<(data)p.0>], eax
Symbolic: startInstruction(0x080483b3: mov dword ds:[0x080496f0<(data)p.0>], eax)
Symbolic insn@0x080483b3[2]: number_(32, 134513587) = 0x080483b3<134513587>[u32]
Symbolic insn@0x080483b3[2]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x080483b3[2]: add(0x080483b3<134513587>[u32], 0x00000005[u32]) = 0x080483b8<134513592>[u32]
Symbolic insn@0x080483b3[2]: writeRegister(eip, 0x080483b8<134513592>[u32])
Symbolic insn@0x080483b3[2]: undefined_(32) = V3[u32]
Symbolic insn@0x080483b3[2]: readRegister(eax, V3[u32]) = (add[u32] eax_0[u32] 0x00000004[u32])
Symbolic insn@0x080483b3[2]: number_(32, 134518512) = 0x080496f0<134518512>[u32]
Symbolic insn@0x080483b3[2]: boolean_(1) = true[u1]
Symbolic insn@0x080483b3[2]: writeMemory(ds, 0x080496f0<134518512>[u32], (add[u32] eax_0[u32] 0x00000004[u32]), true[u1])
Symbolic insn@0x080483b3[2]: finishInstruction(mov dword ds:[0x080496f0<(data)p.0>], eax)
registers:
 eax read-before-write = (add[u32] eax_0[u32] 0x00000004[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = 0x080483b8<134513592>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] eax_0[u32] 0x00000004[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]))
 zf write-only = (zerop[u1] (add[u32] eax_0[u32] 0x00000004[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] eax_0[u32] 0x00000004[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=0x080496f3<134518515>[u32] write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] (add[u32] eax_0[u32] 0x00000004[u32]))
 addr=0x080496f2<134518514>[u32] write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] (add[u32] eax_0[u32] 0x00000004[u32]))
 addr=0x080496f1<134518513>[u32] write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] (add[u32] eax_0[u32] 0x00000004[u32]))
 addr=0x080496f0<134518512>[u32] write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] eax_0[u32] 0x00000004[u32]))

0x080483b8: call edx
Symbolic: startInstruction(0x080483b8: call edx)
Symbolic insn@0x080483b8[3]: number_(32, 134513592) = 0x080483b8<134513592>[u32]
Symbolic insn@0x080483b8[3]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x080483b8[3]: add(0x080483b8<134513592>[u32], 0x00000002[u32]) = 0x080483ba<134513594>[u32]
Symbolic insn@0x080483b8[3]: writeRegister(eip, 0x080483ba<134513594>[u32])
Symbolic insn@0x080483b8[3]: undefined_(32) = V4[u32]
Symbolic insn@0x080483b8[3]: readRegister(edx, V4[u32]) = edx_0[u32]
Symbolic insn@0x080483b8[3]: unsignedExtend(edx_0[u32], 32) = edx_0[u32]
Symbolic insn@0x080483b8[3]: undefined_(32) = V5[u32]
Symbolic insn@0x080483b8[3]: readRegister(esp, V5[u32]) = esp_0[u32]
Symbolic insn@0x080483b8[3]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x080483b8[3]: add(esp_0[u32], 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x080483b8[3]: boolean_(1) = true[u1]
Symbolic insn@0x080483b8[3]: undefined_(32) = V6[u32]
Symbolic insn@0x080483b8[3]: readRegister(eip, V6[u32]) = 0x080483ba<134513594>[u32]
Symbolic insn@0x080483b8[3]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), 0x080483ba<134513594>[u32], true[u1])
Symbolic insn@0x080483b8[3]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x080483b8[3]: filterCallTarget(edx_0[u32]) = edx_0[u32]
Symbolic insn@0x080483b8[3]: writeRegister(eip, edx_0[u32])
Symbolic insn@0x080483b8[3]: finishInstruction(call edx)
registers:
 eax read-before-write = (add[u32] eax_0[u32] 0x00000004[u32])
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip = edx_0[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] eax_0[u32] 0x00000004[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] eax_0[u32] 0x00000004[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]))
 zf write-only = (zerop[u1] (add[u32] eax_0[u32] 0x00000004[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] eax_0[u32] 0x00000004[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] eax_0[u32]) 0x000000004[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=0x83<-125>[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=0xba<-70>[u8]
 addr=0x080496f3<134518515>[u32] write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] (add[u32] eax_0[u32] 0x00000004[u32]))
 addr=0x080496f2<134518514>[u32] write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] (add[u32] eax_0[u32] 0x00000004[u32]))
 addr=0x080496f1<134518513>[u32] write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] (add[u32] eax_0[u32] 0x00000004[u32]))
 addr=0x080496f0<134518512>[u32] write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] eax_0[u32] 0x00000004[u32]))
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x080483ba: mov eax, dword ds:[0x080496f0<(data)p.0>]
Symbolic: startInstruction(0x080483ba: mov eax, dword ds:[0x080496f0<(data)p.0>])
Symbolic insn@0x080483ba[0]: number_(32, 134513594) = 0x080483ba<134513594>[u32]
Symbolic insn@0x080483ba[0]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x080483ba[0]: add(0x080483ba<134513594>[u32], 0x00000005[u32]) = 0x080483bf<134513599>[u32]
Symbolic insn@0x080483ba[0]: writeRegister(eip, 0x080483bf<134513599>[u32])
Symbolic insn@0x080483ba[0]: number_(32, 134518512) = 0x080496f0<134518512>[u32]
Symbolic insn@0x080483ba[0]: undefined_(32) = V1[u32]
Symbolic insn@0x080483ba[0]: boolean_(1) = true[u1]
Symbolic insn@0x080483ba[0]: readMemory(ds, 0x080496f0<134518512>[u32], V1[u32], true[u1]) = V1[u32]
Symbolic insn@0x080483ba[0]: writeRegister(eax, V1[u32])
Symbolic insn@0x080483ba[0]: finishInstruction(mov eax, dword ds:[0x080496f0<(data)p.0>])
registers:
 eax write-only = V1[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = 0x080483bf<134513599>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=0x080496f3<134518515>[u32] read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V1[u32])
 addr=0x080496f2<134518514>[u32] read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V1[u32])
 addr=0x080496f1<134518513>[u32] read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V1[u32])
 addr=0x080496f0<134518512>[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V1[u32])

0x080483bf: mov edx, dword ds:[eax]
Symbolic: startInstruction(0x080483bf: mov edx, dword ds:[eax])
Symbolic insn@0x080483bf[1]: number_(32, 134513599) = 0x080483bf<134513599>[u32]
Symbolic insn@0x080483bf[1]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x080483bf[1]: add(0x080483bf<134513599>[u32], 0x00000002[u32]) = 0x080483c1<134513601>[u32]
Symbolic insn@0x080483bf[1]: writeRegister(eip, 0x080483c1<134513601>[u32])
Symbolic insn@0x080483bf[1]: undefined_(32) = V2[u32]
Symbolic insn@0x080483bf[1]: readRegister(eax, V2[u32]) = V1[u32]
Symbolic insn@0x080483bf[1]: undefined_(32) = V3[u32]
Symbolic insn@0x080483bf[1]: boolean_(1) = true[u1]
Symbolic insn@0x080483bf[1]: readMemory(ds, V1[u32], V3[u32], true[u1]) = V3[u32]
Symbolic insn@0x080483bf[1]: writeRegister(edx, V3[u32])
Symbolic insn@0x080483bf[1]: finishInstruction(mov edx, dword ds:[eax])
registers:
 eax = V1[u32]
 edx write-only = V3[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = 0x080483c1<134513601>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] V1[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] V1[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] V1[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=V1[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])
 addr=0x080496f3<134518515>[u32] read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V1[u32])
 addr=0x080496f2<134518514>[u32] read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V1[u32])
 addr=0x080496f1<134518513>[u32] read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V1[u32])
 addr=0x080496f0<134518512>[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V1[u32])

0x080483c1: test edx, edx
Symbolic: startInstruction(0x080483c1: test edx, edx)
Symbolic insn@0x080483c1[2]: number_(32, 134513601) = 0x080483c1<134513601>[u32]
Symbolic insn@0x080483c1[2]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x080483c1[2]: add(0x080483c1<134513601>[u32], 0x00000002[u32]) = 0x080483c3<134513603>[u32]
Symbolic insn@0x080483c1[2]: writeRegister(eip, 0x080483c3<134513603>[u32])
Symbolic insn@0x080483c1[2]: undefined_(32) = V4[u32]
Symbolic insn@0x080483c1[2]: readRegister(edx, V4[u32]) = V3[u32]
Symbolic insn@0x080483c1[2]: undefined_(32) = V5[u32]
Symbolic insn@0x080483c1[2]: readRegister(edx, V5[u32]) = V3[u32]
Symbolic insn@0x080483c1[2]: and_(V3[u32], V3[u32]) = V3[u32]
Symbolic insn@0x080483c1[2]: extract(V3[u32], 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])
Symbolic insn@0x080483c1[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32]), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] V3[u32])
Symbolic insn@0x080483c1[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32]), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] V3[u32])
Symbolic insn@0x080483c1[2]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] V3[u32]), (extract[u1] 0x00000001[u32] 0x00000002[u32] V3[u32])) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V3[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V3[u32]))
Symbolic insn@0x080483c1[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32]), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] V3[u32])
Symbolic insn@0x080483c1[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32]), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] V3[u32])
Symbolic insn@0x080483c1[2]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] V3[u32]), (extract[u1] 0x00000003[u32] 0x00000004[u32] V3[u32])) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] V3[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V3[u32]))
Symbolic insn@0x080483c1[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32]), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] V3[u32])
Symbolic insn@0x080483c1[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32]), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] V3[u32])
Symbolic insn@0x080483c1[2]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] V3[u32]), (extract[u1] 0x00000005[u32] 0x00000006[u32] V3[u32])) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] V3[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V3[u32]))
Symbolic insn@0x080483c1[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32]), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] V3[u32])
Symbolic insn@0x080483c1[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32]), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] V3[u32])
Symbolic insn@0x080483c1[2]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] V3[u32]), (extract[u1] 0x00000007[u32] 0x00000008[u32] V3[u32])) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] V3[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V3[u32]))
Symbolic insn@0x080483c1[2]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V3[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V3[u32])), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] V3[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V3[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V3[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V3[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V3[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V3[u32]))
Symbolic insn@0x080483c1[2]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] V3[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V3[u32])), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] V3[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V3[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] V3[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V3[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V3[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V3[u32]))
Symbolic insn@0x080483c1[2]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V3[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V3[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V3[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V3[u32])), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] V3[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V3[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V3[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V3[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V3[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V3[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V3[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V3[u32]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V3[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V3[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V3[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V3[u32]))
Symbolic insn@0x080483c1[2]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V3[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V3[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V3[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V3[u32]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V3[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V3[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V3[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V3[u32]))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V3[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V3[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V3[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V3[u32]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V3[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V3[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V3[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V3[u32])))
Symbolic insn@0x080483c1[2]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V3[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V3[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V3[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V3[u32]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V3[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V3[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V3[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V3[u32]))))
Symbolic insn@0x080483c1[2]: extract(V3[u32], 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] V3[u32])
Symbolic insn@0x080483c1[2]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] V3[u32]))
Symbolic insn@0x080483c1[2]: equalToZero(V3[u32]) = (zerop[u1] V3[u32])
Symbolic insn@0x080483c1[2]: writeRegister(zf, (zerop[u1] V3[u32]))
Symbolic insn@0x080483c1[2]: boolean_(0) = false[u1]
Symbolic insn@0x080483c1[2]: writeRegister(of, false[u1])
Symbolic insn@0x080483c1[2]: unspecified_(1) = V6[u1]<unspec>
Symbolic insn@0x080483c1[2]: writeRegister(af, V6[u1]<unspec>)
Symbolic insn@0x080483c1[2]: boolean_(0) = false[u1]
Symbolic insn@0x080483c1[2]: writeRegister(cf, false[u1])
Symbolic insn@0x080483c1[2]: finishInstruction(test edx, edx)
registers:
 eax = V1[u32]
 edx = V3[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = 0x080483c3<134513603>[u32]
 cf write-only = false[u1]
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V3[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V3[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V3[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V3[u32]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V3[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V3[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V3[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V3[u32])))
 af write-only = V6[u1]<unspec>
 zf write-only = (zerop[u1] V3[u32])
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] V3[u32])
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] V1[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] V1[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] V1[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=V1[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])
 addr=0x080496f3<134518515>[u32] read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V1[u32])
 addr=0x080496f2<134518514>[u32] read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V1[u32])
 addr=0x080496f1<134518513>[u32] read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V1[u32])
 addr=0x080496f0<134518512>[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V1[u32])

0x080483c3: jne 0x080483b0<<BBlock>>
Symbolic: startInstruction(0x080483c3: jne 0x080483b0<<BBlock>>)
Symbolic insn@0x080483c3[3]: number_(32, 134513603) = 0x080483c3<134513603>[u32]
Symbolic insn@0x080483c3[3]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x080483c3[3]: add(0x080483c3<134513603>[u32], 0x00000002[u32]) = 0x080483c5<134513605>[u32]
Symbolic insn@0x080483c3[3]: writeRegister(eip, 0x080483c5<134513605>[u32])
Symbolic insn@0x080483c3[3]: undefined_(1) = V7[u1]
Symbolic insn@0x080483c3[3]: readRegister(zf, V7[u1]) = (zerop[u1] V3[u32])
Symbolic insn@0x080483c3[3]: invert((zerop[u1] V3[u32])) = (invert[u1] (zerop[u1] V3[u32]))
Symbolic insn@0x080483c3[3]: undefined_(32) = V8[u32]
Symbolic insn@0x080483c3[3]: readRegister(eip, V8[u32]) = 0x080483c5<134513605>[u32]
Symbolic insn@0x080483c3[3]: number_(32, 134513584) = 0x080483b0<134513584>[u32]
Symbolic insn@0x080483c3[3]: unsignedExtend(0x080483b0<134513584>[u32], 32) = 0x080483b0<134513584>[u32]
Symbolic insn@0x080483c3[3]: ite((invert[u1] (zerop[u1] V3[u32])), 0x080483b0<134513584>[u32], 0x080483c5<134513605>[u32]) = (ite[u32] (zerop[u1] V3[u32]) 0x080483c5<134513605>[u32] 0x080483b0<134513584>[u32])
Symbolic insn@0x080483c3[3]: writeRegister(eip, (ite[u32] (zerop[u1] V3[u32]) 0x080483c5<134513605>[u32] 0x080483b0<134513584>[u32]))
Symbolic insn@0x080483c3[3]: finishInstruction(jne 0x080483b0<<BBlock>>)
registers:
 eax = V1[u32]
 edx = V3[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip = (ite[u32] (zerop[u1] V3[u32]) 0x080483c5<134513605>[u32] 0x080483b0<134513584>[u32])
 cf write-only = false[u1]
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V3[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V3[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V3[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V3[u32]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V3[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V3[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V3[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V3[u32])))
 af write-only = V6[u1]<unspec>
 zf = (zerop[u1] V3[u32])
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] V3[u32])
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] V1[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] V1[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] V1[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=V1[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])
 addr=0x080496f3<134518515>[u32] read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V1[u32])
 addr=0x080496f2<134518514>[u32] read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V1[u32])
 addr=0x080496f1<134518513>[u32] read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V1[u32])
 addr=0x080496f0<134518512>[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V1[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x080483c5: mov byte ds:[0x080496f4<_edata>], 0x01
Symbolic: startInstruction(0x080483c5: mov byte ds:[0x080496f4<_edata>], 0x01)
Symbolic insn@0x080483c5[0]: number_(32, 134513605) = 0x080483c5<134513605>[u32]
Symbolic insn@0x080483c5[0]: number_(32, 7) = 0x00000007[u32]
Symbolic insn@0x080483c5[0]: add(0x080483c5<134513605>[u32], 0x00000007[u32]) = 0x080483cc<134513612>[u32]
Symbolic insn@0x080483c5[0]: writeRegister(eip, 0x080483cc<134513612>[u32])
Symbolic insn@0x080483c5[0]: number_(8, 1) = 0x01[u8]
Symbolic insn@0x080483c5[0]: number_(32, 134518516) = 0x080496f4<134518516>[u32]
Symbolic insn@0x080483c5[0]: boolean_(1) = true[u1]
Symbolic insn@0x080483c5[0]: writeMemory(ds, 0x080496f4<134518516>[u32], 0x01[u8], true[u1])
Symbolic insn@0x080483c5[0]: finishInstruction(mov byte ds:[0x080496f4<_edata>], 0x01)
registers:
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = 0x080483cc<134513612>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=0x080496f4<134518516>[u32] write-only value=0x01[u8]

0x080483cc: leave 
Symbolic: startInstruction(0x080483cc: leave)
Symbolic insn@0x080483cc[1]: number_(32, 134513612) = 0x080483cc<134513612>[u32]
Symbolic insn@0x080483cc[1]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080483cc[1]: add(0x080483cc<134513612>[u32], 0x00000001[u32]) = 0x080483cd<134513613>[u32]
Symbolic insn@0x080483cc[1]: writeRegister(eip, 0x080483cd<134513613>[u32])
Symbolic insn@0x080483cc[1]: undefined_(32) = V1[u32]
Symbolic insn@0x080483cc[1]: readRegister(ebp, V1[u32]) = ebp_0[u32]
Symbolic insn@0x080483cc[1]: writeRegister(esp, ebp_0[u32])
Symbolic insn@0x080483cc[1]: undefined_(32) = V2[u32]
Symbolic insn@0x080483cc[1]: readRegister(esp, V2[u32]) = ebp_0[u32]
Symbolic insn@0x080483cc[1]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x080483cc[1]: add(ebp_0[u32], 0x00000004[u32]) = (add[u32] ebp_0[u32] 0x00000004[u32])
Symbolic insn@0x080483cc[1]: boolean_(1) = true[u1]
Symbolic insn@0x080483cc[1]: undefined_(32) = V3[u32]
Symbolic insn@0x080483cc[1]: readMemory(ss, ebp_0[u32], V3[u32], true[u1]) = V3[u32]
Symbolic insn@0x080483cc[1]: writeRegister(ebp, V3[u32])
Symbolic insn@0x080483cc[1]: writeRegister(esp, (add[u32] ebp_0[u32] 0x00000004[u32]))
Symbolic insn@0x080483cc[1]: finishInstruction(leave)
registers:
 esp = (add[u32] ebp_0[u32] 0x00000004[u32])
 ebp read-before-write = V3[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = 0x080483cd<134513613>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] ebp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] ebp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=ebp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])
 addr=0x080496f4<134518516>[u32] value=0x01[u8]

0x080483cd: ret 
Symbolic: startInstruction(0x080483cd: ret)
Symbolic insn@0x080483cd[2]: number_(32, 134513613) = 0x080483cd<134513613>[u32]
Symbolic insn@0x080483cd[2]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080483cd[2]: add(0x080483cd<134513613>[u32], 0x00000001[u32]) = 0x080483ce<134513614>[u32]
Symbolic insn@0x080483cd[2]: writeRegister(eip, 0x080483ce<134513614>[u32])
Symbolic insn@0x080483cd[2]: undefined_(32) = V4[u32]
Symbolic insn@0x080483cd[2]: readRegister(esp, V4[u32]) = (add[u32] ebp_0[u32] 0x00000004[u32])
Symbolic insn@0x080483cd[2]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x080483cd[2]: add((add[u32] ebp_0[u32] 0x00000004[u32]), 0x00000004[u32]) = (add[u32] ebp_0[u32] 0x00000008[u32])
Symbolic insn@0x080483cd[2]: boolean_(1) = true[u1]
Symbolic insn@0x080483cd[2]: undefined_(32) = V5[u32]
Symbolic insn@0x080483cd[2]: readMemory(ss, (add[u32] ebp_0[u32] 0x00000004[u32]), V5[u32], true[u1]) = V5[u32]
Symbolic insn@0x080483cd[2]: filterReturnTarget(V5[u32]) = V5[u32]
Symbolic insn@0x080483cd[2]: writeRegister(eip, V5[u32])
Symbolic insn@0x080483cd[2]: writeRegister(esp, (add[u32] ebp_0[u32] 0x00000008[u32]))
Symbolic insn@0x080483cd[2]: finishInstruction(ret)
registers:
 esp = (add[u32] ebp_0[u32] 0x00000008[u32])
 ebp read-before-write = V3[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = V5[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebp_0[u32] 0x00000007[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V5[u32])
 addr=(add[u32] ebp_0[u32] 0x00000006[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V5[u32])
 addr=(add[u32] ebp_0[u32] 0x00000005[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V5[u32])
 addr=(add[u32] ebp_0[u32] 0x00000004[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
 addr=(add[u32] ebp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] ebp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] ebp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=ebp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])
 addr=0x080496f4<134518516>[u32] value=0x01[u8]
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x080483d0: push ebp
Symbolic: startInstruction(0x080483d0: push ebp)
Symbolic insn@0x080483d0[0]: number_(32, 134513616) = 0x080483d0<134513616>[u32]
Symbolic insn@0x080483d0[0]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080483d0[0]: add(0x080483d0<134513616>[u32], 0x00000001[u32]) = 0x080483d1<134513617>[u32]
Symbolic insn@0x080483d0[0]: writeRegister(eip, 0x080483d1<134513617>[u32])
Symbolic insn@0x080483d0[0]: undefined_(32) = V1[u32]
Symbolic insn@0x080483d0[0]: readRegister(ebp, V1[u32]) = ebp_0[u32]
Symbolic insn@0x080483d0[0]: undefined_(32) = V2[u32]
Symbolic insn@0x080483d0[0]: readRegister(esp, V2[u32]) = esp_0[u32]
Symbolic insn@0x080483d0[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x080483d0[0]: add(esp_0[u32], 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x080483d0[0]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x080483d0[0]: boolean_(1) = true[u1]
Symbolic insn@0x080483d0[0]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), ebp_0[u32], true[u1])
Symbolic insn@0x080483d0[0]: finishInstruction(push ebp)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080483d1<134513617>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x080483d1: mov ebp, esp
Symbolic: startInstruction(0x080483d1: mov ebp, esp)
Symbolic insn@0x080483d1[1]: number_(32, 134513617) = 0x080483d1<134513617>[u32]
Symbolic insn@0x080483d1[1]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x080483d1[1]: add(0x080483d1<134513617>[u32], 0x00000002[u32]) = 0x080483d3<134513619>[u32]
Symbolic insn@0x080483d1[1]: writeRegister(eip, 0x080483d3<134513619>[u32])
Symbolic insn@0x080483d1[1]: undefined_(32) = V3[u32]
Symbolic insn@0x080483d1[1]: readRegister(esp, V3[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x080483d1[1]: writeRegister(ebp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x080483d1[1]: finishInstruction(mov ebp, esp)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080483d3<134513619>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x080483d3: sub esp, 0x08
Symbolic: startInstruction(0x080483d3: sub esp, 0x08)
Symbolic insn@0x080483d3[2]: number_(32, 134513619) = 0x080483d3<134513619>[u32]
Symbolic insn@0x080483d3[2]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x080483d3[2]: add(0x080483d3<134513619>[u32], 0x00000003[u32]) = 0x080483d6<134513622>[u32]
Symbolic insn@0x080483d3[2]: writeRegister(eip, 0x080483d6<134513622>[u32])
Symbolic insn@0x080483d3[2]: undefined_(32) = V4[u32]
Symbolic insn@0x080483d3[2]: readRegister(esp, V4[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x080483d3[2]: number_(8, 8) = 0x08[u8]
Symbolic insn@0x080483d3[2]: signExtend(0x08[u8], 32) = 0x00000008[u32]
Symbolic insn@0x080483d3[2]: boolean_(0) = false[u1]
Symbolic insn@0x080483d3[2]: invert(0x00000008[u32]) = 0xfffffff7<4294967287,-9>[u32]
Symbolic insn@0x080483d3[2]: invert(false[u1]) = true[u1]
Symbolic insn@0x080483d3[2]: addWithCarries((add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), 0xfffffff7<4294967287,-9>[u32], true[u1]) = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
Symbolic insn@0x080483d3[2]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x080483d3[2]: extract((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x080483d3[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x080483d3[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x080483d3[2]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x080483d3[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x080483d3[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x080483d3[2]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x080483d3[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x080483d3[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x080483d3[2]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x080483d3[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x080483d3[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x080483d3[2]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x080483d3[2]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x080483d3[2]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x080483d3[2]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x080483d3[2]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))))
Symbolic insn@0x080483d3[2]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))))
Symbolic insn@0x080483d3[2]: extract((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x080483d3[2]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x080483d3[2]: equalToZero((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) = (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x080483d3[2]: writeRegister(zf, (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x080483d3[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x080483d3[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x080483d3[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x080483d3[2]: invert((extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))) = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
Symbolic insn@0x080483d3[2]: writeRegister(af, (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))))
Symbolic insn@0x080483d3[2]: invert((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))) = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
Symbolic insn@0x080483d3[2]: writeRegister(cf, (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))))
Symbolic insn@0x080483d3[2]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
Symbolic insn@0x080483d3[2]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))))
Symbolic insn@0x080483d3[2]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x080483d3[2]: finishInstruction(sub esp, 0x08)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080483d6<134513622>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x080483d6: mov eax, dword ds:[0x080495f8<(data)__JCR_END__>]
Symbolic: startInstruction(0x080483d6: mov eax, dword ds:[0x080495f8<(data)__JCR_END__>])
Symbolic insn@0x080483d6[3]: number_(32, 134513622) = 0x080483d6<134513622>[u32]
Symbolic insn@0x080483d6[3]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x080483d6[3]: add(0x080483d6<134513622>[u32], 0x00000005[u32]) = 0x080483db<134513627>[u32]
Symbolic insn@0x080483d6[3]: writeRegister(eip, 0x080483db<134513627>[u32])
Symbolic insn@0x080483d6[3]: number_(32, 134518264) = 0x080495f8<134518264>[u32]
Symbolic insn@0x080483d6[3]: undefined_(32) = V5[u32]
Symbolic insn@0x080483d6[3]: boolean_(1) = true[u1]
Symbolic insn@0x080483d6[3]: readMemory(ds, 0x080495f8<134518264>[u32], V5[u32], true[u1]) = V5[u32]
Symbolic insn@0x080483d6[3]: writeRegister(eax, V5[u32])
Symbolic insn@0x080483d6[3]: finishInstruction(mov eax, dword ds:[0x080495f8<(data)__JCR_END__>])
registers:
 eax write-only = V5[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = 0x080483db<134513627>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=0x080495fb<134518267>[u32] read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V5[u32])
 addr=0x080495fa<134518266>[u32] read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V5[u32])
 addr=0x080495f9<134518265>[u32] read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V5[u32])
 addr=0x080495f8<134518264>[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x080483db: test eax, eax
Symbolic: startInstruction(0x080483db: test eax, eax)
Symbolic insn@0x080483db[4]: number_(32, 134513627) = 0x080483db<134513627>[u32]
Symbolic insn@0x080483db[4]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x080483db[4]: add(0x080483db<134513627>[u32], 0x00000002[u32]) = 0x080483dd<134513629>[u32]
Symbolic insn@0x080483db[4]: writeRegister(eip, 0x080483dd<134513629>[u32])
Symbolic insn@0x080483db[4]: undefined_(32) = V6[u32]
Symbolic insn@0x080483db[4]: readRegister(eax, V6[u32]) = V5[u32]
Symbolic insn@0x080483db[4]: undefined_(32) = V7[u32]
Symbolic insn@0x080483db[4]: readRegister(eax, V7[u32]) = V5[u32]
Symbolic insn@0x080483db[4]: and_(V5[u32], V5[u32]) = V5[u32]
Symbolic insn@0x080483db[4]: extract(V5[u32], 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
Symbolic insn@0x080483db[4]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32]), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u32])
Symbolic insn@0x080483db[4]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32]), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u32])
Symbolic insn@0x080483db[4]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u32]), (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u32])) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u32]))
Symbolic insn@0x080483db[4]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32]), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u32])
Symbolic insn@0x080483db[4]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32]), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u32])
Symbolic insn@0x080483db[4]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u32]), (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u32])) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u32]))
Symbolic insn@0x080483db[4]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32]), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u32])
Symbolic insn@0x080483db[4]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32]), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u32])
Symbolic insn@0x080483db[4]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u32]), (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u32])) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u32]))
Symbolic insn@0x080483db[4]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32]), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u32])
Symbolic insn@0x080483db[4]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32]), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u32])
Symbolic insn@0x080483db[4]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u32]), (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u32])) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u32]))
Symbolic insn@0x080483db[4]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u32])), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u32]))
Symbolic insn@0x080483db[4]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u32])), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u32]))
Symbolic insn@0x080483db[4]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u32])), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u32]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u32]))
Symbolic insn@0x080483db[4]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u32]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u32]))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u32]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u32])))
Symbolic insn@0x080483db[4]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u32]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u32]))))
Symbolic insn@0x080483db[4]: extract(V5[u32], 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] V5[u32])
Symbolic insn@0x080483db[4]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] V5[u32]))
Symbolic insn@0x080483db[4]: equalToZero(V5[u32]) = (zerop[u1] V5[u32])
Symbolic insn@0x080483db[4]: writeRegister(zf, (zerop[u1] V5[u32]))
Symbolic insn@0x080483db[4]: boolean_(0) = false[u1]
Symbolic insn@0x080483db[4]: writeRegister(of, false[u1])
Symbolic insn@0x080483db[4]: unspecified_(1) = V8[u1]<unspec>
Symbolic insn@0x080483db[4]: writeRegister(af, V8[u1]<unspec>)
Symbolic insn@0x080483db[4]: boolean_(0) = false[u1]
Symbolic insn@0x080483db[4]: writeRegister(cf, false[u1])
Symbolic insn@0x080483db[4]: finishInstruction(test eax, eax)
registers:
 eax = V5[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = 0x080483dd<134513629>[u32]
 cf write-only = false[u1]
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u32]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u32])))
 af write-only = V8[u1]<unspec>
 zf write-only = (zerop[u1] V5[u32])
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] V5[u32])
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=0x080495fb<134518267>[u32] read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V5[u32])
 addr=0x080495fa<134518266>[u32] read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V5[u32])
 addr=0x080495f9<134518265>[u32] read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V5[u32])
 addr=0x080495f8<134518264>[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x080483dd: je 0x08048400<<BBlock>>
Symbolic: startInstruction(0x080483dd: je 0x08048400<<BBlock>>)
Symbolic insn@0x080483dd[5]: number_(32, 134513629) = 0x080483dd<134513629>[u32]
Symbolic insn@0x080483dd[5]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x080483dd[5]: add(0x080483dd<134513629>[u32], 0x00000002[u32]) = 0x080483df<134513631>[u32]
Symbolic insn@0x080483dd[5]: writeRegister(eip, 0x080483df<134513631>[u32])
Symbolic insn@0x080483dd[5]: undefined_(1) = V9[u1]
Symbolic insn@0x080483dd[5]: readRegister(zf, V9[u1]) = (zerop[u1] V5[u32])
Symbolic insn@0x080483dd[5]: undefined_(32) = V10[u32]
Symbolic insn@0x080483dd[5]: readRegister(eip, V10[u32]) = 0x080483df<134513631>[u32]
Symbolic insn@0x080483dd[5]: number_(32, 134513664) = 0x08048400<134513664>[u32]
Symbolic insn@0x080483dd[5]: unsignedExtend(0x08048400<134513664>[u32], 32) = 0x08048400<134513664>[u32]
Symbolic insn@0x080483dd[5]: ite((zerop[u1] V5[u32]), 0x08048400<134513664>[u32], 0x080483df<134513631>[u32]) = (ite[u32] (zerop[u1] V5[u32]) 0x08048400<134513664>[u32] 0x080483df<134513631>[u32])
Symbolic insn@0x080483dd[5]: writeRegister(eip, (ite[u32] (zerop[u1] V5[u32]) 0x08048400<134513664>[u32] 0x080483df<134513631>[u32]))
Symbolic insn@0x080483dd[5]: finishInstruction(je 0x08048400<<BBlock>>)
registers:
 eax = V5[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip = (ite[u32] (zerop[u1] V5[u32]) 0x08048400<134513664>[u32] 0x080483df<134513631>[u32])
 cf write-only = false[u1]
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] V5[u32]) (extract[u1] 0x00000001[u32] 0x00000002[u32] V5[u32]) (extract[u1] 0x00000002[u32] 0x00000003[u32] V5[u32]) (extract[u1] 0x00000003[u32] 0x00000004[u32] V5[u32]) (extract[u1] 0x00000004[u32] 0x00000005[u32] V5[u32]) (extract[u1] 0x00000005[u32] 0x00000006[u32] V5[u32]) (extract[u1] 0x00000006[u32] 0x00000007[u32] V5[u32]) (extract[u1] 0x00000007[u32] 0x00000008[u32] V5[u32])))
 af write-only = V8[u1]<unspec>
 zf = (zerop[u1] V5[u32])
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] V5[u32])
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=0x080495fb<134518267>[u32] read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V5[u32])
 addr=0x080495fa<134518266>[u32] read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V5[u32])
 addr=0x080495f9<134518265>[u32] read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V5[u32])
 addr=0x080495f8<134518264>[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x080483df: mov eax, 0x00000000
Symbolic: startInstruction(0x080483df: mov eax, 0x00000000)
Symbolic insn@0x080483df[0]: number_(32, 134513631) = 0x080483df<134513631>[u32]
Symbolic insn@0x080483df[0]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x080483df[0]: add(0x080483df<134513631>[u32], 0x00000005[u32]) = 0x080483e4<134513636>[u32]
Symbolic insn@0x080483df[0]: writeRegister(eip, 0x080483e4<134513636>[u32])
Symbolic insn@0x080483df[0]: number_(32, 0) = 0x00000000[u32]
Symbolic insn@0x080483df[0]: writeRegister(eax, 0x00000000[u32])
Symbolic insn@0x080483df[0]: finishInstruction(mov eax, 0x00000000)
registers:
 eax write-only = 0x00000000[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080483e4<134513636>[u32]
 fpstatus_top = 0x0[u3]
memory:

0x080483e4: test eax, eax
Symbolic: startInstruction(0x080483e4: test eax, eax)
Symbolic insn@0x080483e4[1]: number_(32, 134513636) = 0x080483e4<134513636>[u32]
Symbolic insn@0x080483e4[1]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x080483e4[1]: add(0x080483e4<134513636>[u32], 0x00000002[u32]) = 0x080483e6<134513638>[u32]
Symbolic insn@0x080483e4[1]: writeRegister(eip, 0x080483e6<134513638>[u32])
Symbolic insn@0x080483e4[1]: undefined_(32) = V1[u32]
Symbolic insn@0x080483e4[1]: readRegister(eax, V1[u32]) = 0x00000000[u32]
Symbolic insn@0x080483e4[1]: undefined_(32) = V2[u32]
Symbolic insn@0x080483e4[1]: readRegister(eax, V2[u32]) = 0x00000000[u32]
Symbolic insn@0x080483e4[1]: and_(0x00000000[u32], 0x00000000[u32]) = 0x00000000[u32]
Symbolic insn@0x080483e4[1]: extract(0x00000000[u32], 0, 8) = 0x00[u8]
Symbolic insn@0x080483e4[1]: extract(0x00[u8], 1, 2) = false[u1]
Symbolic insn@0x080483e4[1]: extract(0x00[u8], 0, 1) = false[u1]
Symbolic insn@0x080483e4[1]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x080483e4[1]: extract(0x00[u8], 3, 4) = false[u1]
Symbolic insn@0x080483e4[1]: extract(0x00[u8], 2, 3) = false[u1]
Symbolic insn@0x080483e4[1]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x080483e4[1]: extract(0x00[u8], 5, 6) = false[u1]
Symbolic insn@0x080483e4[1]: extract(0x00[u8], 4, 5) = false[u1]
Symbolic insn@0x080483e4[1]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x080483e4[1]: extract(0x00[u8], 7, 8) = false[u1]
Symbolic insn@0x080483e4[1]: extract(0x00[u8], 6, 7) = false[u1]
Symbolic insn@0x080483e4[1]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x080483e4[1]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x080483e4[1]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x080483e4[1]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x080483e4[1]: invert(false[u1]) = true[u1]
Symbolic insn@0x080483e4[1]: writeRegister(pf, true[u1])
Symbolic insn@0x080483e4[1]: extract(0x00000000[u32], 31, 32) = false[u1]
Symbolic insn@0x080483e4[1]: writeRegister(sf, false[u1])
Symbolic insn@0x080483e4[1]: equalToZero(0x00000000[u32]) = true[u1]
Symbolic insn@0x080483e4[1]: writeRegister(zf, true[u1])
Symbolic insn@0x080483e4[1]: boolean_(0) = false[u1]
Symbolic insn@0x080483e4[1]: writeRegister(of, false[u1])
Symbolic insn@0x080483e4[1]: unspecified_(1) = V3[u1]<unspec>
Symbolic insn@0x080483e4[1]: writeRegister(af, V3[u1]<unspec>)
Symbolic insn@0x080483e4[1]: boolean_(0) = false[u1]
Symbolic insn@0x080483e4[1]: writeRegister(cf, false[u1])
Symbolic insn@0x080483e4[1]: finishInstruction(test eax, eax)
registers:
 eax = 0x00000000[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080483e6<134513638>[u32]
 cf write-only = false[u1]
 pf write-only = true[u1]
 af write-only = V3[u1]<unspec>
 zf write-only = true[u1]
 sf write-only = false[u1]
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:

0x080483e6: je 0x08048400<<BBlock>>
Symbolic: startInstruction(0x080483e6: je 0x08048400<<BBlock>>)
Symbolic insn@0x080483e6[2]: number_(32, 134513638) = 0x080483e6<134513638>[u32]
Symbolic insn@0x080483e6[2]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x080483e6[2]: add(0x080483e6<134513638>[u32], 0x00000002[u32]) = 0x080483e8<134513640>[u32]
Symbolic insn@0x080483e6[2]: writeRegister(eip, 0x080483e8<134513640>[u32])
Symbolic insn@0x080483e6[2]: undefined_(1) = V4[u1]
Symbolic insn@0x080483e6[2]: readRegister(zf, V4[u1]) = true[u1]
Symbolic insn@0x080483e6[2]: undefined_(32) = V5[u32]
Symbolic insn@0x080483e6[2]: readRegister(eip, V5[u32]) = 0x080483e8<134513640>[u32]
Symbolic insn@0x080483e6[2]: number_(32, 134513664) = 0x08048400<134513664>[u32]
Symbolic insn@0x080483e6[2]: unsignedExtend(0x08048400<134513664>[u32], 32) = 0x08048400<134513664>[u32]
Symbolic insn@0x080483e6[2]: ite(true[u1], 0x08048400<134513664>[u32], 0x080483e8<134513640>[u32]) = 0x08048400<134513664>[u32]
Symbolic insn@0x080483e6[2]: writeRegister(eip, 0x08048400<134513664>[u32])
Symbolic insn@0x080483e6[2]: finishInstruction(je 0x08048400<<BBlock>>)
registers:
 eax = 0x00000000[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip = 0x08048400<134513664>[u32]
 cf write-only = false[u1]
 pf write-only = true[u1]
 af write-only = V3[u1]<unspec>
 zf = true[u1]
 sf write-only = false[u1]
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:

0x08048400: mov esp, ebp
Symbolic: startInstruction(0x08048400: mov esp, ebp)
Symbolic insn@0x08048400[3]: number_(32, 134513664) = 0x08048400<134513664>[u32]
Symbolic insn@0x08048400[3]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x08048400[3]: add(0x08048400<134513664>[u32], 0x00000002[u32]) = 0x08048402<134513666>[u32]
Symbolic insn@0x08048400[3]: writeRegister(eip, 0x08048402<134513666>[u32])
Symbolic insn@0x08048400[3]: undefined_(32) = V6[u32]
Symbolic insn@0x08048400[3]: readRegister(ebp, V6[u32]) = ebp_0[u32]
Symbolic insn@0x08048400[3]: writeRegister(esp, ebp_0[u32])
Symbolic insn@0x08048400[3]: finishInstruction(mov esp, ebp)
registers:
 eax = 0x00000000[u32]
 esp write-only = ebp_0[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip = 0x08048402<134513666>[u32]
 cf write-only = false[u1]
 pf write-only = true[u1]
 af write-only = V3[u1]<unspec>
 zf = true[u1]
 sf write-only = false[u1]
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:

0x08048402: pop ebp
Symbolic: startInstruction(0x08048402: pop ebp)
Symbolic insn@0x08048402[4]: number_(32, 134513666) = 0x08048402<134513666>[u32]
Symbolic insn@0x08048402[4]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048402[4]: add(0x08048402<134513666>[u32], 0x00000001[u32]) = 0x08048403<134513667>[u32]
Symbolic insn@0x08048402[4]: writeRegister(eip, 0x08048403<134513667>[u32])
Symbolic insn@0x08048402[4]: undefined_(32) = V7[u32]
Symbolic insn@0x08048402[4]: readRegister(esp, V7[u32]) = ebp_0[u32]
Symbolic insn@0x08048402[4]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x08048402[4]: add(ebp_0[u32], 0x00000004[u32]) = (add[u32] ebp_0[u32] 0x00000004[u32])
Symbolic insn@0x08048402[4]: writeRegister(esp, (add[u32] ebp_0[u32] 0x00000004[u32]))
Symbolic insn@0x08048402[4]: boolean_(1) = true[u1]
Symbolic insn@0x08048402[4]: undefined_(32) = V8[u32]
Symbolic insn@0x08048402[4]: readMemory(ss, ebp_0[u32], V8[u32], true[u1]) = V8[u32]
Symbolic insn@0x08048402[4]: writeRegister(ebp, V8[u32])
Symbolic insn@0x08048402[4]: finishInstruction(pop ebp)
registers:
 eax = 0x00000000[u32]
 esp = (add[u32] ebp_0[u32] 0x00000004[u32])
 ebp read-before-write = V8[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip = 0x08048403<134513667>[u32]
 cf write-only = false[u1]
 pf write-only = true[u1]
 af write-only = V3[u1]<unspec>
 zf = true[u1]
 sf write-only = false[u1]
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V8[u32])
 addr=(add[u32] ebp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V8[u32])
 addr=(add[u32] ebp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V8[u32])
 addr=ebp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V8[u32])

0x08048403: ret 
Symbolic: startInstruction(0x08048403: ret)
Symbolic insn@0x08048403[5]: number_(32, 134513667) = 0x08048403<134513667>[u32]
Symbolic insn@0x08048403[5]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048403[5]: add(0x08048403<134513667>[u32], 0x00000001[u32]) = 0x08048404<134513668>[u32]
Symbolic insn@0x08048403[5]: writeRegister(eip, 0x08048404<134513668>[u32])
Symbolic insn@0x08048403[5]: undefined_(32) = V9[u32]
Symbolic insn@0x08048403[5]: readRegister(esp, V9[u32]) = (add[u32] ebp_0[u32] 0x00000004[u32])
Symbolic insn@0x08048403[5]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x08048403[5]: add((add[u32] ebp_0[u32] 0x00000004[u32]), 0x00000004[u32]) = (add[u32] ebp_0[u32] 0x00000008[u32])
Symbolic insn@0x08048403[5]: boolean_(1) = true[u1]
Symbolic insn@0x08048403[5]: undefined_(32) = V10[u32]
Symbolic insn@0x08048403[5]: readMemory(ss, (add[u32] ebp_0[u32] 0x00000004[u32]), V10[u32], true[u1]) = V10[u32]
Symbolic insn@0x08048403[5]: filterReturnTarget(V10[u32]) = V10[u32]
Symbolic insn@0x08048403[5]: writeRegister(eip, V10[u32])
Symbolic insn@0x08048403[5]: writeRegister(esp, (add[u32] ebp_0[u32] 0x00000008[u32]))
Symbolic insn@0x08048403[5]: finishInstruction(ret)
registers:
 eax = 0x00000000[u32]
 esp = (add[u32] ebp_0[u32] 0x00000008[u32])
 ebp read-before-write = V8[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip = V10[u32]
 cf write-only = false[u1]
 pf write-only = true[u1]
 af write-only = V3[u1]<unspec>
 zf = true[u1]
 sf write-only = false[u1]
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebp_0[u32] 0x00000007[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V10[u32])
 addr=(add[u32] ebp_0[u32] 0x00000006[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V10[u32])
 addr=(add[u32] ebp_0[u32] 0x00000005[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V10[u32])
 addr=(add[u32] ebp_0[u32] 0x00000004[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V10[u32])
 addr=(add[u32] ebp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V8[u32])
 addr=(add[u32] ebp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V8[u32])
 addr=(add[u32] ebp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V8[u32])
 addr=ebp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V8[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x080483e8: mov dword ss:[esp], 0x080495f8<(data)__JCR_END__>
Symbolic: startInstruction(0x080483e8: mov dword ss:[esp], 0x080495f8<(data)__JCR_END__>)
Symbolic insn@0x080483e8[0]: number_(32, 134513640) = 0x080483e8<134513640>[u32]
Symbolic insn@0x080483e8[0]: number_(32, 7) = 0x00000007[u32]
Symbolic insn@0x080483e8[0]: add(0x080483e8<134513640>[u32], 0x00000007[u32]) = 0x080483ef<134513647>[u32]
Symbolic insn@0x080483e8[0]: writeRegister(eip, 0x080483ef<134513647>[u32])
Symbolic insn@0x080483e8[0]: number_(32, 134518264) = 0x080495f8<134518264>[u32]
Symbolic insn@0x080483e8[0]: undefined_(32) = V1[u32]
Symbolic insn@0x080483e8[0]: readRegister(esp, V1[u32]) = esp_0[u32]
Symbolic insn@0x080483e8[0]: boolean_(1) = true[u1]
Symbolic insn@0x080483e8[0]: writeMemory(ss, esp_0[u32], 0x080495f8<134518264>[u32], true[u1])
Symbolic insn@0x080483e8[0]: finishInstruction(mov dword ss:[esp], 0x080495f8<(data)__JCR_END__>)
registers:
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080483ef<134513647>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) write-only value=0x95<-107>[u8]
 addr=esp_0[u32] write-only value=0xf8<-8>[u8]

0x080483ef: call 0x00000000
Symbolic: startInstruction(0x080483ef: call 0x00000000)
Symbolic insn@0x080483ef[1]: number_(32, 134513647) = 0x080483ef<134513647>[u32]
Symbolic insn@0x080483ef[1]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x080483ef[1]: add(0x080483ef<134513647>[u32], 0x00000005[u32]) = 0x080483f4<134513652>[u32]
Symbolic insn@0x080483ef[1]: writeRegister(eip, 0x080483f4<134513652>[u32])
Symbolic insn@0x080483ef[1]: number_(32, 0) = 0x00000000[u32]
Symbolic insn@0x080483ef[1]: unsignedExtend(0x00000000[u32], 32) = 0x00000000[u32]
Symbolic insn@0x080483ef[1]: undefined_(32) = V2[u32]
Symbolic insn@0x080483ef[1]: readRegister(esp, V2[u32]) = esp_0[u32]
Symbolic insn@0x080483ef[1]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x080483ef[1]: add(esp_0[u32], 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x080483ef[1]: boolean_(1) = true[u1]
Symbolic insn@0x080483ef[1]: undefined_(32) = V3[u32]
Symbolic insn@0x080483ef[1]: readRegister(eip, V3[u32]) = 0x080483f4<134513652>[u32]
Symbolic insn@0x080483ef[1]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), 0x080483f4<134513652>[u32], true[u1])
Symbolic insn@0x080483ef[1]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x080483ef[1]: filterCallTarget(0x00000000[u32]) = 0x00000000[u32]
Symbolic insn@0x080483ef[1]: writeRegister(eip, 0x00000000[u32])
Symbolic insn@0x080483ef[1]: finishInstruction(call 0x00000000)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip = 0x00000000[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=0x83<-125>[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=0xf4<-12>[u8]
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) write-only value=0x95<-107>[u8]
 addr=esp_0[u32] write-only value=0xf8<-8>[u8]
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x080483f4: lea esi, [esi + 0x00000000]
Symbolic: startInstruction(0x080483f4: lea esi, [esi + 0x00000000])
Symbolic insn@0x080483f4[0]: number_(32, 134513652) = 0x080483f4<134513652>[u32]
Symbolic insn@0x080483f4[0]: number_(32, 6) = 0x00000006[u32]
Symbolic insn@0x080483f4[0]: add(0x080483f4<134513652>[u32], 0x00000006[u32]) = 0x080483fa<134513658>[u32]
Symbolic insn@0x080483f4[0]: writeRegister(eip, 0x080483fa<134513658>[u32])
Symbolic insn@0x080483f4[0]: undefined_(32) = V1[u32]
Symbolic insn@0x080483f4[0]: readRegister(esi, V1[u32]) = esi_0[u32]
Symbolic insn@0x080483f4[0]: number_(32, 0) = 0x00000000[u32]
Symbolic insn@0x080483f4[0]: add(esi_0[u32], 0x00000000[u32]) = esi_0[u32]
Symbolic insn@0x080483f4[0]: unsignedExtend(esi_0[u32], 32) = esi_0[u32]
Symbolic insn@0x080483f4[0]: writeRegister(esi, esi_0[u32])
Symbolic insn@0x080483f4[0]: finishInstruction(lea esi, [esi + 0x00000000])
registers:
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080483fa<134513658>[u32]
 fpstatus_top = 0x0[u3]
memory:

0x080483fa: lea edi, [edi + 0x00000000]
Symbolic: startInstruction(0x080483fa: lea edi, [edi + 0x00000000])
Symbolic insn@0x080483fa[1]: number_(32, 134513658) = 0x080483fa<134513658>[u32]
Symbolic insn@0x080483fa[1]: number_(32, 6) = 0x00000006[u32]
Symbolic insn@0x080483fa[1]: add(0x080483fa<134513658>[u32], 0x00000006[u32]) = 0x08048400<134513664>[u32]
Symbolic insn@0x080483fa[1]: writeRegister(eip, 0x08048400<134513664>[u32])
Symbolic insn@0x080483fa[1]: undefined_(32) = V2[u32]
Symbolic insn@0x080483fa[1]: readRegister(edi, V2[u32]) = edi_0[u32]
Symbolic insn@0x080483fa[1]: number_(32, 0) = 0x00000000[u32]
Symbolic insn@0x080483fa[1]: add(edi_0[u32], 0x00000000[u32]) = edi_0[u32]
Symbolic insn@0x080483fa[1]: unsignedExtend(edi_0[u32], 32) = edi_0[u32]
Symbolic insn@0x080483fa[1]: writeRegister(edi, edi_0[u32])
Symbolic insn@0x080483fa[1]: finishInstruction(lea edi, [edi + 0x00000000])
registers:
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048400<134513664>[u32]
 fpstatus_top = 0x0[u3]
memory:
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x08048410: push ebp
Symbolic: startInstruction(0x08048410: push ebp)
Symbolic insn@0x08048410[0]: number_(32, 134513680) = 0x08048410<134513680>[u32]
Symbolic insn@0x08048410[0]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048410[0]: add(0x08048410<134513680>[u32], 0x00000001[u32]) = 0x08048411<134513681>[u32]
Symbolic insn@0x08048410[0]: writeRegister(eip, 0x08048411<134513681>[u32])
Symbolic insn@0x08048410[0]: undefined_(32) = V1[u32]
Symbolic insn@0x08048410[0]: readRegister(ebp, V1[u32]) = ebp_0[u32]
Symbolic insn@0x08048410[0]: undefined_(32) = V2[u32]
Symbolic insn@0x08048410[0]: readRegister(esp, V2[u32]) = esp_0[u32]
Symbolic insn@0x08048410[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048410[0]: add(esp_0[u32], 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048410[0]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048410[0]: boolean_(1) = true[u1]
Symbolic insn@0x08048410[0]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), ebp_0[u32], true[u1])
Symbolic insn@0x08048410[0]: finishInstruction(push ebp)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048411<134513681>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048411: mov edx, 0x08048480<(func)handler>
Symbolic: startInstruction(0x08048411: mov edx, 0x08048480<(func)handler>)
Symbolic insn@0x08048411[1]: number_(32, 134513681) = 0x08048411<134513681>[u32]
Symbolic insn@0x08048411[1]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x08048411[1]: add(0x08048411<134513681>[u32], 0x00000005[u32]) = 0x08048416<134513686>[u32]
Symbolic insn@0x08048411[1]: writeRegister(eip, 0x08048416<134513686>[u32])
Symbolic insn@0x08048411[1]: number_(32, 134513792) = 0x08048480<134513792>[u32]
Symbolic insn@0x08048411[1]: writeRegister(edx, 0x08048480<134513792>[u32])
Symbolic insn@0x08048411[1]: finishInstruction(mov edx, 0x08048480<(func)handler>)
registers:
 edx write-only = 0x08048480<134513792>[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048416<134513686>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048416: mov ebp, esp
Symbolic: startInstruction(0x08048416: mov ebp, esp)
Symbolic insn@0x08048416[2]: number_(32, 134513686) = 0x08048416<134513686>[u32]
Symbolic insn@0x08048416[2]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x08048416[2]: add(0x08048416<134513686>[u32], 0x00000002[u32]) = 0x08048418<134513688>[u32]
Symbolic insn@0x08048416[2]: writeRegister(eip, 0x08048418<134513688>[u32])
Symbolic insn@0x08048416[2]: undefined_(32) = V3[u32]
Symbolic insn@0x08048416[2]: readRegister(esp, V3[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048416[2]: writeRegister(ebp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048416[2]: finishInstruction(mov ebp, esp)
registers:
 edx write-only = 0x08048480<134513792>[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048418<134513688>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048418: sub esp, 0x08
Symbolic: startInstruction(0x08048418: sub esp, 0x08)
Symbolic insn@0x08048418[3]: number_(32, 134513688) = 0x08048418<134513688>[u32]
Symbolic insn@0x08048418[3]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x08048418[3]: add(0x08048418<134513688>[u32], 0x00000003[u32]) = 0x0804841b<134513691>[u32]
Symbolic insn@0x08048418[3]: writeRegister(eip, 0x0804841b<134513691>[u32])
Symbolic insn@0x08048418[3]: undefined_(32) = V4[u32]
Symbolic insn@0x08048418[3]: readRegister(esp, V4[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048418[3]: number_(8, 8) = 0x08[u8]
Symbolic insn@0x08048418[3]: signExtend(0x08[u8], 32) = 0x00000008[u32]
Symbolic insn@0x08048418[3]: boolean_(0) = false[u1]
Symbolic insn@0x08048418[3]: invert(0x00000008[u32]) = 0xfffffff7<4294967287,-9>[u32]
Symbolic insn@0x08048418[3]: invert(false[u1]) = true[u1]
Symbolic insn@0x08048418[3]: addWithCarries((add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), 0xfffffff7<4294967287,-9>[u32], true[u1]) = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
Symbolic insn@0x08048418[3]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x08048418[3]: extract((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048418[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048418[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048418[3]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048418[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048418[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048418[3]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048418[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048418[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048418[3]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048418[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048418[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048418[3]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048418[3]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048418[3]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048418[3]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048418[3]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))))
Symbolic insn@0x08048418[3]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))))
Symbolic insn@0x08048418[3]: extract((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048418[3]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048418[3]: equalToZero((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) = (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048418[3]: writeRegister(zf, (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048418[3]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x08048418[3]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x08048418[3]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x08048418[3]: invert((extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))) = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
Symbolic insn@0x08048418[3]: writeRegister(af, (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))))
Symbolic insn@0x08048418[3]: invert((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))) = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
Symbolic insn@0x08048418[3]: writeRegister(cf, (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))))
Symbolic insn@0x08048418[3]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
Symbolic insn@0x08048418[3]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))))
Symbolic insn@0x08048418[3]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048418[3]: finishInstruction(sub esp, 0x08)
registers:
 edx write-only = 0x08048480<134513792>[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x0804841b<134513691>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x0804841b: and esp, 0xf0<-16>
Symbolic: startInstruction(0x0804841b: and esp, 0xf0<-16>)
Symbolic insn@0x0804841b[4]: number_(32, 134513691) = 0x0804841b<134513691>[u32]
Symbolic insn@0x0804841b[4]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x0804841b[4]: add(0x0804841b<134513691>[u32], 0x00000003[u32]) = 0x0804841e<134513694>[u32]
Symbolic insn@0x0804841b[4]: writeRegister(eip, 0x0804841e<134513694>[u32])
Symbolic insn@0x0804841b[4]: undefined_(32) = V5[u32]
Symbolic insn@0x0804841b[4]: readRegister(esp, V5[u32]) = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
Symbolic insn@0x0804841b[4]: number_(8, 18446744073709551600) = 0xf0<-16>[u8]
Symbolic insn@0x0804841b[4]: signExtend(0xf0<-16>[u8], 32) = 0xfffffff0<4294967280,-16>[u32]
Symbolic insn@0x0804841b[4]: and_((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 0xfffffff0<4294967280,-16>[u32]) = (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])
Symbolic insn@0x0804841b[4]: extract((and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))
Symbolic insn@0x0804841b[4]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))
Symbolic insn@0x0804841b[4]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))
Symbolic insn@0x0804841b[4]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])))
Symbolic insn@0x0804841b[4]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))
Symbolic insn@0x0804841b[4]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))
Symbolic insn@0x0804841b[4]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])))
Symbolic insn@0x0804841b[4]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))
Symbolic insn@0x0804841b[4]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))
Symbolic insn@0x0804841b[4]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])))
Symbolic insn@0x0804841b[4]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))
Symbolic insn@0x0804841b[4]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))
Symbolic insn@0x0804841b[4]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])))
Symbolic insn@0x0804841b[4]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])))
Symbolic insn@0x0804841b[4]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])))
Symbolic insn@0x0804841b[4]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])))
Symbolic insn@0x0804841b[4]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))))
Symbolic insn@0x0804841b[4]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])))))
Symbolic insn@0x0804841b[4]: extract((and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))
Symbolic insn@0x0804841b[4]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])))
Symbolic insn@0x0804841b[4]: equalToZero((and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) = (zerop[u1] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))
Symbolic insn@0x0804841b[4]: writeRegister(zf, (zerop[u1] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])))
Symbolic insn@0x0804841b[4]: writeRegister(esp, (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))
Symbolic insn@0x0804841b[4]: boolean_(0) = false[u1]
Symbolic insn@0x0804841b[4]: writeRegister(of, false[u1])
Symbolic insn@0x0804841b[4]: unspecified_(1) = V6[u1]<unspec>
Symbolic insn@0x0804841b[4]: writeRegister(af, V6[u1]<unspec>)
Symbolic insn@0x0804841b[4]: boolean_(0) = false[u1]
Symbolic insn@0x0804841b[4]: writeRegister(cf, false[u1])
Symbolic insn@0x0804841b[4]: finishInstruction(and esp, 0xf0<-16>)
registers:
 edx write-only = 0x08048480<134513792>[u32]
 esp read-before-write = (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x0804841e<134513694>[u32]
 cf write-only = false[u1]
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))))
 af write-only = V6[u1]<unspec>
 zf write-only = (zerop[u1] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x0804841e: mov dword ss:[esp + 0x04], edx
Symbolic: startInstruction(0x0804841e: mov dword ss:[esp + 0x04], edx)
Symbolic insn@0x0804841e[5]: number_(32, 134513694) = 0x0804841e<134513694>[u32]
Symbolic insn@0x0804841e[5]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x0804841e[5]: add(0x0804841e<134513694>[u32], 0x00000004[u32]) = 0x08048422<134513698>[u32]
Symbolic insn@0x0804841e[5]: writeRegister(eip, 0x08048422<134513698>[u32])
Symbolic insn@0x0804841e[5]: undefined_(32) = V7[u32]
Symbolic insn@0x0804841e[5]: readRegister(edx, V7[u32]) = 0x08048480<134513792>[u32]
Symbolic insn@0x0804841e[5]: undefined_(32) = V8[u32]
Symbolic insn@0x0804841e[5]: readRegister(esp, V8[u32]) = (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])
Symbolic insn@0x0804841e[5]: number_(8, 4) = 0x04[u8]
Symbolic insn@0x0804841e[5]: signExtend(0x04[u8], 32) = 0x00000004[u32]
Symbolic insn@0x0804841e[5]: add((and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]), 0x00000004[u32]) = (add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0x00000004[u32])
Symbolic insn@0x0804841e[5]: boolean_(1) = true[u1]
Symbolic insn@0x0804841e[5]: writeMemory(ss, (add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0x00000004[u32]), 0x08048480<134513792>[u32], true[u1])
Symbolic insn@0x0804841e[5]: finishInstruction(mov dword ss:[esp + 0x04], edx)
registers:
 edx = 0x08048480<134513792>[u32]
 esp read-before-write = (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048422<134513698>[u32]
 cf write-only = false[u1]
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))))
 af write-only = V6[u1]<unspec>
 zf write-only = (zerop[u1] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0x00000007[u32]) write-only value=0x08[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0x00000006[u32]) write-only value=0x04[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0x00000005[u32]) write-only value=0x84<-124>[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0x00000004[u32]) write-only value=0x80<-128>[u8]
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048422: mov dword ss:[esp], 0x0000000a
Symbolic: startInstruction(0x08048422: mov dword ss:[esp], 0x0000000a)
Symbolic insn@0x08048422[6]: number_(32, 134513698) = 0x08048422<134513698>[u32]
Symbolic insn@0x08048422[6]: number_(32, 7) = 0x00000007[u32]
Symbolic insn@0x08048422[6]: add(0x08048422<134513698>[u32], 0x00000007[u32]) = 0x08048429<134513705>[u32]
Symbolic insn@0x08048422[6]: writeRegister(eip, 0x08048429<134513705>[u32])
Symbolic insn@0x08048422[6]: number_(32, 10) = 0x0000000a[u32]
Symbolic insn@0x08048422[6]: undefined_(32) = V9[u32]
Symbolic insn@0x08048422[6]: readRegister(esp, V9[u32]) = (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])
Symbolic insn@0x08048422[6]: boolean_(1) = true[u1]
Symbolic insn@0x08048422[6]: writeMemory(ss, (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]), 0x0000000a[u32], true[u1])
Symbolic insn@0x08048422[6]: finishInstruction(mov dword ss:[esp], 0x0000000a)
registers:
 edx = 0x08048480<134513792>[u32]
 esp read-before-write = (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048429<134513705>[u32]
 cf write-only = false[u1]
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))))
 af write-only = V6[u1]<unspec>
 zf write-only = (zerop[u1] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0x00000003[u32]) write-only value=0x00[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0x00000002[u32]) write-only value=0x00[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0x00000001[u32]) write-only value=0x00[u8]
 addr=(and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) write-only value=0x0a[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0x00000007[u32]) write-only value=0x08[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0x00000006[u32]) write-only value=0x04[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0x00000005[u32]) write-only value=0x84<-124>[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0x00000004[u32]) write-only value=0x80<-128>[u8]
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048429: call 0x080482f0<signal@plt>
Symbolic: startInstruction(0x08048429: call 0x080482f0<signal@plt>)
Symbolic insn@0x08048429[7]: number_(32, 134513705) = 0x08048429<134513705>[u32]
Symbolic insn@0x08048429[7]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x08048429[7]: add(0x08048429<134513705>[u32], 0x00000005[u32]) = 0x0804842e<134513710>[u32]
Symbolic insn@0x08048429[7]: writeRegister(eip, 0x0804842e<134513710>[u32])
Symbolic insn@0x08048429[7]: number_(32, 134513392) = 0x080482f0<134513392>[u32]
Symbolic insn@0x08048429[7]: unsignedExtend(0x080482f0<134513392>[u32], 32) = 0x080482f0<134513392>[u32]
Symbolic insn@0x08048429[7]: undefined_(32) = V10[u32]
Symbolic insn@0x08048429[7]: readRegister(esp, V10[u32]) = (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])
Symbolic insn@0x08048429[7]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048429[7]: add((and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048429[7]: boolean_(1) = true[u1]
Symbolic insn@0x08048429[7]: undefined_(32) = V11[u32]
Symbolic insn@0x08048429[7]: readRegister(eip, V11[u32]) = 0x0804842e<134513710>[u32]
Symbolic insn@0x08048429[7]: writeMemory(ss, (add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]), 0x0804842e<134513710>[u32], true[u1])
Symbolic insn@0x08048429[7]: writeRegister(esp, (add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048429[7]: filterCallTarget(0x080482f0<134513392>[u32]) = 0x080482f0<134513392>[u32]
Symbolic insn@0x08048429[7]: writeRegister(eip, 0x080482f0<134513392>[u32])
Symbolic insn@0x08048429[7]: finishInstruction(call 0x080482f0<signal@plt>)
registers:
 edx = 0x08048480<134513792>[u32]
 esp read-before-write = (add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip = 0x080482f0<134513392>[u32]
 cf write-only = false[u1]
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))))
 af write-only = V6[u1]<unspec>
 zf write-only = (zerop[u1] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]))
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0xffffffff<4294967295,-1>[u32]) write-only value=0x08[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffe<4294967294,-2>[u32]) write-only value=0x04[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffd<4294967293,-3>[u32]) write-only value=0x84<-124>[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0xfffffffc<4294967292,-4>[u32]) write-only value=0x2e[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0x00000003[u32]) write-only value=0x00[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0x00000002[u32]) write-only value=0x00[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0x00000001[u32]) write-only value=0x00[u8]
 addr=(and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) write-only value=0x0a[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0x00000007[u32]) write-only value=0x08[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0x00000006[u32]) write-only value=0x04[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0x00000005[u32]) write-only value=0x84<-124>[u8]
 addr=(add[u32] (and[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) 0xfffffff0<4294967280>[u32]) 0x00000004[u32]) write-only value=0x80<-128>[u8]
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x0804842e: mov esp, ebp
Symbolic: startInstruction(0x0804842e: mov esp, ebp)
Symbolic insn@0x0804842e[0]: number_(32, 134513710) = 0x0804842e<134513710>[u32]
Symbolic insn@0x0804842e[0]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x0804842e[0]: add(0x0804842e<134513710>[u32], 0x00000002[u32]) = 0x08048430<134513712>[u32]
Symbolic insn@0x0804842e[0]: writeRegister(eip, 0x08048430<134513712>[u32])
Symbolic insn@0x0804842e[0]: undefined_(32) = V1[u32]
Symbolic insn@0x0804842e[0]: readRegister(ebp, V1[u32]) = ebp_0[u32]
Symbolic insn@0x0804842e[0]: writeRegister(esp, ebp_0[u32])
Symbolic insn@0x0804842e[0]: finishInstruction(mov esp, ebp)
registers:
 esp write-only = ebp_0[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048430<134513712>[u32]
 fpstatus_top = 0x0[u3]
memory:

0x08048430: xor eax, eax
Symbolic: startInstruction(0x08048430: xor eax, eax)
Symbolic insn@0x08048430[1]: number_(32, 134513712) = 0x08048430<134513712>[u32]
Symbolic insn@0x08048430[1]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x08048430[1]: add(0x08048430<134513712>[u32], 0x00000002[u32]) = 0x08048432<134513714>[u32]
Symbolic insn@0x08048430[1]: writeRegister(eip, 0x08048432<134513714>[u32])
Symbolic insn@0x08048430[1]: number_(32, 0) = 0x00000000[u32]
Symbolic insn@0x08048430[1]: extract(0x00000000[u32], 0, 8) = 0x00[u8]
Symbolic insn@0x08048430[1]: extract(0x00[u8], 1, 2) = false[u1]
Symbolic insn@0x08048430[1]: extract(0x00[u8], 0, 1) = false[u1]
Symbolic insn@0x08048430[1]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x08048430[1]: extract(0x00[u8], 3, 4) = false[u1]
Symbolic insn@0x08048430[1]: extract(0x00[u8], 2, 3) = false[u1]
Symbolic insn@0x08048430[1]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x08048430[1]: extract(0x00[u8], 5, 6) = false[u1]
Symbolic insn@0x08048430[1]: extract(0x00[u8], 4, 5) = false[u1]
Symbolic insn@0x08048430[1]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x08048430[1]: extract(0x00[u8], 7, 8) = false[u1]
Symbolic insn@0x08048430[1]: extract(0x00[u8], 6, 7) = false[u1]
Symbolic insn@0x08048430[1]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x08048430[1]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x08048430[1]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x08048430[1]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x08048430[1]: invert(false[u1]) = true[u1]
Symbolic insn@0x08048430[1]: writeRegister(pf, true[u1])
Symbolic insn@0x08048430[1]: extract(0x00000000[u32], 31, 32) = false[u1]
Symbolic insn@0x08048430[1]: writeRegister(sf, false[u1])
Symbolic insn@0x08048430[1]: equalToZero(0x00000000[u32]) = true[u1]
Symbolic insn@0x08048430[1]: writeRegister(zf, true[u1])
Symbolic insn@0x08048430[1]: writeRegister(eax, 0x00000000[u32])
Symbolic insn@0x08048430[1]: boolean_(0) = false[u1]
Symbolic insn@0x08048430[1]: writeRegister(of, false[u1])
Symbolic insn@0x08048430[1]: unspecified_(1) = V2[u1]<unspec>
Symbolic insn@0x08048430[1]: writeRegister(af, V2[u1]<unspec>)
Symbolic insn@0x08048430[1]: boolean_(0) = false[u1]
Symbolic insn@0x08048430[1]: writeRegister(cf, false[u1])
Symbolic insn@0x08048430[1]: finishInstruction(xor eax, eax)
registers:
 eax write-only = 0x00000000[u32]
 esp write-only = ebp_0[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048432<134513714>[u32]
 cf write-only = false[u1]
 pf write-only = true[u1]
 af write-only = V2[u1]<unspec>
 zf write-only = true[u1]
 sf write-only = false[u1]
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:

0x08048432: pop ebp
Symbolic: startInstruction(0x08048432: pop ebp)
Symbolic insn@0x08048432[2]: number_(32, 134513714) = 0x08048432<134513714>[u32]
Symbolic insn@0x08048432[2]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048432[2]: add(0x08048432<134513714>[u32], 0x00000001[u32]) = 0x08048433<134513715>[u32]
Symbolic insn@0x08048432[2]: writeRegister(eip, 0x08048433<134513715>[u32])
Symbolic insn@0x08048432[2]: undefined_(32) = V3[u32]
Symbolic insn@0x08048432[2]: readRegister(esp, V3[u32]) = ebp_0[u32]
Symbolic insn@0x08048432[2]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x08048432[2]: add(ebp_0[u32], 0x00000004[u32]) = (add[u32] ebp_0[u32] 0x00000004[u32])
Symbolic insn@0x08048432[2]: writeRegister(esp, (add[u32] ebp_0[u32] 0x00000004[u32]))
Symbolic insn@0x08048432[2]: boolean_(1) = true[u1]
Symbolic insn@0x08048432[2]: undefined_(32) = V4[u32]
Symbolic insn@0x08048432[2]: readMemory(ss, ebp_0[u32], V4[u32], true[u1]) = V4[u32]
Symbolic insn@0x08048432[2]: writeRegister(ebp, V4[u32])
Symbolic insn@0x08048432[2]: finishInstruction(pop ebp)
registers:
 eax write-only = 0x00000000[u32]
 esp = (add[u32] ebp_0[u32] 0x00000004[u32])
 ebp read-before-write = V4[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048433<134513715>[u32]
 cf write-only = false[u1]
 pf write-only = true[u1]
 af write-only = V2[u1]<unspec>
 zf write-only = true[u1]
 sf write-only = false[u1]
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V4[u32])
 addr=(add[u32] ebp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V4[u32])
 addr=(add[u32] ebp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V4[u32])
 addr=ebp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V4[u32])

0x08048433: ret 
Symbolic: startInstruction(0x08048433: ret)
Symbolic insn@0x08048433[3]: number_(32, 134513715) = 0x08048433<134513715>[u32]
Symbolic insn@0x08048433[3]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048433[3]: add(0x08048433<134513715>[u32], 0x00000001[u32]) = 0x08048434<134513716>[u32]
Symbolic insn@0x08048433[3]: writeRegister(eip, 0x08048434<134513716>[u32])
Symbolic insn@0x08048433[3]: undefined_(32) = V5[u32]
Symbolic insn@0x08048433[3]: readRegister(esp, V5[u32]) = (add[u32] ebp_0[u32] 0x00000004[u32])
Symbolic insn@0x08048433[3]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x08048433[3]: add((add[u32] ebp_0[u32] 0x00000004[u32]), 0x00000004[u32]) = (add[u32] ebp_0[u32] 0x00000008[u32])
Symbolic insn@0x08048433[3]: boolean_(1) = true[u1]
Symbolic insn@0x08048433[3]: undefined_(32) = V6[u32]
Symbolic insn@0x08048433[3]: readMemory(ss, (add[u32] ebp_0[u32] 0x00000004[u32]), V6[u32], true[u1]) = V6[u32]
Symbolic insn@0x08048433[3]: filterReturnTarget(V6[u32]) = V6[u32]
Symbolic insn@0x08048433[3]: writeRegister(eip, V6[u32])
Symbolic insn@0x08048433[3]: writeRegister(esp, (add[u32] ebp_0[u32] 0x00000008[u32]))
Symbolic insn@0x08048433[3]: finishInstruction(ret)
registers:
 eax write-only = 0x00000000[u32]
 esp = (add[u32] ebp_0[u32] 0x00000008[u32])
 ebp read-before-write = V4[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = V6[u32]
 cf write-only = false[u1]
 pf write-only = true[u1]
 af write-only = V2[u1]<unspec>
 zf write-only = true[u1]
 sf write-only = false[u1]
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebp_0[u32] 0x00000007[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V6[u32])
 addr=(add[u32] ebp_0[u32] 0x00000006[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V6[u32])
 addr=(add[u32] ebp_0[u32] 0x00000005[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V6[u32])
 addr=(add[u32] ebp_0[u32] 0x00000004[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V6[u32])
 addr=(add[u32] ebp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V4[u32])
 addr=(add[u32] ebp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V4[u32])
 addr=(add[u32] ebp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V4[u32])
 addr=ebp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V4[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x08048440: push ebp
Symbolic: startInstruction(0x08048440: push ebp)
Symbolic insn@0x08048440[0]: number_(32, 134513728) = 0x08048440<134513728>[u32]
Symbolic insn@0x08048440[0]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048440[0]: add(0x08048440<134513728>[u32], 0x00000001[u32]) = 0x08048441<134513729>[u32]
Symbolic insn@0x08048440[0]: writeRegister(eip, 0x08048441<134513729>[u32])
Symbolic insn@0x08048440[0]: undefined_(32) = V1[u32]
Symbolic insn@0x08048440[0]: readRegister(ebp, V1[u32]) = ebp_0[u32]
Symbolic insn@0x08048440[0]: undefined_(32) = V2[u32]
Symbolic insn@0x08048440[0]: readRegister(esp, V2[u32]) = esp_0[u32]
Symbolic insn@0x08048440[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048440[0]: add(esp_0[u32], 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048440[0]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048440[0]: boolean_(1) = true[u1]
Symbolic insn@0x08048440[0]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), ebp_0[u32], true[u1])
Symbolic insn@0x08048440[0]: finishInstruction(push ebp)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048441<134513729>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048441: mov ebp, esp
Symbolic: startInstruction(0x08048441: mov ebp, esp)
Symbolic insn@0x08048441[1]: number_(32, 134513729) = 0x08048441<134513729>[u32]
Symbolic insn@0x08048441[1]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x08048441[1]: add(0x08048441<134513729>[u32], 0x00000002[u32]) = 0x08048443<134513731>[u32]
Symbolic insn@0x08048441[1]: writeRegister(eip, 0x08048443<134513731>[u32])
Symbolic insn@0x08048441[1]: undefined_(32) = V3[u32]
Symbolic insn@0x08048441[1]: readRegister(esp, V3[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048441[1]: writeRegister(ebp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048441[1]: finishInstruction(mov ebp, esp)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048443<134513731>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048443: sub esp, 0x08
Symbolic: startInstruction(0x08048443: sub esp, 0x08)
Symbolic insn@0x08048443[2]: number_(32, 134513731) = 0x08048443<134513731>[u32]
Symbolic insn@0x08048443[2]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x08048443[2]: add(0x08048443<134513731>[u32], 0x00000003[u32]) = 0x08048446<134513734>[u32]
Symbolic insn@0x08048443[2]: writeRegister(eip, 0x08048446<134513734>[u32])
Symbolic insn@0x08048443[2]: undefined_(32) = V4[u32]
Symbolic insn@0x08048443[2]: readRegister(esp, V4[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048443[2]: number_(8, 8) = 0x08[u8]
Symbolic insn@0x08048443[2]: signExtend(0x08[u8], 32) = 0x00000008[u32]
Symbolic insn@0x08048443[2]: boolean_(0) = false[u1]
Symbolic insn@0x08048443[2]: invert(0x00000008[u32]) = 0xfffffff7<4294967287,-9>[u32]
Symbolic insn@0x08048443[2]: invert(false[u1]) = true[u1]
Symbolic insn@0x08048443[2]: addWithCarries((add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), 0xfffffff7<4294967287,-9>[u32], true[u1]) = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
Symbolic insn@0x08048443[2]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x08048443[2]: extract((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048443[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048443[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048443[2]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048443[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048443[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048443[2]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048443[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048443[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048443[2]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048443[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048443[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048443[2]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048443[2]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048443[2]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048443[2]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048443[2]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))))
Symbolic insn@0x08048443[2]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))))
Symbolic insn@0x08048443[2]: extract((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048443[2]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048443[2]: equalToZero((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) = (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048443[2]: writeRegister(zf, (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048443[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x08048443[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x08048443[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x08048443[2]: invert((extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))) = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
Symbolic insn@0x08048443[2]: writeRegister(af, (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))))
Symbolic insn@0x08048443[2]: invert((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))) = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
Symbolic insn@0x08048443[2]: writeRegister(cf, (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))))
Symbolic insn@0x08048443[2]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
Symbolic insn@0x08048443[2]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))))
Symbolic insn@0x08048443[2]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048443[2]: finishInstruction(sub esp, 0x08)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048446<134513734>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048446: mov dword ss:[esp], 0x080485d4<"Hello, world.\n">
Symbolic: startInstruction(0x08048446: mov dword ss:[esp], 0x080485d4<"Hello, world.\n">)
Symbolic insn@0x08048446[3]: number_(32, 134513734) = 0x08048446<134513734>[u32]
Symbolic insn@0x08048446[3]: number_(32, 7) = 0x00000007[u32]
Symbolic insn@0x08048446[3]: add(0x08048446<134513734>[u32], 0x00000007[u32]) = 0x0804844d<134513741>[u32]
Symbolic insn@0x08048446[3]: writeRegister(eip, 0x0804844d<134513741>[u32])
Symbolic insn@0x08048446[3]: number_(32, 134514132) = 0x080485d4<134514132>[u32]
Symbolic insn@0x08048446[3]: undefined_(32) = V5[u32]
Symbolic insn@0x08048446[3]: readRegister(esp, V5[u32]) = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
Symbolic insn@0x08048446[3]: boolean_(1) = true[u1]
Symbolic insn@0x08048446[3]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 0x080485d4<134514132>[u32], true[u1])
Symbolic insn@0x08048446[3]: finishInstruction(mov dword ss:[esp], 0x080485d4<"Hello, world.\n">)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x0804844d<134513741>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xfffffff7<4294967287,-9>[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff6<4294967286,-10>[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff5<4294967285,-11>[u32]) write-only value=0x85<-123>[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) write-only value=0xd4<-44>[u8]
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x0804844d: call 0x08048300<puts@plt>
Symbolic: startInstruction(0x0804844d: call 0x08048300<puts@plt>)
Symbolic insn@0x0804844d[4]: number_(32, 134513741) = 0x0804844d<134513741>[u32]
Symbolic insn@0x0804844d[4]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x0804844d[4]: add(0x0804844d<134513741>[u32], 0x00000005[u32]) = 0x08048452<134513746>[u32]
Symbolic insn@0x0804844d[4]: writeRegister(eip, 0x08048452<134513746>[u32])
Symbolic insn@0x0804844d[4]: number_(32, 134513408) = 0x08048300<134513408>[u32]
Symbolic insn@0x0804844d[4]: unsignedExtend(0x08048300<134513408>[u32], 32) = 0x08048300<134513408>[u32]
Symbolic insn@0x0804844d[4]: undefined_(32) = V6[u32]
Symbolic insn@0x0804844d[4]: readRegister(esp, V6[u32]) = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
Symbolic insn@0x0804844d[4]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x0804844d[4]: add((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])
Symbolic insn@0x0804844d[4]: boolean_(1) = true[u1]
Symbolic insn@0x0804844d[4]: undefined_(32) = V7[u32]
Symbolic insn@0x0804844d[4]: readRegister(eip, V7[u32]) = 0x08048452<134513746>[u32]
Symbolic insn@0x0804844d[4]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]), 0x08048452<134513746>[u32], true[u1])
Symbolic insn@0x0804844d[4]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]))
Symbolic insn@0x0804844d[4]: filterCallTarget(0x08048300<134513408>[u32]) = 0x08048300<134513408>[u32]
Symbolic insn@0x0804844d[4]: writeRegister(eip, 0x08048300<134513408>[u32])
Symbolic insn@0x0804844d[4]: finishInstruction(call 0x08048300<puts@plt>)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip = 0x08048300<134513408>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xfffffff3<4294967283,-13>[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff2<4294967282,-14>[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff1<4294967281,-15>[u32]) write-only value=0x84<-124>[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]) write-only value=0x52[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff7<4294967287,-9>[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff6<4294967286,-10>[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff5<4294967285,-11>[u32]) write-only value=0x85<-123>[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) write-only value=0xd4<-44>[u8]
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x08048452: mov esp, ebp
Symbolic: startInstruction(0x08048452: mov esp, ebp)
Symbolic insn@0x08048452[0]: number_(32, 134513746) = 0x08048452<134513746>[u32]
Symbolic insn@0x08048452[0]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x08048452[0]: add(0x08048452<134513746>[u32], 0x00000002[u32]) = 0x08048454<134513748>[u32]
Symbolic insn@0x08048452[0]: writeRegister(eip, 0x08048454<134513748>[u32])
Symbolic insn@0x08048452[0]: undefined_(32) = V1[u32]
Symbolic insn@0x08048452[0]: readRegister(ebp, V1[u32]) = ebp_0[u32]
Symbolic insn@0x08048452[0]: writeRegister(esp, ebp_0[u32])
Symbolic insn@0x08048452[0]: finishInstruction(mov esp, ebp)
registers:
 esp write-only = ebp_0[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048454<134513748>[u32]
 fpstatus_top = 0x0[u3]
memory:

0x08048454: pop ebp
Symbolic: startInstruction(0x08048454: pop ebp)
Symbolic insn@0x08048454[1]: number_(32, 134513748) = 0x08048454<134513748>[u32]
Symbolic insn@0x08048454[1]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048454[1]: add(0x08048454<134513748>[u32], 0x00000001[u32]) = 0x08048455<134513749>[u32]
Symbolic insn@0x08048454[1]: writeRegister(eip, 0x08048455<134513749>[u32])
Symbolic insn@0x08048454[1]: undefined_(32) = V2[u32]
Symbolic insn@0x08048454[1]: readRegister(esp, V2[u32]) = ebp_0[u32]
Symbolic insn@0x08048454[1]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x08048454[1]: add(ebp_0[u32], 0x00000004[u32]) = (add[u32] ebp_0[u32] 0x00000004[u32])
Symbolic insn@0x08048454[1]: writeRegister(esp, (add[u32] ebp_0[u32] 0x00000004[u32]))
Symbolic insn@0x08048454[1]: boolean_(1) = true[u1]
Symbolic insn@0x08048454[1]: undefined_(32) = V3[u32]
Symbolic insn@0x08048454[1]: readMemory(ss, ebp_0[u32], V3[u32], true[u1]) = V3[u32]
Symbolic insn@0x08048454[1]: writeRegister(ebp, V3[u32])
Symbolic insn@0x08048454[1]: finishInstruction(pop ebp)
registers:
 esp = (add[u32] ebp_0[u32] 0x00000004[u32])
 ebp read-before-write = V3[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048455<134513749>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] ebp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] ebp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=ebp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])

0x08048455: ret 
Symbolic: startInstruction(0x08048455: ret)
Symbolic insn@0x08048455[2]: number_(32, 134513749) = 0x08048455<134513749>[u32]
Symbolic insn@0x08048455[2]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048455[2]: add(0x08048455<134513749>[u32], 0x00000001[u32]) = 0x08048456<134513750>[u32]
Symbolic insn@0x08048455[2]: writeRegister(eip, 0x08048456<134513750>[u32])
Symbolic insn@0x08048455[2]: undefined_(32) = V4[u32]
Symbolic insn@0x08048455[2]: readRegister(esp, V4[u32]) = (add[u32] ebp_0[u32] 0x00000004[u32])
Symbolic insn@0x08048455[2]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x08048455[2]: add((add[u32] ebp_0[u32] 0x00000004[u32]), 0x00000004[u32]) = (add[u32] ebp_0[u32] 0x00000008[u32])
Symbolic insn@0x08048455[2]: boolean_(1) = true[u1]
Symbolic insn@0x08048455[2]: undefined_(32) = V5[u32]
Symbolic insn@0x08048455[2]: readMemory(ss, (add[u32] ebp_0[u32] 0x00000004[u32]), V5[u32], true[u1]) = V5[u32]
Symbolic insn@0x08048455[2]: filterReturnTarget(V5[u32]) = V5[u32]
Symbolic insn@0x08048455[2]: writeRegister(eip, V5[u32])
Symbolic insn@0x08048455[2]: writeRegister(esp, (add[u32] ebp_0[u32] 0x00000008[u32]))
Symbolic insn@0x08048455[2]: finishInstruction(ret)
registers:
 esp = (add[u32] ebp_0[u32] 0x00000008[u32])
 ebp read-before-write = V3[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = V5[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebp_0[u32] 0x00000007[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V5[u32])
 addr=(add[u32] ebp_0[u32] 0x00000006[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V5[u32])
 addr=(add[u32] ebp_0[u32] 0x00000005[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V5[u32])
 addr=(add[u32] ebp_0[u32] 0x00000004[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
 addr=(add[u32] ebp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] ebp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] ebp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=ebp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x08048460: push ebp
Symbolic: startInstruction(0x08048460: push ebp)
Symbolic insn@0x08048460[0]: number_(32, 134513760) = 0x08048460<134513760>[u32]
Symbolic insn@0x08048460[0]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048460[0]: add(0x08048460<134513760>[u32], 0x00000001[u32]) = 0x08048461<134513761>[u32]
Symbolic insn@0x08048460[0]: writeRegister(eip, 0x08048461<134513761>[u32])
Symbolic insn@0x08048460[0]: undefined_(32) = V1[u32]
Symbolic insn@0x08048460[0]: readRegister(ebp, V1[u32]) = ebp_0[u32]
Symbolic insn@0x08048460[0]: undefined_(32) = V2[u32]
Symbolic insn@0x08048460[0]: readRegister(esp, V2[u32]) = esp_0[u32]
Symbolic insn@0x08048460[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048460[0]: add(esp_0[u32], 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048460[0]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048460[0]: boolean_(1) = true[u1]
Symbolic insn@0x08048460[0]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), ebp_0[u32], true[u1])
Symbolic insn@0x08048460[0]: finishInstruction(push ebp)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048461<134513761>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048461: mov ebp, esp
Symbolic: startInstruction(0x08048461: mov ebp, esp)
Symbolic insn@0x08048461[1]: number_(32, 134513761) = 0x08048461<134513761>[u32]
Symbolic insn@0x08048461[1]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x08048461[1]: add(0x08048461<134513761>[u32], 0x00000002[u32]) = 0x08048463<134513763>[u32]
Symbolic insn@0x08048461[1]: writeRegister(eip, 0x08048463<134513763>[u32])
Symbolic insn@0x08048461[1]: undefined_(32) = V3[u32]
Symbolic insn@0x08048461[1]: readRegister(esp, V3[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048461[1]: writeRegister(ebp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048461[1]: finishInstruction(mov ebp, esp)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048463<134513763>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048463: sub esp, 0x08
Symbolic: startInstruction(0x08048463: sub esp, 0x08)
Symbolic insn@0x08048463[2]: number_(32, 134513763) = 0x08048463<134513763>[u32]
Symbolic insn@0x08048463[2]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x08048463[2]: add(0x08048463<134513763>[u32], 0x00000003[u32]) = 0x08048466<134513766>[u32]
Symbolic insn@0x08048463[2]: writeRegister(eip, 0x08048466<134513766>[u32])
Symbolic insn@0x08048463[2]: undefined_(32) = V4[u32]
Symbolic insn@0x08048463[2]: readRegister(esp, V4[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048463[2]: number_(8, 8) = 0x08[u8]
Symbolic insn@0x08048463[2]: signExtend(0x08[u8], 32) = 0x00000008[u32]
Symbolic insn@0x08048463[2]: boolean_(0) = false[u1]
Symbolic insn@0x08048463[2]: invert(0x00000008[u32]) = 0xfffffff7<4294967287,-9>[u32]
Symbolic insn@0x08048463[2]: invert(false[u1]) = true[u1]
Symbolic insn@0x08048463[2]: addWithCarries((add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), 0xfffffff7<4294967287,-9>[u32], true[u1]) = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
Symbolic insn@0x08048463[2]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x08048463[2]: extract((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048463[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048463[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048463[2]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048463[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048463[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048463[2]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048463[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048463[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048463[2]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048463[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048463[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048463[2]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048463[2]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048463[2]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048463[2]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048463[2]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))))
Symbolic insn@0x08048463[2]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))))
Symbolic insn@0x08048463[2]: extract((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048463[2]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048463[2]: equalToZero((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) = (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048463[2]: writeRegister(zf, (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048463[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x08048463[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x08048463[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x08048463[2]: invert((extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))) = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
Symbolic insn@0x08048463[2]: writeRegister(af, (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))))
Symbolic insn@0x08048463[2]: invert((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))) = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
Symbolic insn@0x08048463[2]: writeRegister(cf, (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))))
Symbolic insn@0x08048463[2]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
Symbolic insn@0x08048463[2]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))))
Symbolic insn@0x08048463[2]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048463[2]: finishInstruction(sub esp, 0x08)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048466<134513766>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048466: mov dword ss:[esp], 0x080485d4<"Hello, world.\n">
Symbolic: startInstruction(0x08048466: mov dword ss:[esp], 0x080485d4<"Hello, world.\n">)
Symbolic insn@0x08048466[3]: number_(32, 134513766) = 0x08048466<134513766>[u32]
Symbolic insn@0x08048466[3]: number_(32, 7) = 0x00000007[u32]
Symbolic insn@0x08048466[3]: add(0x08048466<134513766>[u32], 0x00000007[u32]) = 0x0804846d<134513773>[u32]
Symbolic insn@0x08048466[3]: writeRegister(eip, 0x0804846d<134513773>[u32])
Symbolic insn@0x08048466[3]: number_(32, 134514132) = 0x080485d4<134514132>[u32]
Symbolic insn@0x08048466[3]: undefined_(32) = V5[u32]
Symbolic insn@0x08048466[3]: readRegister(esp, V5[u32]) = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
Symbolic insn@0x08048466[3]: boolean_(1) = true[u1]
Symbolic insn@0x08048466[3]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 0x080485d4<134514132>[u32], true[u1])
Symbolic insn@0x08048466[3]: finishInstruction(mov dword ss:[esp], 0x080485d4<"Hello, world.\n">)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x0804846d<134513773>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xfffffff7<4294967287,-9>[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff6<4294967286,-10>[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff5<4294967285,-11>[u32]) write-only value=0x85<-123>[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) write-only value=0xd4<-44>[u8]
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x0804846d: call 0x08048300<puts@plt>
Symbolic: startInstruction(0x0804846d: call 0x08048300<puts@plt>)
Symbolic insn@0x0804846d[4]: number_(32, 134513773) = 0x0804846d<134513773>[u32]
Symbolic insn@0x0804846d[4]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x0804846d[4]: add(0x0804846d<134513773>[u32], 0x00000005[u32]) = 0x08048472<134513778>[u32]
Symbolic insn@0x0804846d[4]: writeRegister(eip, 0x08048472<134513778>[u32])
Symbolic insn@0x0804846d[4]: number_(32, 134513408) = 0x08048300<134513408>[u32]
Symbolic insn@0x0804846d[4]: unsignedExtend(0x08048300<134513408>[u32], 32) = 0x08048300<134513408>[u32]
Symbolic insn@0x0804846d[4]: undefined_(32) = V6[u32]
Symbolic insn@0x0804846d[4]: readRegister(esp, V6[u32]) = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
Symbolic insn@0x0804846d[4]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x0804846d[4]: add((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])
Symbolic insn@0x0804846d[4]: boolean_(1) = true[u1]
Symbolic insn@0x0804846d[4]: undefined_(32) = V7[u32]
Symbolic insn@0x0804846d[4]: readRegister(eip, V7[u32]) = 0x08048472<134513778>[u32]
Symbolic insn@0x0804846d[4]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]), 0x08048472<134513778>[u32], true[u1])
Symbolic insn@0x0804846d[4]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]))
Symbolic insn@0x0804846d[4]: filterCallTarget(0x08048300<134513408>[u32]) = 0x08048300<134513408>[u32]
Symbolic insn@0x0804846d[4]: writeRegister(eip, 0x08048300<134513408>[u32])
Symbolic insn@0x0804846d[4]: finishInstruction(call 0x08048300<puts@plt>)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip = 0x08048300<134513408>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xfffffff3<4294967283,-13>[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff2<4294967282,-14>[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff1<4294967281,-15>[u32]) write-only value=0x84<-124>[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]) write-only value=0x72[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff7<4294967287,-9>[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff6<4294967286,-10>[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff5<4294967285,-11>[u32]) write-only value=0x85<-123>[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) write-only value=0xd4<-44>[u8]
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x08048472: mov dword ss:[esp], 0x00000000
Symbolic: startInstruction(0x08048472: mov dword ss:[esp], 0x00000000)
Symbolic insn@0x08048472[0]: number_(32, 134513778) = 0x08048472<134513778>[u32]
Symbolic insn@0x08048472[0]: number_(32, 7) = 0x00000007[u32]
Symbolic insn@0x08048472[0]: add(0x08048472<134513778>[u32], 0x00000007[u32]) = 0x08048479<134513785>[u32]
Symbolic insn@0x08048472[0]: writeRegister(eip, 0x08048479<134513785>[u32])
Symbolic insn@0x08048472[0]: number_(32, 0) = 0x00000000[u32]
Symbolic insn@0x08048472[0]: undefined_(32) = V1[u32]
Symbolic insn@0x08048472[0]: readRegister(esp, V1[u32]) = esp_0[u32]
Symbolic insn@0x08048472[0]: boolean_(1) = true[u1]
Symbolic insn@0x08048472[0]: writeMemory(ss, esp_0[u32], 0x00000000[u32], true[u1])
Symbolic insn@0x08048472[0]: finishInstruction(mov dword ss:[esp], 0x00000000)
registers:
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048479<134513785>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) write-only value=0x00[u8]
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) write-only value=0x00[u8]
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) write-only value=0x00[u8]
 addr=esp_0[u32] write-only value=0x00[u8]

0x08048479: call 0x08048320<_exit@plt>
Symbolic: startInstruction(0x08048479: call 0x08048320<_exit@plt>)
Symbolic insn@0x08048479[1]: number_(32, 134513785) = 0x08048479<134513785>[u32]
Symbolic insn@0x08048479[1]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x08048479[1]: add(0x08048479<134513785>[u32], 0x00000005[u32]) = 0x0804847e<134513790>[u32]
Symbolic insn@0x08048479[1]: writeRegister(eip, 0x0804847e<134513790>[u32])
Symbolic insn@0x08048479[1]: number_(32, 134513440) = 0x08048320<134513440>[u32]
Symbolic insn@0x08048479[1]: unsignedExtend(0x08048320<134513440>[u32], 32) = 0x08048320<134513440>[u32]
Symbolic insn@0x08048479[1]: undefined_(32) = V2[u32]
Symbolic insn@0x08048479[1]: readRegister(esp, V2[u32]) = esp_0[u32]
Symbolic insn@0x08048479[1]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048479[1]: add(esp_0[u32], 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048479[1]: boolean_(1) = true[u1]
Symbolic insn@0x08048479[1]: undefined_(32) = V3[u32]
Symbolic insn@0x08048479[1]: readRegister(eip, V3[u32]) = 0x0804847e<134513790>[u32]
Symbolic insn@0x08048479[1]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), 0x0804847e<134513790>[u32], true[u1])
Symbolic insn@0x08048479[1]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048479[1]: filterCallTarget(0x08048320<134513440>[u32]) = 0x08048320<134513440>[u32]
Symbolic insn@0x08048479[1]: writeRegister(eip, 0x08048320<134513440>[u32])
Symbolic insn@0x08048479[1]: finishInstruction(call 0x08048320<_exit@plt>)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip = 0x08048320<134513440>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=0x84<-124>[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=0x7e[u8]
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) write-only value=0x00[u8]
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) write-only value=0x00[u8]
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) write-only value=0x00[u8]
 addr=esp_0[u32] write-only value=0x00[u8]
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x08048480: push ebp
Symbolic: startInstruction(0x08048480: push ebp)
Symbolic insn@0x08048480[0]: number_(32, 134513792) = 0x08048480<134513792>[u32]
Symbolic insn@0x08048480[0]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048480[0]: add(0x08048480<134513792>[u32], 0x00000001[u32]) = 0x08048481<134513793>[u32]
Symbolic insn@0x08048480[0]: writeRegister(eip, 0x08048481<134513793>[u32])
Symbolic insn@0x08048480[0]: undefined_(32) = V1[u32]
Symbolic insn@0x08048480[0]: readRegister(ebp, V1[u32]) = ebp_0[u32]
Symbolic insn@0x08048480[0]: undefined_(32) = V2[u32]
Symbolic insn@0x08048480[0]: readRegister(esp, V2[u32]) = esp_0[u32]
Symbolic insn@0x08048480[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048480[0]: add(esp_0[u32], 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048480[0]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048480[0]: boolean_(1) = true[u1]
Symbolic insn@0x08048480[0]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), ebp_0[u32], true[u1])
Symbolic insn@0x08048480[0]: finishInstruction(push ebp)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048481<134513793>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048481: mov ebp, esp
Symbolic: startInstruction(0x08048481: mov ebp, esp)
Symbolic insn@0x08048481[1]: number_(32, 134513793) = 0x08048481<134513793>[u32]
Symbolic insn@0x08048481[1]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x08048481[1]: add(0x08048481<134513793>[u32], 0x00000002[u32]) = 0x08048483<134513795>[u32]
Symbolic insn@0x08048481[1]: writeRegister(eip, 0x08048483<134513795>[u32])
Symbolic insn@0x08048481[1]: undefined_(32) = V3[u32]
Symbolic insn@0x08048481[1]: readRegister(esp, V3[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048481[1]: writeRegister(ebp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048481[1]: finishInstruction(mov ebp, esp)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048483<134513795>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048483: sub esp, 0x08
Symbolic: startInstruction(0x08048483: sub esp, 0x08)
Symbolic insn@0x08048483[2]: number_(32, 134513795) = 0x08048483<134513795>[u32]
Symbolic insn@0x08048483[2]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x08048483[2]: add(0x08048483<134513795>[u32], 0x00000003[u32]) = 0x08048486<134513798>[u32]
Symbolic insn@0x08048483[2]: writeRegister(eip, 0x08048486<134513798>[u32])
Symbolic insn@0x08048483[2]: undefined_(32) = V4[u32]
Symbolic insn@0x08048483[2]: readRegister(esp, V4[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048483[2]: number_(8, 8) = 0x08[u8]
Symbolic insn@0x08048483[2]: signExtend(0x08[u8], 32) = 0x00000008[u32]
Symbolic insn@0x08048483[2]: boolean_(0) = false[u1]
Symbolic insn@0x08048483[2]: invert(0x00000008[u32]) = 0xfffffff7<4294967287,-9>[u32]
Symbolic insn@0x08048483[2]: invert(false[u1]) = true[u1]
Symbolic insn@0x08048483[2]: addWithCarries((add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), 0xfffffff7<4294967287,-9>[u32], true[u1]) = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
Symbolic insn@0x08048483[2]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x08048483[2]: extract((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048483[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048483[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048483[2]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048483[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048483[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048483[2]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048483[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048483[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048483[2]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048483[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048483[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048483[2]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048483[2]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048483[2]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048483[2]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048483[2]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))))
Symbolic insn@0x08048483[2]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))))
Symbolic insn@0x08048483[2]: extract((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048483[2]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048483[2]: equalToZero((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) = (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048483[2]: writeRegister(zf, (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048483[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x08048483[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x08048483[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))
Symbolic insn@0x08048483[2]: invert((extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))) = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
Symbolic insn@0x08048483[2]: writeRegister(af, (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))))
Symbolic insn@0x08048483[2]: invert((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))) = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
Symbolic insn@0x08048483[2]: writeRegister(cf, (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))))
Symbolic insn@0x08048483[2]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
Symbolic insn@0x08048483[2]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33]))))
Symbolic insn@0x08048483[2]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048483[2]: finishInstruction(sub esp, 0x08)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048486<134513798>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048486: inc dword ds:[0x080496f8<(data)ncaught>]
Symbolic: startInstruction(0x08048486: inc dword ds:[0x080496f8<(data)ncaught>])
Symbolic insn@0x08048486[3]: number_(32, 134513798) = 0x08048486<134513798>[u32]
Symbolic insn@0x08048486[3]: number_(32, 6) = 0x00000006[u32]
Symbolic insn@0x08048486[3]: add(0x08048486<134513798>[u32], 0x00000006[u32]) = 0x0804848c<134513804>[u32]
Symbolic insn@0x08048486[3]: writeRegister(eip, 0x0804848c<134513804>[u32])
Symbolic insn@0x08048486[3]: number_(32, 134518520) = 0x080496f8<134518520>[u32]
Symbolic insn@0x08048486[3]: undefined_(32) = V5[u32]
Symbolic insn@0x08048486[3]: boolean_(1) = true[u1]
Symbolic insn@0x08048486[3]: readMemory(ds, 0x080496f8<134518520>[u32], V5[u32], true[u1]) = V5[u32]
Symbolic insn@0x08048486[3]: boolean_(0) = false[u1]
Symbolic insn@0x08048486[3]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048486[3]: addWithCarries(V5[u32], 0x00000001[u32], false[u1]) = (add[u32] V5[u32] 0x00000001[u32])
Symbolic insn@0x08048486[3]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]))
Symbolic insn@0x08048486[3]: extract((add[u32] V5[u32] 0x00000001[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V5[u32] 0x00000001[u32]))
Symbolic insn@0x08048486[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V5[u32] 0x00000001[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V5[u32] 0x00000001[u32]))
Symbolic insn@0x08048486[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V5[u32] 0x00000001[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V5[u32] 0x00000001[u32]))
Symbolic insn@0x08048486[3]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V5[u32] 0x00000001[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V5[u32] 0x00000001[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V5[u32] 0x00000001[u32])))
Symbolic insn@0x08048486[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V5[u32] 0x00000001[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V5[u32] 0x00000001[u32]))
Symbolic insn@0x08048486[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V5[u32] 0x00000001[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V5[u32] 0x00000001[u32]))
Symbolic insn@0x08048486[3]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V5[u32] 0x00000001[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V5[u32] 0x00000001[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V5[u32] 0x00000001[u32])))
Symbolic insn@0x08048486[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V5[u32] 0x00000001[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V5[u32] 0x00000001[u32]))
Symbolic insn@0x08048486[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V5[u32] 0x00000001[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V5[u32] 0x00000001[u32]))
Symbolic insn@0x08048486[3]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V5[u32] 0x00000001[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V5[u32] 0x00000001[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V5[u32] 0x00000001[u32])))
Symbolic insn@0x08048486[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V5[u32] 0x00000001[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V5[u32] 0x00000001[u32]))
Symbolic insn@0x08048486[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V5[u32] 0x00000001[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V5[u32] 0x00000001[u32]))
Symbolic insn@0x08048486[3]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V5[u32] 0x00000001[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V5[u32] 0x00000001[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V5[u32] 0x00000001[u32])))
Symbolic insn@0x08048486[3]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V5[u32] 0x00000001[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V5[u32] 0x00000001[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V5[u32] 0x00000001[u32])))
Symbolic insn@0x08048486[3]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V5[u32] 0x00000001[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V5[u32] 0x00000001[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V5[u32] 0x00000001[u32])))
Symbolic insn@0x08048486[3]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V5[u32] 0x00000001[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V5[u32] 0x00000001[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V5[u32] 0x00000001[u32])))
Symbolic insn@0x08048486[3]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V5[u32] 0x00000001[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V5[u32] 0x00000001[u32]))))
Symbolic insn@0x08048486[3]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V5[u32] 0x00000001[u32])))))
Symbolic insn@0x08048486[3]: extract((add[u32] V5[u32] 0x00000001[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V5[u32] 0x00000001[u32]))
Symbolic insn@0x08048486[3]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V5[u32] 0x00000001[u32])))
Symbolic insn@0x08048486[3]: equalToZero((add[u32] V5[u32] 0x00000001[u32])) = (zerop[u1] (add[u32] V5[u32] 0x00000001[u32]))
Symbolic insn@0x08048486[3]: writeRegister(zf, (zerop[u1] (add[u32] V5[u32] 0x00000001[u32])))
Symbolic insn@0x08048486[3]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33])), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]))
Symbolic insn@0x08048486[3]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33])), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]))
Symbolic insn@0x08048486[3]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33])), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]))
Symbolic insn@0x08048486[3]: writeRegister(af, (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33])))
Symbolic insn@0x08048486[3]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33])), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33])))
Symbolic insn@0x08048486[3]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]))))
Symbolic insn@0x08048486[3]: number_(32, 134518520) = 0x080496f8<134518520>[u32]
Symbolic insn@0x08048486[3]: boolean_(1) = true[u1]
Symbolic insn@0x08048486[3]: writeMemory(ds, 0x080496f8<134518520>[u32], (add[u32] V5[u32] 0x00000001[u32]), true[u1])
Symbolic insn@0x08048486[3]: finishInstruction(inc dword ds:[0x080496f8<(data)ncaught>])
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = 0x0804848c<134513804>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V5[u32] 0x00000001[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]))
 zf write-only = (zerop[u1] (add[u32] V5[u32] 0x00000001[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V5[u32] 0x00000001[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=0x080496fb<134518523>[u32] write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] (add[u32] V5[u32] 0x00000001[u32]))
 addr=0x080496fa<134518522>[u32] write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] (add[u32] V5[u32] 0x00000001[u32]))
 addr=0x080496f9<134518521>[u32] write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] (add[u32] V5[u32] 0x00000001[u32]))
 addr=0x080496f8<134518520>[u32] write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V5[u32] 0x00000001[u32]))
 addr=0x080496fb<134518523>[u32] read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V5[u32])
 addr=0x080496fa<134518522>[u32] read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V5[u32])
 addr=0x080496f9<134518521>[u32] read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V5[u32])
 addr=0x080496f8<134518520>[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x0804848c: mov dword ss:[esp], 0x080485d4<"Hello, world.\n">
Symbolic: startInstruction(0x0804848c: mov dword ss:[esp], 0x080485d4<"Hello, world.\n">)
Symbolic insn@0x0804848c[4]: number_(32, 134513804) = 0x0804848c<134513804>[u32]
Symbolic insn@0x0804848c[4]: number_(32, 7) = 0x00000007[u32]
Symbolic insn@0x0804848c[4]: add(0x0804848c<134513804>[u32], 0x00000007[u32]) = 0x08048493<134513811>[u32]
Symbolic insn@0x0804848c[4]: writeRegister(eip, 0x08048493<134513811>[u32])
Symbolic insn@0x0804848c[4]: number_(32, 134514132) = 0x080485d4<134514132>[u32]
Symbolic insn@0x0804848c[4]: undefined_(32) = V6[u32]
Symbolic insn@0x0804848c[4]: readRegister(esp, V6[u32]) = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
Symbolic insn@0x0804848c[4]: boolean_(1) = true[u1]
Symbolic insn@0x0804848c[4]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 0x080485d4<134514132>[u32], true[u1])
Symbolic insn@0x0804848c[4]: finishInstruction(mov dword ss:[esp], 0x080485d4<"Hello, world.\n">)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = 0x08048493<134513811>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V5[u32] 0x00000001[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]))
 zf write-only = (zerop[u1] (add[u32] V5[u32] 0x00000001[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V5[u32] 0x00000001[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xfffffff7<4294967287,-9>[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff6<4294967286,-10>[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff5<4294967285,-11>[u32]) write-only value=0x85<-123>[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) write-only value=0xd4<-44>[u8]
 addr=0x080496fb<134518523>[u32] write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] (add[u32] V5[u32] 0x00000001[u32]))
 addr=0x080496fa<134518522>[u32] write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] (add[u32] V5[u32] 0x00000001[u32]))
 addr=0x080496f9<134518521>[u32] write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] (add[u32] V5[u32] 0x00000001[u32]))
 addr=0x080496f8<134518520>[u32] write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V5[u32] 0x00000001[u32]))
 addr=0x080496fb<134518523>[u32] read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V5[u32])
 addr=0x080496fa<134518522>[u32] read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V5[u32])
 addr=0x080496f9<134518521>[u32] read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V5[u32])
 addr=0x080496f8<134518520>[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048493: call 0x08048300<puts@plt>
Symbolic: startInstruction(0x08048493: call 0x08048300<puts@plt>)
Symbolic insn@0x08048493[5]: number_(32, 134513811) = 0x08048493<134513811>[u32]
Symbolic insn@0x08048493[5]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x08048493[5]: add(0x08048493<134513811>[u32], 0x00000005[u32]) = 0x08048498<134513816>[u32]
Symbolic insn@0x08048493[5]: writeRegister(eip, 0x08048498<134513816>[u32])
Symbolic insn@0x08048493[5]: number_(32, 134513408) = 0x08048300<134513408>[u32]
Symbolic insn@0x08048493[5]: unsignedExtend(0x08048300<134513408>[u32], 32) = 0x08048300<134513408>[u32]
Symbolic insn@0x08048493[5]: undefined_(32) = V7[u32]
Symbolic insn@0x08048493[5]: readRegister(esp, V7[u32]) = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
Symbolic insn@0x08048493[5]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048493[5]: add((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])
Symbolic insn@0x08048493[5]: boolean_(1) = true[u1]
Symbolic insn@0x08048493[5]: undefined_(32) = V8[u32]
Symbolic insn@0x08048493[5]: readRegister(eip, V8[u32]) = 0x08048498<134513816>[u32]
Symbolic insn@0x08048493[5]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]), 0x08048498<134513816>[u32], true[u1])
Symbolic insn@0x08048493[5]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]))
Symbolic insn@0x08048493[5]: filterCallTarget(0x08048300<134513408>[u32]) = 0x08048300<134513408>[u32]
Symbolic insn@0x08048493[5]: writeRegister(eip, 0x08048300<134513408>[u32])
Symbolic insn@0x08048493[5]: finishInstruction(call 0x08048300<puts@plt>)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip = 0x08048300<134513408>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff8<4294967288>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])) 0x0fffffff7<4294967287>[u33])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V5[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V5[u32] 0x00000001[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]))
 zf write-only = (zerop[u1] (add[u32] V5[u32] 0x00000001[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V5[u32] 0x00000001[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V5[u32]) 0x000000001[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xfffffff3<4294967283,-13>[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff2<4294967282,-14>[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff1<4294967281,-15>[u32]) write-only value=0x84<-124>[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]) write-only value=0x98<-104>[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff7<4294967287,-9>[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff6<4294967286,-10>[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff5<4294967285,-11>[u32]) write-only value=0x85<-123>[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) write-only value=0xd4<-44>[u8]
 addr=0x080496fb<134518523>[u32] write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] (add[u32] V5[u32] 0x00000001[u32]))
 addr=0x080496fa<134518522>[u32] write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] (add[u32] V5[u32] 0x00000001[u32]))
 addr=0x080496f9<134518521>[u32] write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] (add[u32] V5[u32] 0x00000001[u32]))
 addr=0x080496f8<134518520>[u32] write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V5[u32] 0x00000001[u32]))
 addr=0x080496fb<134518523>[u32] read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V5[u32])
 addr=0x080496fa<134518522>[u32] read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V5[u32])
 addr=0x080496f9<134518521>[u32] read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V5[u32])
 addr=0x080496f8<134518520>[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x08048498: mov dword ss:[esp], 0x00000000
Symbolic: startInstruction(0x08048498: mov dword ss:[esp], 0x00000000)
Symbolic insn@0x08048498[0]: number_(32, 134513816) = 0x08048498<134513816>[u32]
Symbolic insn@0x08048498[0]: number_(32, 7) = 0x00000007[u32]
Symbolic insn@0x08048498[0]: add(0x08048498<134513816>[u32], 0x00000007[u32]) = 0x0804849f<134513823>[u32]
Symbolic insn@0x08048498[0]: writeRegister(eip, 0x0804849f<134513823>[u32])
Symbolic insn@0x08048498[0]: number_(32, 0) = 0x00000000[u32]
Symbolic insn@0x08048498[0]: undefined_(32) = V1[u32]
Symbolic insn@0x08048498[0]: readRegister(esp, V1[u32]) = esp_0[u32]
Symbolic insn@0x08048498[0]: boolean_(1) = true[u1]
Symbolic insn@0x08048498[0]: writeMemory(ss, esp_0[u32], 0x00000000[u32], true[u1])
Symbolic insn@0x08048498[0]: finishInstruction(mov dword ss:[esp], 0x00000000)
registers:
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x0804849f<134513823>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) write-only value=0x00[u8]
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) write-only value=0x00[u8]
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) write-only value=0x00[u8]
 addr=esp_0[u32] write-only value=0x00[u8]

0x0804849f: call 0x08048320<_exit@plt>
Symbolic: startInstruction(0x0804849f: call 0x08048320<_exit@plt>)
Symbolic insn@0x0804849f[1]: number_(32, 134513823) = 0x0804849f<134513823>[u32]
Symbolic insn@0x0804849f[1]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x0804849f[1]: add(0x0804849f<134513823>[u32], 0x00000005[u32]) = 0x080484a4<134513828>[u32]
Symbolic insn@0x0804849f[1]: writeRegister(eip, 0x080484a4<134513828>[u32])
Symbolic insn@0x0804849f[1]: number_(32, 134513440) = 0x08048320<134513440>[u32]
Symbolic insn@0x0804849f[1]: unsignedExtend(0x08048320<134513440>[u32], 32) = 0x08048320<134513440>[u32]
Symbolic insn@0x0804849f[1]: undefined_(32) = V2[u32]
Symbolic insn@0x0804849f[1]: readRegister(esp, V2[u32]) = esp_0[u32]
Symbolic insn@0x0804849f[1]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x0804849f[1]: add(esp_0[u32], 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x0804849f[1]: boolean_(1) = true[u1]
Symbolic insn@0x0804849f[1]: undefined_(32) = V3[u32]
Symbolic insn@0x0804849f[1]: readRegister(eip, V3[u32]) = 0x080484a4<134513828>[u32]
Symbolic insn@0x0804849f[1]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), 0x080484a4<134513828>[u32], true[u1])
Symbolic insn@0x0804849f[1]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x0804849f[1]: filterCallTarget(0x08048320<134513440>[u32]) = 0x08048320<134513440>[u32]
Symbolic insn@0x0804849f[1]: writeRegister(eip, 0x08048320<134513440>[u32])
Symbolic insn@0x0804849f[1]: finishInstruction(call 0x08048320<_exit@plt>)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip = 0x08048320<134513440>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=0x84<-124>[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=0xa4<-92>[u8]
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) write-only value=0x00[u8]
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) write-only value=0x00[u8]
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) write-only value=0x00[u8]
 addr=esp_0[u32] write-only value=0x00[u8]
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x080484b0: push ebp
Symbolic: startInstruction(0x080484b0: push ebp)
Symbolic insn@0x080484b0[0]: number_(32, 134513840) = 0x080484b0<134513840>[u32]
Symbolic insn@0x080484b0[0]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080484b0[0]: add(0x080484b0<134513840>[u32], 0x00000001[u32]) = 0x080484b1<134513841>[u32]
Symbolic insn@0x080484b0[0]: writeRegister(eip, 0x080484b1<134513841>[u32])
Symbolic insn@0x080484b0[0]: undefined_(32) = V1[u32]
Symbolic insn@0x080484b0[0]: readRegister(ebp, V1[u32]) = ebp_0[u32]
Symbolic insn@0x080484b0[0]: undefined_(32) = V2[u32]
Symbolic insn@0x080484b0[0]: readRegister(esp, V2[u32]) = esp_0[u32]
Symbolic insn@0x080484b0[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x080484b0[0]: add(esp_0[u32], 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x080484b0[0]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x080484b0[0]: boolean_(1) = true[u1]
Symbolic insn@0x080484b0[0]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), ebp_0[u32], true[u1])
Symbolic insn@0x080484b0[0]: finishInstruction(push ebp)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080484b1<134513841>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x080484b1: mov ebp, esp
Symbolic: startInstruction(0x080484b1: mov ebp, esp)
Symbolic insn@0x080484b1[1]: number_(32, 134513841) = 0x080484b1<134513841>[u32]
Symbolic insn@0x080484b1[1]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x080484b1[1]: add(0x080484b1<134513841>[u32], 0x00000002[u32]) = 0x080484b3<134513843>[u32]
Symbolic insn@0x080484b1[1]: writeRegister(eip, 0x080484b3<134513843>[u32])
Symbolic insn@0x080484b1[1]: undefined_(32) = V3[u32]
Symbolic insn@0x080484b1[1]: readRegister(esp, V3[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x080484b1[1]: writeRegister(ebp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x080484b1[1]: finishInstruction(mov ebp, esp)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080484b3<134513843>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x080484b3: push edi
Symbolic: startInstruction(0x080484b3: push edi)
Symbolic insn@0x080484b3[2]: number_(32, 134513843) = 0x080484b3<134513843>[u32]
Symbolic insn@0x080484b3[2]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080484b3[2]: add(0x080484b3<134513843>[u32], 0x00000001[u32]) = 0x080484b4<134513844>[u32]
Symbolic insn@0x080484b3[2]: writeRegister(eip, 0x080484b4<134513844>[u32])
Symbolic insn@0x080484b3[2]: undefined_(32) = V4[u32]
Symbolic insn@0x080484b3[2]: readRegister(edi, V4[u32]) = edi_0[u32]
Symbolic insn@0x080484b3[2]: undefined_(32) = V5[u32]
Symbolic insn@0x080484b3[2]: readRegister(esp, V5[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x080484b3[2]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x080484b3[2]: add((add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])
Symbolic insn@0x080484b3[2]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]))
Symbolic insn@0x080484b3[2]: boolean_(1) = true[u1]
Symbolic insn@0x080484b3[2]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]), edi_0[u32], true[u1])
Symbolic insn@0x080484b3[2]: finishInstruction(push edi)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080484b4<134513844>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x080484b4: push esi
Symbolic: startInstruction(0x080484b4: push esi)
Symbolic insn@0x080484b4[3]: number_(32, 134513844) = 0x080484b4<134513844>[u32]
Symbolic insn@0x080484b4[3]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080484b4[3]: add(0x080484b4<134513844>[u32], 0x00000001[u32]) = 0x080484b5<134513845>[u32]
Symbolic insn@0x080484b4[3]: writeRegister(eip, 0x080484b5<134513845>[u32])
Symbolic insn@0x080484b4[3]: undefined_(32) = V6[u32]
Symbolic insn@0x080484b4[3]: readRegister(esi, V6[u32]) = esi_0[u32]
Symbolic insn@0x080484b4[3]: undefined_(32) = V7[u32]
Symbolic insn@0x080484b4[3]: readRegister(esp, V7[u32]) = (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])
Symbolic insn@0x080484b4[3]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x080484b4[3]: add((add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
Symbolic insn@0x080484b4[3]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x080484b4[3]: boolean_(1) = true[u1]
Symbolic insn@0x080484b4[3]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), esi_0[u32], true[u1])
Symbolic insn@0x080484b4[3]: finishInstruction(push esi)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080484b5<134513845>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xfffffff7<4294967287,-9>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff6<4294967286,-10>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff5<4294967285,-11>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x080484b5: push ebx
Symbolic: startInstruction(0x080484b5: push ebx)
Symbolic insn@0x080484b5[4]: number_(32, 134513845) = 0x080484b5<134513845>[u32]
Symbolic insn@0x080484b5[4]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080484b5[4]: add(0x080484b5<134513845>[u32], 0x00000001[u32]) = 0x080484b6<134513846>[u32]
Symbolic insn@0x080484b5[4]: writeRegister(eip, 0x080484b6<134513846>[u32])
Symbolic insn@0x080484b5[4]: undefined_(32) = V8[u32]
Symbolic insn@0x080484b5[4]: readRegister(ebx, V8[u32]) = ebx_0[u32]
Symbolic insn@0x080484b5[4]: undefined_(32) = V9[u32]
Symbolic insn@0x080484b5[4]: readRegister(esp, V9[u32]) = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
Symbolic insn@0x080484b5[4]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x080484b5[4]: add((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])
Symbolic insn@0x080484b5[4]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]))
Symbolic insn@0x080484b5[4]: boolean_(1) = true[u1]
Symbolic insn@0x080484b5[4]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]), ebx_0[u32], true[u1])
Symbolic insn@0x080484b5[4]: finishInstruction(push ebx)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080484b6<134513846>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xfffffff3<4294967283,-13>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff2<4294967282,-14>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff1<4294967281,-15>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff7<4294967287,-9>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff6<4294967286,-10>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff5<4294967285,-11>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x080484b6: sub esp, 0x0c
Symbolic: startInstruction(0x080484b6: sub esp, 0x0c)
Symbolic insn@0x080484b6[5]: number_(32, 134513846) = 0x080484b6<134513846>[u32]
Symbolic insn@0x080484b6[5]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x080484b6[5]: add(0x080484b6<134513846>[u32], 0x00000003[u32]) = 0x080484b9<134513849>[u32]
Symbolic insn@0x080484b6[5]: writeRegister(eip, 0x080484b9<134513849>[u32])
Symbolic insn@0x080484b6[5]: undefined_(32) = V10[u32]
Symbolic insn@0x080484b6[5]: readRegister(esp, V10[u32]) = (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])
Symbolic insn@0x080484b6[5]: number_(8, 12) = 0x0c[u8]
Symbolic insn@0x080484b6[5]: signExtend(0x0c[u8], 32) = 0x0000000c[u32]
Symbolic insn@0x080484b6[5]: boolean_(0) = false[u1]
Symbolic insn@0x080484b6[5]: invert(0x0000000c[u32]) = 0xfffffff3<4294967283,-13>[u32]
Symbolic insn@0x080484b6[5]: invert(false[u1]) = true[u1]
Symbolic insn@0x080484b6[5]: addWithCarries((add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]), 0xfffffff3<4294967283,-13>[u32], true[u1]) = (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])
Symbolic insn@0x080484b6[5]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33]))
Symbolic insn@0x080484b6[5]: extract((add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
Symbolic insn@0x080484b6[5]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
Symbolic insn@0x080484b6[5]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
Symbolic insn@0x080484b6[5]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))
Symbolic insn@0x080484b6[5]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
Symbolic insn@0x080484b6[5]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
Symbolic insn@0x080484b6[5]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))
Symbolic insn@0x080484b6[5]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
Symbolic insn@0x080484b6[5]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
Symbolic insn@0x080484b6[5]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))
Symbolic insn@0x080484b6[5]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
Symbolic insn@0x080484b6[5]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
Symbolic insn@0x080484b6[5]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))
Symbolic insn@0x080484b6[5]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))
Symbolic insn@0x080484b6[5]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))
Symbolic insn@0x080484b6[5]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))
Symbolic insn@0x080484b6[5]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))))
Symbolic insn@0x080484b6[5]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))))
Symbolic insn@0x080484b6[5]: extract((add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
Symbolic insn@0x080484b6[5]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))
Symbolic insn@0x080484b6[5]: equalToZero((add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) = (zerop[u1] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
Symbolic insn@0x080484b6[5]: writeRegister(zf, (zerop[u1] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))
Symbolic insn@0x080484b6[5]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33]))
Symbolic insn@0x080484b6[5]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33]))
Symbolic insn@0x080484b6[5]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33]))
Symbolic insn@0x080484b6[5]: invert((extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33]))) = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])))
Symbolic insn@0x080484b6[5]: writeRegister(af, (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33]))))
Symbolic insn@0x080484b6[5]: invert((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33]))) = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])))
Symbolic insn@0x080484b6[5]: writeRegister(cf, (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33]))))
Symbolic insn@0x080484b6[5]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33]))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])))
Symbolic insn@0x080484b6[5]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33]))))
Symbolic insn@0x080484b6[5]: writeRegister(esp, (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
Symbolic insn@0x080484b6[5]: finishInstruction(sub esp, 0x0c)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080484b9<134513849>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xfffffff3<4294967283,-13>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff2<4294967282,-14>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff1<4294967281,-15>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff7<4294967287,-9>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff6<4294967286,-10>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff5<4294967285,-11>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x080484b9: call 0x080484be<<Insn>>
Symbolic: startInstruction(0x080484b9: call 0x080484be<<Insn>>)
Symbolic insn@0x080484b9[6]: number_(32, 134513849) = 0x080484b9<134513849>[u32]
Symbolic insn@0x080484b9[6]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x080484b9[6]: add(0x080484b9<134513849>[u32], 0x00000005[u32]) = 0x080484be<134513854>[u32]
Symbolic insn@0x080484b9[6]: writeRegister(eip, 0x080484be<134513854>[u32])
Symbolic insn@0x080484b9[6]: number_(32, 134513854) = 0x080484be<134513854>[u32]
Symbolic insn@0x080484b9[6]: unsignedExtend(0x080484be<134513854>[u32], 32) = 0x080484be<134513854>[u32]
Symbolic insn@0x080484b9[6]: undefined_(32) = V11[u32]
Symbolic insn@0x080484b9[6]: readRegister(esp, V11[u32]) = (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])
Symbolic insn@0x080484b9[6]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x080484b9[6]: add((add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xffffffe0<4294967264,-32>[u32])
Symbolic insn@0x080484b9[6]: boolean_(1) = true[u1]
Symbolic insn@0x080484b9[6]: undefined_(32) = V12[u32]
Symbolic insn@0x080484b9[6]: readRegister(eip, V12[u32]) = 0x080484be<134513854>[u32]
Symbolic insn@0x080484b9[6]: writeMemory(ss, (add[u32] esp_0[u32] 0xffffffe0<4294967264,-32>[u32]), 0x080484be<134513854>[u32], true[u1])
Symbolic insn@0x080484b9[6]: writeRegister(esp, (add[u32] esp_0[u32] 0xffffffe0<4294967264,-32>[u32]))
Symbolic insn@0x080484b9[6]: filterCallTarget(0x080484be<134513854>[u32]) = 0x080484be<134513854>[u32]
Symbolic insn@0x080484b9[6]: writeRegister(eip, 0x080484be<134513854>[u32])
Symbolic insn@0x080484b9[6]: finishInstruction(call 0x080484be<<Insn>>)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xffffffe0<4294967264,-32>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip = 0x080484be<134513854>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffe3<4294967267,-29>[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0xffffffe2<4294967266,-30>[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0xffffffe1<4294967265,-31>[u32]) write-only value=0x84<-124>[u8]
 addr=(add[u32] esp_0[u32] 0xffffffe0<4294967264,-32>[u32]) write-only value=0xbe<-66>[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff3<4294967283,-13>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff2<4294967282,-14>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff1<4294967281,-15>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff7<4294967287,-9>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff6<4294967286,-10>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff5<4294967285,-11>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x080484be: pop ebx
Symbolic: startInstruction(0x080484be: pop ebx)
Symbolic insn@0x080484be[0]: number_(32, 134513854) = 0x080484be<134513854>[u32]
Symbolic insn@0x080484be[0]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080484be[0]: add(0x080484be<134513854>[u32], 0x00000001[u32]) = 0x080484bf<134513855>[u32]
Symbolic insn@0x080484be[0]: writeRegister(eip, 0x080484bf<134513855>[u32])
Symbolic insn@0x080484be[0]: undefined_(32) = V1[u32]
Symbolic insn@0x080484be[0]: readRegister(esp, V1[u32]) = esp_0[u32]
Symbolic insn@0x080484be[0]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x080484be[0]: add(esp_0[u32], 0x00000004[u32]) = (add[u32] esp_0[u32] 0x00000004[u32])
Symbolic insn@0x080484be[0]: writeRegister(esp, (add[u32] esp_0[u32] 0x00000004[u32]))
Symbolic insn@0x080484be[0]: boolean_(1) = true[u1]
Symbolic insn@0x080484be[0]: undefined_(32) = V2[u32]
Symbolic insn@0x080484be[0]: readMemory(ss, esp_0[u32], V2[u32], true[u1]) = V2[u32]
Symbolic insn@0x080484be[0]: writeRegister(ebx, V2[u32])
Symbolic insn@0x080484be[0]: finishInstruction(pop ebx)
registers:
 ebx write-only = V2[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x00000004[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080484bf<134513855>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x080484bf: add ebx, 0x0000120a<4618>
Symbolic: startInstruction(0x080484bf: add ebx, 0x0000120a<4618>)
Symbolic insn@0x080484bf[1]: number_(32, 134513855) = 0x080484bf<134513855>[u32]
Symbolic insn@0x080484bf[1]: number_(32, 6) = 0x00000006[u32]
Symbolic insn@0x080484bf[1]: add(0x080484bf<134513855>[u32], 0x00000006[u32]) = 0x080484c5<134513861>[u32]
Symbolic insn@0x080484bf[1]: writeRegister(eip, 0x080484c5<134513861>[u32])
Symbolic insn@0x080484bf[1]: boolean_(0) = false[u1]
Symbolic insn@0x080484bf[1]: number_(32, 4618) = 0x0000120a<4618>[u32]
Symbolic insn@0x080484bf[1]: undefined_(32) = V3[u32]
Symbolic insn@0x080484bf[1]: readRegister(ebx, V3[u32]) = V2[u32]
Symbolic insn@0x080484bf[1]: addWithCarries(V2[u32], 0x0000120a<4618>[u32], false[u1]) = (add[u32] V2[u32] 0x0000120a<4618>[u32])
Symbolic insn@0x080484bf[1]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]))
Symbolic insn@0x080484bf[1]: extract((add[u32] V2[u32] 0x0000120a<4618>[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32]))
Symbolic insn@0x080484bf[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32]))
Symbolic insn@0x080484bf[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32]))
Symbolic insn@0x080484bf[1]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])))
Symbolic insn@0x080484bf[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32]))
Symbolic insn@0x080484bf[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32]))
Symbolic insn@0x080484bf[1]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])))
Symbolic insn@0x080484bf[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32]))
Symbolic insn@0x080484bf[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32]))
Symbolic insn@0x080484bf[1]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])))
Symbolic insn@0x080484bf[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32]))
Symbolic insn@0x080484bf[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32]))
Symbolic insn@0x080484bf[1]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])))
Symbolic insn@0x080484bf[1]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])))
Symbolic insn@0x080484bf[1]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])))
Symbolic insn@0x080484bf[1]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])))
Symbolic insn@0x080484bf[1]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32]))))
Symbolic insn@0x080484bf[1]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])))))
Symbolic insn@0x080484bf[1]: extract((add[u32] V2[u32] 0x0000120a<4618>[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32]))
Symbolic insn@0x080484bf[1]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])))
Symbolic insn@0x080484bf[1]: equalToZero((add[u32] V2[u32] 0x0000120a<4618>[u32])) = (zerop[u1] (add[u32] V2[u32] 0x0000120a<4618>[u32]))
Symbolic insn@0x080484bf[1]: writeRegister(zf, (zerop[u1] (add[u32] V2[u32] 0x0000120a<4618>[u32])))
Symbolic insn@0x080484bf[1]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33])), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]))
Symbolic insn@0x080484bf[1]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33])), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]))
Symbolic insn@0x080484bf[1]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33])), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]))
Symbolic insn@0x080484bf[1]: writeRegister(af, (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33])))
Symbolic insn@0x080484bf[1]: writeRegister(cf, (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33])))
Symbolic insn@0x080484bf[1]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33])), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33])))
Symbolic insn@0x080484bf[1]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]))))
Symbolic insn@0x080484bf[1]: writeRegister(ebx, (add[u32] V2[u32] 0x0000120a<4618>[u32]))
Symbolic insn@0x080484bf[1]: finishInstruction(add ebx, 0x0000120a<4618>)
registers:
 ebx = (add[u32] V2[u32] 0x0000120a<4618>[u32])
 esp read-before-write = (add[u32] esp_0[u32] 0x00000004[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080484c5<134513861>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]))
 zf write-only = (zerop[u1] (add[u32] V2[u32] 0x0000120a<4618>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x080484c5: call 0x080482c8<(func)_init>
Symbolic: startInstruction(0x080484c5: call 0x080482c8<(func)_init>)
Symbolic insn@0x080484c5[2]: number_(32, 134513861) = 0x080484c5<134513861>[u32]
Symbolic insn@0x080484c5[2]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x080484c5[2]: add(0x080484c5<134513861>[u32], 0x00000005[u32]) = 0x080484ca<134513866>[u32]
Symbolic insn@0x080484c5[2]: writeRegister(eip, 0x080484ca<134513866>[u32])
Symbolic insn@0x080484c5[2]: number_(32, 134513352) = 0x080482c8<134513352>[u32]
Symbolic insn@0x080484c5[2]: unsignedExtend(0x080482c8<134513352>[u32], 32) = 0x080482c8<134513352>[u32]
Symbolic insn@0x080484c5[2]: undefined_(32) = V4[u32]
Symbolic insn@0x080484c5[2]: readRegister(esp, V4[u32]) = (add[u32] esp_0[u32] 0x00000004[u32])
Symbolic insn@0x080484c5[2]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x080484c5[2]: add((add[u32] esp_0[u32] 0x00000004[u32]), 0xfffffffc<4294967292,-4>[u32]) = esp_0[u32]
Symbolic insn@0x080484c5[2]: boolean_(1) = true[u1]
Symbolic insn@0x080484c5[2]: undefined_(32) = V5[u32]
Symbolic insn@0x080484c5[2]: readRegister(eip, V5[u32]) = 0x080484ca<134513866>[u32]
Symbolic insn@0x080484c5[2]: writeMemory(ss, esp_0[u32], 0x080484ca<134513866>[u32], true[u1])
Symbolic insn@0x080484c5[2]: writeRegister(esp, esp_0[u32])
Symbolic insn@0x080484c5[2]: filterCallTarget(0x080482c8<134513352>[u32]) = 0x080482c8<134513352>[u32]
Symbolic insn@0x080484c5[2]: writeRegister(eip, 0x080482c8<134513352>[u32])
Symbolic insn@0x080484c5[2]: finishInstruction(call 0x080482c8<(func)_init>)
registers:
 ebx = (add[u32] V2[u32] 0x0000120a<4618>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip = 0x080482c8<134513352>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]))
 zf write-only = (zerop[u1] (add[u32] V2[u32] 0x0000120a<4618>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V2[u32] 0x0000120a<4618>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000120a<4618>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) write-only value=0x84<-124>[u8]
 addr=esp_0[u32] write-only value=0xca<-54>[u8]
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x080484ca: lea eax, [ebx + 0xffffff20<-224>]
Symbolic: startInstruction(0x080484ca: lea eax, [ebx + 0xffffff20<-224>])
Symbolic insn@0x080484ca[0]: number_(32, 134513866) = 0x080484ca<134513866>[u32]
Symbolic insn@0x080484ca[0]: number_(32, 6) = 0x00000006[u32]
Symbolic insn@0x080484ca[0]: add(0x080484ca<134513866>[u32], 0x00000006[u32]) = 0x080484d0<134513872>[u32]
Symbolic insn@0x080484ca[0]: writeRegister(eip, 0x080484d0<134513872>[u32])
Symbolic insn@0x080484ca[0]: undefined_(32) = V1[u32]
Symbolic insn@0x080484ca[0]: readRegister(ebx, V1[u32]) = ebx_0[u32]
Symbolic insn@0x080484ca[0]: number_(32, 4294967072) = 0xffffff20<4294967072,-224>[u32]
Symbolic insn@0x080484ca[0]: add(ebx_0[u32], 0xffffff20<4294967072,-224>[u32]) = (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])
Symbolic insn@0x080484ca[0]: unsignedExtend((add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]), 32) = (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])
Symbolic insn@0x080484ca[0]: writeRegister(eax, (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))
Symbolic insn@0x080484ca[0]: finishInstruction(lea eax, [ebx + 0xffffff20<-224>])
registers:
 eax write-only = (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080484d0<134513872>[u32]
 fpstatus_top = 0x0[u3]
memory:

0x080484d0: lea edx, [ebx + 0xffffff20<-224>]
Symbolic: startInstruction(0x080484d0: lea edx, [ebx + 0xffffff20<-224>])
Symbolic insn@0x080484d0[1]: number_(32, 134513872) = 0x080484d0<134513872>[u32]
Symbolic insn@0x080484d0[1]: number_(32, 6) = 0x00000006[u32]
Symbolic insn@0x080484d0[1]: add(0x080484d0<134513872>[u32], 0x00000006[u32]) = 0x080484d6<134513878>[u32]
Symbolic insn@0x080484d0[1]: writeRegister(eip, 0x080484d6<134513878>[u32])
Symbolic insn@0x080484d0[1]: undefined_(32) = V2[u32]
Symbolic insn@0x080484d0[1]: readRegister(ebx, V2[u32]) = ebx_0[u32]
Symbolic insn@0x080484d0[1]: number_(32, 4294967072) = 0xffffff20<4294967072,-224>[u32]
Symbolic insn@0x080484d0[1]: add(ebx_0[u32], 0xffffff20<4294967072,-224>[u32]) = (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])
Symbolic insn@0x080484d0[1]: unsignedExtend((add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]), 32) = (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])
Symbolic insn@0x080484d0[1]: writeRegister(edx, (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))
Symbolic insn@0x080484d0[1]: finishInstruction(lea edx, [ebx + 0xffffff20<-224>])
registers:
 eax write-only = (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])
 edx write-only = (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080484d6<134513878>[u32]
 fpstatus_top = 0x0[u3]
memory:

0x080484d6: sub eax, edx
Symbolic: startInstruction(0x080484d6: sub eax, edx)
Symbolic insn@0x080484d6[2]: number_(32, 134513878) = 0x080484d6<134513878>[u32]
Symbolic insn@0x080484d6[2]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x080484d6[2]: add(0x080484d6<134513878>[u32], 0x00000002[u32]) = 0x080484d8<134513880>[u32]
Symbolic insn@0x080484d6[2]: writeRegister(eip, 0x080484d8<134513880>[u32])
Symbolic insn@0x080484d6[2]: undefined_(32) = V3[u32]
Symbolic insn@0x080484d6[2]: readRegister(eax, V3[u32]) = (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])
Symbolic insn@0x080484d6[2]: undefined_(32) = V4[u32]
Symbolic insn@0x080484d6[2]: readRegister(edx, V4[u32]) = (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])
Symbolic insn@0x080484d6[2]: boolean_(0) = false[u1]
Symbolic insn@0x080484d6[2]: invert((add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) = (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))
Symbolic insn@0x080484d6[2]: invert(false[u1]) = true[u1]
Symbolic insn@0x080484d6[2]: addWithCarries((add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]), (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])), true[u1]) = (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])
Symbolic insn@0x080484d6[2]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])))))
Symbolic insn@0x080484d6[2]: extract((add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
Symbolic insn@0x080484d6[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
Symbolic insn@0x080484d6[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
Symbolic insn@0x080484d6[2]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484d6[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
Symbolic insn@0x080484d6[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
Symbolic insn@0x080484d6[2]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484d6[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
Symbolic insn@0x080484d6[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
Symbolic insn@0x080484d6[2]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484d6[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
Symbolic insn@0x080484d6[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
Symbolic insn@0x080484d6[2]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484d6[2]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484d6[2]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484d6[2]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484d6[2]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))))
Symbolic insn@0x080484d6[2]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))))
Symbolic insn@0x080484d6[2]: extract((add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
Symbolic insn@0x080484d6[2]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484d6[2]: equalToZero((add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) = (zerop[u1] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
Symbolic insn@0x080484d6[2]: writeRegister(zf, (zerop[u1] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484d6[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))))), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])))))
Symbolic insn@0x080484d6[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))))), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])))))
Symbolic insn@0x080484d6[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))))), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])))))
Symbolic insn@0x080484d6[2]: invert((extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])))))) = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))))))
Symbolic insn@0x080484d6[2]: writeRegister(af, (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])))))))
Symbolic insn@0x080484d6[2]: invert((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])))))) = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))))))
Symbolic insn@0x080484d6[2]: writeRegister(cf, (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])))))))
Symbolic insn@0x080484d6[2]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))))), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])))))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))))))
Symbolic insn@0x080484d6[2]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])))))))
Symbolic insn@0x080484d6[2]: writeRegister(eax, (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
Symbolic insn@0x080484d6[2]: finishInstruction(sub eax, edx)
registers:
 eax = (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])
 edx = (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080484d8<134513880>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))))))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))))))
 zf write-only = (zerop[u1] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))))))
 fpstatus_top = 0x0[u3]
memory:

0x080484d8: sar eax, 0x02
Symbolic: startInstruction(0x080484d8: sar eax, 0x02)
Symbolic insn@0x080484d8[3]: number_(32, 134513880) = 0x080484d8<134513880>[u32]
Symbolic insn@0x080484d8[3]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x080484d8[3]: add(0x080484d8<134513880>[u32], 0x00000003[u32]) = 0x080484db<134513883>[u32]
Symbolic insn@0x080484d8[3]: writeRegister(eip, 0x080484db<134513883>[u32])
Symbolic insn@0x080484d8[3]: number_(8, 2) = 0x02[u8]
Symbolic insn@0x080484d8[3]: unspecified_(32) = V5[u32]<unspec>
Symbolic insn@0x080484d8[3]: undefined_(32) = V6[u32]
Symbolic insn@0x080484d8[3]: readRegister(eax, V6[u32]) = (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])
Symbolic insn@0x080484d8[3]: extract(0x02[u8], 0, 5) = 0x02[u5]
Symbolic insn@0x080484d8[3]: equalToZero(0x02[u5]) = false[u1]
Symbolic insn@0x080484d8[3]: extract(0x02[u8], 5, 8) = 0x0[u3]
Symbolic insn@0x080484d8[3]: equalToZero(0x0[u3]) = true[u1]
Symbolic insn@0x080484d8[3]: invert(true[u1]) = false[u1]
Symbolic insn@0x080484d8[3]: number_(5, 31) = 0x1f<-1>[u5]
Symbolic insn@0x080484d8[3]: add(0x02[u5], 0x1f<-1>[u5]) = 0x01[u5]
Symbolic insn@0x080484d8[3]: equalToZero(0x01[u5]) = false[u1]
Symbolic insn@0x080484d8[3]: shiftRightArithmetic((add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]), 0x02[u5]) = (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
Symbolic insn@0x080484d8[3]: extract((add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
Symbolic insn@0x080484d8[3]: extract((asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484d8[3]: unspecified_(1) = V7[u1]<unspec>
Symbolic insn@0x080484d8[3]: undefined_(1) = V8[u1]
Symbolic insn@0x080484d8[3]: peekRegister(af, V8[u1]) = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))))))
Symbolic insn@0x080484d8[3]: ite(false[u1], (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])))))), V7[u1]<unspec>) = V7[u1]<unspec>
Symbolic insn@0x080484d8[3]: writeRegister(af, V7[u1]<unspec>)
Symbolic insn@0x080484d8[3]: add(0x02[u5], 0x1f<-1>[u5]) = 0x01[u5]
Symbolic insn@0x080484d8[3]: shiftRight((add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]), 0x01[u5]) = (concat[u32] false[u1] (extract[u31] 0x00000001[u32] 0x00000020[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484d8[3]: extract((concat[u32] false[u1] (extract[u31] 0x00000001[u32] 0x00000020[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))), 0, 1) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
Symbolic insn@0x080484d8[3]: ite(false[u1], (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
Symbolic insn@0x080484d8[3]: undefined_(1) = V9[u1]
Symbolic insn@0x080484d8[3]: peekRegister(cf, V9[u1]) = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))))))
Symbolic insn@0x080484d8[3]: ite(false[u1], (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])))))), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
Symbolic insn@0x080484d8[3]: writeRegister(cf, (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484d8[3]: unspecified_(1) = V10[u1]<unspec>
Symbolic insn@0x080484d8[3]: undefined_(1) = V11[u1]
Symbolic insn@0x080484d8[3]: peekRegister(of, V11[u1]) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))))))
Symbolic insn@0x080484d8[3]: ite(false[u1], (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])))))), V10[u1]<unspec>) = V10[u1]<unspec>
Symbolic insn@0x080484d8[3]: boolean_(0) = false[u1]
Symbolic insn@0x080484d8[3]: ite(false[u1], false[u1], V10[u1]<unspec>) = V10[u1]<unspec>
Symbolic insn@0x080484d8[3]: writeRegister(of, V10[u1]<unspec>)
Symbolic insn@0x080484d8[3]: invert(false[u1]) = true[u1]
Symbolic insn@0x080484d8[3]: extract((asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484d8[3]: extract((asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484d8[3]: undefined_(1) = V12[u1]
Symbolic insn@0x080484d8[3]: peekRegister(pf, V12[u1]) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))))
Symbolic insn@0x080484d8[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484d8[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484d8[3]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))), (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))))
Symbolic insn@0x080484d8[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484d8[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484d8[3]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))), (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))))
Symbolic insn@0x080484d8[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484d8[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484d8[3]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))), (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))))
Symbolic insn@0x080484d8[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484d8[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484d8[3]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))), (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))))
Symbolic insn@0x080484d8[3]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))))
Symbolic insn@0x080484d8[3]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))))
Symbolic insn@0x080484d8[3]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))))
Symbolic insn@0x080484d8[3]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))))
Symbolic insn@0x080484d8[3]: ite(true[u1], (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))))), (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))))
Symbolic insn@0x080484d8[3]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))))))
Symbolic insn@0x080484d8[3]: undefined_(1) = V13[u1]
Symbolic insn@0x080484d8[3]: peekRegister(sf, V13[u1]) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
Symbolic insn@0x080484d8[3]: ite(true[u1], (extract[u1] 0x0000001f[u32] 0x00000020[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484d8[3]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))))
Symbolic insn@0x080484d8[3]: undefined_(1) = V14[u1]
Symbolic insn@0x080484d8[3]: peekRegister(zf, V14[u1]) = (zerop[u1] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
Symbolic insn@0x080484d8[3]: equalToZero((asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) = (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484d8[3]: ite(true[u1], (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))), (zerop[u1] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) = (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484d8[3]: writeRegister(zf, (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))))
Symbolic insn@0x080484d8[3]: writeRegister(eax, (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484d8[3]: finishInstruction(sar eax, 0x02)
registers:
 eax = (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
 edx = (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080484db<134513883>[u32]
 cf write-only = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))))
 af write-only = V7[u1]<unspec>
 zf write-only = (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
 of write-only = V10[u1]<unspec>
 fpstatus_top = 0x0[u3]
memory:

0x080484db: mov dword ss:[ebp + 0xf0<-16>], eax
Symbolic: startInstruction(0x080484db: mov dword ss:[ebp + 0xf0<-16>], eax)
Symbolic insn@0x080484db[4]: number_(32, 134513883) = 0x080484db<134513883>[u32]
Symbolic insn@0x080484db[4]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x080484db[4]: add(0x080484db<134513883>[u32], 0x00000003[u32]) = 0x080484de<134513886>[u32]
Symbolic insn@0x080484db[4]: writeRegister(eip, 0x080484de<134513886>[u32])
Symbolic insn@0x080484db[4]: undefined_(32) = V15[u32]
Symbolic insn@0x080484db[4]: readRegister(eax, V15[u32]) = (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
Symbolic insn@0x080484db[4]: undefined_(32) = V16[u32]
Symbolic insn@0x080484db[4]: readRegister(ebp, V16[u32]) = ebp_0[u32]
Symbolic insn@0x080484db[4]: number_(8, 240) = 0xf0<-16>[u8]
Symbolic insn@0x080484db[4]: signExtend(0xf0<-16>[u8], 32) = 0xfffffff0<4294967280,-16>[u32]
Symbolic insn@0x080484db[4]: add(ebp_0[u32], 0xfffffff0<4294967280,-16>[u32]) = (add[u32] ebp_0[u32] 0xfffffff0<4294967280,-16>[u32])
Symbolic insn@0x080484db[4]: boolean_(1) = true[u1]
Symbolic insn@0x080484db[4]: writeMemory(ss, (add[u32] ebp_0[u32] 0xfffffff0<4294967280,-16>[u32]), (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])), true[u1])
Symbolic insn@0x080484db[4]: finishInstruction(mov dword ss:[ebp + 0xf0<-16>], eax)
registers:
 eax = (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
 edx = (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080484de<134513886>[u32]
 cf write-only = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))))
 af write-only = V7[u1]<unspec>
 zf write-only = (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
 of write-only = V10[u1]<unspec>
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebp_0[u32] 0xfffffff3<4294967283,-13>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
 addr=(add[u32] ebp_0[u32] 0xfffffff2<4294967282,-14>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
 addr=(add[u32] ebp_0[u32] 0xfffffff1<4294967281,-15>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
 addr=(add[u32] ebp_0[u32] 0xfffffff0<4294967280,-16>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))

0x080484de: jne 0x080484f0<<BBlock>>
Symbolic: startInstruction(0x080484de: jne 0x080484f0<<BBlock>>)
Symbolic insn@0x080484de[5]: number_(32, 134513886) = 0x080484de<134513886>[u32]
Symbolic insn@0x080484de[5]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x080484de[5]: add(0x080484de<134513886>[u32], 0x00000002[u32]) = 0x080484e0<134513888>[u32]
Symbolic insn@0x080484de[5]: writeRegister(eip, 0x080484e0<134513888>[u32])
Symbolic insn@0x080484de[5]: undefined_(1) = V17[u1]
Symbolic insn@0x080484de[5]: readRegister(zf, V17[u1]) = (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic insn@0x080484de[5]: invert((zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))) = (invert[u1] (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))))
Symbolic insn@0x080484de[5]: undefined_(32) = V18[u32]
Symbolic insn@0x080484de[5]: readRegister(eip, V18[u32]) = 0x080484e0<134513888>[u32]
Symbolic insn@0x080484de[5]: number_(32, 134513904) = 0x080484f0<134513904>[u32]
Symbolic insn@0x080484de[5]: unsignedExtend(0x080484f0<134513904>[u32], 32) = 0x080484f0<134513904>[u32]
Symbolic insn@0x080484de[5]: ite((invert[u1] (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))), 0x080484f0<134513904>[u32], 0x080484e0<134513888>[u32]) = (ite[u32] (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) 0x080484e0<134513888>[u32] 0x080484f0<134513904>[u32])
Symbolic insn@0x080484de[5]: writeRegister(eip, (ite[u32] (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) 0x080484e0<134513888>[u32] 0x080484f0<134513904>[u32]))
Symbolic insn@0x080484de[5]: finishInstruction(jne 0x080484f0<<BBlock>>)
registers:
 eax = (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
 edx = (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip = (ite[u32] (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) 0x080484e0<134513888>[u32] 0x080484f0<134513904>[u32])
 cf write-only = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))))
 af write-only = V7[u1]<unspec>
 zf = (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
 of write-only = V10[u1]<unspec>
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebp_0[u32] 0xfffffff3<4294967283,-13>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
 addr=(add[u32] ebp_0[u32] 0xfffffff2<4294967282,-14>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
 addr=(add[u32] ebp_0[u32] 0xfffffff1<4294967281,-15>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
 addr=(add[u32] ebp_0[u32] 0xfffffff0<4294967280,-16>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] ebx_0[u32] 0xffffff20<4294967072,-224>[u32])) ebx_0[u32] 0xffffff21<4294967073,-223>[u32])))
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x080484e0: add esp, 0x0c
Symbolic: startInstruction(0x080484e0: add esp, 0x0c)
Symbolic insn@0x080484e0[0]: number_(32, 134513888) = 0x080484e0<134513888>[u32]
Symbolic insn@0x080484e0[0]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x080484e0[0]: add(0x080484e0<134513888>[u32], 0x00000003[u32]) = 0x080484e3<134513891>[u32]
Symbolic insn@0x080484e0[0]: writeRegister(eip, 0x080484e3<134513891>[u32])
Symbolic insn@0x080484e0[0]: boolean_(0) = false[u1]
Symbolic insn@0x080484e0[0]: number_(8, 12) = 0x0c[u8]
Symbolic insn@0x080484e0[0]: undefined_(32) = V1[u32]
Symbolic insn@0x080484e0[0]: readRegister(esp, V1[u32]) = esp_0[u32]
Symbolic insn@0x080484e0[0]: signExtend(0x0c[u8], 32) = 0x0000000c[u32]
Symbolic insn@0x080484e0[0]: addWithCarries(esp_0[u32], 0x0000000c[u32], false[u1]) = (add[u32] esp_0[u32] 0x0000000c[u32])
Symbolic insn@0x080484e0[0]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
Symbolic insn@0x080484e0[0]: extract((add[u32] esp_0[u32] 0x0000000c[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x080484e0[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x080484e0[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x080484e0[0]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x080484e0[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x080484e0[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x080484e0[0]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x080484e0[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x080484e0[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x080484e0[0]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x080484e0[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x080484e0[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x080484e0[0]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x080484e0[0]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x080484e0[0]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x080484e0[0]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x080484e0[0]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))))
Symbolic insn@0x080484e0[0]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))))
Symbolic insn@0x080484e0[0]: extract((add[u32] esp_0[u32] 0x0000000c[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x080484e0[0]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x080484e0[0]: equalToZero((add[u32] esp_0[u32] 0x0000000c[u32])) = (zerop[u1] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x080484e0[0]: writeRegister(zf, (zerop[u1] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x080484e0[0]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
Symbolic insn@0x080484e0[0]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
Symbolic insn@0x080484e0[0]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
Symbolic insn@0x080484e0[0]: writeRegister(af, (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
Symbolic insn@0x080484e0[0]: writeRegister(cf, (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
Symbolic insn@0x080484e0[0]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
Symbolic insn@0x080484e0[0]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))))
Symbolic insn@0x080484e0[0]: writeRegister(esp, (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x080484e0[0]: finishInstruction(add esp, 0x0c)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0x0000000c[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080484e3<134513891>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0x0000000c[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
 fpstatus_top = 0x0[u3]
memory:

0x080484e3: pop ebx
Symbolic: startInstruction(0x080484e3: pop ebx)
Symbolic insn@0x080484e3[1]: number_(32, 134513891) = 0x080484e3<134513891>[u32]
Symbolic insn@0x080484e3[1]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080484e3[1]: add(0x080484e3<134513891>[u32], 0x00000001[u32]) = 0x080484e4<134513892>[u32]
Symbolic insn@0x080484e3[1]: writeRegister(eip, 0x080484e4<134513892>[u32])
Symbolic insn@0x080484e3[1]: undefined_(32) = V2[u32]
Symbolic insn@0x080484e3[1]: readRegister(esp, V2[u32]) = (add[u32] esp_0[u32] 0x0000000c[u32])
Symbolic insn@0x080484e3[1]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x080484e3[1]: add((add[u32] esp_0[u32] 0x0000000c[u32]), 0x00000004[u32]) = (add[u32] esp_0[u32] 0x00000010[u32])
Symbolic insn@0x080484e3[1]: writeRegister(esp, (add[u32] esp_0[u32] 0x00000010[u32]))
Symbolic insn@0x080484e3[1]: boolean_(1) = true[u1]
Symbolic insn@0x080484e3[1]: undefined_(32) = V3[u32]
Symbolic insn@0x080484e3[1]: readMemory(ss, (add[u32] esp_0[u32] 0x0000000c[u32]), V3[u32], true[u1]) = V3[u32]
Symbolic insn@0x080484e3[1]: writeRegister(ebx, V3[u32])
Symbolic insn@0x080484e3[1]: finishInstruction(pop ebx)
registers:
 ebx write-only = V3[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x00000010[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080484e4<134513892>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0x0000000c[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x0000000f[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000e[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000d[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000c[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])

0x080484e4: pop esi
Symbolic: startInstruction(0x080484e4: pop esi)
Symbolic insn@0x080484e4[2]: number_(32, 134513892) = 0x080484e4<134513892>[u32]
Symbolic insn@0x080484e4[2]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080484e4[2]: add(0x080484e4<134513892>[u32], 0x00000001[u32]) = 0x080484e5<134513893>[u32]
Symbolic insn@0x080484e4[2]: writeRegister(eip, 0x080484e5<134513893>[u32])
Symbolic insn@0x080484e4[2]: undefined_(32) = V4[u32]
Symbolic insn@0x080484e4[2]: readRegister(esp, V4[u32]) = (add[u32] esp_0[u32] 0x00000010[u32])
Symbolic insn@0x080484e4[2]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x080484e4[2]: add((add[u32] esp_0[u32] 0x00000010[u32]), 0x00000004[u32]) = (add[u32] esp_0[u32] 0x00000014[u32])
Symbolic insn@0x080484e4[2]: writeRegister(esp, (add[u32] esp_0[u32] 0x00000014[u32]))
Symbolic insn@0x080484e4[2]: boolean_(1) = true[u1]
Symbolic insn@0x080484e4[2]: undefined_(32) = V5[u32]
Symbolic insn@0x080484e4[2]: readMemory(ss, (add[u32] esp_0[u32] 0x00000010[u32]), V5[u32], true[u1]) = V5[u32]
Symbolic insn@0x080484e4[2]: writeRegister(esi, V5[u32])
Symbolic insn@0x080484e4[2]: finishInstruction(pop esi)
registers:
 ebx write-only = V3[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x00000014[u32])
 esi write-only = V5[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080484e5<134513893>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0x0000000c[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000013[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000012[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000011[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000010[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x0000000f[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000e[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000d[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000c[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])

0x080484e5: pop edi
Symbolic: startInstruction(0x080484e5: pop edi)
Symbolic insn@0x080484e5[3]: number_(32, 134513893) = 0x080484e5<134513893>[u32]
Symbolic insn@0x080484e5[3]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080484e5[3]: add(0x080484e5<134513893>[u32], 0x00000001[u32]) = 0x080484e6<134513894>[u32]
Symbolic insn@0x080484e5[3]: writeRegister(eip, 0x080484e6<134513894>[u32])
Symbolic insn@0x080484e5[3]: undefined_(32) = V6[u32]
Symbolic insn@0x080484e5[3]: readRegister(esp, V6[u32]) = (add[u32] esp_0[u32] 0x00000014[u32])
Symbolic insn@0x080484e5[3]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x080484e5[3]: add((add[u32] esp_0[u32] 0x00000014[u32]), 0x00000004[u32]) = (add[u32] esp_0[u32] 0x00000018[u32])
Symbolic insn@0x080484e5[3]: writeRegister(esp, (add[u32] esp_0[u32] 0x00000018[u32]))
Symbolic insn@0x080484e5[3]: boolean_(1) = true[u1]
Symbolic insn@0x080484e5[3]: undefined_(32) = V7[u32]
Symbolic insn@0x080484e5[3]: readMemory(ss, (add[u32] esp_0[u32] 0x00000014[u32]), V7[u32], true[u1]) = V7[u32]
Symbolic insn@0x080484e5[3]: writeRegister(edi, V7[u32])
Symbolic insn@0x080484e5[3]: finishInstruction(pop edi)
registers:
 ebx write-only = V3[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x00000018[u32])
 esi write-only = V5[u32]
 edi write-only = V7[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080484e6<134513894>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0x0000000c[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000017[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000016[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000015[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000014[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000013[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000012[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000011[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000010[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x0000000f[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000e[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000d[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000c[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])

0x080484e6: pop ebp
Symbolic: startInstruction(0x080484e6: pop ebp)
Symbolic insn@0x080484e6[4]: number_(32, 134513894) = 0x080484e6<134513894>[u32]
Symbolic insn@0x080484e6[4]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080484e6[4]: add(0x080484e6<134513894>[u32], 0x00000001[u32]) = 0x080484e7<134513895>[u32]
Symbolic insn@0x080484e6[4]: writeRegister(eip, 0x080484e7<134513895>[u32])
Symbolic insn@0x080484e6[4]: undefined_(32) = V8[u32]
Symbolic insn@0x080484e6[4]: readRegister(esp, V8[u32]) = (add[u32] esp_0[u32] 0x00000018[u32])
Symbolic insn@0x080484e6[4]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x080484e6[4]: add((add[u32] esp_0[u32] 0x00000018[u32]), 0x00000004[u32]) = (add[u32] esp_0[u32] 0x0000001c[u32])
Symbolic insn@0x080484e6[4]: writeRegister(esp, (add[u32] esp_0[u32] 0x0000001c[u32]))
Symbolic insn@0x080484e6[4]: boolean_(1) = true[u1]
Symbolic insn@0x080484e6[4]: undefined_(32) = V9[u32]
Symbolic insn@0x080484e6[4]: readMemory(ss, (add[u32] esp_0[u32] 0x00000018[u32]), V9[u32], true[u1]) = V9[u32]
Symbolic insn@0x080484e6[4]: writeRegister(ebp, V9[u32])
Symbolic insn@0x080484e6[4]: finishInstruction(pop ebp)
registers:
 ebx write-only = V3[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x0000001c[u32])
 ebp write-only = V9[u32]
 esi write-only = V5[u32]
 edi write-only = V7[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080484e7<134513895>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0x0000000c[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x0000001b[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V9[u32])
 addr=(add[u32] esp_0[u32] 0x0000001a[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V9[u32])
 addr=(add[u32] esp_0[u32] 0x00000019[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V9[u32])
 addr=(add[u32] esp_0[u32] 0x00000018[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V9[u32])
 addr=(add[u32] esp_0[u32] 0x00000017[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000016[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000015[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000014[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000013[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000012[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000011[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000010[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x0000000f[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000e[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000d[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000c[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])

0x080484e7: ret 
Symbolic: startInstruction(0x080484e7: ret)
Symbolic insn@0x080484e7[5]: number_(32, 134513895) = 0x080484e7<134513895>[u32]
Symbolic insn@0x080484e7[5]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080484e7[5]: add(0x080484e7<134513895>[u32], 0x00000001[u32]) = 0x080484e8<134513896>[u32]
Symbolic insn@0x080484e7[5]: writeRegister(eip, 0x080484e8<134513896>[u32])
Symbolic insn@0x080484e7[5]: undefined_(32) = V10[u32]
Symbolic insn@0x080484e7[5]: readRegister(esp, V10[u32]) = (add[u32] esp_0[u32] 0x0000001c[u32])
Symbolic insn@0x080484e7[5]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x080484e7[5]: add((add[u32] esp_0[u32] 0x0000001c[u32]), 0x00000004[u32]) = (add[u32] esp_0[u32] 0x00000020[u32])
Symbolic insn@0x080484e7[5]: boolean_(1) = true[u1]
Symbolic insn@0x080484e7[5]: undefined_(32) = V11[u32]
Symbolic insn@0x080484e7[5]: readMemory(ss, (add[u32] esp_0[u32] 0x0000001c[u32]), V11[u32], true[u1]) = V11[u32]
Symbolic insn@0x080484e7[5]: filterReturnTarget(V11[u32]) = V11[u32]
Symbolic insn@0x080484e7[5]: writeRegister(eip, V11[u32])
Symbolic insn@0x080484e7[5]: writeRegister(esp, (add[u32] esp_0[u32] 0x00000020[u32]))
Symbolic insn@0x080484e7[5]: finishInstruction(ret)
registers:
 ebx write-only = V3[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x00000020[u32])
 ebp write-only = V9[u32]
 esi write-only = V5[u32]
 edi write-only = V7[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = V11[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0x0000000c[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x0000001f[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V11[u32])
 addr=(add[u32] esp_0[u32] 0x0000001e[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V11[u32])
 addr=(add[u32] esp_0[u32] 0x0000001d[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V11[u32])
 addr=(add[u32] esp_0[u32] 0x0000001c[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V11[u32])
 addr=(add[u32] esp_0[u32] 0x0000001b[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V9[u32])
 addr=(add[u32] esp_0[u32] 0x0000001a[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V9[u32])
 addr=(add[u32] esp_0[u32] 0x00000019[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V9[u32])
 addr=(add[u32] esp_0[u32] 0x00000018[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V9[u32])
 addr=(add[u32] esp_0[u32] 0x00000017[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000016[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000015[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000014[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000013[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000012[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000011[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000010[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x0000000f[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000e[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000d[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000c[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x080484e8: nop 
Symbolic: startInstruction(0x080484e8: nop)
Symbolic insn@0x080484e8[0]: number_(32, 134513896) = 0x080484e8<134513896>[u32]
Symbolic insn@0x080484e8[0]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080484e8[0]: add(0x080484e8<134513896>[u32], 0x00000001[u32]) = 0x080484e9<134513897>[u32]
Symbolic insn@0x080484e8[0]: writeRegister(eip, 0x080484e9<134513897>[u32])
Symbolic insn@0x080484e8[0]: finishInstruction(nop)
registers:
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080484e9<134513897>[u32]
 fpstatus_top = 0x0[u3]
memory:

0x080484e9: lea esi, [esi + 0x00000000]
Symbolic: startInstruction(0x080484e9: lea esi, [esi + 0x00000000])
Symbolic insn@0x080484e9[1]: number_(32, 134513897) = 0x080484e9<134513897>[u32]
Symbolic insn@0x080484e9[1]: number_(32, 7) = 0x00000007[u32]
Symbolic insn@0x080484e9[1]: add(0x080484e9<134513897>[u32], 0x00000007[u32]) = 0x080484f0<134513904>[u32]
Symbolic insn@0x080484e9[1]: writeRegister(eip, 0x080484f0<134513904>[u32])
Symbolic insn@0x080484e9[1]: undefined_(32) = V1[u32]
Symbolic insn@0x080484e9[1]: readRegister(esi, V1[u32]) = esi_0[u32]
Symbolic insn@0x080484e9[1]: number_(32, 0) = 0x00000000[u32]
Symbolic insn@0x080484e9[1]: add(esi_0[u32], 0x00000000[u32]) = esi_0[u32]
Symbolic insn@0x080484e9[1]: unsignedExtend(esi_0[u32], 32) = esi_0[u32]
Symbolic insn@0x080484e9[1]: writeRegister(esi, esi_0[u32])
Symbolic insn@0x080484e9[1]: finishInstruction(lea esi, [esi + 0x00000000])
registers:
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080484f0<134513904>[u32]
 fpstatus_top = 0x0[u3]
memory:

0x080484f0: xor edi, edi
Symbolic: startInstruction(0x080484f0: xor edi, edi)
Symbolic insn@0x080484f0[2]: number_(32, 134513904) = 0x080484f0<134513904>[u32]
Symbolic insn@0x080484f0[2]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x080484f0[2]: add(0x080484f0<134513904>[u32], 0x00000002[u32]) = 0x080484f2<134513906>[u32]
Symbolic insn@0x080484f0[2]: writeRegister(eip, 0x080484f2<134513906>[u32])
Symbolic insn@0x080484f0[2]: number_(32, 0) = 0x00000000[u32]
Symbolic insn@0x080484f0[2]: extract(0x00000000[u32], 0, 8) = 0x00[u8]
Symbolic insn@0x080484f0[2]: extract(0x00[u8], 1, 2) = false[u1]
Symbolic insn@0x080484f0[2]: extract(0x00[u8], 0, 1) = false[u1]
Symbolic insn@0x080484f0[2]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x080484f0[2]: extract(0x00[u8], 3, 4) = false[u1]
Symbolic insn@0x080484f0[2]: extract(0x00[u8], 2, 3) = false[u1]
Symbolic insn@0x080484f0[2]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x080484f0[2]: extract(0x00[u8], 5, 6) = false[u1]
Symbolic insn@0x080484f0[2]: extract(0x00[u8], 4, 5) = false[u1]
Symbolic insn@0x080484f0[2]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x080484f0[2]: extract(0x00[u8], 7, 8) = false[u1]
Symbolic insn@0x080484f0[2]: extract(0x00[u8], 6, 7) = false[u1]
Symbolic insn@0x080484f0[2]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x080484f0[2]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x080484f0[2]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x080484f0[2]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x080484f0[2]: invert(false[u1]) = true[u1]
Symbolic insn@0x080484f0[2]: writeRegister(pf, true[u1])
Symbolic insn@0x080484f0[2]: extract(0x00000000[u32], 31, 32) = false[u1]
Symbolic insn@0x080484f0[2]: writeRegister(sf, false[u1])
Symbolic insn@0x080484f0[2]: equalToZero(0x00000000[u32]) = true[u1]
Symbolic insn@0x080484f0[2]: writeRegister(zf, true[u1])
Symbolic insn@0x080484f0[2]: writeRegister(edi, 0x00000000[u32])
Symbolic insn@0x080484f0[2]: boolean_(0) = false[u1]
Symbolic insn@0x080484f0[2]: writeRegister(of, false[u1])
Symbolic insn@0x080484f0[2]: unspecified_(1) = V2[u1]<unspec>
Symbolic insn@0x080484f0[2]: writeRegister(af, V2[u1]<unspec>)
Symbolic insn@0x080484f0[2]: boolean_(0) = false[u1]
Symbolic insn@0x080484f0[2]: writeRegister(cf, false[u1])
Symbolic insn@0x080484f0[2]: finishInstruction(xor edi, edi)
registers:
 edi write-only = 0x00000000[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080484f2<134513906>[u32]
 cf write-only = false[u1]
 pf write-only = true[u1]
 af write-only = V2[u1]<unspec>
 zf write-only = true[u1]
 sf write-only = false[u1]
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:

0x080484f2: mov esi, edx
Symbolic: startInstruction(0x080484f2: mov esi, edx)
Symbolic insn@0x080484f2[3]: number_(32, 134513906) = 0x080484f2<134513906>[u32]
Symbolic insn@0x080484f2[3]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x080484f2[3]: add(0x080484f2<134513906>[u32], 0x00000002[u32]) = 0x080484f4<134513908>[u32]
Symbolic insn@0x080484f2[3]: writeRegister(eip, 0x080484f4<134513908>[u32])
Symbolic insn@0x080484f2[3]: undefined_(32) = V3[u32]
Symbolic insn@0x080484f2[3]: readRegister(edx, V3[u32]) = edx_0[u32]
Symbolic insn@0x080484f2[3]: writeRegister(esi, edx_0[u32])
Symbolic insn@0x080484f2[3]: finishInstruction(mov esi, edx)
registers:
 esi read-before-write = edx_0[u32]
 edi write-only = 0x00000000[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080484f4<134513908>[u32]
 cf write-only = false[u1]
 pf write-only = true[u1]
 af write-only = V2[u1]<unspec>
 zf write-only = true[u1]
 sf write-only = false[u1]
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:

0x080484f4: lea esi, [esi + 0x00000000]
Symbolic: startInstruction(0x080484f4: lea esi, [esi + 0x00000000])
Symbolic insn@0x080484f4[4]: number_(32, 134513908) = 0x080484f4<134513908>[u32]
Symbolic insn@0x080484f4[4]: number_(32, 6) = 0x00000006[u32]
Symbolic insn@0x080484f4[4]: add(0x080484f4<134513908>[u32], 0x00000006[u32]) = 0x080484fa<134513914>[u32]
Symbolic insn@0x080484f4[4]: writeRegister(eip, 0x080484fa<134513914>[u32])
Symbolic insn@0x080484f4[4]: undefined_(32) = V4[u32]
Symbolic insn@0x080484f4[4]: readRegister(esi, V4[u32]) = edx_0[u32]
Symbolic insn@0x080484f4[4]: number_(32, 0) = 0x00000000[u32]
Symbolic insn@0x080484f4[4]: add(edx_0[u32], 0x00000000[u32]) = edx_0[u32]
Symbolic insn@0x080484f4[4]: unsignedExtend(edx_0[u32], 32) = edx_0[u32]
Symbolic insn@0x080484f4[4]: writeRegister(esi, edx_0[u32])
Symbolic insn@0x080484f4[4]: finishInstruction(lea esi, [esi + 0x00000000])
registers:
 esi read-before-write = edx_0[u32]
 edi write-only = 0x00000000[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080484fa<134513914>[u32]
 cf write-only = false[u1]
 pf write-only = true[u1]
 af write-only = V2[u1]<unspec>
 zf write-only = true[u1]
 sf write-only = false[u1]
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:

0x080484fa: lea edi, [edi + 0x00000000]
Symbolic: startInstruction(0x080484fa: lea edi, [edi + 0x00000000])
Symbolic insn@0x080484fa[5]: number_(32, 134513914) = 0x080484fa<134513914>[u32]
Symbolic insn@0x080484fa[5]: number_(32, 6) = 0x00000006[u32]
Symbolic insn@0x080484fa[5]: add(0x080484fa<134513914>[u32], 0x00000006[u32]) = 0x08048500<134513920>[u32]
Symbolic insn@0x080484fa[5]: writeRegister(eip, 0x08048500<134513920>[u32])
Symbolic insn@0x080484fa[5]: undefined_(32) = V5[u32]
Symbolic insn@0x080484fa[5]: readRegister(edi, V5[u32]) = 0x00000000[u32]
Symbolic insn@0x080484fa[5]: number_(32, 0) = 0x00000000[u32]
Symbolic insn@0x080484fa[5]: add(0x00000000[u32], 0x00000000[u32]) = 0x00000000[u32]
Symbolic insn@0x080484fa[5]: unsignedExtend(0x00000000[u32], 32) = 0x00000000[u32]
Symbolic insn@0x080484fa[5]: writeRegister(edi, 0x00000000[u32])
Symbolic insn@0x080484fa[5]: finishInstruction(lea edi, [edi + 0x00000000])
registers:
 esi read-before-write = edx_0[u32]
 edi = 0x00000000[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048500<134513920>[u32]
 cf write-only = false[u1]
 pf write-only = true[u1]
 af write-only = V2[u1]<unspec>
 zf write-only = true[u1]
 sf write-only = false[u1]
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:

0x08048500: call dword ds:[esi]
Symbolic: startInstruction(0x08048500: call dword ds:[esi])
Symbolic insn@0x08048500[6]: number_(32, 134513920) = 0x08048500<134513920>[u32]
Symbolic insn@0x08048500[6]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x08048500[6]: add(0x08048500<134513920>[u32], 0x00000002[u32]) = 0x08048502<134513922>[u32]
Symbolic insn@0x08048500[6]: writeRegister(eip, 0x08048502<134513922>[u32])
Symbolic insn@0x08048500[6]: undefined_(32) = V6[u32]
Symbolic insn@0x08048500[6]: readRegister(esi, V6[u32]) = edx_0[u32]
Symbolic insn@0x08048500[6]: undefined_(32) = V7[u32]
Symbolic insn@0x08048500[6]: boolean_(1) = true[u1]
Symbolic insn@0x08048500[6]: readMemory(ds, edx_0[u32], V7[u32], true[u1]) = V7[u32]
Symbolic insn@0x08048500[6]: unsignedExtend(V7[u32], 32) = V7[u32]
Symbolic insn@0x08048500[6]: undefined_(32) = V8[u32]
Symbolic insn@0x08048500[6]: readRegister(esp, V8[u32]) = esp_0[u32]
Symbolic insn@0x08048500[6]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048500[6]: add(esp_0[u32], 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048500[6]: boolean_(1) = true[u1]
Symbolic insn@0x08048500[6]: undefined_(32) = V9[u32]
Symbolic insn@0x08048500[6]: readRegister(eip, V9[u32]) = 0x08048502<134513922>[u32]
Symbolic insn@0x08048500[6]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), 0x08048502<134513922>[u32], true[u1])
Symbolic insn@0x08048500[6]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048500[6]: filterCallTarget(V7[u32]) = V7[u32]
Symbolic insn@0x08048500[6]: writeRegister(eip, V7[u32])
Symbolic insn@0x08048500[6]: finishInstruction(call dword ds:[esi])
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 esi read-before-write = edx_0[u32]
 edi = 0x00000000[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip = V7[u32]
 cf write-only = false[u1]
 pf write-only = true[u1]
 af write-only = V2[u1]<unspec>
 zf write-only = true[u1]
 sf write-only = false[u1]
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=0x85<-123>[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=0x02[u8]
 addr=(add[u32] edx_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V7[u32])
 addr=(add[u32] edx_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V7[u32])
 addr=(add[u32] edx_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V7[u32])
 addr=edx_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V7[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x08048502: inc edi
Symbolic: startInstruction(0x08048502: inc edi)
Symbolic insn@0x08048502[0]: number_(32, 134513922) = 0x08048502<134513922>[u32]
Symbolic insn@0x08048502[0]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048502[0]: add(0x08048502<134513922>[u32], 0x00000001[u32]) = 0x08048503<134513923>[u32]
Symbolic insn@0x08048502[0]: writeRegister(eip, 0x08048503<134513923>[u32])
Symbolic insn@0x08048502[0]: undefined_(32) = V1[u32]
Symbolic insn@0x08048502[0]: readRegister(edi, V1[u32]) = edi_0[u32]
Symbolic insn@0x08048502[0]: boolean_(0) = false[u1]
Symbolic insn@0x08048502[0]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048502[0]: addWithCarries(edi_0[u32], 0x00000001[u32], false[u1]) = (add[u32] edi_0[u32] 0x00000001[u32])
Symbolic insn@0x08048502[0]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]))
Symbolic insn@0x08048502[0]: extract((add[u32] edi_0[u32] 0x00000001[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32]))
Symbolic insn@0x08048502[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] edi_0[u32] 0x00000001[u32]))
Symbolic insn@0x08048502[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] edi_0[u32] 0x00000001[u32]))
Symbolic insn@0x08048502[0]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] edi_0[u32] 0x00000001[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] edi_0[u32] 0x00000001[u32])))
Symbolic insn@0x08048502[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] edi_0[u32] 0x00000001[u32]))
Symbolic insn@0x08048502[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] edi_0[u32] 0x00000001[u32]))
Symbolic insn@0x08048502[0]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] edi_0[u32] 0x00000001[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] edi_0[u32] 0x00000001[u32])))
Symbolic insn@0x08048502[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] edi_0[u32] 0x00000001[u32]))
Symbolic insn@0x08048502[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] edi_0[u32] 0x00000001[u32]))
Symbolic insn@0x08048502[0]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] edi_0[u32] 0x00000001[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] edi_0[u32] 0x00000001[u32])))
Symbolic insn@0x08048502[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32]))
Symbolic insn@0x08048502[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] edi_0[u32] 0x00000001[u32]))
Symbolic insn@0x08048502[0]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] edi_0[u32] 0x00000001[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])))
Symbolic insn@0x08048502[0]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] edi_0[u32] 0x00000001[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] edi_0[u32] 0x00000001[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] edi_0[u32] 0x00000001[u32])))
Symbolic insn@0x08048502[0]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] edi_0[u32] 0x00000001[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])))
Symbolic insn@0x08048502[0]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] edi_0[u32] 0x00000001[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])))
Symbolic insn@0x08048502[0]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32]))))
Symbolic insn@0x08048502[0]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])))))
Symbolic insn@0x08048502[0]: extract((add[u32] edi_0[u32] 0x00000001[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] edi_0[u32] 0x00000001[u32]))
Symbolic insn@0x08048502[0]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] edi_0[u32] 0x00000001[u32])))
Symbolic insn@0x08048502[0]: equalToZero((add[u32] edi_0[u32] 0x00000001[u32])) = (zerop[u1] (add[u32] edi_0[u32] 0x00000001[u32]))
Symbolic insn@0x08048502[0]: writeRegister(zf, (zerop[u1] (add[u32] edi_0[u32] 0x00000001[u32])))
Symbolic insn@0x08048502[0]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33])), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]))
Symbolic insn@0x08048502[0]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33])), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]))
Symbolic insn@0x08048502[0]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33])), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]))
Symbolic insn@0x08048502[0]: writeRegister(af, (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33])))
Symbolic insn@0x08048502[0]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33])), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33])))
Symbolic insn@0x08048502[0]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]))))
Symbolic insn@0x08048502[0]: writeRegister(edi, (add[u32] edi_0[u32] 0x00000001[u32]))
Symbolic insn@0x08048502[0]: finishInstruction(inc edi)
registers:
 edi read-before-write = (add[u32] edi_0[u32] 0x00000001[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048503<134513923>[u32]
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]))
 zf write-only = (zerop[u1] (add[u32] edi_0[u32] 0x00000001[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] edi_0[u32] 0x00000001[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33])))
 fpstatus_top = 0x0[u3]
memory:

0x08048503: add esi, 0x04
Symbolic: startInstruction(0x08048503: add esi, 0x04)
Symbolic insn@0x08048503[1]: number_(32, 134513923) = 0x08048503<134513923>[u32]
Symbolic insn@0x08048503[1]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x08048503[1]: add(0x08048503<134513923>[u32], 0x00000003[u32]) = 0x08048506<134513926>[u32]
Symbolic insn@0x08048503[1]: writeRegister(eip, 0x08048506<134513926>[u32])
Symbolic insn@0x08048503[1]: boolean_(0) = false[u1]
Symbolic insn@0x08048503[1]: number_(8, 4) = 0x04[u8]
Symbolic insn@0x08048503[1]: undefined_(32) = V2[u32]
Symbolic insn@0x08048503[1]: readRegister(esi, V2[u32]) = esi_0[u32]
Symbolic insn@0x08048503[1]: signExtend(0x04[u8], 32) = 0x00000004[u32]
Symbolic insn@0x08048503[1]: addWithCarries(esi_0[u32], 0x00000004[u32], false[u1]) = (add[u32] esi_0[u32] 0x00000004[u32])
Symbolic insn@0x08048503[1]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]))
Symbolic insn@0x08048503[1]: extract((add[u32] esi_0[u32] 0x00000004[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0x00000004[u32]))
Symbolic insn@0x08048503[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0x00000004[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esi_0[u32] 0x00000004[u32]))
Symbolic insn@0x08048503[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0x00000004[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esi_0[u32] 0x00000004[u32]))
Symbolic insn@0x08048503[1]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esi_0[u32] 0x00000004[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esi_0[u32] 0x00000004[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esi_0[u32] 0x00000004[u32])))
Symbolic insn@0x08048503[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0x00000004[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esi_0[u32] 0x00000004[u32]))
Symbolic insn@0x08048503[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0x00000004[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esi_0[u32] 0x00000004[u32]))
Symbolic insn@0x08048503[1]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esi_0[u32] 0x00000004[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esi_0[u32] 0x00000004[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esi_0[u32] 0x00000004[u32])))
Symbolic insn@0x08048503[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0x00000004[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esi_0[u32] 0x00000004[u32]))
Symbolic insn@0x08048503[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0x00000004[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esi_0[u32] 0x00000004[u32]))
Symbolic insn@0x08048503[1]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esi_0[u32] 0x00000004[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esi_0[u32] 0x00000004[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esi_0[u32] 0x00000004[u32])))
Symbolic insn@0x08048503[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0x00000004[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0x00000004[u32]))
Symbolic insn@0x08048503[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0x00000004[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esi_0[u32] 0x00000004[u32]))
Symbolic insn@0x08048503[1]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esi_0[u32] 0x00000004[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0x00000004[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0x00000004[u32])))
Symbolic insn@0x08048503[1]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esi_0[u32] 0x00000004[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esi_0[u32] 0x00000004[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esi_0[u32] 0x00000004[u32])))
Symbolic insn@0x08048503[1]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esi_0[u32] 0x00000004[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0x00000004[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0x00000004[u32])))
Symbolic insn@0x08048503[1]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esi_0[u32] 0x00000004[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0x00000004[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0x00000004[u32])))
Symbolic insn@0x08048503[1]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0x00000004[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0x00000004[u32]))))
Symbolic insn@0x08048503[1]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0x00000004[u32])))))
Symbolic insn@0x08048503[1]: extract((add[u32] esi_0[u32] 0x00000004[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esi_0[u32] 0x00000004[u32]))
Symbolic insn@0x08048503[1]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esi_0[u32] 0x00000004[u32])))
Symbolic insn@0x08048503[1]: equalToZero((add[u32] esi_0[u32] 0x00000004[u32])) = (zerop[u1] (add[u32] esi_0[u32] 0x00000004[u32]))
Symbolic insn@0x08048503[1]: writeRegister(zf, (zerop[u1] (add[u32] esi_0[u32] 0x00000004[u32])))
Symbolic insn@0x08048503[1]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33])), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]))
Symbolic insn@0x08048503[1]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33])), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]))
Symbolic insn@0x08048503[1]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33])), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]))
Symbolic insn@0x08048503[1]: writeRegister(af, (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33])))
Symbolic insn@0x08048503[1]: writeRegister(cf, (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33])))
Symbolic insn@0x08048503[1]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33])), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33])))
Symbolic insn@0x08048503[1]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]))))
Symbolic insn@0x08048503[1]: writeRegister(esi, (add[u32] esi_0[u32] 0x00000004[u32]))
Symbolic insn@0x08048503[1]: finishInstruction(add esi, 0x04)
registers:
 esi read-before-write = (add[u32] esi_0[u32] 0x00000004[u32])
 edi read-before-write = (add[u32] edi_0[u32] 0x00000001[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048506<134513926>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esi_0[u32] 0x00000004[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0x00000004[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]))
 zf write-only = (zerop[u1] (add[u32] esi_0[u32] 0x00000004[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esi_0[u32] 0x00000004[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x000000004[u33])))
 fpstatus_top = 0x0[u3]
memory:

0x08048506: cmp edi, dword ss:[ebp + 0xf0<-16>]
Symbolic: startInstruction(0x08048506: cmp edi, dword ss:[ebp + 0xf0<-16>])
Symbolic insn@0x08048506[2]: number_(32, 134513926) = 0x08048506<134513926>[u32]
Symbolic insn@0x08048506[2]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x08048506[2]: add(0x08048506<134513926>[u32], 0x00000003[u32]) = 0x08048509<134513929>[u32]
Symbolic insn@0x08048506[2]: writeRegister(eip, 0x08048509<134513929>[u32])
Symbolic insn@0x08048506[2]: undefined_(32) = V3[u32]
Symbolic insn@0x08048506[2]: readRegister(edi, V3[u32]) = (add[u32] edi_0[u32] 0x00000001[u32])
Symbolic insn@0x08048506[2]: undefined_(32) = V4[u32]
Symbolic insn@0x08048506[2]: readRegister(ebp, V4[u32]) = ebp_0[u32]
Symbolic insn@0x08048506[2]: number_(8, 240) = 0xf0<-16>[u8]
Symbolic insn@0x08048506[2]: signExtend(0xf0<-16>[u8], 32) = 0xfffffff0<4294967280,-16>[u32]
Symbolic insn@0x08048506[2]: add(ebp_0[u32], 0xfffffff0<4294967280,-16>[u32]) = (add[u32] ebp_0[u32] 0xfffffff0<4294967280,-16>[u32])
Symbolic insn@0x08048506[2]: undefined_(32) = V5[u32]
Symbolic insn@0x08048506[2]: boolean_(1) = true[u1]
Symbolic insn@0x08048506[2]: readMemory(ss, (add[u32] ebp_0[u32] 0xfffffff0<4294967280,-16>[u32]), V5[u32], true[u1]) = V5[u32]
Symbolic insn@0x08048506[2]: boolean_(0) = false[u1]
Symbolic insn@0x08048506[2]: invert(V5[u32]) = (invert[u32] V5[u32])
Symbolic insn@0x08048506[2]: invert(false[u1]) = true[u1]
Symbolic insn@0x08048506[2]: addWithCarries((add[u32] edi_0[u32] 0x00000001[u32]), (invert[u32] V5[u32]), true[u1]) = (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])
Symbolic insn@0x08048506[2]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32]))))
Symbolic insn@0x08048506[2]: extract((add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]))
Symbolic insn@0x08048506[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]))
Symbolic insn@0x08048506[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]))
Symbolic insn@0x08048506[2]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])))
Symbolic insn@0x08048506[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]))
Symbolic insn@0x08048506[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]))
Symbolic insn@0x08048506[2]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])))
Symbolic insn@0x08048506[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]))
Symbolic insn@0x08048506[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]))
Symbolic insn@0x08048506[2]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])))
Symbolic insn@0x08048506[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]))
Symbolic insn@0x08048506[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]))
Symbolic insn@0x08048506[2]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])))
Symbolic insn@0x08048506[2]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])))
Symbolic insn@0x08048506[2]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])))
Symbolic insn@0x08048506[2]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])))
Symbolic insn@0x08048506[2]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]))))
Symbolic insn@0x08048506[2]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])))))
Symbolic insn@0x08048506[2]: extract((add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]))
Symbolic insn@0x08048506[2]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])))
Symbolic insn@0x08048506[2]: equalToZero((add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) = (zerop[u1] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]))
Symbolic insn@0x08048506[2]: writeRegister(zf, (zerop[u1] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])))
Symbolic insn@0x08048506[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])))), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32]))))
Symbolic insn@0x08048506[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])))), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32]))))
Symbolic insn@0x08048506[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])))), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32]))))
Symbolic insn@0x08048506[2]: invert((extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32]))))) = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])))))
Symbolic insn@0x08048506[2]: writeRegister(af, (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32]))))))
Symbolic insn@0x08048506[2]: invert((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32]))))) = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])))))
Symbolic insn@0x08048506[2]: writeRegister(cf, (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32]))))))
Symbolic insn@0x08048506[2]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])))), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32]))))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])))))
Symbolic insn@0x08048506[2]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32]))))))
Symbolic insn@0x08048506[2]: finishInstruction(cmp edi, dword ss:[ebp + 0xf0<-16>])
registers:
 esi read-before-write = (add[u32] esi_0[u32] 0x00000004[u32])
 edi read-before-write = (add[u32] edi_0[u32] 0x00000001[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048509<134513929>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])))))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])))))
 zf write-only = (zerop[u1] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])))))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebp_0[u32] 0xfffffff3<4294967283,-13>[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V5[u32])
 addr=(add[u32] ebp_0[u32] 0xfffffff2<4294967282,-14>[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V5[u32])
 addr=(add[u32] ebp_0[u32] 0xfffffff1<4294967281,-15>[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V5[u32])
 addr=(add[u32] ebp_0[u32] 0xfffffff0<4294967280,-16>[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])

0x08048509: jb 0x08048500<<BBlock>>
Symbolic: startInstruction(0x08048509: jb 0x08048500<<BBlock>>)
Symbolic insn@0x08048509[3]: number_(32, 134513929) = 0x08048509<134513929>[u32]
Symbolic insn@0x08048509[3]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x08048509[3]: add(0x08048509<134513929>[u32], 0x00000002[u32]) = 0x0804850b<134513931>[u32]
Symbolic insn@0x08048509[3]: writeRegister(eip, 0x0804850b<134513931>[u32])
Symbolic insn@0x08048509[3]: undefined_(1) = V6[u1]
Symbolic insn@0x08048509[3]: readRegister(cf, V6[u1]) = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])))))
Symbolic insn@0x08048509[3]: undefined_(32) = V7[u32]
Symbolic insn@0x08048509[3]: readRegister(eip, V7[u32]) = 0x0804850b<134513931>[u32]
Symbolic insn@0x08048509[3]: number_(32, 134513920) = 0x08048500<134513920>[u32]
Symbolic insn@0x08048509[3]: unsignedExtend(0x08048500<134513920>[u32], 32) = 0x08048500<134513920>[u32]
Symbolic insn@0x08048509[3]: ite((invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32]))))), 0x08048500<134513920>[u32], 0x0804850b<134513931>[u32]) = (ite[u32] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])))) 0x0804850b<134513931>[u32] 0x08048500<134513920>[u32])
Symbolic insn@0x08048509[3]: writeRegister(eip, (ite[u32] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])))) 0x0804850b<134513931>[u32] 0x08048500<134513920>[u32]))
Symbolic insn@0x08048509[3]: finishInstruction(jb 0x08048500<<BBlock>>)
registers:
 esi read-before-write = (add[u32] esi_0[u32] 0x00000004[u32])
 edi read-before-write = (add[u32] edi_0[u32] 0x00000001[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip = (ite[u32] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])))) 0x0804850b<134513931>[u32] 0x08048500<134513920>[u32])
 cf = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])))))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])))))
 zf write-only = (zerop[u1] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] (invert[u32] V5[u32]) edi_0[u32] 0x00000002[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] V5[u32])))))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebp_0[u32] 0xfffffff3<4294967283,-13>[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V5[u32])
 addr=(add[u32] ebp_0[u32] 0xfffffff2<4294967282,-14>[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V5[u32])
 addr=(add[u32] ebp_0[u32] 0xfffffff1<4294967281,-15>[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V5[u32])
 addr=(add[u32] ebp_0[u32] 0xfffffff0<4294967280,-16>[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x0804850b: add esp, 0x0c
Symbolic: startInstruction(0x0804850b: add esp, 0x0c)
Symbolic insn@0x0804850b[0]: number_(32, 134513931) = 0x0804850b<134513931>[u32]
Symbolic insn@0x0804850b[0]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x0804850b[0]: add(0x0804850b<134513931>[u32], 0x00000003[u32]) = 0x0804850e<134513934>[u32]
Symbolic insn@0x0804850b[0]: writeRegister(eip, 0x0804850e<134513934>[u32])
Symbolic insn@0x0804850b[0]: boolean_(0) = false[u1]
Symbolic insn@0x0804850b[0]: number_(8, 12) = 0x0c[u8]
Symbolic insn@0x0804850b[0]: undefined_(32) = V1[u32]
Symbolic insn@0x0804850b[0]: readRegister(esp, V1[u32]) = esp_0[u32]
Symbolic insn@0x0804850b[0]: signExtend(0x0c[u8], 32) = 0x0000000c[u32]
Symbolic insn@0x0804850b[0]: addWithCarries(esp_0[u32], 0x0000000c[u32], false[u1]) = (add[u32] esp_0[u32] 0x0000000c[u32])
Symbolic insn@0x0804850b[0]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
Symbolic insn@0x0804850b[0]: extract((add[u32] esp_0[u32] 0x0000000c[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x0804850b[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x0804850b[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x0804850b[0]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x0804850b[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x0804850b[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x0804850b[0]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x0804850b[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x0804850b[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x0804850b[0]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x0804850b[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x0804850b[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x0804850b[0]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x0804850b[0]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x0804850b[0]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x0804850b[0]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x0804850b[0]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))))
Symbolic insn@0x0804850b[0]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))))
Symbolic insn@0x0804850b[0]: extract((add[u32] esp_0[u32] 0x0000000c[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x0804850b[0]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x0804850b[0]: equalToZero((add[u32] esp_0[u32] 0x0000000c[u32])) = (zerop[u1] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x0804850b[0]: writeRegister(zf, (zerop[u1] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x0804850b[0]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
Symbolic insn@0x0804850b[0]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
Symbolic insn@0x0804850b[0]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
Symbolic insn@0x0804850b[0]: writeRegister(af, (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
Symbolic insn@0x0804850b[0]: writeRegister(cf, (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
Symbolic insn@0x0804850b[0]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
Symbolic insn@0x0804850b[0]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))))
Symbolic insn@0x0804850b[0]: writeRegister(esp, (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x0804850b[0]: finishInstruction(add esp, 0x0c)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0x0000000c[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x0804850e<134513934>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0x0000000c[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
 fpstatus_top = 0x0[u3]
memory:

0x0804850e: pop ebx
Symbolic: startInstruction(0x0804850e: pop ebx)
Symbolic insn@0x0804850e[1]: number_(32, 134513934) = 0x0804850e<134513934>[u32]
Symbolic insn@0x0804850e[1]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x0804850e[1]: add(0x0804850e<134513934>[u32], 0x00000001[u32]) = 0x0804850f<134513935>[u32]
Symbolic insn@0x0804850e[1]: writeRegister(eip, 0x0804850f<134513935>[u32])
Symbolic insn@0x0804850e[1]: undefined_(32) = V2[u32]
Symbolic insn@0x0804850e[1]: readRegister(esp, V2[u32]) = (add[u32] esp_0[u32] 0x0000000c[u32])
Symbolic insn@0x0804850e[1]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x0804850e[1]: add((add[u32] esp_0[u32] 0x0000000c[u32]), 0x00000004[u32]) = (add[u32] esp_0[u32] 0x00000010[u32])
Symbolic insn@0x0804850e[1]: writeRegister(esp, (add[u32] esp_0[u32] 0x00000010[u32]))
Symbolic insn@0x0804850e[1]: boolean_(1) = true[u1]
Symbolic insn@0x0804850e[1]: undefined_(32) = V3[u32]
Symbolic insn@0x0804850e[1]: readMemory(ss, (add[u32] esp_0[u32] 0x0000000c[u32]), V3[u32], true[u1]) = V3[u32]
Symbolic insn@0x0804850e[1]: writeRegister(ebx, V3[u32])
Symbolic insn@0x0804850e[1]: finishInstruction(pop ebx)
registers:
 ebx write-only = V3[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x00000010[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x0804850f<134513935>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0x0000000c[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x0000000f[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000e[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000d[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000c[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])

0x0804850f: pop esi
Symbolic: startInstruction(0x0804850f: pop esi)
Symbolic insn@0x0804850f[2]: number_(32, 134513935) = 0x0804850f<134513935>[u32]
Symbolic insn@0x0804850f[2]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x0804850f[2]: add(0x0804850f<134513935>[u32], 0x00000001[u32]) = 0x08048510<134513936>[u32]
Symbolic insn@0x0804850f[2]: writeRegister(eip, 0x08048510<134513936>[u32])
Symbolic insn@0x0804850f[2]: undefined_(32) = V4[u32]
Symbolic insn@0x0804850f[2]: readRegister(esp, V4[u32]) = (add[u32] esp_0[u32] 0x00000010[u32])
Symbolic insn@0x0804850f[2]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x0804850f[2]: add((add[u32] esp_0[u32] 0x00000010[u32]), 0x00000004[u32]) = (add[u32] esp_0[u32] 0x00000014[u32])
Symbolic insn@0x0804850f[2]: writeRegister(esp, (add[u32] esp_0[u32] 0x00000014[u32]))
Symbolic insn@0x0804850f[2]: boolean_(1) = true[u1]
Symbolic insn@0x0804850f[2]: undefined_(32) = V5[u32]
Symbolic insn@0x0804850f[2]: readMemory(ss, (add[u32] esp_0[u32] 0x00000010[u32]), V5[u32], true[u1]) = V5[u32]
Symbolic insn@0x0804850f[2]: writeRegister(esi, V5[u32])
Symbolic insn@0x0804850f[2]: finishInstruction(pop esi)
registers:
 ebx write-only = V3[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x00000014[u32])
 esi write-only = V5[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048510<134513936>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0x0000000c[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000013[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000012[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000011[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000010[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x0000000f[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000e[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000d[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000c[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])

0x08048510: pop edi
Symbolic: startInstruction(0x08048510: pop edi)
Symbolic insn@0x08048510[3]: number_(32, 134513936) = 0x08048510<134513936>[u32]
Symbolic insn@0x08048510[3]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048510[3]: add(0x08048510<134513936>[u32], 0x00000001[u32]) = 0x08048511<134513937>[u32]
Symbolic insn@0x08048510[3]: writeRegister(eip, 0x08048511<134513937>[u32])
Symbolic insn@0x08048510[3]: undefined_(32) = V6[u32]
Symbolic insn@0x08048510[3]: readRegister(esp, V6[u32]) = (add[u32] esp_0[u32] 0x00000014[u32])
Symbolic insn@0x08048510[3]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x08048510[3]: add((add[u32] esp_0[u32] 0x00000014[u32]), 0x00000004[u32]) = (add[u32] esp_0[u32] 0x00000018[u32])
Symbolic insn@0x08048510[3]: writeRegister(esp, (add[u32] esp_0[u32] 0x00000018[u32]))
Symbolic insn@0x08048510[3]: boolean_(1) = true[u1]
Symbolic insn@0x08048510[3]: undefined_(32) = V7[u32]
Symbolic insn@0x08048510[3]: readMemory(ss, (add[u32] esp_0[u32] 0x00000014[u32]), V7[u32], true[u1]) = V7[u32]
Symbolic insn@0x08048510[3]: writeRegister(edi, V7[u32])
Symbolic insn@0x08048510[3]: finishInstruction(pop edi)
registers:
 ebx write-only = V3[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x00000018[u32])
 esi write-only = V5[u32]
 edi write-only = V7[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048511<134513937>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0x0000000c[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000017[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000016[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000015[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000014[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000013[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000012[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000011[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000010[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x0000000f[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000e[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000d[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000c[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])

0x08048511: pop ebp
Symbolic: startInstruction(0x08048511: pop ebp)
Symbolic insn@0x08048511[4]: number_(32, 134513937) = 0x08048511<134513937>[u32]
Symbolic insn@0x08048511[4]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048511[4]: add(0x08048511<134513937>[u32], 0x00000001[u32]) = 0x08048512<134513938>[u32]
Symbolic insn@0x08048511[4]: writeRegister(eip, 0x08048512<134513938>[u32])
Symbolic insn@0x08048511[4]: undefined_(32) = V8[u32]
Symbolic insn@0x08048511[4]: readRegister(esp, V8[u32]) = (add[u32] esp_0[u32] 0x00000018[u32])
Symbolic insn@0x08048511[4]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x08048511[4]: add((add[u32] esp_0[u32] 0x00000018[u32]), 0x00000004[u32]) = (add[u32] esp_0[u32] 0x0000001c[u32])
Symbolic insn@0x08048511[4]: writeRegister(esp, (add[u32] esp_0[u32] 0x0000001c[u32]))
Symbolic insn@0x08048511[4]: boolean_(1) = true[u1]
Symbolic insn@0x08048511[4]: undefined_(32) = V9[u32]
Symbolic insn@0x08048511[4]: readMemory(ss, (add[u32] esp_0[u32] 0x00000018[u32]), V9[u32], true[u1]) = V9[u32]
Symbolic insn@0x08048511[4]: writeRegister(ebp, V9[u32])
Symbolic insn@0x08048511[4]: finishInstruction(pop ebp)
registers:
 ebx write-only = V3[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x0000001c[u32])
 ebp write-only = V9[u32]
 esi write-only = V5[u32]
 edi write-only = V7[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048512<134513938>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0x0000000c[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x0000001b[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V9[u32])
 addr=(add[u32] esp_0[u32] 0x0000001a[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V9[u32])
 addr=(add[u32] esp_0[u32] 0x00000019[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V9[u32])
 addr=(add[u32] esp_0[u32] 0x00000018[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V9[u32])
 addr=(add[u32] esp_0[u32] 0x00000017[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000016[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000015[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000014[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000013[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000012[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000011[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000010[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x0000000f[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000e[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000d[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000c[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])

0x08048512: ret 
Symbolic: startInstruction(0x08048512: ret)
Symbolic insn@0x08048512[5]: number_(32, 134513938) = 0x08048512<134513938>[u32]
Symbolic insn@0x08048512[5]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048512[5]: add(0x08048512<134513938>[u32], 0x00000001[u32]) = 0x08048513<134513939>[u32]
Symbolic insn@0x08048512[5]: writeRegister(eip, 0x08048513<134513939>[u32])
Symbolic insn@0x08048512[5]: undefined_(32) = V10[u32]
Symbolic insn@0x08048512[5]: readRegister(esp, V10[u32]) = (add[u32] esp_0[u32] 0x0000001c[u32])
Symbolic insn@0x08048512[5]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x08048512[5]: add((add[u32] esp_0[u32] 0x0000001c[u32]), 0x00000004[u32]) = (add[u32] esp_0[u32] 0x00000020[u32])
Symbolic insn@0x08048512[5]: boolean_(1) = true[u1]
Symbolic insn@0x08048512[5]: undefined_(32) = V11[u32]
Symbolic insn@0x08048512[5]: readMemory(ss, (add[u32] esp_0[u32] 0x0000001c[u32]), V11[u32], true[u1]) = V11[u32]
Symbolic insn@0x08048512[5]: filterReturnTarget(V11[u32]) = V11[u32]
Symbolic insn@0x08048512[5]: writeRegister(eip, V11[u32])
Symbolic insn@0x08048512[5]: writeRegister(esp, (add[u32] esp_0[u32] 0x00000020[u32]))
Symbolic insn@0x08048512[5]: finishInstruction(ret)
registers:
 ebx write-only = V3[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x00000020[u32])
 ebp write-only = V9[u32]
 esi write-only = V5[u32]
 edi write-only = V7[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = V11[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0x0000000c[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x0000001f[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V11[u32])
 addr=(add[u32] esp_0[u32] 0x0000001e[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V11[u32])
 addr=(add[u32] esp_0[u32] 0x0000001d[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V11[u32])
 addr=(add[u32] esp_0[u32] 0x0000001c[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V11[u32])
 addr=(add[u32] esp_0[u32] 0x0000001b[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V9[u32])
 addr=(add[u32] esp_0[u32] 0x0000001a[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V9[u32])
 addr=(add[u32] esp_0[u32] 0x00000019[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V9[u32])
 addr=(add[u32] esp_0[u32] 0x00000018[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V9[u32])
 addr=(add[u32] esp_0[u32] 0x00000017[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000016[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000015[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000014[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000013[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000012[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000011[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000010[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x0000000f[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000e[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000d[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000c[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x08048520: push ebp
Symbolic: startInstruction(0x08048520: push ebp)
Symbolic insn@0x08048520[0]: number_(32, 134513952) = 0x08048520<134513952>[u32]
Symbolic insn@0x08048520[0]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048520[0]: add(0x08048520<134513952>[u32], 0x00000001[u32]) = 0x08048521<134513953>[u32]
Symbolic insn@0x08048520[0]: writeRegister(eip, 0x08048521<134513953>[u32])
Symbolic insn@0x08048520[0]: undefined_(32) = V1[u32]
Symbolic insn@0x08048520[0]: readRegister(ebp, V1[u32]) = ebp_0[u32]
Symbolic insn@0x08048520[0]: undefined_(32) = V2[u32]
Symbolic insn@0x08048520[0]: readRegister(esp, V2[u32]) = esp_0[u32]
Symbolic insn@0x08048520[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048520[0]: add(esp_0[u32], 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048520[0]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048520[0]: boolean_(1) = true[u1]
Symbolic insn@0x08048520[0]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), ebp_0[u32], true[u1])
Symbolic insn@0x08048520[0]: finishInstruction(push ebp)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048521<134513953>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048521: mov ebp, esp
Symbolic: startInstruction(0x08048521: mov ebp, esp)
Symbolic insn@0x08048521[1]: number_(32, 134513953) = 0x08048521<134513953>[u32]
Symbolic insn@0x08048521[1]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x08048521[1]: add(0x08048521<134513953>[u32], 0x00000002[u32]) = 0x08048523<134513955>[u32]
Symbolic insn@0x08048521[1]: writeRegister(eip, 0x08048523<134513955>[u32])
Symbolic insn@0x08048521[1]: undefined_(32) = V3[u32]
Symbolic insn@0x08048521[1]: readRegister(esp, V3[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048521[1]: writeRegister(ebp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048521[1]: finishInstruction(mov ebp, esp)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048523<134513955>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048523: push edi
Symbolic: startInstruction(0x08048523: push edi)
Symbolic insn@0x08048523[2]: number_(32, 134513955) = 0x08048523<134513955>[u32]
Symbolic insn@0x08048523[2]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048523[2]: add(0x08048523<134513955>[u32], 0x00000001[u32]) = 0x08048524<134513956>[u32]
Symbolic insn@0x08048523[2]: writeRegister(eip, 0x08048524<134513956>[u32])
Symbolic insn@0x08048523[2]: undefined_(32) = V4[u32]
Symbolic insn@0x08048523[2]: readRegister(edi, V4[u32]) = edi_0[u32]
Symbolic insn@0x08048523[2]: undefined_(32) = V5[u32]
Symbolic insn@0x08048523[2]: readRegister(esp, V5[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048523[2]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048523[2]: add((add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])
Symbolic insn@0x08048523[2]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]))
Symbolic insn@0x08048523[2]: boolean_(1) = true[u1]
Symbolic insn@0x08048523[2]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]), edi_0[u32], true[u1])
Symbolic insn@0x08048523[2]: finishInstruction(push edi)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048524<134513956>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048524: push esi
Symbolic: startInstruction(0x08048524: push esi)
Symbolic insn@0x08048524[3]: number_(32, 134513956) = 0x08048524<134513956>[u32]
Symbolic insn@0x08048524[3]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048524[3]: add(0x08048524<134513956>[u32], 0x00000001[u32]) = 0x08048525<134513957>[u32]
Symbolic insn@0x08048524[3]: writeRegister(eip, 0x08048525<134513957>[u32])
Symbolic insn@0x08048524[3]: undefined_(32) = V6[u32]
Symbolic insn@0x08048524[3]: readRegister(esi, V6[u32]) = esi_0[u32]
Symbolic insn@0x08048524[3]: undefined_(32) = V7[u32]
Symbolic insn@0x08048524[3]: readRegister(esp, V7[u32]) = (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])
Symbolic insn@0x08048524[3]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048524[3]: add((add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
Symbolic insn@0x08048524[3]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048524[3]: boolean_(1) = true[u1]
Symbolic insn@0x08048524[3]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), esi_0[u32], true[u1])
Symbolic insn@0x08048524[3]: finishInstruction(push esi)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048525<134513957>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xfffffff7<4294967287,-9>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff6<4294967286,-10>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff5<4294967285,-11>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048525: push ebx
Symbolic: startInstruction(0x08048525: push ebx)
Symbolic insn@0x08048525[4]: number_(32, 134513957) = 0x08048525<134513957>[u32]
Symbolic insn@0x08048525[4]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048525[4]: add(0x08048525<134513957>[u32], 0x00000001[u32]) = 0x08048526<134513958>[u32]
Symbolic insn@0x08048525[4]: writeRegister(eip, 0x08048526<134513958>[u32])
Symbolic insn@0x08048525[4]: undefined_(32) = V8[u32]
Symbolic insn@0x08048525[4]: readRegister(ebx, V8[u32]) = ebx_0[u32]
Symbolic insn@0x08048525[4]: undefined_(32) = V9[u32]
Symbolic insn@0x08048525[4]: readRegister(esp, V9[u32]) = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
Symbolic insn@0x08048525[4]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048525[4]: add((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])
Symbolic insn@0x08048525[4]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]))
Symbolic insn@0x08048525[4]: boolean_(1) = true[u1]
Symbolic insn@0x08048525[4]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]), ebx_0[u32], true[u1])
Symbolic insn@0x08048525[4]: finishInstruction(push ebx)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048526<134513958>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xfffffff3<4294967283,-13>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff2<4294967282,-14>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff1<4294967281,-15>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff7<4294967287,-9>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff6<4294967286,-10>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff5<4294967285,-11>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048526: sub esp, 0x0c
Symbolic: startInstruction(0x08048526: sub esp, 0x0c)
Symbolic insn@0x08048526[5]: number_(32, 134513958) = 0x08048526<134513958>[u32]
Symbolic insn@0x08048526[5]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x08048526[5]: add(0x08048526<134513958>[u32], 0x00000003[u32]) = 0x08048529<134513961>[u32]
Symbolic insn@0x08048526[5]: writeRegister(eip, 0x08048529<134513961>[u32])
Symbolic insn@0x08048526[5]: undefined_(32) = V10[u32]
Symbolic insn@0x08048526[5]: readRegister(esp, V10[u32]) = (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])
Symbolic insn@0x08048526[5]: number_(8, 12) = 0x0c[u8]
Symbolic insn@0x08048526[5]: signExtend(0x0c[u8], 32) = 0x0000000c[u32]
Symbolic insn@0x08048526[5]: boolean_(0) = false[u1]
Symbolic insn@0x08048526[5]: invert(0x0000000c[u32]) = 0xfffffff3<4294967283,-13>[u32]
Symbolic insn@0x08048526[5]: invert(false[u1]) = true[u1]
Symbolic insn@0x08048526[5]: addWithCarries((add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]), 0xfffffff3<4294967283,-13>[u32], true[u1]) = (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])
Symbolic insn@0x08048526[5]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33]))
Symbolic insn@0x08048526[5]: extract((add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
Symbolic insn@0x08048526[5]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
Symbolic insn@0x08048526[5]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
Symbolic insn@0x08048526[5]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))
Symbolic insn@0x08048526[5]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
Symbolic insn@0x08048526[5]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
Symbolic insn@0x08048526[5]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))
Symbolic insn@0x08048526[5]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
Symbolic insn@0x08048526[5]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
Symbolic insn@0x08048526[5]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))
Symbolic insn@0x08048526[5]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
Symbolic insn@0x08048526[5]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
Symbolic insn@0x08048526[5]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))
Symbolic insn@0x08048526[5]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))
Symbolic insn@0x08048526[5]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))
Symbolic insn@0x08048526[5]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))
Symbolic insn@0x08048526[5]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))))
Symbolic insn@0x08048526[5]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))))
Symbolic insn@0x08048526[5]: extract((add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
Symbolic insn@0x08048526[5]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))
Symbolic insn@0x08048526[5]: equalToZero((add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) = (zerop[u1] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
Symbolic insn@0x08048526[5]: writeRegister(zf, (zerop[u1] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])))
Symbolic insn@0x08048526[5]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33]))
Symbolic insn@0x08048526[5]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33]))
Symbolic insn@0x08048526[5]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33]))
Symbolic insn@0x08048526[5]: invert((extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33]))) = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])))
Symbolic insn@0x08048526[5]: writeRegister(af, (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33]))))
Symbolic insn@0x08048526[5]: invert((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33]))) = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])))
Symbolic insn@0x08048526[5]: writeRegister(cf, (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33]))))
Symbolic insn@0x08048526[5]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33]))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])))
Symbolic insn@0x08048526[5]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33]))))
Symbolic insn@0x08048526[5]: writeRegister(esp, (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
Symbolic insn@0x08048526[5]: finishInstruction(sub esp, 0x0c)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048529<134513961>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xfffffff3<4294967283,-13>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff2<4294967282,-14>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff1<4294967281,-15>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff7<4294967287,-9>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff6<4294967286,-10>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff5<4294967285,-11>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048529: call 0x0804852e<<Insn>>
Symbolic: startInstruction(0x08048529: call 0x0804852e<<Insn>>)
Symbolic insn@0x08048529[6]: number_(32, 134513961) = 0x08048529<134513961>[u32]
Symbolic insn@0x08048529[6]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x08048529[6]: add(0x08048529<134513961>[u32], 0x00000005[u32]) = 0x0804852e<134513966>[u32]
Symbolic insn@0x08048529[6]: writeRegister(eip, 0x0804852e<134513966>[u32])
Symbolic insn@0x08048529[6]: number_(32, 134513966) = 0x0804852e<134513966>[u32]
Symbolic insn@0x08048529[6]: unsignedExtend(0x0804852e<134513966>[u32], 32) = 0x0804852e<134513966>[u32]
Symbolic insn@0x08048529[6]: undefined_(32) = V11[u32]
Symbolic insn@0x08048529[6]: readRegister(esp, V11[u32]) = (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])
Symbolic insn@0x08048529[6]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048529[6]: add((add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xffffffe0<4294967264,-32>[u32])
Symbolic insn@0x08048529[6]: boolean_(1) = true[u1]
Symbolic insn@0x08048529[6]: undefined_(32) = V12[u32]
Symbolic insn@0x08048529[6]: readRegister(eip, V12[u32]) = 0x0804852e<134513966>[u32]
Symbolic insn@0x08048529[6]: writeMemory(ss, (add[u32] esp_0[u32] 0xffffffe0<4294967264,-32>[u32]), 0x0804852e<134513966>[u32], true[u1])
Symbolic insn@0x08048529[6]: writeRegister(esp, (add[u32] esp_0[u32] 0xffffffe0<4294967264,-32>[u32]))
Symbolic insn@0x08048529[6]: filterCallTarget(0x0804852e<134513966>[u32]) = 0x0804852e<134513966>[u32]
Symbolic insn@0x08048529[6]: writeRegister(eip, 0x0804852e<134513966>[u32])
Symbolic insn@0x08048529[6]: finishInstruction(call 0x0804852e<<Insn>>)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xffffffe0<4294967264,-32>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip = 0x0804852e<134513966>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xffffffe4<4294967268,-28>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff4<4294967284>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])) 0x0fffffff3<4294967283>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffe3<4294967267,-29>[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0xffffffe2<4294967266,-30>[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0xffffffe1<4294967265,-31>[u32]) write-only value=0x85<-123>[u8]
 addr=(add[u32] esp_0[u32] 0xffffffe0<4294967264,-32>[u32]) write-only value=0x2e[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff3<4294967283,-13>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff2<4294967282,-14>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff1<4294967281,-15>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff7<4294967287,-9>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff6<4294967286,-10>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff5<4294967285,-11>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] esi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] edi_0[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x0804852e: pop ebx
Symbolic: startInstruction(0x0804852e: pop ebx)
Symbolic insn@0x0804852e[0]: number_(32, 134513966) = 0x0804852e<134513966>[u32]
Symbolic insn@0x0804852e[0]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x0804852e[0]: add(0x0804852e<134513966>[u32], 0x00000001[u32]) = 0x0804852f<134513967>[u32]
Symbolic insn@0x0804852e[0]: writeRegister(eip, 0x0804852f<134513967>[u32])
Symbolic insn@0x0804852e[0]: undefined_(32) = V1[u32]
Symbolic insn@0x0804852e[0]: readRegister(esp, V1[u32]) = esp_0[u32]
Symbolic insn@0x0804852e[0]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x0804852e[0]: add(esp_0[u32], 0x00000004[u32]) = (add[u32] esp_0[u32] 0x00000004[u32])
Symbolic insn@0x0804852e[0]: writeRegister(esp, (add[u32] esp_0[u32] 0x00000004[u32]))
Symbolic insn@0x0804852e[0]: boolean_(1) = true[u1]
Symbolic insn@0x0804852e[0]: undefined_(32) = V2[u32]
Symbolic insn@0x0804852e[0]: readMemory(ss, esp_0[u32], V2[u32], true[u1]) = V2[u32]
Symbolic insn@0x0804852e[0]: writeRegister(ebx, V2[u32])
Symbolic insn@0x0804852e[0]: finishInstruction(pop ebx)
registers:
 ebx write-only = V2[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x00000004[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x0804852f<134513967>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x0804852f: add ebx, 0x0000119a<4506>
Symbolic: startInstruction(0x0804852f: add ebx, 0x0000119a<4506>)
Symbolic insn@0x0804852f[1]: number_(32, 134513967) = 0x0804852f<134513967>[u32]
Symbolic insn@0x0804852f[1]: number_(32, 6) = 0x00000006[u32]
Symbolic insn@0x0804852f[1]: add(0x0804852f<134513967>[u32], 0x00000006[u32]) = 0x08048535<134513973>[u32]
Symbolic insn@0x0804852f[1]: writeRegister(eip, 0x08048535<134513973>[u32])
Symbolic insn@0x0804852f[1]: boolean_(0) = false[u1]
Symbolic insn@0x0804852f[1]: number_(32, 4506) = 0x0000119a<4506>[u32]
Symbolic insn@0x0804852f[1]: undefined_(32) = V3[u32]
Symbolic insn@0x0804852f[1]: readRegister(ebx, V3[u32]) = V2[u32]
Symbolic insn@0x0804852f[1]: addWithCarries(V2[u32], 0x0000119a<4506>[u32], false[u1]) = (add[u32] V2[u32] 0x0000119a<4506>[u32])
Symbolic insn@0x0804852f[1]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]))
Symbolic insn@0x0804852f[1]: extract((add[u32] V2[u32] 0x0000119a<4506>[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32]))
Symbolic insn@0x0804852f[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32]))
Symbolic insn@0x0804852f[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32]))
Symbolic insn@0x0804852f[1]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])))
Symbolic insn@0x0804852f[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32]))
Symbolic insn@0x0804852f[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32]))
Symbolic insn@0x0804852f[1]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])))
Symbolic insn@0x0804852f[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32]))
Symbolic insn@0x0804852f[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32]))
Symbolic insn@0x0804852f[1]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])))
Symbolic insn@0x0804852f[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32]))
Symbolic insn@0x0804852f[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32]))
Symbolic insn@0x0804852f[1]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])))
Symbolic insn@0x0804852f[1]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])))
Symbolic insn@0x0804852f[1]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])))
Symbolic insn@0x0804852f[1]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])))
Symbolic insn@0x0804852f[1]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32]))))
Symbolic insn@0x0804852f[1]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])))))
Symbolic insn@0x0804852f[1]: extract((add[u32] V2[u32] 0x0000119a<4506>[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32]))
Symbolic insn@0x0804852f[1]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])))
Symbolic insn@0x0804852f[1]: equalToZero((add[u32] V2[u32] 0x0000119a<4506>[u32])) = (zerop[u1] (add[u32] V2[u32] 0x0000119a<4506>[u32]))
Symbolic insn@0x0804852f[1]: writeRegister(zf, (zerop[u1] (add[u32] V2[u32] 0x0000119a<4506>[u32])))
Symbolic insn@0x0804852f[1]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33])), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]))
Symbolic insn@0x0804852f[1]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33])), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]))
Symbolic insn@0x0804852f[1]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33])), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]))
Symbolic insn@0x0804852f[1]: writeRegister(af, (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33])))
Symbolic insn@0x0804852f[1]: writeRegister(cf, (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33])))
Symbolic insn@0x0804852f[1]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33])), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33])))
Symbolic insn@0x0804852f[1]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]))))
Symbolic insn@0x0804852f[1]: writeRegister(ebx, (add[u32] V2[u32] 0x0000119a<4506>[u32]))
Symbolic insn@0x0804852f[1]: finishInstruction(add ebx, 0x0000119a<4506>)
registers:
 ebx = (add[u32] V2[u32] 0x0000119a<4506>[u32])
 esp read-before-write = (add[u32] esp_0[u32] 0x00000004[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048535<134513973>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]))
 zf write-only = (zerop[u1] (add[u32] V2[u32] 0x0000119a<4506>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x08048535: lea eax, [ebx + 0xffffff20<-224>]
Symbolic: startInstruction(0x08048535: lea eax, [ebx + 0xffffff20<-224>])
Symbolic insn@0x08048535[2]: number_(32, 134513973) = 0x08048535<134513973>[u32]
Symbolic insn@0x08048535[2]: number_(32, 6) = 0x00000006[u32]
Symbolic insn@0x08048535[2]: add(0x08048535<134513973>[u32], 0x00000006[u32]) = 0x0804853b<134513979>[u32]
Symbolic insn@0x08048535[2]: writeRegister(eip, 0x0804853b<134513979>[u32])
Symbolic insn@0x08048535[2]: undefined_(32) = V4[u32]
Symbolic insn@0x08048535[2]: readRegister(ebx, V4[u32]) = (add[u32] V2[u32] 0x0000119a<4506>[u32])
Symbolic insn@0x08048535[2]: number_(32, 4294967072) = 0xffffff20<4294967072,-224>[u32]
Symbolic insn@0x08048535[2]: add((add[u32] V2[u32] 0x0000119a<4506>[u32]), 0xffffff20<4294967072,-224>[u32]) = (add[u32] V2[u32] 0x000010ba<4282>[u32])
Symbolic insn@0x08048535[2]: unsignedExtend((add[u32] V2[u32] 0x000010ba<4282>[u32]), 32) = (add[u32] V2[u32] 0x000010ba<4282>[u32])
Symbolic insn@0x08048535[2]: writeRegister(eax, (add[u32] V2[u32] 0x000010ba<4282>[u32]))
Symbolic insn@0x08048535[2]: finishInstruction(lea eax, [ebx + 0xffffff20<-224>])
registers:
 eax write-only = (add[u32] V2[u32] 0x000010ba<4282>[u32])
 ebx = (add[u32] V2[u32] 0x0000119a<4506>[u32])
 esp read-before-write = (add[u32] esp_0[u32] 0x00000004[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x0804853b<134513979>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]))
 zf write-only = (zerop[u1] (add[u32] V2[u32] 0x0000119a<4506>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x0804853b: lea edx, [ebx + 0xffffff20<-224>]
Symbolic: startInstruction(0x0804853b: lea edx, [ebx + 0xffffff20<-224>])
Symbolic insn@0x0804853b[3]: number_(32, 134513979) = 0x0804853b<134513979>[u32]
Symbolic insn@0x0804853b[3]: number_(32, 6) = 0x00000006[u32]
Symbolic insn@0x0804853b[3]: add(0x0804853b<134513979>[u32], 0x00000006[u32]) = 0x08048541<134513985>[u32]
Symbolic insn@0x0804853b[3]: writeRegister(eip, 0x08048541<134513985>[u32])
Symbolic insn@0x0804853b[3]: undefined_(32) = V5[u32]
Symbolic insn@0x0804853b[3]: readRegister(ebx, V5[u32]) = (add[u32] V2[u32] 0x0000119a<4506>[u32])
Symbolic insn@0x0804853b[3]: number_(32, 4294967072) = 0xffffff20<4294967072,-224>[u32]
Symbolic insn@0x0804853b[3]: add((add[u32] V2[u32] 0x0000119a<4506>[u32]), 0xffffff20<4294967072,-224>[u32]) = (add[u32] V2[u32] 0x000010ba<4282>[u32])
Symbolic insn@0x0804853b[3]: unsignedExtend((add[u32] V2[u32] 0x000010ba<4282>[u32]), 32) = (add[u32] V2[u32] 0x000010ba<4282>[u32])
Symbolic insn@0x0804853b[3]: writeRegister(edx, (add[u32] V2[u32] 0x000010ba<4282>[u32]))
Symbolic insn@0x0804853b[3]: finishInstruction(lea edx, [ebx + 0xffffff20<-224>])
registers:
 eax write-only = (add[u32] V2[u32] 0x000010ba<4282>[u32])
 edx write-only = (add[u32] V2[u32] 0x000010ba<4282>[u32])
 ebx = (add[u32] V2[u32] 0x0000119a<4506>[u32])
 esp read-before-write = (add[u32] esp_0[u32] 0x00000004[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048541<134513985>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]))
 zf write-only = (zerop[u1] (add[u32] V2[u32] 0x0000119a<4506>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V2[u32] 0x0000119a<4506>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000119a<4506>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x08048541: sub eax, edx
Symbolic: startInstruction(0x08048541: sub eax, edx)
Symbolic insn@0x08048541[4]: number_(32, 134513985) = 0x08048541<134513985>[u32]
Symbolic insn@0x08048541[4]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x08048541[4]: add(0x08048541<134513985>[u32], 0x00000002[u32]) = 0x08048543<134513987>[u32]
Symbolic insn@0x08048541[4]: writeRegister(eip, 0x08048543<134513987>[u32])
Symbolic insn@0x08048541[4]: undefined_(32) = V6[u32]
Symbolic insn@0x08048541[4]: readRegister(eax, V6[u32]) = (add[u32] V2[u32] 0x000010ba<4282>[u32])
Symbolic insn@0x08048541[4]: undefined_(32) = V7[u32]
Symbolic insn@0x08048541[4]: readRegister(edx, V7[u32]) = (add[u32] V2[u32] 0x000010ba<4282>[u32])
Symbolic insn@0x08048541[4]: boolean_(0) = false[u1]
Symbolic insn@0x08048541[4]: invert((add[u32] V2[u32] 0x000010ba<4282>[u32])) = (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))
Symbolic insn@0x08048541[4]: invert(false[u1]) = true[u1]
Symbolic insn@0x08048541[4]: addWithCarries((add[u32] V2[u32] 0x000010ba<4282>[u32]), (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])), true[u1]) = (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])
Symbolic insn@0x08048541[4]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])))))
Symbolic insn@0x08048541[4]: extract((add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
Symbolic insn@0x08048541[4]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
Symbolic insn@0x08048541[4]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
Symbolic insn@0x08048541[4]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x08048541[4]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
Symbolic insn@0x08048541[4]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
Symbolic insn@0x08048541[4]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x08048541[4]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
Symbolic insn@0x08048541[4]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
Symbolic insn@0x08048541[4]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x08048541[4]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
Symbolic insn@0x08048541[4]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
Symbolic insn@0x08048541[4]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x08048541[4]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x08048541[4]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x08048541[4]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x08048541[4]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))
Symbolic insn@0x08048541[4]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))))
Symbolic insn@0x08048541[4]: extract((add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
Symbolic insn@0x08048541[4]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x08048541[4]: equalToZero((add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) = (zerop[u1] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
Symbolic insn@0x08048541[4]: writeRegister(zf, (zerop[u1] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x08048541[4]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))))), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])))))
Symbolic insn@0x08048541[4]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))))), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])))))
Symbolic insn@0x08048541[4]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))))), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])))))
Symbolic insn@0x08048541[4]: invert((extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])))))) = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))))))
Symbolic insn@0x08048541[4]: writeRegister(af, (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])))))))
Symbolic insn@0x08048541[4]: invert((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])))))) = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))))))
Symbolic insn@0x08048541[4]: writeRegister(cf, (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])))))))
Symbolic insn@0x08048541[4]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))))), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])))))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))))))
Symbolic insn@0x08048541[4]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])))))))
Symbolic insn@0x08048541[4]: writeRegister(eax, (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
Symbolic insn@0x08048541[4]: finishInstruction(sub eax, edx)
registers:
 eax = (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])
 edx = (add[u32] V2[u32] 0x000010ba<4282>[u32])
 ebx = (add[u32] V2[u32] 0x0000119a<4506>[u32])
 esp read-before-write = (add[u32] esp_0[u32] 0x00000004[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048543<134513987>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))))))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))))))
 zf write-only = (zerop[u1] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))))))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x08048543: sar eax, 0x02
Symbolic: startInstruction(0x08048543: sar eax, 0x02)
Symbolic insn@0x08048543[5]: number_(32, 134513987) = 0x08048543<134513987>[u32]
Symbolic insn@0x08048543[5]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x08048543[5]: add(0x08048543<134513987>[u32], 0x00000003[u32]) = 0x08048546<134513990>[u32]
Symbolic insn@0x08048543[5]: writeRegister(eip, 0x08048546<134513990>[u32])
Symbolic insn@0x08048543[5]: number_(8, 2) = 0x02[u8]
Symbolic insn@0x08048543[5]: unspecified_(32) = V8[u32]<unspec>
Symbolic insn@0x08048543[5]: undefined_(32) = V9[u32]
Symbolic insn@0x08048543[5]: readRegister(eax, V9[u32]) = (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])
Symbolic insn@0x08048543[5]: extract(0x02[u8], 0, 5) = 0x02[u5]
Symbolic insn@0x08048543[5]: equalToZero(0x02[u5]) = false[u1]
Symbolic insn@0x08048543[5]: extract(0x02[u8], 5, 8) = 0x0[u3]
Symbolic insn@0x08048543[5]: equalToZero(0x0[u3]) = true[u1]
Symbolic insn@0x08048543[5]: invert(true[u1]) = false[u1]
Symbolic insn@0x08048543[5]: number_(5, 31) = 0x1f<-1>[u5]
Symbolic insn@0x08048543[5]: add(0x02[u5], 0x1f<-1>[u5]) = 0x01[u5]
Symbolic insn@0x08048543[5]: equalToZero(0x01[u5]) = false[u1]
Symbolic insn@0x08048543[5]: shiftRightArithmetic((add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]), 0x02[u5]) = (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
Symbolic insn@0x08048543[5]: extract((add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
Symbolic insn@0x08048543[5]: extract((asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x08048543[5]: unspecified_(1) = V10[u1]<unspec>
Symbolic insn@0x08048543[5]: undefined_(1) = V11[u1]
Symbolic insn@0x08048543[5]: peekRegister(af, V11[u1]) = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))))))
Symbolic insn@0x08048543[5]: ite(false[u1], (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])))))), V10[u1]<unspec>) = V10[u1]<unspec>
Symbolic insn@0x08048543[5]: writeRegister(af, V10[u1]<unspec>)
Symbolic insn@0x08048543[5]: add(0x02[u5], 0x1f<-1>[u5]) = 0x01[u5]
Symbolic insn@0x08048543[5]: shiftRight((add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]), 0x01[u5]) = (concat[u32] false[u1] (extract[u31] 0x00000001[u32] 0x00000020[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x08048543[5]: extract((concat[u32] false[u1] (extract[u31] 0x00000001[u32] 0x00000020[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), 0, 1) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
Symbolic insn@0x08048543[5]: ite(false[u1], (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
Symbolic insn@0x08048543[5]: undefined_(1) = V12[u1]
Symbolic insn@0x08048543[5]: peekRegister(cf, V12[u1]) = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))))))
Symbolic insn@0x08048543[5]: ite(false[u1], (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])))))), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
Symbolic insn@0x08048543[5]: writeRegister(cf, (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x08048543[5]: unspecified_(1) = V13[u1]<unspec>
Symbolic insn@0x08048543[5]: undefined_(1) = V14[u1]
Symbolic insn@0x08048543[5]: peekRegister(of, V14[u1]) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))))))
Symbolic insn@0x08048543[5]: ite(false[u1], (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32]))) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])))))), V13[u1]<unspec>) = V13[u1]<unspec>
Symbolic insn@0x08048543[5]: boolean_(0) = false[u1]
Symbolic insn@0x08048543[5]: ite(false[u1], false[u1], V13[u1]<unspec>) = V13[u1]<unspec>
Symbolic insn@0x08048543[5]: writeRegister(of, V13[u1]<unspec>)
Symbolic insn@0x08048543[5]: invert(false[u1]) = true[u1]
Symbolic insn@0x08048543[5]: extract((asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x08048543[5]: extract((asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x08048543[5]: undefined_(1) = V15[u1]
Symbolic insn@0x08048543[5]: peekRegister(pf, V15[u1]) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))
Symbolic insn@0x08048543[5]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x08048543[5]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x08048543[5]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))
Symbolic insn@0x08048543[5]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x08048543[5]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x08048543[5]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))
Symbolic insn@0x08048543[5]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x08048543[5]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x08048543[5]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))
Symbolic insn@0x08048543[5]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x08048543[5]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x08048543[5]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))
Symbolic insn@0x08048543[5]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))
Symbolic insn@0x08048543[5]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))
Symbolic insn@0x08048543[5]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))
Symbolic insn@0x08048543[5]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))))
Symbolic insn@0x08048543[5]: ite(true[u1], (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))), (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))))
Symbolic insn@0x08048543[5]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))))
Symbolic insn@0x08048543[5]: undefined_(1) = V16[u1]
Symbolic insn@0x08048543[5]: peekRegister(sf, V16[u1]) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
Symbolic insn@0x08048543[5]: ite(true[u1], (extract[u1] 0x0000001f[u32] 0x00000020[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x08048543[5]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))
Symbolic insn@0x08048543[5]: undefined_(1) = V17[u1]
Symbolic insn@0x08048543[5]: peekRegister(zf, V17[u1]) = (zerop[u1] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
Symbolic insn@0x08048543[5]: equalToZero((asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) = (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x08048543[5]: ite(true[u1], (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), (zerop[u1] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) = (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x08048543[5]: writeRegister(zf, (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))
Symbolic insn@0x08048543[5]: writeRegister(eax, (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x08048543[5]: finishInstruction(sar eax, 0x02)
registers:
 eax = (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
 edx = (add[u32] V2[u32] 0x000010ba<4282>[u32])
 ebx = (add[u32] V2[u32] 0x0000119a<4506>[u32])
 esp read-before-write = (add[u32] esp_0[u32] 0x00000004[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048546<134513990>[u32]
 cf write-only = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))))
 af write-only = V10[u1]<unspec>
 zf write-only = (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
 of write-only = V13[u1]<unspec>
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x08048546: mov dword ss:[ebp + 0xf0<-16>], eax
Symbolic: startInstruction(0x08048546: mov dword ss:[ebp + 0xf0<-16>], eax)
Symbolic insn@0x08048546[6]: number_(32, 134513990) = 0x08048546<134513990>[u32]
Symbolic insn@0x08048546[6]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x08048546[6]: add(0x08048546<134513990>[u32], 0x00000003[u32]) = 0x08048549<134513993>[u32]
Symbolic insn@0x08048546[6]: writeRegister(eip, 0x08048549<134513993>[u32])
Symbolic insn@0x08048546[6]: undefined_(32) = V18[u32]
Symbolic insn@0x08048546[6]: readRegister(eax, V18[u32]) = (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
Symbolic insn@0x08048546[6]: undefined_(32) = V19[u32]
Symbolic insn@0x08048546[6]: readRegister(ebp, V19[u32]) = ebp_0[u32]
Symbolic insn@0x08048546[6]: number_(8, 240) = 0xf0<-16>[u8]
Symbolic insn@0x08048546[6]: signExtend(0xf0<-16>[u8], 32) = 0xfffffff0<4294967280,-16>[u32]
Symbolic insn@0x08048546[6]: add(ebp_0[u32], 0xfffffff0<4294967280,-16>[u32]) = (add[u32] ebp_0[u32] 0xfffffff0<4294967280,-16>[u32])
Symbolic insn@0x08048546[6]: boolean_(1) = true[u1]
Symbolic insn@0x08048546[6]: writeMemory(ss, (add[u32] ebp_0[u32] 0xfffffff0<4294967280,-16>[u32]), (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])), true[u1])
Symbolic insn@0x08048546[6]: finishInstruction(mov dword ss:[ebp + 0xf0<-16>], eax)
registers:
 eax = (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
 edx = (add[u32] V2[u32] 0x000010ba<4282>[u32])
 ebx = (add[u32] V2[u32] 0x0000119a<4506>[u32])
 esp read-before-write = (add[u32] esp_0[u32] 0x00000004[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048549<134513993>[u32]
 cf write-only = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))))
 af write-only = V10[u1]<unspec>
 zf write-only = (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
 of write-only = V13[u1]<unspec>
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebp_0[u32] 0xfffffff3<4294967283,-13>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
 addr=(add[u32] ebp_0[u32] 0xfffffff2<4294967282,-14>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
 addr=(add[u32] ebp_0[u32] 0xfffffff1<4294967281,-15>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
 addr=(add[u32] ebp_0[u32] 0xfffffff0<4294967280,-16>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x08048549: dec eax
Symbolic: startInstruction(0x08048549: dec eax)
Symbolic insn@0x08048549[7]: number_(32, 134513993) = 0x08048549<134513993>[u32]
Symbolic insn@0x08048549[7]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048549[7]: add(0x08048549<134513993>[u32], 0x00000001[u32]) = 0x0804854a<134513994>[u32]
Symbolic insn@0x08048549[7]: writeRegister(eip, 0x0804854a<134513994>[u32])
Symbolic insn@0x08048549[7]: undefined_(32) = V20[u32]
Symbolic insn@0x08048549[7]: readRegister(eax, V20[u32]) = (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
Symbolic insn@0x08048549[7]: boolean_(0) = false[u1]
Symbolic insn@0x08048549[7]: number_(32, 18446744073709551615) = 0xffffffff<4294967295,-1>[u32]
Symbolic insn@0x08048549[7]: addWithCarries((asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])), 0xffffffff<4294967295,-1>[u32], false[u1]) = (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])
Symbolic insn@0x08048549[7]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]) (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]))
Symbolic insn@0x08048549[7]: extract((add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))
Symbolic insn@0x08048549[7]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))
Symbolic insn@0x08048549[7]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))
Symbolic insn@0x08048549[7]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))
Symbolic insn@0x08048549[7]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))
Symbolic insn@0x08048549[7]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))
Symbolic insn@0x08048549[7]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))
Symbolic insn@0x08048549[7]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))
Symbolic insn@0x08048549[7]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))
Symbolic insn@0x08048549[7]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))
Symbolic insn@0x08048549[7]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))
Symbolic insn@0x08048549[7]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))
Symbolic insn@0x08048549[7]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))
Symbolic insn@0x08048549[7]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))
Symbolic insn@0x08048549[7]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))
Symbolic insn@0x08048549[7]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))
Symbolic insn@0x08048549[7]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))))
Symbolic insn@0x08048549[7]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))))
Symbolic insn@0x08048549[7]: extract((add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))
Symbolic insn@0x08048549[7]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))
Symbolic insn@0x08048549[7]: equalToZero((add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) = (zerop[u1] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))
Symbolic insn@0x08048549[7]: writeRegister(zf, (zerop[u1] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))
Symbolic insn@0x08048549[7]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]) (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33])), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]) (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]))
Symbolic insn@0x08048549[7]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]) (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33])), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]) (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]))
Symbolic insn@0x08048549[7]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]) (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33])), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]) (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]))
Symbolic insn@0x08048549[7]: invert((extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]) (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]))) = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]) (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33])))
Symbolic insn@0x08048549[7]: writeRegister(af, (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]) (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]))))
Symbolic insn@0x08048549[7]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]) (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33])), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]) (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]) (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]) (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33])))
Symbolic insn@0x08048549[7]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]) (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]) (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]))))
Symbolic insn@0x08048549[7]: writeRegister(eax, (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))
Symbolic insn@0x08048549[7]: finishInstruction(dec eax)
registers:
 eax = (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])
 edx = (add[u32] V2[u32] 0x000010ba<4282>[u32])
 ebx = (add[u32] V2[u32] 0x0000119a<4506>[u32])
 esp read-before-write = (add[u32] esp_0[u32] 0x00000004[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x0804854a<134513994>[u32]
 cf write-only = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]) (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33])))
 zf write-only = (zerop[u1] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]) (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33]) (uextend[u33] 0x00000021[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0ffffffff<4294967295>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebp_0[u32] 0xfffffff3<4294967283,-13>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
 addr=(add[u32] ebp_0[u32] 0xfffffff2<4294967282,-14>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
 addr=(add[u32] ebp_0[u32] 0xfffffff1<4294967281,-15>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
 addr=(add[u32] ebp_0[u32] 0xfffffff0<4294967280,-16>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x0804854a: cmp eax, 0xff<-1>
Symbolic: startInstruction(0x0804854a: cmp eax, 0xff<-1>)
Symbolic insn@0x0804854a[8]: number_(32, 134513994) = 0x0804854a<134513994>[u32]
Symbolic insn@0x0804854a[8]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x0804854a[8]: add(0x0804854a<134513994>[u32], 0x00000003[u32]) = 0x0804854d<134513997>[u32]
Symbolic insn@0x0804854a[8]: writeRegister(eip, 0x0804854d<134513997>[u32])
Symbolic insn@0x0804854a[8]: undefined_(32) = V21[u32]
Symbolic insn@0x0804854a[8]: readRegister(eax, V21[u32]) = (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])
Symbolic insn@0x0804854a[8]: number_(8, 18446744073709551615) = 0xff<-1>[u8]
Symbolic insn@0x0804854a[8]: signExtend(0xff<-1>[u8], 32) = 0xffffffff<4294967295,-1>[u32]
Symbolic insn@0x0804854a[8]: boolean_(0) = false[u1]
Symbolic insn@0x0804854a[8]: invert(0xffffffff<4294967295,-1>[u32]) = 0x00000000[u32]
Symbolic insn@0x0804854a[8]: invert(false[u1]) = true[u1]
Symbolic insn@0x0804854a[8]: addWithCarries((add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]), 0x00000000[u32], true[u1]) = (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))
Symbolic insn@0x0804854a[8]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))))
Symbolic insn@0x0804854a[8]: extract((asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x0804854a[8]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x0804854a[8]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x0804854a[8]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))
Symbolic insn@0x0804854a[8]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x0804854a[8]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x0804854a[8]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))
Symbolic insn@0x0804854a[8]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x0804854a[8]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x0804854a[8]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))
Symbolic insn@0x0804854a[8]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x0804854a[8]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x0804854a[8]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))
Symbolic insn@0x0804854a[8]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))
Symbolic insn@0x0804854a[8]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))
Symbolic insn@0x0804854a[8]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))
Symbolic insn@0x0804854a[8]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))))
Symbolic insn@0x0804854a[8]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))))
Symbolic insn@0x0804854a[8]: extract((asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x0804854a[8]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))
Symbolic insn@0x0804854a[8]: equalToZero((asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) = (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x0804854a[8]: writeRegister(zf, (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))))
Symbolic insn@0x0804854a[8]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))))
Symbolic insn@0x0804854a[8]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))))
Symbolic insn@0x0804854a[8]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))))
Symbolic insn@0x0804854a[8]: invert((extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))))) = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))))
Symbolic insn@0x0804854a[8]: writeRegister(af, (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))))))
Symbolic insn@0x0804854a[8]: invert((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))))) = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))))
Symbolic insn@0x0804854a[8]: writeRegister(cf, (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))))))
Symbolic insn@0x0804854a[8]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))))
Symbolic insn@0x0804854a[8]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32]))))))
Symbolic insn@0x0804854a[8]: finishInstruction(cmp eax, 0xff<-1>)
registers:
 eax = (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])
 edx = (add[u32] V2[u32] 0x000010ba<4282>[u32])
 ebx = (add[u32] V2[u32] 0x0000119a<4506>[u32])
 esp read-before-write = (add[u32] esp_0[u32] 0x00000004[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x0804854d<134513997>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))))
 zf write-only = (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebp_0[u32] 0xfffffff3<4294967283,-13>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
 addr=(add[u32] ebp_0[u32] 0xfffffff2<4294967282,-14>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
 addr=(add[u32] ebp_0[u32] 0xfffffff1<4294967281,-15>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
 addr=(add[u32] ebp_0[u32] 0xfffffff0<4294967280,-16>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x0804854d: je 0x0804856b<<BBlock>>
Symbolic: startInstruction(0x0804854d: je 0x0804856b<<BBlock>>)
Symbolic insn@0x0804854d[9]: number_(32, 134513997) = 0x0804854d<134513997>[u32]
Symbolic insn@0x0804854d[9]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x0804854d[9]: add(0x0804854d<134513997>[u32], 0x00000002[u32]) = 0x0804854f<134513999>[u32]
Symbolic insn@0x0804854d[9]: writeRegister(eip, 0x0804854f<134513999>[u32])
Symbolic insn@0x0804854d[9]: undefined_(1) = V22[u1]
Symbolic insn@0x0804854d[9]: readRegister(zf, V22[u1]) = (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
Symbolic insn@0x0804854d[9]: undefined_(32) = V23[u32]
Symbolic insn@0x0804854d[9]: readRegister(eip, V23[u32]) = 0x0804854f<134513999>[u32]
Symbolic insn@0x0804854d[9]: number_(32, 134514027) = 0x0804856b<134514027>[u32]
Symbolic insn@0x0804854d[9]: unsignedExtend(0x0804856b<134514027>[u32], 32) = 0x0804856b<134514027>[u32]
Symbolic insn@0x0804854d[9]: ite((zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))), 0x0804856b<134514027>[u32], 0x0804854f<134513999>[u32]) = (ite[u32] (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0804856b<134514027>[u32] 0x0804854f<134513999>[u32])
Symbolic insn@0x0804854d[9]: writeRegister(eip, (ite[u32] (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0804856b<134514027>[u32] 0x0804854f<134513999>[u32]))
Symbolic insn@0x0804854d[9]: finishInstruction(je 0x0804856b<<BBlock>>)
registers:
 eax = (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])
 edx = (add[u32] V2[u32] 0x000010ba<4282>[u32])
 ebx = (add[u32] V2[u32] 0x0000119a<4506>[u32])
 esp read-before-write = (add[u32] esp_0[u32] 0x00000004[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip = (ite[u32] (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) 0x0804856b<134514027>[u32] 0x0804854f<134513999>[u32])
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000001[u32] 0x00000002[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000002[u32] 0x00000003[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000003[u32] 0x00000004[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000004[u32] 0x00000005[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000005[u32] 0x00000006[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000006[u32] 0x00000007[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32]))) (extract[u1] 0x00000007[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))))
 zf = (zerop[u1] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (add[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])) 0xffffffff<4294967295,-1>[u32])))))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebp_0[u32] 0xfffffff3<4294967283,-13>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
 addr=(add[u32] ebp_0[u32] 0xfffffff2<4294967282,-14>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
 addr=(add[u32] ebp_0[u32] 0xfffffff1<4294967281,-15>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
 addr=(add[u32] ebp_0[u32] 0xfffffff0<4294967280,-16>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] (asr[u32] 0x02[u5] (add[u32] (invert[u32] (add[u32] V2[u32] 0x000010ba<4282>[u32])) V2[u32] 0x000010bb<4283>[u32])))
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x0804854f: lea esi, [edx + eax*0x04]
Symbolic: startInstruction(0x0804854f: lea esi, [edx + eax*0x04])
Symbolic insn@0x0804854f[0]: number_(32, 134513999) = 0x0804854f<134513999>[u32]
Symbolic insn@0x0804854f[0]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x0804854f[0]: add(0x0804854f<134513999>[u32], 0x00000003[u32]) = 0x08048552<134514002>[u32]
Symbolic insn@0x0804854f[0]: writeRegister(eip, 0x08048552<134514002>[u32])
Symbolic insn@0x0804854f[0]: undefined_(32) = V1[u32]
Symbolic insn@0x0804854f[0]: readRegister(edx, V1[u32]) = edx_0[u32]
Symbolic insn@0x0804854f[0]: undefined_(32) = V2[u32]
Symbolic insn@0x0804854f[0]: readRegister(eax, V2[u32]) = eax_0[u32]
Symbolic insn@0x0804854f[0]: number_(8, 4) = 0x04[u8]
Symbolic insn@0x0804854f[0]: signExtend(0x04[u8], 32) = 0x00000004[u32]
Symbolic insn@0x0804854f[0]: unsignedMultiply(eax_0[u32], 0x00000004[u32]) = (umul[u64] eax_0[u32] 0x00000004[u32])
Symbolic insn@0x0804854f[0]: extract((umul[u64] eax_0[u32] 0x00000004[u32]), 0, 32) = (extract[u32] 0x00000000[u32] 0x00000020[u32] (umul[u64] eax_0[u32] 0x00000004[u32]))
Symbolic insn@0x0804854f[0]: add(edx_0[u32], (extract[u32] 0x00000000[u32] 0x00000020[u32] (umul[u64] eax_0[u32] 0x00000004[u32]))) = (add[u32] (extract[u32] 0x00000000[u32] 0x00000020[u32] (umul[u64] eax_0[u32] 0x00000004[u32])) edx_0[u32])
Symbolic insn@0x0804854f[0]: unsignedExtend((add[u32] (extract[u32] 0x00000000[u32] 0x00000020[u32] (umul[u64] eax_0[u32] 0x00000004[u32])) edx_0[u32]), 32) = (add[u32] (extract[u32] 0x00000000[u32] 0x00000020[u32] (umul[u64] eax_0[u32] 0x00000004[u32])) edx_0[u32])
Symbolic insn@0x0804854f[0]: writeRegister(esi, (add[u32] (extract[u32] 0x00000000[u32] 0x00000020[u32] (umul[u64] eax_0[u32] 0x00000004[u32])) edx_0[u32]))
Symbolic insn@0x0804854f[0]: finishInstruction(lea esi, [edx + eax*0x04])
registers:
 esi write-only = (add[u32] (extract[u32] 0x00000000[u32] 0x00000020[u32] (umul[u64] eax_0[u32] 0x00000004[u32])) edx_0[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048552<134514002>[u32]
 fpstatus_top = 0x0[u3]
memory:

0x08048552: xor edi, edi
Symbolic: startInstruction(0x08048552: xor edi, edi)
Symbolic insn@0x08048552[1]: number_(32, 134514002) = 0x08048552<134514002>[u32]
Symbolic insn@0x08048552[1]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x08048552[1]: add(0x08048552<134514002>[u32], 0x00000002[u32]) = 0x08048554<134514004>[u32]
Symbolic insn@0x08048552[1]: writeRegister(eip, 0x08048554<134514004>[u32])
Symbolic insn@0x08048552[1]: number_(32, 0) = 0x00000000[u32]
Symbolic insn@0x08048552[1]: extract(0x00000000[u32], 0, 8) = 0x00[u8]
Symbolic insn@0x08048552[1]: extract(0x00[u8], 1, 2) = false[u1]
Symbolic insn@0x08048552[1]: extract(0x00[u8], 0, 1) = false[u1]
Symbolic insn@0x08048552[1]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x08048552[1]: extract(0x00[u8], 3, 4) = false[u1]
Symbolic insn@0x08048552[1]: extract(0x00[u8], 2, 3) = false[u1]
Symbolic insn@0x08048552[1]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x08048552[1]: extract(0x00[u8], 5, 6) = false[u1]
Symbolic insn@0x08048552[1]: extract(0x00[u8], 4, 5) = false[u1]
Symbolic insn@0x08048552[1]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x08048552[1]: extract(0x00[u8], 7, 8) = false[u1]
Symbolic insn@0x08048552[1]: extract(0x00[u8], 6, 7) = false[u1]
Symbolic insn@0x08048552[1]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x08048552[1]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x08048552[1]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x08048552[1]: xor_(false[u1], false[u1]) = false[u1]
Symbolic insn@0x08048552[1]: invert(false[u1]) = true[u1]
Symbolic insn@0x08048552[1]: writeRegister(pf, true[u1])
Symbolic insn@0x08048552[1]: extract(0x00000000[u32], 31, 32) = false[u1]
Symbolic insn@0x08048552[1]: writeRegister(sf, false[u1])
Symbolic insn@0x08048552[1]: equalToZero(0x00000000[u32]) = true[u1]
Symbolic insn@0x08048552[1]: writeRegister(zf, true[u1])
Symbolic insn@0x08048552[1]: writeRegister(edi, 0x00000000[u32])
Symbolic insn@0x08048552[1]: boolean_(0) = false[u1]
Symbolic insn@0x08048552[1]: writeRegister(of, false[u1])
Symbolic insn@0x08048552[1]: unspecified_(1) = V3[u1]<unspec>
Symbolic insn@0x08048552[1]: writeRegister(af, V3[u1]<unspec>)
Symbolic insn@0x08048552[1]: boolean_(0) = false[u1]
Symbolic insn@0x08048552[1]: writeRegister(cf, false[u1])
Symbolic insn@0x08048552[1]: finishInstruction(xor edi, edi)
registers:
 esi write-only = (add[u32] (extract[u32] 0x00000000[u32] 0x00000020[u32] (umul[u64] eax_0[u32] 0x00000004[u32])) edx_0[u32])
 edi write-only = 0x00000000[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048554<134514004>[u32]
 cf write-only = false[u1]
 pf write-only = true[u1]
 af write-only = V3[u1]<unspec>
 zf write-only = true[u1]
 sf write-only = false[u1]
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:

0x08048554: lea esi, [esi + 0x00000000]
Symbolic: startInstruction(0x08048554: lea esi, [esi + 0x00000000])
Symbolic insn@0x08048554[2]: number_(32, 134514004) = 0x08048554<134514004>[u32]
Symbolic insn@0x08048554[2]: number_(32, 6) = 0x00000006[u32]
Symbolic insn@0x08048554[2]: add(0x08048554<134514004>[u32], 0x00000006[u32]) = 0x0804855a<134514010>[u32]
Symbolic insn@0x08048554[2]: writeRegister(eip, 0x0804855a<134514010>[u32])
Symbolic insn@0x08048554[2]: undefined_(32) = V4[u32]
Symbolic insn@0x08048554[2]: readRegister(esi, V4[u32]) = (add[u32] (extract[u32] 0x00000000[u32] 0x00000020[u32] (umul[u64] eax_0[u32] 0x00000004[u32])) edx_0[u32])
Symbolic insn@0x08048554[2]: number_(32, 0) = 0x00000000[u32]
Symbolic insn@0x08048554[2]: add((add[u32] (extract[u32] 0x00000000[u32] 0x00000020[u32] (umul[u64] eax_0[u32] 0x00000004[u32])) edx_0[u32]), 0x00000000[u32]) = (add[u32] (extract[u32] 0x00000000[u32] 0x00000020[u32] (umul[u64] eax_0[u32] 0x00000004[u32])) edx_0[u32])
Symbolic insn@0x08048554[2]: unsignedExtend((add[u32] (extract[u32] 0x00000000[u32] 0x00000020[u32] (umul[u64] eax_0[u32] 0x00000004[u32])) edx_0[u32]), 32) = (add[u32] (extract[u32] 0x00000000[u32] 0x00000020[u32] (umul[u64] eax_0[u32] 0x00000004[u32])) edx_0[u32])
Symbolic insn@0x08048554[2]: writeRegister(esi, (add[u32] (extract[u32] 0x00000000[u32] 0x00000020[u32] (umul[u64] eax_0[u32] 0x00000004[u32])) edx_0[u32]))
Symbolic insn@0x08048554[2]: finishInstruction(lea esi, [esi + 0x00000000])
registers:
 esi = (add[u32] (extract[u32] 0x00000000[u32] 0x00000020[u32] (umul[u64] eax_0[u32] 0x00000004[u32])) edx_0[u32])
 edi write-only = 0x00000000[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x0804855a<134514010>[u32]
 cf write-only = false[u1]
 pf write-only = true[u1]
 af write-only = V3[u1]<unspec>
 zf write-only = true[u1]
 sf write-only = false[u1]
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:

0x0804855a: lea edi, [edi + 0x00000000]
Symbolic: startInstruction(0x0804855a: lea edi, [edi + 0x00000000])
Symbolic insn@0x0804855a[3]: number_(32, 134514010) = 0x0804855a<134514010>[u32]
Symbolic insn@0x0804855a[3]: number_(32, 6) = 0x00000006[u32]
Symbolic insn@0x0804855a[3]: add(0x0804855a<134514010>[u32], 0x00000006[u32]) = 0x08048560<134514016>[u32]
Symbolic insn@0x0804855a[3]: writeRegister(eip, 0x08048560<134514016>[u32])
Symbolic insn@0x0804855a[3]: undefined_(32) = V5[u32]
Symbolic insn@0x0804855a[3]: readRegister(edi, V5[u32]) = 0x00000000[u32]
Symbolic insn@0x0804855a[3]: number_(32, 0) = 0x00000000[u32]
Symbolic insn@0x0804855a[3]: add(0x00000000[u32], 0x00000000[u32]) = 0x00000000[u32]
Symbolic insn@0x0804855a[3]: unsignedExtend(0x00000000[u32], 32) = 0x00000000[u32]
Symbolic insn@0x0804855a[3]: writeRegister(edi, 0x00000000[u32])
Symbolic insn@0x0804855a[3]: finishInstruction(lea edi, [edi + 0x00000000])
registers:
 esi = (add[u32] (extract[u32] 0x00000000[u32] 0x00000020[u32] (umul[u64] eax_0[u32] 0x00000004[u32])) edx_0[u32])
 edi = 0x00000000[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048560<134514016>[u32]
 cf write-only = false[u1]
 pf write-only = true[u1]
 af write-only = V3[u1]<unspec>
 zf write-only = true[u1]
 sf write-only = false[u1]
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:

0x08048560: call dword ds:[esi]
Symbolic: startInstruction(0x08048560: call dword ds:[esi])
Symbolic insn@0x08048560[4]: number_(32, 134514016) = 0x08048560<134514016>[u32]
Symbolic insn@0x08048560[4]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x08048560[4]: add(0x08048560<134514016>[u32], 0x00000002[u32]) = 0x08048562<134514018>[u32]
Symbolic insn@0x08048560[4]: writeRegister(eip, 0x08048562<134514018>[u32])
Symbolic insn@0x08048560[4]: undefined_(32) = V6[u32]
Symbolic insn@0x08048560[4]: readRegister(esi, V6[u32]) = (add[u32] (extract[u32] 0x00000000[u32] 0x00000020[u32] (umul[u64] eax_0[u32] 0x00000004[u32])) edx_0[u32])
Symbolic insn@0x08048560[4]: undefined_(32) = V7[u32]
Symbolic insn@0x08048560[4]: boolean_(1) = true[u1]
Symbolic insn@0x08048560[4]: readMemory(ds, (add[u32] (extract[u32] 0x00000000[u32] 0x00000020[u32] (umul[u64] eax_0[u32] 0x00000004[u32])) edx_0[u32]), V7[u32], true[u1]) = V7[u32]
Symbolic insn@0x08048560[4]: unsignedExtend(V7[u32], 32) = V7[u32]
Symbolic insn@0x08048560[4]: undefined_(32) = V8[u32]
Symbolic insn@0x08048560[4]: readRegister(esp, V8[u32]) = esp_0[u32]
Symbolic insn@0x08048560[4]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048560[4]: add(esp_0[u32], 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048560[4]: boolean_(1) = true[u1]
Symbolic insn@0x08048560[4]: undefined_(32) = V9[u32]
Symbolic insn@0x08048560[4]: readRegister(eip, V9[u32]) = 0x08048562<134514018>[u32]
Symbolic insn@0x08048560[4]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), 0x08048562<134514018>[u32], true[u1])
Symbolic insn@0x08048560[4]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048560[4]: filterCallTarget(V7[u32]) = V7[u32]
Symbolic insn@0x08048560[4]: writeRegister(eip, V7[u32])
Symbolic insn@0x08048560[4]: finishInstruction(call dword ds:[esi])
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 esi = (add[u32] (extract[u32] 0x00000000[u32] 0x00000020[u32] (umul[u64] eax_0[u32] 0x00000004[u32])) edx_0[u32])
 edi = 0x00000000[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip = V7[u32]
 cf write-only = false[u1]
 pf write-only = true[u1]
 af write-only = V3[u1]<unspec>
 zf write-only = true[u1]
 sf write-only = false[u1]
 of write-only = false[u1]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=0x85<-123>[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=0x62[u8]
 addr=(add[u32] (extract[u32] 0x00000000[u32] 0x00000020[u32] (umul[u64] eax_0[u32] 0x00000004[u32])) edx_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V7[u32])
 addr=(add[u32] (extract[u32] 0x00000000[u32] 0x00000020[u32] (umul[u64] eax_0[u32] 0x00000004[u32])) edx_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V7[u32])
 addr=(add[u32] (extract[u32] 0x00000000[u32] 0x00000020[u32] (umul[u64] eax_0[u32] 0x00000004[u32])) edx_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V7[u32])
 addr=(add[u32] (extract[u32] 0x00000000[u32] 0x00000020[u32] (umul[u64] eax_0[u32] 0x00000004[u32])) edx_0[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V7[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x08048562: inc edi
Symbolic: startInstruction(0x08048562: inc edi)
Symbolic insn@0x08048562[0]: number_(32, 134514018) = 0x08048562<134514018>[u32]
Symbolic insn@0x08048562[0]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048562[0]: add(0x08048562<134514018>[u32], 0x00000001[u32]) = 0x08048563<134514019>[u32]
Symbolic insn@0x08048562[0]: writeRegister(eip, 0x08048563<134514019>[u32])
Symbolic insn@0x08048562[0]: undefined_(32) = V1[u32]
Symbolic insn@0x08048562[0]: readRegister(edi, V1[u32]) = edi_0[u32]
Symbolic insn@0x08048562[0]: boolean_(0) = false[u1]
Symbolic insn@0x08048562[0]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048562[0]: addWithCarries(edi_0[u32], 0x00000001[u32], false[u1]) = (add[u32] edi_0[u32] 0x00000001[u32])
Symbolic insn@0x08048562[0]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]))
Symbolic insn@0x08048562[0]: extract((add[u32] edi_0[u32] 0x00000001[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32]))
Symbolic insn@0x08048562[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] edi_0[u32] 0x00000001[u32]))
Symbolic insn@0x08048562[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] edi_0[u32] 0x00000001[u32]))
Symbolic insn@0x08048562[0]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] edi_0[u32] 0x00000001[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] edi_0[u32] 0x00000001[u32])))
Symbolic insn@0x08048562[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] edi_0[u32] 0x00000001[u32]))
Symbolic insn@0x08048562[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] edi_0[u32] 0x00000001[u32]))
Symbolic insn@0x08048562[0]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] edi_0[u32] 0x00000001[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] edi_0[u32] 0x00000001[u32])))
Symbolic insn@0x08048562[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] edi_0[u32] 0x00000001[u32]))
Symbolic insn@0x08048562[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] edi_0[u32] 0x00000001[u32]))
Symbolic insn@0x08048562[0]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] edi_0[u32] 0x00000001[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] edi_0[u32] 0x00000001[u32])))
Symbolic insn@0x08048562[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32]))
Symbolic insn@0x08048562[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] edi_0[u32] 0x00000001[u32]))
Symbolic insn@0x08048562[0]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] edi_0[u32] 0x00000001[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])))
Symbolic insn@0x08048562[0]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] edi_0[u32] 0x00000001[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] edi_0[u32] 0x00000001[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] edi_0[u32] 0x00000001[u32])))
Symbolic insn@0x08048562[0]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] edi_0[u32] 0x00000001[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])))
Symbolic insn@0x08048562[0]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] edi_0[u32] 0x00000001[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])))
Symbolic insn@0x08048562[0]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32]))))
Symbolic insn@0x08048562[0]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32])))))
Symbolic insn@0x08048562[0]: extract((add[u32] edi_0[u32] 0x00000001[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] edi_0[u32] 0x00000001[u32]))
Symbolic insn@0x08048562[0]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] edi_0[u32] 0x00000001[u32])))
Symbolic insn@0x08048562[0]: equalToZero((add[u32] edi_0[u32] 0x00000001[u32])) = (zerop[u1] (add[u32] edi_0[u32] 0x00000001[u32]))
Symbolic insn@0x08048562[0]: writeRegister(zf, (zerop[u1] (add[u32] edi_0[u32] 0x00000001[u32])))
Symbolic insn@0x08048562[0]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33])), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]))
Symbolic insn@0x08048562[0]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33])), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]))
Symbolic insn@0x08048562[0]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33])), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]))
Symbolic insn@0x08048562[0]: writeRegister(af, (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33])))
Symbolic insn@0x08048562[0]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33])), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33])))
Symbolic insn@0x08048562[0]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]))))
Symbolic insn@0x08048562[0]: writeRegister(edi, (add[u32] edi_0[u32] 0x00000001[u32]))
Symbolic insn@0x08048562[0]: finishInstruction(inc edi)
registers:
 edi read-before-write = (add[u32] edi_0[u32] 0x00000001[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048563<134514019>[u32]
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] edi_0[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] edi_0[u32] 0x00000001[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]))
 zf write-only = (zerop[u1] (add[u32] edi_0[u32] 0x00000001[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] edi_0[u32] 0x00000001[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] edi_0[u32]) 0x000000001[u33])))
 fpstatus_top = 0x0[u3]
memory:

0x08048563: sub esi, 0x04
Symbolic: startInstruction(0x08048563: sub esi, 0x04)
Symbolic insn@0x08048563[1]: number_(32, 134514019) = 0x08048563<134514019>[u32]
Symbolic insn@0x08048563[1]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x08048563[1]: add(0x08048563<134514019>[u32], 0x00000003[u32]) = 0x08048566<134514022>[u32]
Symbolic insn@0x08048563[1]: writeRegister(eip, 0x08048566<134514022>[u32])
Symbolic insn@0x08048563[1]: undefined_(32) = V2[u32]
Symbolic insn@0x08048563[1]: readRegister(esi, V2[u32]) = esi_0[u32]
Symbolic insn@0x08048563[1]: number_(8, 4) = 0x04[u8]
Symbolic insn@0x08048563[1]: signExtend(0x04[u8], 32) = 0x00000004[u32]
Symbolic insn@0x08048563[1]: boolean_(0) = false[u1]
Symbolic insn@0x08048563[1]: invert(0x00000004[u32]) = 0xfffffffb<4294967291,-5>[u32]
Symbolic insn@0x08048563[1]: invert(false[u1]) = true[u1]
Symbolic insn@0x08048563[1]: addWithCarries(esi_0[u32], 0xfffffffb<4294967291,-5>[u32], true[u1]) = (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048563[1]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffb<4294967291>[u33]))
Symbolic insn@0x08048563[1]: extract((add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048563[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048563[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048563[1]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])))
Symbolic insn@0x08048563[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048563[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048563[1]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])))
Symbolic insn@0x08048563[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048563[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048563[1]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])))
Symbolic insn@0x08048563[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048563[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048563[1]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])))
Symbolic insn@0x08048563[1]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])))
Symbolic insn@0x08048563[1]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])))
Symbolic insn@0x08048563[1]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])))
Symbolic insn@0x08048563[1]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32]))))
Symbolic insn@0x08048563[1]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])))))
Symbolic insn@0x08048563[1]: extract((add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048563[1]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])))
Symbolic insn@0x08048563[1]: equalToZero((add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) = (zerop[u1] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048563[1]: writeRegister(zf, (zerop[u1] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])))
Symbolic insn@0x08048563[1]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffb<4294967291>[u33])), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffb<4294967291>[u33]))
Symbolic insn@0x08048563[1]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffb<4294967291>[u33])), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffb<4294967291>[u33]))
Symbolic insn@0x08048563[1]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffb<4294967291>[u33])), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffb<4294967291>[u33]))
Symbolic insn@0x08048563[1]: invert((extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffb<4294967291>[u33]))) = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffb<4294967291>[u33])))
Symbolic insn@0x08048563[1]: writeRegister(af, (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffb<4294967291>[u33]))))
Symbolic insn@0x08048563[1]: invert((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffb<4294967291>[u33]))) = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffb<4294967291>[u33])))
Symbolic insn@0x08048563[1]: writeRegister(cf, (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffb<4294967291>[u33]))))
Symbolic insn@0x08048563[1]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffb<4294967291>[u33])), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffb<4294967291>[u33]))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffb<4294967291>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffb<4294967291>[u33])))
Symbolic insn@0x08048563[1]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffb<4294967291>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffb<4294967291>[u33]))))
Symbolic insn@0x08048563[1]: writeRegister(esi, (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048563[1]: finishInstruction(sub esi, 0x04)
registers:
 esi read-before-write = (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])
 edi read-before-write = (add[u32] edi_0[u32] 0x00000001[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048566<134514022>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffb<4294967291>[u33])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffb<4294967291>[u33])))
 zf write-only = (zerop[u1] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffb<4294967291>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] esi_0[u32]) 0x0fffffffb<4294967291>[u33])))
 fpstatus_top = 0x0[u3]
memory:

0x08048566: cmp dword ss:[ebp + 0xf0<-16>], edi
Symbolic: startInstruction(0x08048566: cmp dword ss:[ebp + 0xf0<-16>], edi)
Symbolic insn@0x08048566[2]: number_(32, 134514022) = 0x08048566<134514022>[u32]
Symbolic insn@0x08048566[2]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x08048566[2]: add(0x08048566<134514022>[u32], 0x00000003[u32]) = 0x08048569<134514025>[u32]
Symbolic insn@0x08048566[2]: writeRegister(eip, 0x08048569<134514025>[u32])
Symbolic insn@0x08048566[2]: undefined_(32) = V3[u32]
Symbolic insn@0x08048566[2]: readRegister(ebp, V3[u32]) = ebp_0[u32]
Symbolic insn@0x08048566[2]: number_(8, 240) = 0xf0<-16>[u8]
Symbolic insn@0x08048566[2]: signExtend(0xf0<-16>[u8], 32) = 0xfffffff0<4294967280,-16>[u32]
Symbolic insn@0x08048566[2]: add(ebp_0[u32], 0xfffffff0<4294967280,-16>[u32]) = (add[u32] ebp_0[u32] 0xfffffff0<4294967280,-16>[u32])
Symbolic insn@0x08048566[2]: undefined_(32) = V4[u32]
Symbolic insn@0x08048566[2]: boolean_(1) = true[u1]
Symbolic insn@0x08048566[2]: readMemory(ss, (add[u32] ebp_0[u32] 0xfffffff0<4294967280,-16>[u32]), V4[u32], true[u1]) = V4[u32]
Symbolic insn@0x08048566[2]: undefined_(32) = V5[u32]
Symbolic insn@0x08048566[2]: readRegister(edi, V5[u32]) = (add[u32] edi_0[u32] 0x00000001[u32])
Symbolic insn@0x08048566[2]: boolean_(0) = false[u1]
Symbolic insn@0x08048566[2]: invert((add[u32] edi_0[u32] 0x00000001[u32])) = (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))
Symbolic insn@0x08048566[2]: invert(false[u1]) = true[u1]
Symbolic insn@0x08048566[2]: addWithCarries(V4[u32], (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])), true[u1]) = (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])
Symbolic insn@0x08048566[2]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32])))
Symbolic insn@0x08048566[2]: extract((add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))
Symbolic insn@0x08048566[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))
Symbolic insn@0x08048566[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))
Symbolic insn@0x08048566[2]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])))
Symbolic insn@0x08048566[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))
Symbolic insn@0x08048566[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))
Symbolic insn@0x08048566[2]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])))
Symbolic insn@0x08048566[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))
Symbolic insn@0x08048566[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))
Symbolic insn@0x08048566[2]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])))
Symbolic insn@0x08048566[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))
Symbolic insn@0x08048566[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))
Symbolic insn@0x08048566[2]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])))
Symbolic insn@0x08048566[2]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])))
Symbolic insn@0x08048566[2]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])))
Symbolic insn@0x08048566[2]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])))
Symbolic insn@0x08048566[2]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))))
Symbolic insn@0x08048566[2]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])))))
Symbolic insn@0x08048566[2]: extract((add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))
Symbolic insn@0x08048566[2]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])))
Symbolic insn@0x08048566[2]: equalToZero((add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) = (zerop[u1] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))
Symbolic insn@0x08048566[2]: writeRegister(zf, (zerop[u1] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])))
Symbolic insn@0x08048566[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]))), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32])))
Symbolic insn@0x08048566[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]))), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32])))
Symbolic insn@0x08048566[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]))), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32])))
Symbolic insn@0x08048566[2]: invert((extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32])))) = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]))))
Symbolic insn@0x08048566[2]: writeRegister(af, (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32])))))
Symbolic insn@0x08048566[2]: invert((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32])))) = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]))))
Symbolic insn@0x08048566[2]: writeRegister(cf, (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32])))))
Symbolic insn@0x08048566[2]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]))), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32])))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]))))
Symbolic insn@0x08048566[2]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32])))))
Symbolic insn@0x08048566[2]: finishInstruction(cmp dword ss:[ebp + 0xf0<-16>], edi)
registers:
 esi read-before-write = (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])
 edi read-before-write = (add[u32] edi_0[u32] 0x00000001[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048569<134514025>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]))))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]))))
 zf write-only = (zerop[u1] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]))))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebp_0[u32] 0xfffffff3<4294967283,-13>[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V4[u32])
 addr=(add[u32] ebp_0[u32] 0xfffffff2<4294967282,-14>[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V4[u32])
 addr=(add[u32] ebp_0[u32] 0xfffffff1<4294967281,-15>[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V4[u32])
 addr=(add[u32] ebp_0[u32] 0xfffffff0<4294967280,-16>[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V4[u32])

0x08048569: jne 0x08048560<<BBlock>>
Symbolic: startInstruction(0x08048569: jne 0x08048560<<BBlock>>)
Symbolic insn@0x08048569[3]: number_(32, 134514025) = 0x08048569<134514025>[u32]
Symbolic insn@0x08048569[3]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x08048569[3]: add(0x08048569<134514025>[u32], 0x00000002[u32]) = 0x0804856b<134514027>[u32]
Symbolic insn@0x08048569[3]: writeRegister(eip, 0x0804856b<134514027>[u32])
Symbolic insn@0x08048569[3]: undefined_(1) = V6[u1]
Symbolic insn@0x08048569[3]: readRegister(zf, V6[u1]) = (zerop[u1] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))
Symbolic insn@0x08048569[3]: invert((zerop[u1] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))) = (invert[u1] (zerop[u1] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])))
Symbolic insn@0x08048569[3]: undefined_(32) = V7[u32]
Symbolic insn@0x08048569[3]: readRegister(eip, V7[u32]) = 0x0804856b<134514027>[u32]
Symbolic insn@0x08048569[3]: number_(32, 134514016) = 0x08048560<134514016>[u32]
Symbolic insn@0x08048569[3]: unsignedExtend(0x08048560<134514016>[u32], 32) = 0x08048560<134514016>[u32]
Symbolic insn@0x08048569[3]: ite((invert[u1] (zerop[u1] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))), 0x08048560<134514016>[u32], 0x0804856b<134514027>[u32]) = (ite[u32] (zerop[u1] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) 0x0804856b<134514027>[u32] 0x08048560<134514016>[u32])
Symbolic insn@0x08048569[3]: writeRegister(eip, (ite[u32] (zerop[u1] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) 0x0804856b<134514027>[u32] 0x08048560<134514016>[u32]))
Symbolic insn@0x08048569[3]: finishInstruction(jne 0x08048560<<BBlock>>)
registers:
 esi read-before-write = (add[u32] esi_0[u32] 0xfffffffc<4294967292,-4>[u32])
 edi read-before-write = (add[u32] edi_0[u32] 0x00000001[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip = (ite[u32] (zerop[u1] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) 0x0804856b<134514027>[u32] 0x08048560<134514016>[u32])
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]))))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]))))
 zf = (zerop[u1] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32])) V4[u32] 0x00000001[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] (invert[u32] (add[u32] edi_0[u32] 0x00000001[u32]))) (uextend[u33] 0x00000021[u32] V4[u32]))))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebp_0[u32] 0xfffffff3<4294967283,-13>[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V4[u32])
 addr=(add[u32] ebp_0[u32] 0xfffffff2<4294967282,-14>[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V4[u32])
 addr=(add[u32] ebp_0[u32] 0xfffffff1<4294967281,-15>[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V4[u32])
 addr=(add[u32] ebp_0[u32] 0xfffffff0<4294967280,-16>[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V4[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x0804856b: call 0x080485b0<(func)_fini>
Symbolic: startInstruction(0x0804856b: call 0x080485b0<(func)_fini>)
Symbolic insn@0x0804856b[0]: number_(32, 134514027) = 0x0804856b<134514027>[u32]
Symbolic insn@0x0804856b[0]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x0804856b[0]: add(0x0804856b<134514027>[u32], 0x00000005[u32]) = 0x08048570<134514032>[u32]
Symbolic insn@0x0804856b[0]: writeRegister(eip, 0x08048570<134514032>[u32])
Symbolic insn@0x0804856b[0]: number_(32, 134514096) = 0x080485b0<134514096>[u32]
Symbolic insn@0x0804856b[0]: unsignedExtend(0x080485b0<134514096>[u32], 32) = 0x080485b0<134514096>[u32]
Symbolic insn@0x0804856b[0]: undefined_(32) = V1[u32]
Symbolic insn@0x0804856b[0]: readRegister(esp, V1[u32]) = esp_0[u32]
Symbolic insn@0x0804856b[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x0804856b[0]: add(esp_0[u32], 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x0804856b[0]: boolean_(1) = true[u1]
Symbolic insn@0x0804856b[0]: undefined_(32) = V2[u32]
Symbolic insn@0x0804856b[0]: readRegister(eip, V2[u32]) = 0x08048570<134514032>[u32]
Symbolic insn@0x0804856b[0]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), 0x08048570<134514032>[u32], true[u1])
Symbolic insn@0x0804856b[0]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x0804856b[0]: filterCallTarget(0x080485b0<134514096>[u32]) = 0x080485b0<134514096>[u32]
Symbolic insn@0x0804856b[0]: writeRegister(eip, 0x080485b0<134514096>[u32])
Symbolic insn@0x0804856b[0]: finishInstruction(call 0x080485b0<(func)_fini>)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip = 0x080485b0<134514096>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=0x85<-123>[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=0x70[u8]
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x08048570: add esp, 0x0c
Symbolic: startInstruction(0x08048570: add esp, 0x0c)
Symbolic insn@0x08048570[0]: number_(32, 134514032) = 0x08048570<134514032>[u32]
Symbolic insn@0x08048570[0]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x08048570[0]: add(0x08048570<134514032>[u32], 0x00000003[u32]) = 0x08048573<134514035>[u32]
Symbolic insn@0x08048570[0]: writeRegister(eip, 0x08048573<134514035>[u32])
Symbolic insn@0x08048570[0]: boolean_(0) = false[u1]
Symbolic insn@0x08048570[0]: number_(8, 12) = 0x0c[u8]
Symbolic insn@0x08048570[0]: undefined_(32) = V1[u32]
Symbolic insn@0x08048570[0]: readRegister(esp, V1[u32]) = esp_0[u32]
Symbolic insn@0x08048570[0]: signExtend(0x0c[u8], 32) = 0x0000000c[u32]
Symbolic insn@0x08048570[0]: addWithCarries(esp_0[u32], 0x0000000c[u32], false[u1]) = (add[u32] esp_0[u32] 0x0000000c[u32])
Symbolic insn@0x08048570[0]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
Symbolic insn@0x08048570[0]: extract((add[u32] esp_0[u32] 0x0000000c[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x08048570[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x08048570[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x08048570[0]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x08048570[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x08048570[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x08048570[0]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x08048570[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x08048570[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x08048570[0]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x08048570[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x08048570[0]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x08048570[0]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x08048570[0]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x08048570[0]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x08048570[0]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x08048570[0]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))))
Symbolic insn@0x08048570[0]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))))
Symbolic insn@0x08048570[0]: extract((add[u32] esp_0[u32] 0x0000000c[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x08048570[0]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x08048570[0]: equalToZero((add[u32] esp_0[u32] 0x0000000c[u32])) = (zerop[u1] (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x08048570[0]: writeRegister(zf, (zerop[u1] (add[u32] esp_0[u32] 0x0000000c[u32])))
Symbolic insn@0x08048570[0]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
Symbolic insn@0x08048570[0]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
Symbolic insn@0x08048570[0]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
Symbolic insn@0x08048570[0]: writeRegister(af, (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
Symbolic insn@0x08048570[0]: writeRegister(cf, (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
Symbolic insn@0x08048570[0]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
Symbolic insn@0x08048570[0]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))))
Symbolic insn@0x08048570[0]: writeRegister(esp, (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x08048570[0]: finishInstruction(add esp, 0x0c)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0x0000000c[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048573<134514035>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0x0000000c[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
 fpstatus_top = 0x0[u3]
memory:

0x08048573: pop ebx
Symbolic: startInstruction(0x08048573: pop ebx)
Symbolic insn@0x08048573[1]: number_(32, 134514035) = 0x08048573<134514035>[u32]
Symbolic insn@0x08048573[1]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048573[1]: add(0x08048573<134514035>[u32], 0x00000001[u32]) = 0x08048574<134514036>[u32]
Symbolic insn@0x08048573[1]: writeRegister(eip, 0x08048574<134514036>[u32])
Symbolic insn@0x08048573[1]: undefined_(32) = V2[u32]
Symbolic insn@0x08048573[1]: readRegister(esp, V2[u32]) = (add[u32] esp_0[u32] 0x0000000c[u32])
Symbolic insn@0x08048573[1]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x08048573[1]: add((add[u32] esp_0[u32] 0x0000000c[u32]), 0x00000004[u32]) = (add[u32] esp_0[u32] 0x00000010[u32])
Symbolic insn@0x08048573[1]: writeRegister(esp, (add[u32] esp_0[u32] 0x00000010[u32]))
Symbolic insn@0x08048573[1]: boolean_(1) = true[u1]
Symbolic insn@0x08048573[1]: undefined_(32) = V3[u32]
Symbolic insn@0x08048573[1]: readMemory(ss, (add[u32] esp_0[u32] 0x0000000c[u32]), V3[u32], true[u1]) = V3[u32]
Symbolic insn@0x08048573[1]: writeRegister(ebx, V3[u32])
Symbolic insn@0x08048573[1]: finishInstruction(pop ebx)
registers:
 ebx write-only = V3[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x00000010[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048574<134514036>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0x0000000c[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x0000000f[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000e[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000d[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000c[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])

0x08048574: pop esi
Symbolic: startInstruction(0x08048574: pop esi)
Symbolic insn@0x08048574[2]: number_(32, 134514036) = 0x08048574<134514036>[u32]
Symbolic insn@0x08048574[2]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048574[2]: add(0x08048574<134514036>[u32], 0x00000001[u32]) = 0x08048575<134514037>[u32]
Symbolic insn@0x08048574[2]: writeRegister(eip, 0x08048575<134514037>[u32])
Symbolic insn@0x08048574[2]: undefined_(32) = V4[u32]
Symbolic insn@0x08048574[2]: readRegister(esp, V4[u32]) = (add[u32] esp_0[u32] 0x00000010[u32])
Symbolic insn@0x08048574[2]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x08048574[2]: add((add[u32] esp_0[u32] 0x00000010[u32]), 0x00000004[u32]) = (add[u32] esp_0[u32] 0x00000014[u32])
Symbolic insn@0x08048574[2]: writeRegister(esp, (add[u32] esp_0[u32] 0x00000014[u32]))
Symbolic insn@0x08048574[2]: boolean_(1) = true[u1]
Symbolic insn@0x08048574[2]: undefined_(32) = V5[u32]
Symbolic insn@0x08048574[2]: readMemory(ss, (add[u32] esp_0[u32] 0x00000010[u32]), V5[u32], true[u1]) = V5[u32]
Symbolic insn@0x08048574[2]: writeRegister(esi, V5[u32])
Symbolic insn@0x08048574[2]: finishInstruction(pop esi)
registers:
 ebx write-only = V3[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x00000014[u32])
 esi write-only = V5[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048575<134514037>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0x0000000c[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000013[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000012[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000011[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000010[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x0000000f[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000e[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000d[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000c[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])

0x08048575: pop edi
Symbolic: startInstruction(0x08048575: pop edi)
Symbolic insn@0x08048575[3]: number_(32, 134514037) = 0x08048575<134514037>[u32]
Symbolic insn@0x08048575[3]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048575[3]: add(0x08048575<134514037>[u32], 0x00000001[u32]) = 0x08048576<134514038>[u32]
Symbolic insn@0x08048575[3]: writeRegister(eip, 0x08048576<134514038>[u32])
Symbolic insn@0x08048575[3]: undefined_(32) = V6[u32]
Symbolic insn@0x08048575[3]: readRegister(esp, V6[u32]) = (add[u32] esp_0[u32] 0x00000014[u32])
Symbolic insn@0x08048575[3]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x08048575[3]: add((add[u32] esp_0[u32] 0x00000014[u32]), 0x00000004[u32]) = (add[u32] esp_0[u32] 0x00000018[u32])
Symbolic insn@0x08048575[3]: writeRegister(esp, (add[u32] esp_0[u32] 0x00000018[u32]))
Symbolic insn@0x08048575[3]: boolean_(1) = true[u1]
Symbolic insn@0x08048575[3]: undefined_(32) = V7[u32]
Symbolic insn@0x08048575[3]: readMemory(ss, (add[u32] esp_0[u32] 0x00000014[u32]), V7[u32], true[u1]) = V7[u32]
Symbolic insn@0x08048575[3]: writeRegister(edi, V7[u32])
Symbolic insn@0x08048575[3]: finishInstruction(pop edi)
registers:
 ebx write-only = V3[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x00000018[u32])
 esi write-only = V5[u32]
 edi write-only = V7[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048576<134514038>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0x0000000c[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000017[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000016[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000015[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000014[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000013[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000012[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000011[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000010[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x0000000f[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000e[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000d[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000c[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])

0x08048576: pop ebp
Symbolic: startInstruction(0x08048576: pop ebp)
Symbolic insn@0x08048576[4]: number_(32, 134514038) = 0x08048576<134514038>[u32]
Symbolic insn@0x08048576[4]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048576[4]: add(0x08048576<134514038>[u32], 0x00000001[u32]) = 0x08048577<134514039>[u32]
Symbolic insn@0x08048576[4]: writeRegister(eip, 0x08048577<134514039>[u32])
Symbolic insn@0x08048576[4]: undefined_(32) = V8[u32]
Symbolic insn@0x08048576[4]: readRegister(esp, V8[u32]) = (add[u32] esp_0[u32] 0x00000018[u32])
Symbolic insn@0x08048576[4]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x08048576[4]: add((add[u32] esp_0[u32] 0x00000018[u32]), 0x00000004[u32]) = (add[u32] esp_0[u32] 0x0000001c[u32])
Symbolic insn@0x08048576[4]: writeRegister(esp, (add[u32] esp_0[u32] 0x0000001c[u32]))
Symbolic insn@0x08048576[4]: boolean_(1) = true[u1]
Symbolic insn@0x08048576[4]: undefined_(32) = V9[u32]
Symbolic insn@0x08048576[4]: readMemory(ss, (add[u32] esp_0[u32] 0x00000018[u32]), V9[u32], true[u1]) = V9[u32]
Symbolic insn@0x08048576[4]: writeRegister(ebp, V9[u32])
Symbolic insn@0x08048576[4]: finishInstruction(pop ebp)
registers:
 ebx write-only = V3[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x0000001c[u32])
 ebp write-only = V9[u32]
 esi write-only = V5[u32]
 edi write-only = V7[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048577<134514039>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0x0000000c[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x0000001b[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V9[u32])
 addr=(add[u32] esp_0[u32] 0x0000001a[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V9[u32])
 addr=(add[u32] esp_0[u32] 0x00000019[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V9[u32])
 addr=(add[u32] esp_0[u32] 0x00000018[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V9[u32])
 addr=(add[u32] esp_0[u32] 0x00000017[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000016[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000015[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000014[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000013[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000012[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000011[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000010[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x0000000f[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000e[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000d[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000c[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])

0x08048577: ret 
Symbolic: startInstruction(0x08048577: ret)
Symbolic insn@0x08048577[5]: number_(32, 134514039) = 0x08048577<134514039>[u32]
Symbolic insn@0x08048577[5]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048577[5]: add(0x08048577<134514039>[u32], 0x00000001[u32]) = 0x08048578<134514040>[u32]
Symbolic insn@0x08048577[5]: writeRegister(eip, 0x08048578<134514040>[u32])
Symbolic insn@0x08048577[5]: undefined_(32) = V10[u32]
Symbolic insn@0x08048577[5]: readRegister(esp, V10[u32]) = (add[u32] esp_0[u32] 0x0000001c[u32])
Symbolic insn@0x08048577[5]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x08048577[5]: add((add[u32] esp_0[u32] 0x0000001c[u32]), 0x00000004[u32]) = (add[u32] esp_0[u32] 0x00000020[u32])
Symbolic insn@0x08048577[5]: boolean_(1) = true[u1]
Symbolic insn@0x08048577[5]: undefined_(32) = V11[u32]
Symbolic insn@0x08048577[5]: readMemory(ss, (add[u32] esp_0[u32] 0x0000001c[u32]), V11[u32], true[u1]) = V11[u32]
Symbolic insn@0x08048577[5]: filterReturnTarget(V11[u32]) = V11[u32]
Symbolic insn@0x08048577[5]: writeRegister(eip, V11[u32])
Symbolic insn@0x08048577[5]: writeRegister(esp, (add[u32] esp_0[u32] 0x00000020[u32]))
Symbolic insn@0x08048577[5]: finishInstruction(ret)
registers:
 ebx write-only = V3[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x00000020[u32])
 ebp write-only = V9[u32]
 esi write-only = V5[u32]
 edi write-only = V7[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = V11[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0x0000000c[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0x0000000c[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0x0000000c[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33]) (uextend[u33] 0x00000021[u32] esp_0[u32]) 0x00000000c[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x0000001f[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V11[u32])
 addr=(add[u32] esp_0[u32] 0x0000001e[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V11[u32])
 addr=(add[u32] esp_0[u32] 0x0000001d[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V11[u32])
 addr=(add[u32] esp_0[u32] 0x0000001c[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V11[u32])
 addr=(add[u32] esp_0[u32] 0x0000001b[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V9[u32])
 addr=(add[u32] esp_0[u32] 0x0000001a[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V9[u32])
 addr=(add[u32] esp_0[u32] 0x00000019[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V9[u32])
 addr=(add[u32] esp_0[u32] 0x00000018[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V9[u32])
 addr=(add[u32] esp_0[u32] 0x00000017[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000016[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000015[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000014[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000013[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000012[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000011[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x00000010[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V5[u32])
 addr=(add[u32] esp_0[u32] 0x0000000f[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000e[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000d[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V3[u32])
 addr=(add[u32] esp_0[u32] 0x0000000c[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V3[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x08048580: push ebp
Symbolic: startInstruction(0x08048580: push ebp)
Symbolic insn@0x08048580[0]: number_(32, 134514048) = 0x08048580<134514048>[u32]
Symbolic insn@0x08048580[0]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048580[0]: add(0x08048580<134514048>[u32], 0x00000001[u32]) = 0x08048581<134514049>[u32]
Symbolic insn@0x08048580[0]: writeRegister(eip, 0x08048581<134514049>[u32])
Symbolic insn@0x08048580[0]: undefined_(32) = V1[u32]
Symbolic insn@0x08048580[0]: readRegister(ebp, V1[u32]) = ebp_0[u32]
Symbolic insn@0x08048580[0]: undefined_(32) = V2[u32]
Symbolic insn@0x08048580[0]: readRegister(esp, V2[u32]) = esp_0[u32]
Symbolic insn@0x08048580[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048580[0]: add(esp_0[u32], 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048580[0]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048580[0]: boolean_(1) = true[u1]
Symbolic insn@0x08048580[0]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), ebp_0[u32], true[u1])
Symbolic insn@0x08048580[0]: finishInstruction(push ebp)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048581<134514049>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048581: mov ebp, esp
Symbolic: startInstruction(0x08048581: mov ebp, esp)
Symbolic insn@0x08048581[1]: number_(32, 134514049) = 0x08048581<134514049>[u32]
Symbolic insn@0x08048581[1]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x08048581[1]: add(0x08048581<134514049>[u32], 0x00000002[u32]) = 0x08048583<134514051>[u32]
Symbolic insn@0x08048581[1]: writeRegister(eip, 0x08048583<134514051>[u32])
Symbolic insn@0x08048581[1]: undefined_(32) = V3[u32]
Symbolic insn@0x08048581[1]: readRegister(esp, V3[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048581[1]: writeRegister(ebp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x08048581[1]: finishInstruction(mov ebp, esp)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048583<134514051>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048583: push ebx
Symbolic: startInstruction(0x08048583: push ebx)
Symbolic insn@0x08048583[2]: number_(32, 134514051) = 0x08048583<134514051>[u32]
Symbolic insn@0x08048583[2]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x08048583[2]: add(0x08048583<134514051>[u32], 0x00000001[u32]) = 0x08048584<134514052>[u32]
Symbolic insn@0x08048583[2]: writeRegister(eip, 0x08048584<134514052>[u32])
Symbolic insn@0x08048583[2]: undefined_(32) = V4[u32]
Symbolic insn@0x08048583[2]: readRegister(ebx, V4[u32]) = ebx_0[u32]
Symbolic insn@0x08048583[2]: undefined_(32) = V5[u32]
Symbolic insn@0x08048583[2]: readRegister(esp, V5[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x08048583[2]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x08048583[2]: add((add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])
Symbolic insn@0x08048583[2]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]))
Symbolic insn@0x08048583[2]: boolean_(1) = true[u1]
Symbolic insn@0x08048583[2]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]), ebx_0[u32], true[u1])
Symbolic insn@0x08048583[2]: finishInstruction(push ebx)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048584<134514052>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048584: sub esp, 0x04
Symbolic: startInstruction(0x08048584: sub esp, 0x04)
Symbolic insn@0x08048584[3]: number_(32, 134514052) = 0x08048584<134514052>[u32]
Symbolic insn@0x08048584[3]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x08048584[3]: add(0x08048584<134514052>[u32], 0x00000003[u32]) = 0x08048587<134514055>[u32]
Symbolic insn@0x08048584[3]: writeRegister(eip, 0x08048587<134514055>[u32])
Symbolic insn@0x08048584[3]: undefined_(32) = V6[u32]
Symbolic insn@0x08048584[3]: readRegister(esp, V6[u32]) = (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])
Symbolic insn@0x08048584[3]: number_(8, 4) = 0x04[u8]
Symbolic insn@0x08048584[3]: signExtend(0x04[u8], 32) = 0x00000004[u32]
Symbolic insn@0x08048584[3]: boolean_(0) = false[u1]
Symbolic insn@0x08048584[3]: invert(0x00000004[u32]) = 0xfffffffb<4294967291,-5>[u32]
Symbolic insn@0x08048584[3]: invert(false[u1]) = true[u1]
Symbolic insn@0x08048584[3]: addWithCarries((add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]), 0xfffffffb<4294967291,-5>[u32], true[u1]) = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
Symbolic insn@0x08048584[3]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33]))
Symbolic insn@0x08048584[3]: extract((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048584[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048584[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048584[3]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048584[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048584[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048584[3]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048584[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048584[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048584[3]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048584[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048584[3]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048584[3]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048584[3]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048584[3]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048584[3]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048584[3]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))))
Symbolic insn@0x08048584[3]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))))
Symbolic insn@0x08048584[3]: extract((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048584[3]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048584[3]: equalToZero((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) = (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048584[3]: writeRegister(zf, (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])))
Symbolic insn@0x08048584[3]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33])), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33]))
Symbolic insn@0x08048584[3]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33])), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33]))
Symbolic insn@0x08048584[3]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33])), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33]))
Symbolic insn@0x08048584[3]: invert((extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33]))) = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33])))
Symbolic insn@0x08048584[3]: writeRegister(af, (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33]))))
Symbolic insn@0x08048584[3]: invert((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33]))) = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33])))
Symbolic insn@0x08048584[3]: writeRegister(cf, (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33]))))
Symbolic insn@0x08048584[3]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33])), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33]))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33])))
Symbolic insn@0x08048584[3]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33]))))
Symbolic insn@0x08048584[3]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x08048584[3]: finishInstruction(sub esp, 0x04)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048587<134514055>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33])))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048587: mov ebx, 0x080495e8<__init_array_start>
Symbolic: startInstruction(0x08048587: mov ebx, 0x080495e8<__init_array_start>)
Symbolic insn@0x08048587[4]: number_(32, 134514055) = 0x08048587<134514055>[u32]
Symbolic insn@0x08048587[4]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x08048587[4]: add(0x08048587<134514055>[u32], 0x00000005[u32]) = 0x0804858c<134514060>[u32]
Symbolic insn@0x08048587[4]: writeRegister(eip, 0x0804858c<134514060>[u32])
Symbolic insn@0x08048587[4]: number_(32, 134518248) = 0x080495e8<134518248>[u32]
Symbolic insn@0x08048587[4]: writeRegister(ebx, 0x080495e8<134518248>[u32])
Symbolic insn@0x08048587[4]: finishInstruction(mov ebx, 0x080495e8<__init_array_start>)
registers:
 ebx read-before-write = 0x080495e8<134518248>[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x0804858c<134514060>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33])))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x0804858c: mov eax, dword ds:[0x080495e8<__init_array_start>]
Symbolic: startInstruction(0x0804858c: mov eax, dword ds:[0x080495e8<__init_array_start>])
Symbolic insn@0x0804858c[5]: number_(32, 134514060) = 0x0804858c<134514060>[u32]
Symbolic insn@0x0804858c[5]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x0804858c[5]: add(0x0804858c<134514060>[u32], 0x00000005[u32]) = 0x08048591<134514065>[u32]
Symbolic insn@0x0804858c[5]: writeRegister(eip, 0x08048591<134514065>[u32])
Symbolic insn@0x0804858c[5]: number_(32, 134518248) = 0x080495e8<134518248>[u32]
Symbolic insn@0x0804858c[5]: undefined_(32) = V7[u32]
Symbolic insn@0x0804858c[5]: boolean_(1) = true[u1]
Symbolic insn@0x0804858c[5]: readMemory(ds, 0x080495e8<134518248>[u32], V7[u32], true[u1]) = V7[u32]
Symbolic insn@0x0804858c[5]: writeRegister(eax, V7[u32])
Symbolic insn@0x0804858c[5]: finishInstruction(mov eax, dword ds:[0x080495e8<__init_array_start>])
registers:
 eax write-only = V7[u32]
 ebx read-before-write = 0x080495e8<134518248>[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = 0x08048591<134514065>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33])))
 zf write-only = (zerop[u1] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])) 0x0fffffffb<4294967291>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=0x080495eb<134518251>[u32] read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V7[u32])
 addr=0x080495ea<134518250>[u32] read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V7[u32])
 addr=0x080495e9<134518249>[u32] read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V7[u32])
 addr=0x080495e8<134518248>[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffb<4294967291,-5>[u32]) value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffa<4294967290,-6>[u32]) value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff9<4294967289,-7>[u32]) value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]) value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048591: cmp eax, 0xff<-1>
Symbolic: startInstruction(0x08048591: cmp eax, 0xff<-1>)
Symbolic insn@0x08048591[6]: number_(32, 134514065) = 0x08048591<134514065>[u32]
Symbolic insn@0x08048591[6]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x08048591[6]: add(0x08048591<134514065>[u32], 0x00000003[u32]) = 0x08048594<134514068>[u32]
Symbolic insn@0x08048591[6]: writeRegister(eip, 0x08048594<134514068>[u32])
Symbolic insn@0x08048591[6]: undefined_(32) = V8[u32]
Symbolic insn@0x08048591[6]: readRegister(eax, V8[u32]) = V7[u32]
Symbolic insn@0x08048591[6]: number_(8, 18446744073709551615) = 0xff<-1>[u8]
Symbolic insn@0x08048591[6]: signExtend(0xff<-1>[u8], 32) = 0xffffffff<4294967295,-1>[u32]
Symbolic insn@0x08048591[6]: boolean_(0) = false[u1]
Symbolic insn@0x08048591[6]: invert(0xffffffff<4294967295,-1>[u32]) = 0x00000000[u32]
Symbolic insn@0x08048591[6]: invert(false[u1]) = true[u1]
Symbolic insn@0x08048591[6]: addWithCarries(V7[u32], 0x00000000[u32], true[u1]) = (add[u32] V7[u32] 0x00000001[u32])
Symbolic insn@0x08048591[6]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32])))
Symbolic insn@0x08048591[6]: extract((add[u32] V7[u32] 0x00000001[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V7[u32] 0x00000001[u32]))
Symbolic insn@0x08048591[6]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V7[u32] 0x00000001[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V7[u32] 0x00000001[u32]))
Symbolic insn@0x08048591[6]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V7[u32] 0x00000001[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V7[u32] 0x00000001[u32]))
Symbolic insn@0x08048591[6]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V7[u32] 0x00000001[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V7[u32] 0x00000001[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V7[u32] 0x00000001[u32])))
Symbolic insn@0x08048591[6]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V7[u32] 0x00000001[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V7[u32] 0x00000001[u32]))
Symbolic insn@0x08048591[6]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V7[u32] 0x00000001[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V7[u32] 0x00000001[u32]))
Symbolic insn@0x08048591[6]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V7[u32] 0x00000001[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V7[u32] 0x00000001[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V7[u32] 0x00000001[u32])))
Symbolic insn@0x08048591[6]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V7[u32] 0x00000001[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V7[u32] 0x00000001[u32]))
Symbolic insn@0x08048591[6]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V7[u32] 0x00000001[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V7[u32] 0x00000001[u32]))
Symbolic insn@0x08048591[6]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V7[u32] 0x00000001[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V7[u32] 0x00000001[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V7[u32] 0x00000001[u32])))
Symbolic insn@0x08048591[6]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V7[u32] 0x00000001[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V7[u32] 0x00000001[u32]))
Symbolic insn@0x08048591[6]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V7[u32] 0x00000001[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V7[u32] 0x00000001[u32]))
Symbolic insn@0x08048591[6]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V7[u32] 0x00000001[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V7[u32] 0x00000001[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V7[u32] 0x00000001[u32])))
Symbolic insn@0x08048591[6]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V7[u32] 0x00000001[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V7[u32] 0x00000001[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V7[u32] 0x00000001[u32])))
Symbolic insn@0x08048591[6]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V7[u32] 0x00000001[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V7[u32] 0x00000001[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V7[u32] 0x00000001[u32])))
Symbolic insn@0x08048591[6]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V7[u32] 0x00000001[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V7[u32] 0x00000001[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V7[u32] 0x00000001[u32])))
Symbolic insn@0x08048591[6]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V7[u32] 0x00000001[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V7[u32] 0x00000001[u32]))))
Symbolic insn@0x08048591[6]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V7[u32] 0x00000001[u32])))))
Symbolic insn@0x08048591[6]: extract((add[u32] V7[u32] 0x00000001[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V7[u32] 0x00000001[u32]))
Symbolic insn@0x08048591[6]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V7[u32] 0x00000001[u32])))
Symbolic insn@0x08048591[6]: equalToZero((add[u32] V7[u32] 0x00000001[u32])) = (zerop[u1] (add[u32] V7[u32] 0x00000001[u32]))
Symbolic insn@0x08048591[6]: writeRegister(zf, (zerop[u1] (add[u32] V7[u32] 0x00000001[u32])))
Symbolic insn@0x08048591[6]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32]))), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32])))
Symbolic insn@0x08048591[6]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32]))), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32])))
Symbolic insn@0x08048591[6]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32]))), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32])))
Symbolic insn@0x08048591[6]: invert((extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32])))) = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32]))))
Symbolic insn@0x08048591[6]: writeRegister(af, (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32])))))
Symbolic insn@0x08048591[6]: invert((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32])))) = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32]))))
Symbolic insn@0x08048591[6]: writeRegister(cf, (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32])))))
Symbolic insn@0x08048591[6]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32]))), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32])))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32]))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32]))))
Symbolic insn@0x08048591[6]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32]))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32])))))
Symbolic insn@0x08048591[6]: finishInstruction(cmp eax, 0xff<-1>)
registers:
 eax = V7[u32]
 ebx read-before-write = 0x080495e8<134518248>[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = 0x08048594<134514068>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32]))))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V7[u32] 0x00000001[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32]))))
 zf write-only = (zerop[u1] (add[u32] V7[u32] 0x00000001[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V7[u32] 0x00000001[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32]))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32]))))
 fpstatus_top = 0x0[u3]
memory:
 addr=0x080495eb<134518251>[u32] read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V7[u32])
 addr=0x080495ea<134518250>[u32] read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V7[u32])
 addr=0x080495e9<134518249>[u32] read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V7[u32])
 addr=0x080495e8<134518248>[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffb<4294967291,-5>[u32]) value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffa<4294967290,-6>[u32]) value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff9<4294967289,-7>[u32]) value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]) value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x08048594: je 0x080485ac<<BBlock>>
Symbolic: startInstruction(0x08048594: je 0x080485ac<<BBlock>>)
Symbolic insn@0x08048594[7]: number_(32, 134514068) = 0x08048594<134514068>[u32]
Symbolic insn@0x08048594[7]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x08048594[7]: add(0x08048594<134514068>[u32], 0x00000002[u32]) = 0x08048596<134514070>[u32]
Symbolic insn@0x08048594[7]: writeRegister(eip, 0x08048596<134514070>[u32])
Symbolic insn@0x08048594[7]: undefined_(1) = V9[u1]
Symbolic insn@0x08048594[7]: readRegister(zf, V9[u1]) = (zerop[u1] (add[u32] V7[u32] 0x00000001[u32]))
Symbolic insn@0x08048594[7]: undefined_(32) = V10[u32]
Symbolic insn@0x08048594[7]: readRegister(eip, V10[u32]) = 0x08048596<134514070>[u32]
Symbolic insn@0x08048594[7]: number_(32, 134514092) = 0x080485ac<134514092>[u32]
Symbolic insn@0x08048594[7]: unsignedExtend(0x080485ac<134514092>[u32], 32) = 0x080485ac<134514092>[u32]
Symbolic insn@0x08048594[7]: ite((zerop[u1] (add[u32] V7[u32] 0x00000001[u32])), 0x080485ac<134514092>[u32], 0x08048596<134514070>[u32]) = (ite[u32] (zerop[u1] (add[u32] V7[u32] 0x00000001[u32])) 0x080485ac<134514092>[u32] 0x08048596<134514070>[u32])
Symbolic insn@0x08048594[7]: writeRegister(eip, (ite[u32] (zerop[u1] (add[u32] V7[u32] 0x00000001[u32])) 0x080485ac<134514092>[u32] 0x08048596<134514070>[u32]))
Symbolic insn@0x08048594[7]: finishInstruction(je 0x080485ac<<BBlock>>)
registers:
 eax = V7[u32]
 ebx read-before-write = 0x080495e8<134518248>[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip = (ite[u32] (zerop[u1] (add[u32] V7[u32] 0x00000001[u32])) 0x080485ac<134514092>[u32] 0x08048596<134514070>[u32])
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32]))))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V7[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V7[u32] 0x00000001[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32]))))
 zf = (zerop[u1] (add[u32] V7[u32] 0x00000001[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V7[u32] 0x00000001[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32]))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V7[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V7[u32]))))
 fpstatus_top = 0x0[u3]
memory:
 addr=0x080495eb<134518251>[u32] read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V7[u32])
 addr=0x080495ea<134518250>[u32] read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V7[u32])
 addr=0x080495e9<134518249>[u32] read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V7[u32])
 addr=0x080495e8<134518248>[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffb<4294967291,-5>[u32]) value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffa<4294967290,-6>[u32]) value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff9<4294967289,-7>[u32]) value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]) value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x08048596: lea esi, [esi + 0x00]
Symbolic: startInstruction(0x08048596: lea esi, [esi + 0x00])
Symbolic insn@0x08048596[0]: number_(32, 134514070) = 0x08048596<134514070>[u32]
Symbolic insn@0x08048596[0]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x08048596[0]: add(0x08048596<134514070>[u32], 0x00000003[u32]) = 0x08048599<134514073>[u32]
Symbolic insn@0x08048596[0]: writeRegister(eip, 0x08048599<134514073>[u32])
Symbolic insn@0x08048596[0]: undefined_(32) = V1[u32]
Symbolic insn@0x08048596[0]: readRegister(esi, V1[u32]) = esi_0[u32]
Symbolic insn@0x08048596[0]: number_(8, 0) = 0x00[u8]
Symbolic insn@0x08048596[0]: signExtend(0x00[u8], 32) = 0x00000000[u32]
Symbolic insn@0x08048596[0]: add(esi_0[u32], 0x00000000[u32]) = esi_0[u32]
Symbolic insn@0x08048596[0]: unsignedExtend(esi_0[u32], 32) = esi_0[u32]
Symbolic insn@0x08048596[0]: writeRegister(esi, esi_0[u32])
Symbolic insn@0x08048596[0]: finishInstruction(lea esi, [esi + 0x00])
registers:
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x08048599<134514073>[u32]
 fpstatus_top = 0x0[u3]
memory:

0x08048599: lea edi, [edi + 0x00000000]
Symbolic: startInstruction(0x08048599: lea edi, [edi + 0x00000000])
Symbolic insn@0x08048599[1]: number_(32, 134514073) = 0x08048599<134514073>[u32]
Symbolic insn@0x08048599[1]: number_(32, 7) = 0x00000007[u32]
Symbolic insn@0x08048599[1]: add(0x08048599<134514073>[u32], 0x00000007[u32]) = 0x080485a0<134514080>[u32]
Symbolic insn@0x08048599[1]: writeRegister(eip, 0x080485a0<134514080>[u32])
Symbolic insn@0x08048599[1]: undefined_(32) = V2[u32]
Symbolic insn@0x08048599[1]: readRegister(edi, V2[u32]) = edi_0[u32]
Symbolic insn@0x08048599[1]: number_(32, 0) = 0x00000000[u32]
Symbolic insn@0x08048599[1]: add(edi_0[u32], 0x00000000[u32]) = edi_0[u32]
Symbolic insn@0x08048599[1]: unsignedExtend(edi_0[u32], 32) = edi_0[u32]
Symbolic insn@0x08048599[1]: writeRegister(edi, edi_0[u32])
Symbolic insn@0x08048599[1]: finishInstruction(lea edi, [edi + 0x00000000])
registers:
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080485a0<134514080>[u32]
 fpstatus_top = 0x0[u3]
memory:

0x080485a0: sub ebx, 0x04
Symbolic: startInstruction(0x080485a0: sub ebx, 0x04)
Symbolic insn@0x080485a0[2]: number_(32, 134514080) = 0x080485a0<134514080>[u32]
Symbolic insn@0x080485a0[2]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x080485a0[2]: add(0x080485a0<134514080>[u32], 0x00000003[u32]) = 0x080485a3<134514083>[u32]
Symbolic insn@0x080485a0[2]: writeRegister(eip, 0x080485a3<134514083>[u32])
Symbolic insn@0x080485a0[2]: undefined_(32) = V3[u32]
Symbolic insn@0x080485a0[2]: readRegister(ebx, V3[u32]) = ebx_0[u32]
Symbolic insn@0x080485a0[2]: number_(8, 4) = 0x04[u8]
Symbolic insn@0x080485a0[2]: signExtend(0x04[u8], 32) = 0x00000004[u32]
Symbolic insn@0x080485a0[2]: boolean_(0) = false[u1]
Symbolic insn@0x080485a0[2]: invert(0x00000004[u32]) = 0xfffffffb<4294967291,-5>[u32]
Symbolic insn@0x080485a0[2]: invert(false[u1]) = true[u1]
Symbolic insn@0x080485a0[2]: addWithCarries(ebx_0[u32], 0xfffffffb<4294967291,-5>[u32], true[u1]) = (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x080485a0[2]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33]))
Symbolic insn@0x080485a0[2]: extract((add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x080485a0[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x080485a0[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x080485a0[2]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])))
Symbolic insn@0x080485a0[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x080485a0[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x080485a0[2]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])))
Symbolic insn@0x080485a0[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x080485a0[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x080485a0[2]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])))
Symbolic insn@0x080485a0[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x080485a0[2]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x080485a0[2]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])))
Symbolic insn@0x080485a0[2]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])))
Symbolic insn@0x080485a0[2]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])))
Symbolic insn@0x080485a0[2]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])))
Symbolic insn@0x080485a0[2]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]))))
Symbolic insn@0x080485a0[2]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])))))
Symbolic insn@0x080485a0[2]: extract((add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x080485a0[2]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])))
Symbolic insn@0x080485a0[2]: equalToZero((add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) = (zerop[u1] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x080485a0[2]: writeRegister(zf, (zerop[u1] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])))
Symbolic insn@0x080485a0[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33])), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33]))
Symbolic insn@0x080485a0[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33])), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33]))
Symbolic insn@0x080485a0[2]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33])), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33]))
Symbolic insn@0x080485a0[2]: invert((extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33]))) = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33])))
Symbolic insn@0x080485a0[2]: writeRegister(af, (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33]))))
Symbolic insn@0x080485a0[2]: invert((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33]))) = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33])))
Symbolic insn@0x080485a0[2]: writeRegister(cf, (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33]))))
Symbolic insn@0x080485a0[2]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33])), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33]))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33])))
Symbolic insn@0x080485a0[2]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33]))))
Symbolic insn@0x080485a0[2]: writeRegister(ebx, (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x080485a0[2]: finishInstruction(sub ebx, 0x04)
registers:
 ebx read-before-write = (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080485a3<134514083>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33])))
 zf write-only = (zerop[u1] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33])))
 fpstatus_top = 0x0[u3]
memory:

0x080485a3: call eax
Symbolic: startInstruction(0x080485a3: call eax)
Symbolic insn@0x080485a3[3]: number_(32, 134514083) = 0x080485a3<134514083>[u32]
Symbolic insn@0x080485a3[3]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x080485a3[3]: add(0x080485a3<134514083>[u32], 0x00000002[u32]) = 0x080485a5<134514085>[u32]
Symbolic insn@0x080485a3[3]: writeRegister(eip, 0x080485a5<134514085>[u32])
Symbolic insn@0x080485a3[3]: undefined_(32) = V4[u32]
Symbolic insn@0x080485a3[3]: readRegister(eax, V4[u32]) = eax_0[u32]
Symbolic insn@0x080485a3[3]: unsignedExtend(eax_0[u32], 32) = eax_0[u32]
Symbolic insn@0x080485a3[3]: undefined_(32) = V5[u32]
Symbolic insn@0x080485a3[3]: readRegister(esp, V5[u32]) = esp_0[u32]
Symbolic insn@0x080485a3[3]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x080485a3[3]: add(esp_0[u32], 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x080485a3[3]: boolean_(1) = true[u1]
Symbolic insn@0x080485a3[3]: undefined_(32) = V6[u32]
Symbolic insn@0x080485a3[3]: readRegister(eip, V6[u32]) = 0x080485a5<134514085>[u32]
Symbolic insn@0x080485a3[3]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), 0x080485a5<134514085>[u32], true[u1])
Symbolic insn@0x080485a3[3]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x080485a3[3]: filterCallTarget(eax_0[u32]) = eax_0[u32]
Symbolic insn@0x080485a3[3]: writeRegister(eip, eax_0[u32])
Symbolic insn@0x080485a3[3]: finishInstruction(call eax)
registers:
 ebx read-before-write = (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip = eax_0[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33])))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33])))
 zf write-only = (zerop[u1] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] ebx_0[u32] 0xfffffffc<4294967292,-4>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffc<4294967292>[u33]) (uextend[u33] 0x00000021[u32] ebx_0[u32]) 0x0fffffffb<4294967291>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=0x85<-123>[u8]
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=0xa5<-91>[u8]
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x080485a5: mov eax, dword ds:[ebx]
Symbolic: startInstruction(0x080485a5: mov eax, dword ds:[ebx])
Symbolic insn@0x080485a5[0]: number_(32, 134514085) = 0x080485a5<134514085>[u32]
Symbolic insn@0x080485a5[0]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x080485a5[0]: add(0x080485a5<134514085>[u32], 0x00000002[u32]) = 0x080485a7<134514087>[u32]
Symbolic insn@0x080485a5[0]: writeRegister(eip, 0x080485a7<134514087>[u32])
Symbolic insn@0x080485a5[0]: undefined_(32) = V1[u32]
Symbolic insn@0x080485a5[0]: readRegister(ebx, V1[u32]) = ebx_0[u32]
Symbolic insn@0x080485a5[0]: undefined_(32) = V2[u32]
Symbolic insn@0x080485a5[0]: boolean_(1) = true[u1]
Symbolic insn@0x080485a5[0]: readMemory(ds, ebx_0[u32], V2[u32], true[u1]) = V2[u32]
Symbolic insn@0x080485a5[0]: writeRegister(eax, V2[u32])
Symbolic insn@0x080485a5[0]: finishInstruction(mov eax, dword ds:[ebx])
registers:
 eax write-only = V2[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = 0x080485a7<134514087>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebx_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] ebx_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] ebx_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=ebx_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x080485a7: cmp eax, 0xff<-1>
Symbolic: startInstruction(0x080485a7: cmp eax, 0xff<-1>)
Symbolic insn@0x080485a7[1]: number_(32, 134514087) = 0x080485a7<134514087>[u32]
Symbolic insn@0x080485a7[1]: number_(32, 3) = 0x00000003[u32]
Symbolic insn@0x080485a7[1]: add(0x080485a7<134514087>[u32], 0x00000003[u32]) = 0x080485aa<134514090>[u32]
Symbolic insn@0x080485a7[1]: writeRegister(eip, 0x080485aa<134514090>[u32])
Symbolic insn@0x080485a7[1]: undefined_(32) = V3[u32]
Symbolic insn@0x080485a7[1]: readRegister(eax, V3[u32]) = V2[u32]
Symbolic insn@0x080485a7[1]: number_(8, 18446744073709551615) = 0xff<-1>[u8]
Symbolic insn@0x080485a7[1]: signExtend(0xff<-1>[u8], 32) = 0xffffffff<4294967295,-1>[u32]
Symbolic insn@0x080485a7[1]: boolean_(0) = false[u1]
Symbolic insn@0x080485a7[1]: invert(0xffffffff<4294967295,-1>[u32]) = 0x00000000[u32]
Symbolic insn@0x080485a7[1]: invert(false[u1]) = true[u1]
Symbolic insn@0x080485a7[1]: addWithCarries(V2[u32], 0x00000000[u32], true[u1]) = (add[u32] V2[u32] 0x00000001[u32])
Symbolic insn@0x080485a7[1]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32])))
Symbolic insn@0x080485a7[1]: extract((add[u32] V2[u32] 0x00000001[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x00000001[u32]))
Symbolic insn@0x080485a7[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x00000001[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x00000001[u32]))
Symbolic insn@0x080485a7[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x00000001[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x00000001[u32]))
Symbolic insn@0x080485a7[1]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x00000001[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x00000001[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x00000001[u32])))
Symbolic insn@0x080485a7[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x00000001[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x00000001[u32]))
Symbolic insn@0x080485a7[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x00000001[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x00000001[u32]))
Symbolic insn@0x080485a7[1]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x00000001[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x00000001[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x00000001[u32])))
Symbolic insn@0x080485a7[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x00000001[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x00000001[u32]))
Symbolic insn@0x080485a7[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x00000001[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x00000001[u32]))
Symbolic insn@0x080485a7[1]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x00000001[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x00000001[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x00000001[u32])))
Symbolic insn@0x080485a7[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x00000001[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x00000001[u32]))
Symbolic insn@0x080485a7[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x00000001[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x00000001[u32]))
Symbolic insn@0x080485a7[1]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x00000001[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x00000001[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x00000001[u32])))
Symbolic insn@0x080485a7[1]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x00000001[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x00000001[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x00000001[u32])))
Symbolic insn@0x080485a7[1]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x00000001[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x00000001[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x00000001[u32])))
Symbolic insn@0x080485a7[1]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x00000001[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x00000001[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x00000001[u32])))
Symbolic insn@0x080485a7[1]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x00000001[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x00000001[u32]))))
Symbolic insn@0x080485a7[1]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x00000001[u32])))))
Symbolic insn@0x080485a7[1]: extract((add[u32] V2[u32] 0x00000001[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V2[u32] 0x00000001[u32]))
Symbolic insn@0x080485a7[1]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V2[u32] 0x00000001[u32])))
Symbolic insn@0x080485a7[1]: equalToZero((add[u32] V2[u32] 0x00000001[u32])) = (zerop[u1] (add[u32] V2[u32] 0x00000001[u32]))
Symbolic insn@0x080485a7[1]: writeRegister(zf, (zerop[u1] (add[u32] V2[u32] 0x00000001[u32])))
Symbolic insn@0x080485a7[1]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32]))), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32])))
Symbolic insn@0x080485a7[1]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32]))), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32])))
Symbolic insn@0x080485a7[1]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32]))), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32])))
Symbolic insn@0x080485a7[1]: invert((extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32])))) = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32]))))
Symbolic insn@0x080485a7[1]: writeRegister(af, (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32])))))
Symbolic insn@0x080485a7[1]: invert((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32])))) = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32]))))
Symbolic insn@0x080485a7[1]: writeRegister(cf, (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32])))))
Symbolic insn@0x080485a7[1]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32]))), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32])))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32]))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32]))))
Symbolic insn@0x080485a7[1]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32]))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32])))))
Symbolic insn@0x080485a7[1]: finishInstruction(cmp eax, 0xff<-1>)
registers:
 eax = V2[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip write-only = 0x080485aa<134514090>[u32]
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32]))))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x00000001[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32]))))
 zf write-only = (zerop[u1] (add[u32] V2[u32] 0x00000001[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V2[u32] 0x00000001[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32]))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32]))))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebx_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] ebx_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] ebx_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=ebx_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x080485aa: jne 0x080485a0<<BBlock>>
Symbolic: startInstruction(0x080485aa: jne 0x080485a0<<BBlock>>)
Symbolic insn@0x080485aa[2]: number_(32, 134514090) = 0x080485aa<134514090>[u32]
Symbolic insn@0x080485aa[2]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x080485aa[2]: add(0x080485aa<134514090>[u32], 0x00000002[u32]) = 0x080485ac<134514092>[u32]
Symbolic insn@0x080485aa[2]: writeRegister(eip, 0x080485ac<134514092>[u32])
Symbolic insn@0x080485aa[2]: undefined_(1) = V4[u1]
Symbolic insn@0x080485aa[2]: readRegister(zf, V4[u1]) = (zerop[u1] (add[u32] V2[u32] 0x00000001[u32]))
Symbolic insn@0x080485aa[2]: invert((zerop[u1] (add[u32] V2[u32] 0x00000001[u32]))) = (invert[u1] (zerop[u1] (add[u32] V2[u32] 0x00000001[u32])))
Symbolic insn@0x080485aa[2]: undefined_(32) = V5[u32]
Symbolic insn@0x080485aa[2]: readRegister(eip, V5[u32]) = 0x080485ac<134514092>[u32]
Symbolic insn@0x080485aa[2]: number_(32, 134514080) = 0x080485a0<134514080>[u32]
Symbolic insn@0x080485aa[2]: unsignedExtend(0x080485a0<134514080>[u32], 32) = 0x080485a0<134514080>[u32]
Symbolic insn@0x080485aa[2]: ite((invert[u1] (zerop[u1] (add[u32] V2[u32] 0x00000001[u32]))), 0x080485a0<134514080>[u32], 0x080485ac<134514092>[u32]) = (ite[u32] (zerop[u1] (add[u32] V2[u32] 0x00000001[u32])) 0x080485ac<134514092>[u32] 0x080485a0<134514080>[u32])
Symbolic insn@0x080485aa[2]: writeRegister(eip, (ite[u32] (zerop[u1] (add[u32] V2[u32] 0x00000001[u32])) 0x080485ac<134514092>[u32] 0x080485a0<134514080>[u32]))
Symbolic insn@0x080485aa[2]: finishInstruction(jne 0x080485a0<<BBlock>>)
registers:
 eax = V2[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss = 0x0000[u16]
 ds read-before-write = 0x0000[u16]
 eip = (ite[u32] (zerop[u1] (add[u32] V2[u32] 0x00000001[u32])) 0x080485ac<134514092>[u32] 0x080485a0<134514080>[u32])
 cf write-only = (invert[u1] (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32]))))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x00000001[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x00000001[u32]))))
 af write-only = (invert[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32]))))
 zf = (zerop[u1] (add[u32] V2[u32] 0x00000001[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V2[u32] 0x00000001[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32]))) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x000000001[u33]) (uextend[u33] 0x00000021[u32] V2[u32]))))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebx_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] ebx_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] ebx_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=ebx_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x080485ac: pop eax
Symbolic: startInstruction(0x080485ac: pop eax)
Symbolic insn@0x080485ac[0]: number_(32, 134514092) = 0x080485ac<134514092>[u32]
Symbolic insn@0x080485ac[0]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080485ac[0]: add(0x080485ac<134514092>[u32], 0x00000001[u32]) = 0x080485ad<134514093>[u32]
Symbolic insn@0x080485ac[0]: writeRegister(eip, 0x080485ad<134514093>[u32])
Symbolic insn@0x080485ac[0]: undefined_(32) = V1[u32]
Symbolic insn@0x080485ac[0]: readRegister(esp, V1[u32]) = esp_0[u32]
Symbolic insn@0x080485ac[0]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x080485ac[0]: add(esp_0[u32], 0x00000004[u32]) = (add[u32] esp_0[u32] 0x00000004[u32])
Symbolic insn@0x080485ac[0]: writeRegister(esp, (add[u32] esp_0[u32] 0x00000004[u32]))
Symbolic insn@0x080485ac[0]: boolean_(1) = true[u1]
Symbolic insn@0x080485ac[0]: undefined_(32) = V2[u32]
Symbolic insn@0x080485ac[0]: readMemory(ss, esp_0[u32], V2[u32], true[u1]) = V2[u32]
Symbolic insn@0x080485ac[0]: writeRegister(eax, V2[u32])
Symbolic insn@0x080485ac[0]: finishInstruction(pop eax)
registers:
 eax write-only = V2[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x00000004[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080485ad<134514093>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x080485ad: pop ebx
Symbolic: startInstruction(0x080485ad: pop ebx)
Symbolic insn@0x080485ad[1]: number_(32, 134514093) = 0x080485ad<134514093>[u32]
Symbolic insn@0x080485ad[1]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080485ad[1]: add(0x080485ad<134514093>[u32], 0x00000001[u32]) = 0x080485ae<134514094>[u32]
Symbolic insn@0x080485ad[1]: writeRegister(eip, 0x080485ae<134514094>[u32])
Symbolic insn@0x080485ad[1]: undefined_(32) = V3[u32]
Symbolic insn@0x080485ad[1]: readRegister(esp, V3[u32]) = (add[u32] esp_0[u32] 0x00000004[u32])
Symbolic insn@0x080485ad[1]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x080485ad[1]: add((add[u32] esp_0[u32] 0x00000004[u32]), 0x00000004[u32]) = (add[u32] esp_0[u32] 0x00000008[u32])
Symbolic insn@0x080485ad[1]: writeRegister(esp, (add[u32] esp_0[u32] 0x00000008[u32]))
Symbolic insn@0x080485ad[1]: boolean_(1) = true[u1]
Symbolic insn@0x080485ad[1]: undefined_(32) = V4[u32]
Symbolic insn@0x080485ad[1]: readMemory(ss, (add[u32] esp_0[u32] 0x00000004[u32]), V4[u32], true[u1]) = V4[u32]
Symbolic insn@0x080485ad[1]: writeRegister(ebx, V4[u32])
Symbolic insn@0x080485ad[1]: finishInstruction(pop ebx)
registers:
 eax write-only = V2[u32]
 ebx write-only = V4[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x00000008[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080485ae<134514094>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000007[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000006[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000005[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000004[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x080485ae: pop ebp
Symbolic: startInstruction(0x080485ae: pop ebp)
Symbolic insn@0x080485ae[2]: number_(32, 134514094) = 0x080485ae<134514094>[u32]
Symbolic insn@0x080485ae[2]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080485ae[2]: add(0x080485ae<134514094>[u32], 0x00000001[u32]) = 0x080485af<134514095>[u32]
Symbolic insn@0x080485ae[2]: writeRegister(eip, 0x080485af<134514095>[u32])
Symbolic insn@0x080485ae[2]: undefined_(32) = V5[u32]
Symbolic insn@0x080485ae[2]: readRegister(esp, V5[u32]) = (add[u32] esp_0[u32] 0x00000008[u32])
Symbolic insn@0x080485ae[2]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x080485ae[2]: add((add[u32] esp_0[u32] 0x00000008[u32]), 0x00000004[u32]) = (add[u32] esp_0[u32] 0x0000000c[u32])
Symbolic insn@0x080485ae[2]: writeRegister(esp, (add[u32] esp_0[u32] 0x0000000c[u32]))
Symbolic insn@0x080485ae[2]: boolean_(1) = true[u1]
Symbolic insn@0x080485ae[2]: undefined_(32) = V6[u32]
Symbolic insn@0x080485ae[2]: readMemory(ss, (add[u32] esp_0[u32] 0x00000008[u32]), V6[u32], true[u1]) = V6[u32]
Symbolic insn@0x080485ae[2]: writeRegister(ebp, V6[u32])
Symbolic insn@0x080485ae[2]: finishInstruction(pop ebp)
registers:
 eax write-only = V2[u32]
 ebx write-only = V4[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x0000000c[u32])
 ebp write-only = V6[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080485af<134514095>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x0000000b[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V6[u32])
 addr=(add[u32] esp_0[u32] 0x0000000a[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V6[u32])
 addr=(add[u32] esp_0[u32] 0x00000009[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V6[u32])
 addr=(add[u32] esp_0[u32] 0x00000008[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V6[u32])
 addr=(add[u32] esp_0[u32] 0x00000007[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000006[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000005[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000004[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x080485af: ret 
Symbolic: startInstruction(0x080485af: ret)
Symbolic insn@0x080485af[3]: number_(32, 134514095) = 0x080485af<134514095>[u32]
Symbolic insn@0x080485af[3]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080485af[3]: add(0x080485af<134514095>[u32], 0x00000001[u32]) = 0x080485b0<134514096>[u32]
Symbolic insn@0x080485af[3]: writeRegister(eip, 0x080485b0<134514096>[u32])
Symbolic insn@0x080485af[3]: undefined_(32) = V7[u32]
Symbolic insn@0x080485af[3]: readRegister(esp, V7[u32]) = (add[u32] esp_0[u32] 0x0000000c[u32])
Symbolic insn@0x080485af[3]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x080485af[3]: add((add[u32] esp_0[u32] 0x0000000c[u32]), 0x00000004[u32]) = (add[u32] esp_0[u32] 0x00000010[u32])
Symbolic insn@0x080485af[3]: boolean_(1) = true[u1]
Symbolic insn@0x080485af[3]: undefined_(32) = V8[u32]
Symbolic insn@0x080485af[3]: readMemory(ss, (add[u32] esp_0[u32] 0x0000000c[u32]), V8[u32], true[u1]) = V8[u32]
Symbolic insn@0x080485af[3]: filterReturnTarget(V8[u32]) = V8[u32]
Symbolic insn@0x080485af[3]: writeRegister(eip, V8[u32])
Symbolic insn@0x080485af[3]: writeRegister(esp, (add[u32] esp_0[u32] 0x00000010[u32]))
Symbolic insn@0x080485af[3]: finishInstruction(ret)
registers:
 eax write-only = V2[u32]
 ebx write-only = V4[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x00000010[u32])
 ebp write-only = V6[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = V8[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x0000000f[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V8[u32])
 addr=(add[u32] esp_0[u32] 0x0000000e[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V8[u32])
 addr=(add[u32] esp_0[u32] 0x0000000d[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V8[u32])
 addr=(add[u32] esp_0[u32] 0x0000000c[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V8[u32])
 addr=(add[u32] esp_0[u32] 0x0000000b[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V6[u32])
 addr=(add[u32] esp_0[u32] 0x0000000a[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V6[u32])
 addr=(add[u32] esp_0[u32] 0x00000009[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V6[u32])
 addr=(add[u32] esp_0[u32] 0x00000008[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V6[u32])
 addr=(add[u32] esp_0[u32] 0x00000007[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000006[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000005[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000004[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x080485b0: push ebp
Symbolic: startInstruction(0x080485b0: push ebp)
Symbolic insn@0x080485b0[0]: number_(32, 134514096) = 0x080485b0<134514096>[u32]
Symbolic insn@0x080485b0[0]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080485b0[0]: add(0x080485b0<134514096>[u32], 0x00000001[u32]) = 0x080485b1<134514097>[u32]
Symbolic insn@0x080485b0[0]: writeRegister(eip, 0x080485b1<134514097>[u32])
Symbolic insn@0x080485b0[0]: undefined_(32) = V1[u32]
Symbolic insn@0x080485b0[0]: readRegister(ebp, V1[u32]) = ebp_0[u32]
Symbolic insn@0x080485b0[0]: undefined_(32) = V2[u32]
Symbolic insn@0x080485b0[0]: readRegister(esp, V2[u32]) = esp_0[u32]
Symbolic insn@0x080485b0[0]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x080485b0[0]: add(esp_0[u32], 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x080485b0[0]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x080485b0[0]: boolean_(1) = true[u1]
Symbolic insn@0x080485b0[0]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), ebp_0[u32], true[u1])
Symbolic insn@0x080485b0[0]: finishInstruction(push ebp)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080485b1<134514097>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x080485b1: mov ebp, esp
Symbolic: startInstruction(0x080485b1: mov ebp, esp)
Symbolic insn@0x080485b1[1]: number_(32, 134514097) = 0x080485b1<134514097>[u32]
Symbolic insn@0x080485b1[1]: number_(32, 2) = 0x00000002[u32]
Symbolic insn@0x080485b1[1]: add(0x080485b1<134514097>[u32], 0x00000002[u32]) = 0x080485b3<134514099>[u32]
Symbolic insn@0x080485b1[1]: writeRegister(eip, 0x080485b3<134514099>[u32])
Symbolic insn@0x080485b1[1]: undefined_(32) = V3[u32]
Symbolic insn@0x080485b1[1]: readRegister(esp, V3[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x080485b1[1]: writeRegister(ebp, (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]))
Symbolic insn@0x080485b1[1]: finishInstruction(mov ebp, esp)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080485b3<134514099>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x080485b3: push ebx
Symbolic: startInstruction(0x080485b3: push ebx)
Symbolic insn@0x080485b3[2]: number_(32, 134514099) = 0x080485b3<134514099>[u32]
Symbolic insn@0x080485b3[2]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080485b3[2]: add(0x080485b3<134514099>[u32], 0x00000001[u32]) = 0x080485b4<134514100>[u32]
Symbolic insn@0x080485b3[2]: writeRegister(eip, 0x080485b4<134514100>[u32])
Symbolic insn@0x080485b3[2]: undefined_(32) = V4[u32]
Symbolic insn@0x080485b3[2]: readRegister(ebx, V4[u32]) = ebx_0[u32]
Symbolic insn@0x080485b3[2]: undefined_(32) = V5[u32]
Symbolic insn@0x080485b3[2]: readRegister(esp, V5[u32]) = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
Symbolic insn@0x080485b3[2]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x080485b3[2]: add((add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])
Symbolic insn@0x080485b3[2]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]))
Symbolic insn@0x080485b3[2]: boolean_(1) = true[u1]
Symbolic insn@0x080485b3[2]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]), ebx_0[u32], true[u1])
Symbolic insn@0x080485b3[2]: finishInstruction(push ebx)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080485b4<134514100>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x080485b4: push eax
Symbolic: startInstruction(0x080485b4: push eax)
Symbolic insn@0x080485b4[3]: number_(32, 134514100) = 0x080485b4<134514100>[u32]
Symbolic insn@0x080485b4[3]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080485b4[3]: add(0x080485b4<134514100>[u32], 0x00000001[u32]) = 0x080485b5<134514101>[u32]
Symbolic insn@0x080485b4[3]: writeRegister(eip, 0x080485b5<134514101>[u32])
Symbolic insn@0x080485b4[3]: undefined_(32) = V6[u32]
Symbolic insn@0x080485b4[3]: readRegister(eax, V6[u32]) = eax_0[u32]
Symbolic insn@0x080485b4[3]: undefined_(32) = V7[u32]
Symbolic insn@0x080485b4[3]: readRegister(esp, V7[u32]) = (add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32])
Symbolic insn@0x080485b4[3]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x080485b4[3]: add((add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
Symbolic insn@0x080485b4[3]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]))
Symbolic insn@0x080485b4[3]: boolean_(1) = true[u1]
Symbolic insn@0x080485b4[3]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), eax_0[u32], true[u1])
Symbolic insn@0x080485b4[3]: finishInstruction(push eax)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080485b5<134514101>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xfffffff7<4294967287,-9>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] eax_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff6<4294967286,-10>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] eax_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff5<4294967285,-11>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] eax_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] eax_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])

0x080485b5: call 0x080485ba<<Insn>>
Symbolic: startInstruction(0x080485b5: call 0x080485ba<<Insn>>)
Symbolic insn@0x080485b5[4]: number_(32, 134514101) = 0x080485b5<134514101>[u32]
Symbolic insn@0x080485b5[4]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x080485b5[4]: add(0x080485b5<134514101>[u32], 0x00000005[u32]) = 0x080485ba<134514106>[u32]
Symbolic insn@0x080485b5[4]: writeRegister(eip, 0x080485ba<134514106>[u32])
Symbolic insn@0x080485b5[4]: number_(32, 134514106) = 0x080485ba<134514106>[u32]
Symbolic insn@0x080485b5[4]: unsignedExtend(0x080485ba<134514106>[u32], 32) = 0x080485ba<134514106>[u32]
Symbolic insn@0x080485b5[4]: undefined_(32) = V8[u32]
Symbolic insn@0x080485b5[4]: readRegister(esp, V8[u32]) = (add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32])
Symbolic insn@0x080485b5[4]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x080485b5[4]: add((add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]), 0xfffffffc<4294967292,-4>[u32]) = (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])
Symbolic insn@0x080485b5[4]: boolean_(1) = true[u1]
Symbolic insn@0x080485b5[4]: undefined_(32) = V9[u32]
Symbolic insn@0x080485b5[4]: readRegister(eip, V9[u32]) = 0x080485ba<134514106>[u32]
Symbolic insn@0x080485b5[4]: writeMemory(ss, (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]), 0x080485ba<134514106>[u32], true[u1])
Symbolic insn@0x080485b5[4]: writeRegister(esp, (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]))
Symbolic insn@0x080485b5[4]: filterCallTarget(0x080485ba<134514106>[u32]) = 0x080485ba<134514106>[u32]
Symbolic insn@0x080485b5[4]: writeRegister(eip, 0x080485ba<134514106>[u32])
Symbolic insn@0x080485b5[4]: finishInstruction(call 0x080485ba<<Insn>>)
registers:
 esp read-before-write = (add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32])
 ebp read-before-write = (add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip = 0x080485ba<134514106>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0xfffffff3<4294967283,-13>[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff2<4294967282,-14>[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff1<4294967281,-15>[u32]) write-only value=0x85<-123>[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff0<4294967280,-16>[u32]) write-only value=0xba<-70>[u8]
 addr=(add[u32] esp_0[u32] 0xfffffff7<4294967287,-9>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] eax_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff6<4294967286,-10>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] eax_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff5<4294967285,-11>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] eax_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff4<4294967284,-12>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] eax_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffb<4294967291,-5>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffa<4294967290,-6>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff9<4294967289,-7>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffff8<4294967288,-8>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebx_0[u32])
 addr=(add[u32] esp_0[u32] 0xffffffff<4294967295,-1>[u32]) write-only value=(extract[u8] 0x00000018[u32] 0x00000020[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffe<4294967294,-2>[u32]) write-only value=(extract[u8] 0x00000010[u32] 0x00000018[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffd<4294967293,-3>[u32]) write-only value=(extract[u8] 0x00000008[u32] 0x00000010[u32] ebp_0[u32])
 addr=(add[u32] esp_0[u32] 0xfffffffc<4294967292,-4>[u32]) write-only value=(extract[u8] 0x00000000[u32] 0x00000008[u32] ebp_0[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x080485ba: pop ebx
Symbolic: startInstruction(0x080485ba: pop ebx)
Symbolic insn@0x080485ba[0]: number_(32, 134514106) = 0x080485ba<134514106>[u32]
Symbolic insn@0x080485ba[0]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080485ba[0]: add(0x080485ba<134514106>[u32], 0x00000001[u32]) = 0x080485bb<134514107>[u32]
Symbolic insn@0x080485ba[0]: writeRegister(eip, 0x080485bb<134514107>[u32])
Symbolic insn@0x080485ba[0]: undefined_(32) = V1[u32]
Symbolic insn@0x080485ba[0]: readRegister(esp, V1[u32]) = esp_0[u32]
Symbolic insn@0x080485ba[0]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x080485ba[0]: add(esp_0[u32], 0x00000004[u32]) = (add[u32] esp_0[u32] 0x00000004[u32])
Symbolic insn@0x080485ba[0]: writeRegister(esp, (add[u32] esp_0[u32] 0x00000004[u32]))
Symbolic insn@0x080485ba[0]: boolean_(1) = true[u1]
Symbolic insn@0x080485ba[0]: undefined_(32) = V2[u32]
Symbolic insn@0x080485ba[0]: readMemory(ss, esp_0[u32], V2[u32], true[u1]) = V2[u32]
Symbolic insn@0x080485ba[0]: writeRegister(ebx, V2[u32])
Symbolic insn@0x080485ba[0]: finishInstruction(pop ebx)
registers:
 ebx write-only = V2[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x00000004[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080485bb<134514107>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x080485bb: add ebx, 0x0000110e<4366>
Symbolic: startInstruction(0x080485bb: add ebx, 0x0000110e<4366>)
Symbolic insn@0x080485bb[1]: number_(32, 134514107) = 0x080485bb<134514107>[u32]
Symbolic insn@0x080485bb[1]: number_(32, 6) = 0x00000006[u32]
Symbolic insn@0x080485bb[1]: add(0x080485bb<134514107>[u32], 0x00000006[u32]) = 0x080485c1<134514113>[u32]
Symbolic insn@0x080485bb[1]: writeRegister(eip, 0x080485c1<134514113>[u32])
Symbolic insn@0x080485bb[1]: boolean_(0) = false[u1]
Symbolic insn@0x080485bb[1]: number_(32, 4366) = 0x0000110e<4366>[u32]
Symbolic insn@0x080485bb[1]: undefined_(32) = V3[u32]
Symbolic insn@0x080485bb[1]: readRegister(ebx, V3[u32]) = V2[u32]
Symbolic insn@0x080485bb[1]: addWithCarries(V2[u32], 0x0000110e<4366>[u32], false[u1]) = (add[u32] V2[u32] 0x0000110e<4366>[u32])
Symbolic insn@0x080485bb[1]: also returns: (extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]))
Symbolic insn@0x080485bb[1]: extract((add[u32] V2[u32] 0x0000110e<4366>[u32]), 0, 8) = (extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32]))
Symbolic insn@0x080485bb[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])), 1, 2) = (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32]))
Symbolic insn@0x080485bb[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])), 0, 1) = (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32]))
Symbolic insn@0x080485bb[1]: xor_((extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])), (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32]))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])))
Symbolic insn@0x080485bb[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])), 3, 4) = (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32]))
Symbolic insn@0x080485bb[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])), 2, 3) = (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32]))
Symbolic insn@0x080485bb[1]: xor_((extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])), (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32]))) = (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])))
Symbolic insn@0x080485bb[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])), 5, 6) = (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32]))
Symbolic insn@0x080485bb[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])), 4, 5) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32]))
Symbolic insn@0x080485bb[1]: xor_((extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])), (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32]))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])))
Symbolic insn@0x080485bb[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])), 7, 8) = (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32]))
Symbolic insn@0x080485bb[1]: extract((extract[u8] 0x00000000[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])), 6, 7) = (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32]))
Symbolic insn@0x080485bb[1]: xor_((extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])), (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32]))) = (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])))
Symbolic insn@0x080485bb[1]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32]))), (xor[u1] (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])))
Symbolic insn@0x080485bb[1]: xor_((xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32]))), (xor[u1] (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])))) = (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])))
Symbolic insn@0x080485bb[1]: xor_((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32]))), (xor[u1] (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])))) = (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])))
Symbolic insn@0x080485bb[1]: invert((xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])))) = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32]))))
Symbolic insn@0x080485bb[1]: writeRegister(pf, (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])))))
Symbolic insn@0x080485bb[1]: extract((add[u32] V2[u32] 0x0000110e<4366>[u32]), 31, 32) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32]))
Symbolic insn@0x080485bb[1]: writeRegister(sf, (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])))
Symbolic insn@0x080485bb[1]: equalToZero((add[u32] V2[u32] 0x0000110e<4366>[u32])) = (zerop[u1] (add[u32] V2[u32] 0x0000110e<4366>[u32]))
Symbolic insn@0x080485bb[1]: writeRegister(zf, (zerop[u1] (add[u32] V2[u32] 0x0000110e<4366>[u32])))
Symbolic insn@0x080485bb[1]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33])), 31, 32) = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]))
Symbolic insn@0x080485bb[1]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33])), 30, 31) = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]))
Symbolic insn@0x080485bb[1]: extract((extract[u32] 0x00000001[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33])), 3, 4) = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]))
Symbolic insn@0x080485bb[1]: writeRegister(af, (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33])))
Symbolic insn@0x080485bb[1]: writeRegister(cf, (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33])))
Symbolic insn@0x080485bb[1]: xor_((extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33])), (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]))) = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33])))
Symbolic insn@0x080485bb[1]: writeRegister(of, (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]))))
Symbolic insn@0x080485bb[1]: writeRegister(ebx, (add[u32] V2[u32] 0x0000110e<4366>[u32]))
Symbolic insn@0x080485bb[1]: finishInstruction(add ebx, 0x0000110e<4366>)
registers:
 ebx = (add[u32] V2[u32] 0x0000110e<4366>[u32])
 esp read-before-write = (add[u32] esp_0[u32] 0x00000004[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080485c1<134514113>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]))
 zf write-only = (zerop[u1] (add[u32] V2[u32] 0x0000110e<4366>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x080485c1: call 0x08048390<(func)__do_global_dtors_aux>
Symbolic: startInstruction(0x080485c1: call 0x08048390<(func)__do_global_dtors_aux>)
Symbolic insn@0x080485c1[2]: number_(32, 134514113) = 0x080485c1<134514113>[u32]
Symbolic insn@0x080485c1[2]: number_(32, 5) = 0x00000005[u32]
Symbolic insn@0x080485c1[2]: add(0x080485c1<134514113>[u32], 0x00000005[u32]) = 0x080485c6<134514118>[u32]
Symbolic insn@0x080485c1[2]: writeRegister(eip, 0x080485c6<134514118>[u32])
Symbolic insn@0x080485c1[2]: number_(32, 134513552) = 0x08048390<134513552>[u32]
Symbolic insn@0x080485c1[2]: unsignedExtend(0x08048390<134513552>[u32], 32) = 0x08048390<134513552>[u32]
Symbolic insn@0x080485c1[2]: undefined_(32) = V4[u32]
Symbolic insn@0x080485c1[2]: readRegister(esp, V4[u32]) = (add[u32] esp_0[u32] 0x00000004[u32])
Symbolic insn@0x080485c1[2]: number_(32, 18446744073709551612) = 0xfffffffc<4294967292,-4>[u32]
Symbolic insn@0x080485c1[2]: add((add[u32] esp_0[u32] 0x00000004[u32]), 0xfffffffc<4294967292,-4>[u32]) = esp_0[u32]
Symbolic insn@0x080485c1[2]: boolean_(1) = true[u1]
Symbolic insn@0x080485c1[2]: undefined_(32) = V5[u32]
Symbolic insn@0x080485c1[2]: readRegister(eip, V5[u32]) = 0x080485c6<134514118>[u32]
Symbolic insn@0x080485c1[2]: writeMemory(ss, esp_0[u32], 0x080485c6<134514118>[u32], true[u1])
Symbolic insn@0x080485c1[2]: writeRegister(esp, esp_0[u32])
Symbolic insn@0x080485c1[2]: filterCallTarget(0x08048390<134513552>[u32]) = 0x08048390<134513552>[u32]
Symbolic insn@0x080485c1[2]: writeRegister(eip, 0x08048390<134513552>[u32])
Symbolic insn@0x080485c1[2]: finishInstruction(call 0x08048390<(func)__do_global_dtors_aux>)
registers:
 ebx = (add[u32] V2[u32] 0x0000110e<4366>[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip = 0x08048390<134513552>[u32]
 cf write-only = (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]))
 pf write-only = (invert[u1] (xor[u1] (extract[u1] 0x00000000[u32] 0x00000001[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000001[u32] 0x00000002[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000002[u32] 0x00000003[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000003[u32] 0x00000004[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000004[u32] 0x00000005[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000005[u32] 0x00000006[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000006[u32] 0x00000007[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32])) (extract[u1] 0x00000007[u32] 0x00000008[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32]))))
 af write-only = (extract[u1] 0x00000004[u32] 0x00000005[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]))
 zf write-only = (zerop[u1] (add[u32] V2[u32] 0x0000110e<4366>[u32]))
 sf write-only = (extract[u1] 0x0000001f[u32] 0x00000020[u32] (add[u32] V2[u32] 0x0000110e<4366>[u32]))
 of write-only = (xor[u1] (extract[u1] 0x0000001f[u32] 0x00000020[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33])) (extract[u1] 0x00000020[u32] 0x00000021[u32] (xor[u33] (add[u33] (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33]) (uextend[u33] 0x00000021[u32] V2[u32]) 0x00000110e<4366>[u33])))
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) write-only value=0x08[u8]
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) write-only value=0x04[u8]
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) write-only value=0x85<-123>[u8]
 addr=esp_0[u32] write-only value=0xc6<-58>[u8]
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])
Symbolic: operators destroyed
=====================================================================================
=== Starting a new basic block ===
=====================================================================================
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]
Symbolic: number_(16, 0) = 0x0000[u16]

0x080485c6: pop eax
Symbolic: startInstruction(0x080485c6: pop eax)
Symbolic insn@0x080485c6[0]: number_(32, 134514118) = 0x080485c6<134514118>[u32]
Symbolic insn@0x080485c6[0]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080485c6[0]: add(0x080485c6<134514118>[u32], 0x00000001[u32]) = 0x080485c7<134514119>[u32]
Symbolic insn@0x080485c6[0]: writeRegister(eip, 0x080485c7<134514119>[u32])
Symbolic insn@0x080485c6[0]: undefined_(32) = V1[u32]
Symbolic insn@0x080485c6[0]: readRegister(esp, V1[u32]) = esp_0[u32]
Symbolic insn@0x080485c6[0]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x080485c6[0]: add(esp_0[u32], 0x00000004[u32]) = (add[u32] esp_0[u32] 0x00000004[u32])
Symbolic insn@0x080485c6[0]: writeRegister(esp, (add[u32] esp_0[u32] 0x00000004[u32]))
Symbolic insn@0x080485c6[0]: boolean_(1) = true[u1]
Symbolic insn@0x080485c6[0]: undefined_(32) = V2[u32]
Symbolic insn@0x080485c6[0]: readMemory(ss, esp_0[u32], V2[u32], true[u1]) = V2[u32]
Symbolic insn@0x080485c6[0]: writeRegister(eax, V2[u32])
Symbolic insn@0x080485c6[0]: finishInstruction(pop eax)
registers:
 eax write-only = V2[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x00000004[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080485c7<134514119>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x080485c7: pop ebx
Symbolic: startInstruction(0x080485c7: pop ebx)
Symbolic insn@0x080485c7[1]: number_(32, 134514119) = 0x080485c7<134514119>[u32]
Symbolic insn@0x080485c7[1]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080485c7[1]: add(0x080485c7<134514119>[u32], 0x00000001[u32]) = 0x080485c8<134514120>[u32]
Symbolic insn@0x080485c7[1]: writeRegister(eip, 0x080485c8<134514120>[u32])
Symbolic insn@0x080485c7[1]: undefined_(32) = V3[u32]
Symbolic insn@0x080485c7[1]: readRegister(esp, V3[u32]) = (add[u32] esp_0[u32] 0x00000004[u32])
Symbolic insn@0x080485c7[1]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x080485c7[1]: add((add[u32] esp_0[u32] 0x00000004[u32]), 0x00000004[u32]) = (add[u32] esp_0[u32] 0x00000008[u32])
Symbolic insn@0x080485c7[1]: writeRegister(esp, (add[u32] esp_0[u32] 0x00000008[u32]))
Symbolic insn@0x080485c7[1]: boolean_(1) = true[u1]
Symbolic insn@0x080485c7[1]: undefined_(32) = V4[u32]
Symbolic insn@0x080485c7[1]: readMemory(ss, (add[u32] esp_0[u32] 0x00000004[u32]), V4[u32], true[u1]) = V4[u32]
Symbolic insn@0x080485c7[1]: writeRegister(ebx, V4[u32])
Symbolic insn@0x080485c7[1]: finishInstruction(pop ebx)
registers:
 eax write-only = V2[u32]
 ebx write-only = V4[u32]
 esp read-before-write = (add[u32] esp_0[u32] 0x00000008[u32])
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080485c8<134514120>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] esp_0[u32] 0x00000007[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000006[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000005[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000004[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x080485c8: leave 
Symbolic: startInstruction(0x080485c8: leave)
Symbolic insn@0x080485c8[2]: number_(32, 134514120) = 0x080485c8<134514120>[u32]
Symbolic insn@0x080485c8[2]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080485c8[2]: add(0x080485c8<134514120>[u32], 0x00000001[u32]) = 0x080485c9<134514121>[u32]
Symbolic insn@0x080485c8[2]: writeRegister(eip, 0x080485c9<134514121>[u32])
Symbolic insn@0x080485c8[2]: undefined_(32) = V5[u32]
Symbolic insn@0x080485c8[2]: readRegister(ebp, V5[u32]) = ebp_0[u32]
Symbolic insn@0x080485c8[2]: writeRegister(esp, ebp_0[u32])
Symbolic insn@0x080485c8[2]: undefined_(32) = V6[u32]
Symbolic insn@0x080485c8[2]: readRegister(esp, V6[u32]) = ebp_0[u32]
Symbolic insn@0x080485c8[2]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x080485c8[2]: add(ebp_0[u32], 0x00000004[u32]) = (add[u32] ebp_0[u32] 0x00000004[u32])
Symbolic insn@0x080485c8[2]: boolean_(1) = true[u1]
Symbolic insn@0x080485c8[2]: undefined_(32) = V7[u32]
Symbolic insn@0x080485c8[2]: readMemory(ss, ebp_0[u32], V7[u32], true[u1]) = V7[u32]
Symbolic insn@0x080485c8[2]: writeRegister(ebp, V7[u32])
Symbolic insn@0x080485c8[2]: writeRegister(esp, (add[u32] ebp_0[u32] 0x00000004[u32]))
Symbolic insn@0x080485c8[2]: finishInstruction(leave)
registers:
 eax write-only = V2[u32]
 ebx write-only = V4[u32]
 esp read-before-write = (add[u32] ebp_0[u32] 0x00000004[u32])
 ebp read-before-write = V7[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = 0x080485c9<134514121>[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V7[u32])
 addr=(add[u32] ebp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V7[u32])
 addr=(add[u32] ebp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V7[u32])
 addr=ebp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000007[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000006[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000005[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000004[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])

0x080485c9: ret 
Symbolic: startInstruction(0x080485c9: ret)
Symbolic insn@0x080485c9[3]: number_(32, 134514121) = 0x080485c9<134514121>[u32]
Symbolic insn@0x080485c9[3]: number_(32, 1) = 0x00000001[u32]
Symbolic insn@0x080485c9[3]: add(0x080485c9<134514121>[u32], 0x00000001[u32]) = 0x080485ca<134514122>[u32]
Symbolic insn@0x080485c9[3]: writeRegister(eip, 0x080485ca<134514122>[u32])
Symbolic insn@0x080485c9[3]: undefined_(32) = V8[u32]
Symbolic insn@0x080485c9[3]: readRegister(esp, V8[u32]) = (add[u32] ebp_0[u32] 0x00000004[u32])
Symbolic insn@0x080485c9[3]: number_(32, 4) = 0x00000004[u32]
Symbolic insn@0x080485c9[3]: add((add[u32] ebp_0[u32] 0x00000004[u32]), 0x00000004[u32]) = (add[u32] ebp_0[u32] 0x00000008[u32])
Symbolic insn@0x080485c9[3]: boolean_(1) = true[u1]
Symbolic insn@0x080485c9[3]: undefined_(32) = V9[u32]
Symbolic insn@0x080485c9[3]: readMemory(ss, (add[u32] ebp_0[u32] 0x00000004[u32]), V9[u32], true[u1]) = V9[u32]
Symbolic insn@0x080485c9[3]: filterReturnTarget(V9[u32]) = V9[u32]
Symbolic insn@0x080485c9[3]: writeRegister(eip, V9[u32])
Symbolic insn@0x080485c9[3]: writeRegister(esp, (add[u32] ebp_0[u32] 0x00000008[u32]))
Symbolic insn@0x080485c9[3]: finishInstruction(ret)
registers:
 eax write-only = V2[u32]
 ebx write-only = V4[u32]
 esp read-before-write = (add[u32] ebp_0[u32] 0x00000008[u32])
 ebp read-before-write = V7[u32]
 es = 0x0000[u16]
 cs = 0x0000[u16]
 ss read-before-write = 0x0000[u16]
 ds = 0x0000[u16]
 eip write-only = V9[u32]
 fpstatus_top = 0x0[u3]
memory:
 addr=(add[u32] ebp_0[u32] 0x00000007[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V9[u32])
 addr=(add[u32] ebp_0[u32] 0x00000006[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V9[u32])
 addr=(add[u32] ebp_0[u32] 0x00000005[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V9[u32])
 addr=(add[u32] ebp_0[u32] 0x00000004[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V9[u32])
 addr=(add[u32] ebp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V7[u32])
 addr=(add[u32] ebp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V7[u32])
 addr=(add[u32] ebp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V7[u32])
 addr=ebp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V7[u32])
 addr=(add[u32] esp_0[u32] 0x00000007[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000006[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000005[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000004[u32]) read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V4[u32])
 addr=(add[u32] esp_0[u32] 0x00000003[u32]) read-before-write value=(extract[u8] 0x00000018[u32] 0x00000020[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000002[u32]) read-before-write value=(extract[u8] 0x00000010[u32] 0x00000018[u32] V2[u32])
 addr=(add[u32] esp_0[u32] 0x00000001[u32]) read-before-write value=(extract[u8] 0x00000008[u32] 0x00000010[u32] V2[u32])
 addr=esp_0[u32] read-before-write value=(extract[u8] 0x00000000[u32] 0x00000008[u32] V2[u32])
Symbolic: operators destroyed
analyzed headers: 1
