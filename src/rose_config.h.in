/* rose_config.h.in.  Generated from configure.ac by autoheader.  */

/* Define if building universal (internal helper macro) */
#undef AC_APPLE_UNIVERSAL_BUILD

/* Absolute path of the ATERM installation bin directory */
#undef ATERM_BIN_PATH

/* Absolute path of the ATERM installation */
#undef ATERM_INSTALL_PATH

/* Absolute path of the ATERM installation lib directory */
#undef ATERM_LIBRARY_PATH

/* Name of backend Ada compiler including path (may or may not explicit
   include path; used to call backend). */
#undef BACKEND_ADA_COMPILER_NAME_WITH_PATH

/* Name of backend Cobol compiler including path (may or may not explicit
   include path; used to call backend). */
#undef BACKEND_COBOL_COMPILER_NAME_WITH_PATH

/* Name of backend Csharp compiler including path (may or may not explicit
   include path; used to call backend). */
#undef BACKEND_CSHARP_COMPILER_NAME_WITH_PATH

/* Major version number of backend C++ compiler. */
#undef BACKEND_CXX_COMPILER_MAJOR_VERSION_NUMBER

/* Minor version number of backend C++ compiler. */
#undef BACKEND_CXX_COMPILER_MINOR_VERSION_NUMBER

/* Name of backend C++ compiler excluding path (used to select code generation
   options). */
#undef BACKEND_CXX_COMPILER_NAME_WITHOUT_PATH

/* Name of backend C++ compiler including path (may or may not explicit
   include path; used to call backend). */
#undef BACKEND_CXX_COMPILER_NAME_WITH_PATH

/* Is this a Clang compiler being used to compile ROSE generated code */
#undef BACKEND_CXX_IS_CLANG_COMPILER

/* Is this a GNU compiler being used to compile ROSE generated code */
#undef BACKEND_CXX_IS_GNU_COMPILER

/* Is this an Intel compiler being used to compile ROSE generated code */
#undef BACKEND_CXX_IS_INTEL_COMPILER

/* Name of backend C compiler excluding path (used to select code generation
   options). */
#undef BACKEND_C_COMPILER_NAME_WITHOUT_PATH

/* Name of backend C compiler including path (may or may not explicit include
   path; used to call backend). */
#undef BACKEND_C_COMPILER_NAME_WITH_PATH

/* The backend C compiler might not support asm and might require __asm__
   instead (e.g. GNU gcc). */
#undef BACKEND_C_COMPILER_SUPPORTS_ASM

/* The backend C compiler might not support asm and might require __asm__
   instead (e.g. GNU gcc). */
#undef BACKEND_C_COMPILER_SUPPORTS_LONG_STRING_ASM

/* The backend C compiler might not support asm and might require __asm__
   instead (e.g. GNU gcc). */
#undef BACKEND_C_COMPILER_SUPPORTS_UNDESCORE_ASM

/* Major version number of backend Fortran compiler. */
#undef BACKEND_FORTRAN_COMPILER_MAJOR_VERSION_NUMBER

/* Minor version number of backend Fortran compiler. */
#undef BACKEND_FORTRAN_COMPILER_MINOR_VERSION_NUMBER

/* Name of backend Fortran compiler excluding path (used to select code
   generation options). */
#undef BACKEND_FORTRAN_COMPILER_NAME_WITHOUT_PATH

/* Name of backend Fortran compiler including path (may or may not explicit
   include path; used to call backend). */
#undef BACKEND_FORTRAN_COMPILER_NAME_WITH_PATH

/* Mark that GFORTRAN is not used in backend */
#undef BACKEND_FORTRAN_IS_GNU_COMPILER

/* Mark that Intel Fortran is used in backend */
#undef BACKEND_FORTRAN_IS_INTEL_COMPILER

/* Mark that PGI Fortran is used in backend */
#undef BACKEND_FORTRAN_IS_PGI_COMPILER

/* Name of backend Java compiler including path (may or may not explicit
   include path; used to call backend). */
#undef BACKEND_JAVA_COMPILER_NAME_WITH_PATH

/* Name of backend Jovial compiler including path (may or may not explicit
   include path; used to call backend). */
#undef BACKEND_JOVIAL_COMPILER_NAME_WITH_PATH

/* Path to the backend python interpreter */
#undef BACKEND_PYTHON_INTERPRETER_NAME_WITH_PATH

/* Name of backend X10 compiler, including path */
#undef BACKEND_X10_COMPILER_NAME_WITH_PATH

/* Internal EDG specific consistency tests. */
#undef CHECKING

/* Absolute path of the COBPT installation */
#undef COBPT_INSTALL_PATH

/* Absolute path of the COBPT installation lib directory */
#undef COBPT_LIBRARY_PATH

/* Always defined and used for checking whether global CPP namespace is
   polluted */
#undef CONFIG_ROSE

/* CUDA binaries directory */
#undef CUDA_BIN_DIR

/* CUDA include directory */
#undef CUDA_INC_DIR

/* CUDA libraries directory */
#undef CUDA_LIB_DIR

/* Include path for backend C++ compiler. */
#undef CXX_INCLUDE_STRING

/* Is this the ROSE Analizer (part of tests to compile ROSE for analysis only
   using ROSE) */
#undef CXX_IS_ROSE_ANALYSIS

/* Is this the ROSE AST File IO (part of tests to compile ROSE for AST File IO
   only using ROSE) */
#undef CXX_IS_ROSE_AST_FILE_IO

/* Is this the ROSE Code Generator (part of tests to compile ROSE and generate
   code using ROSE) */
#undef CXX_IS_ROSE_CODE_GENERATION

/* Is this the ROSE translator (part of tests to compile ROSE using ROSE) */
#undef CXX_IS_ROSE_TRANSLATOR

/* -D options to hand to EDG C++ front-end. */
#undef CXX_SPEC_DEF

/* Include path for backend C compiler. */
#undef C_INCLUDE_STRING

/* Absolute path of the FLANG installation */
#undef FLANG_INSTALL_PATH

/* Absolute path of the FLANG compilersource files */
#undef FLANG_SOURCE_PATH

/* Location (unquoted) of the GCC 4.4's GOMP OpenMP runtime library. */
#undef GCC_GOMP_OPENMP_LIB_PATH

/* Define to 1 if you have the `argz_add' function. */
#undef HAVE_ARGZ_ADD

/* Define to 1 if you have the `argz_append' function. */
#undef HAVE_ARGZ_APPEND

/* Define to 1 if you have the `argz_count' function. */
#undef HAVE_ARGZ_COUNT

/* Define to 1 if you have the `argz_create_sep' function. */
#undef HAVE_ARGZ_CREATE_SEP

/* Define to 1 if you have the <argz.h> header file. */
#undef HAVE_ARGZ_H

/* Define to 1 if you have the `argz_insert' function. */
#undef HAVE_ARGZ_INSERT

/* Define to 1 if you have the `argz_next' function. */
#undef HAVE_ARGZ_NEXT

/* Define to 1 if you have the `argz_stringify' function. */
#undef HAVE_ARGZ_STRINGIFY

/* Define to 1 if you have the <asm/ldt.h> header file. */
#undef HAVE_ASM_LDT_H

/* define if the Boost library is available */
#undef HAVE_BOOST

/* define if the Boost::Chrono library is available */
#undef HAVE_BOOST_CHRONO

/* define if the Boost::Date_Time library is available */
#undef HAVE_BOOST_DATE_TIME

/* define if the Boost::Filesystem library is available */
#undef HAVE_BOOST_FILESYSTEM

/* define if the Boost::IOStreams library is available */
#undef HAVE_BOOST_IOSTREAMS

/* define if the Boost::PROGRAM_OPTIONS library is available */
#undef HAVE_BOOST_PROGRAM_OPTIONS

/* define if the Boost::Random library is available */
#undef HAVE_BOOST_RANDOM

/* define if the Boost::Regex library is available */
#undef HAVE_BOOST_REGEX

/* define if the boost::serialization headers are available */
#undef HAVE_BOOST_SERIALIZATION

/* define if the libboost_serialization is available */
#undef HAVE_BOOST_SERIALIZATION_LIB

/* define if the Boost::System library is available */
#undef HAVE_BOOST_SYSTEM

/* define if the Boost::Thread library is available */
#undef HAVE_BOOST_THREAD

/* define if the Boost::Wave library is available */
#undef HAVE_BOOST_WAVE

/* Define to 1 if you have the <byteswap.h> header file. */
#undef HAVE_BYTESWAP_H

/* Define to 1 if you have the `clock_gettime' function. */
#undef HAVE_CLOCK_GETTIME

/* Define to 1 if you have the `closedir' function. */
#undef HAVE_CLOSEDIR

/* define if the compiler supports basic C++11 syntax */
#undef HAVE_CXX11

/* define if the compiler supports basic C++14 syntax */
#undef HAVE_CXX14

/* Define to 1 if you have the <c_asm.h> header file. */
#undef HAVE_C_ASM_H

/* Define to 1 if you have the declaration of `cygwin_conv_path', and to 0 if
   you don't. */
#undef HAVE_DECL_CYGWIN_CONV_PATH

/* Define to 1 if you have the <dirent.h> header file, and it defines `DIR'.
   */
#undef HAVE_DIRENT_H

/* Whether <dlfcn.h> and -ldl contain dladdr() */
#undef HAVE_DLADDR

/* Define if you have the GNU dld library. */
#undef HAVE_DLD

/* Define to 1 if you have the <dld.h> header file. */
#undef HAVE_DLD_H

/* Define to 1 if you have the `dlerror' function. */
#undef HAVE_DLERROR

/* Define to 1 if you have the <dlfcn.h> header file. */
#undef HAVE_DLFCN_H

/* Define to 1 if you have the <dl.h> header file. */
#undef HAVE_DL_H

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
#undef HAVE_DOPRNT

/* Define if you have the _dyld_func_lookup function. */
#undef HAVE_DYLD

/* Define to 1 if you have the <elf.h> header file. */
#undef HAVE_ELF_H

/* Define to 1 if the system has the type `error_t'. */
#undef HAVE_ERROR_T

/* Use explicit template instantiation. */
#undef HAVE_EXPLICIT_TEMPLATE_INSTANTIATION

/* Define to 1 if you have the <ffi.h> header file. */
#undef HAVE_FFI_H

/* Define to 1 if you have the `getcwd' function. */
#undef HAVE_GETCWD

/* Define to 1 if you have the `gethrtime' function. */
#undef HAVE_GETHRTIME

/* Define to 1 if you have the `getpagesize' function. */
#undef HAVE_GETPAGESIZE

/* Define to 1 if you have the `getwd' function. */
#undef HAVE_GETWD

/* Define to 1 if you have the <grp.h> header file. */
#undef HAVE_GRP_H

/* Define to 1 if hrtime_t is defined in <sys/time.h> */
#undef HAVE_HRTIME_T

/* Define to 1 if you have the <intrinsics.h> header file. */
#undef HAVE_INTRINSICS_H

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* Define to 1 if you have the <jni.h> header file. */
#undef HAVE_JNI_H

/* Define to 1 if you have the `dl' library (-ldl). */
#undef HAVE_LIBDL

/* Define if libdlloader will be built on this platform */
#undef HAVE_LIBDLLOADER

/* Define to 1 if you have the <limits.h> header file. */
#undef HAVE_LIMITS_H

/* Define to 1 if you have the <linux/dirent.h> header file. */
#undef HAVE_LINUX_DIRENT_H

/* Define to 1 if you have the <linux/types.h> header file. */
#undef HAVE_LINUX_TYPES_H

/* Define to 1 if you have the <linux/unistd.h> header file. */
#undef HAVE_LINUX_UNISTD_H

/* Define to 1 if the type `long double' works and has more range or precision
   than `double'. */
#undef HAVE_LONG_DOUBLE

/* Define to 1 if the type `long double' works and has more range or precision
   than `double'. */
#undef HAVE_LONG_DOUBLE_WIDER

/* Define this if a modern libltdl is already installed */
#undef HAVE_LTDL

/* Define to 1 if you have the <machine/endian.h> header file. */
#undef HAVE_MACHINE_ENDIAN_H

/* Define to 1 if you have the `mach_absolute_time' function. */
#undef HAVE_MACH_ABSOLUTE_TIME

/* Define to 1 if you have the <mach/mach_time.h> header file. */
#undef HAVE_MACH_MACH_TIME_H

/* Define to 1 if you have the <mach-o/dyld.h> header file. */
#undef HAVE_MACH_O_DYLD_H

/* Define to 1 if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H

/* Define to 1 if you have the `mktime' function. */
#undef HAVE_MKTIME

/* Define to 1 if you have a working `mmap' system call. */
#undef HAVE_MMAP

/* Define to 1 if you have MPI libs and headers. */
#undef HAVE_MPI

/* Define to 1 if MySQL libraries are available */
#undef HAVE_MYSQL

/* Define to 1 if you have the <ndir.h> header file, and it defines `DIR'. */
#undef HAVE_NDIR_H

/* Support for libnuma a NUMA memory allocation library for many-core
   optimizations */
#undef HAVE_NUMA_H

/* Define to 1 if you have the `opendir' function. */
#undef HAVE_OPENDIR

/* Define to 1 if you have the `pipe2' function. */
#undef HAVE_PIPE2

/* Define if libtool can extract symbol lists from object files. */
#undef HAVE_PRELOADED_SYMBOLS

/* Define to 1 if you have the <pthread.h> header file. */
#undef HAVE_PTHREAD_H

/* If available, contains the Python version number currently in use. */
#undef HAVE_PYTHON

/* Define to 1 if you have the `readdir' function. */
#undef HAVE_READDIR

/* Define to 1 if you have the `read_real_time' function. */
#undef HAVE_READ_REAL_TIME

/* Define if you have the shl_load function. */
#undef HAVE_SHL_LOAD

/* Define to 1 if you have SPOT libs and headers. */
#undef HAVE_SPOT

/* Have the SQLITE3 library */
#undef HAVE_SQLITE3

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the `strcoll' function and it is properly defined.
   */
#undef HAVE_STRCOLL

/* Define to 1 if you have the `strcspn' function. */
#undef HAVE_STRCSPN

/* Define to 1 if you have the `strerror' function. */
#undef HAVE_STRERROR

/* Define to 1 if you have the `strftime' function. */
#undef HAVE_STRFTIME

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define to 1 if you have the `strlcat' function. */
#undef HAVE_STRLCAT

/* Define to 1 if you have the `strlcpy' function. */
#undef HAVE_STRLCPY

/* Define to 1 if you have the `strspn' function. */
#undef HAVE_STRSPN

/* Define to 1 if you have the `strstr' function. */
#undef HAVE_STRSTR

/* Define to 1 if you have the `strtod' function. */
#undef HAVE_STRTOD

/* Define to 1 if you have the `strtol' function. */
#undef HAVE_STRTOL

/* Define to 1 if you have the `strtoul' function. */
#undef HAVE_STRTOUL

/* Define to 1 if you have the <syscall.h> header file. */
#undef HAVE_SYSCALL_H

/* Define to 1 if you have the <sys/dir.h> header file, and it defines `DIR'.
   */
#undef HAVE_SYS_DIR_H

/* Define to 1 if you have the <sys/dl.h> header file. */
#undef HAVE_SYS_DL_H

/* Define to 1 if you have the <sys/ioctl.h> header file. */
#undef HAVE_SYS_IOCTL_H

/* Define to 1 if you have the <sys/mman.h> header file. */
#undef HAVE_SYS_MMAN_H

/* Define to 1 if you have the <sys/ndir.h> header file, and it defines `DIR'.
   */
#undef HAVE_SYS_NDIR_H

/* Define to 1 if you have the <sys/param.h> header file. */
#undef HAVE_SYS_PARAM_H

/* Define to 1 if you have the <sys/personality.h> header file. */
#undef HAVE_SYS_PERSONALITY_H

/* Define to 1 if you have the <sys/socket.h> header file. */
#undef HAVE_SYS_SOCKET_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/sysinfo.h> header file. */
#undef HAVE_SYS_SYSINFO_H

/* Define to 1 if you have the <sys/time.h> header file. */
#undef HAVE_SYS_TIME_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* Define to 1 if you have the <sys/uio.h> header file. */
#undef HAVE_SYS_UIO_H

/* Define to 1 if you have the <sys/utsname.h> header file. */
#undef HAVE_SYS_UTSNAME_H

/* Define to 1 if you have the <sys/wait.h> header file. */
#undef HAVE_SYS_WAIT_H

/* Define to 1 if you have the <termios.h> header file. */
#undef HAVE_TERMIOS_H

/* Define to 1 if you have the `time_base_to_time' function. */
#undef HAVE_TIME_BASE_TO_TIME

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* Defined if the user_desc type is declared in <asm/ldt.h> */
#undef HAVE_USER_DESC

/* Define to 1 if you have the `vprintf' function. */
#undef HAVE_VPRINTF

/* This value is set to 1 to indicate that the system argz facility works */
#undef HAVE_WORKING_ARGZ

/* Define to 1 if you have Z3 libs and headers. */
#undef HAVE_Z3

/* Define if you have the UNICOS _rtc() intrinsic. */
#undef HAVE__RTC

/* Prefix path for use of IDA. */
#undef IDA_PRO_PATH

/* Name of Intel Fortran preprocessor */
#undef INTEL_FPP_PATH

/* Path to JVM executable */
#undef JAVA_JVM_PATH

/* Major version number of the Java JDK */
#undef JAVA_VERSION_MAJOR

/* Minor version number of the Java JDK */
#undef JAVA_VERSION_MINOR

/* Patch version number of the Java JDK */
#undef JAVA_VERSION_PATCH

/* Release version number of the Java JDK */
#undef JAVA_VERSION_RELEASE

/* Define if the OS needs help to load dependent libraries for dlopen(). */
#undef LTDL_DLOPEN_DEPLIBS

/* Define to the system default library search path. */
#undef LT_DLSEARCH_PATH

/* The archive extension */
#undef LT_LIBEXT

/* The archive prefix */
#undef LT_LIBPREFIX

/* Define to the extension used for runtime loadable modules, say, ".so". */
#undef LT_MODULE_EXT

/* Define to the name of the environment variable that determines the run-time
   module search path. */
#undef LT_MODULE_PATH_VAR

/* Define to the sub-directory where libtool stores uninstalled libraries. */
#undef LT_OBJDIR

/* Define to the shared library suffix, say, ".dylib". */
#undef LT_SHARED_EXT

/* Define to the shared archive member specification, say "(shr.o)". */
#undef LT_SHARED_LIB_MEMBER

/* Define if dlsym() requires a leading underscore in symbol names. */
#undef NEED_USCORE

/* Absolute path of the modified GNU Octave installation */
#undef OCTAVE_PARSER_INSTALL_TARFILE

/* Location (unquoted) of the Omni OpenMP run time library. */
#undef OMNI_OPENMP_LIB_PATH

/* OpenCL include directory */
#undef OPENCL_INC_DIR

/* OpenCL libraries directory */
#undef OPENCL_LIB_DIR

/* Name of package */
#undef PACKAGE

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the home page for this package. */
#undef PACKAGE_URL

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* "Version of Python selected when building ROSE." */
#undef PYTHON_VERSION

/* Define as the return type of signal handlers (`int' or `void'). */
#undef RETSIGTYPE

/* apple Operating System (OS) being used to build ROSE */
#undef ROSE_APPLE_OS_VENDOR

/* Determines how failed assertions should behave. */
#undef ROSE_ASSERTION_BEHAVIOR

/* Location (unquoted) of Boost specified on configure line. */
#undef ROSE_BOOST_PATH

/* Version of Boost specified on configure line. */
#undef ROSE_BOOST_VERSION

/* Build ROSE to support the Binary Analysis */
#undef ROSE_BUILD_BINARY_ANALYSIS_SUPPORT

/* Build ROSE to support the C preprocessor language */
#undef ROSE_BUILD_CPP_LANGUAGE_SUPPORT

/* Build ROSE to support the CUDA langauge */
#undef ROSE_BUILD_CUDA_LANGUAGE_SUPPORT

/* Build ROSE to support the C++ langauge */
#undef ROSE_BUILD_CXX_LANGUAGE_SUPPORT

/* Build ROSE to support the C langauge */
#undef ROSE_BUILD_C_LANGUAGE_SUPPORT

/* Build ROSE to support the Fortran langauge */
#undef ROSE_BUILD_FORTRAN_LANGUAGE_SUPPORT

/* Build ROSE to support the Java langauge */
#undef ROSE_BUILD_JAVA_LANGUAGE_SUPPORT

/* Build ROSE to support the OpenCL langauge */
#undef ROSE_BUILD_OPENCL_LANGUAGE_SUPPORT

/* Build ROSE to support the PHP langauge */
#undef ROSE_BUILD_PHP_LANGUAGE_SUPPORT

/* Build ROSE projects directory */
#undef ROSE_BUILD_PROJECTS_DIRECTORY_SUPPORT

/* Build ROSE to support the Python langauge */
#undef ROSE_BUILD_PYTHON_LANGUAGE_SUPPORT

/* Build ROSE tests directory */
#undef ROSE_BUILD_TESTS_DIRECTORY_SUPPORT

/* Build ROSE tutorial directory */
#undef ROSE_BUILD_TUTORIAL_DIRECTORY_SUPPORT

/* CentOS Operating System (OS) being used to build ROSE */
#undef ROSE_CENTOS_OS_VENDOR

/* Location of ROSE Compile Tree. */
#undef ROSE_COMPILE_TREE_PATH

/* Encapsulates some important configuration details for Rose::initialize */
#undef ROSE_CONFIG_TOKEN

/* Debian Operating System (OS) being used to build ROSE */
#undef ROSE_DEBIAN_OS_VENDOR

/* Controls large volumes of output spew useful for debugging new ADA/ROSE
   connection code */
#undef ROSE_DEBUG_EXPERIMENTAL_ADA_ROSE_CONNECTION

/* Controls large volumes of output spew useful for debugging new COBOL/ROSE
   connection code */
#undef ROSE_DEBUG_EXPERIMENTAL_COBOL_ROSE_CONNECTION

/* Controls large volumes of output spew useful for debugging new CSHARP/ROSE
   connection code */
#undef ROSE_DEBUG_EXPERIMENTAL_CSHARP_ROSE_CONNECTION

/* Controls large volumes of output spew useful for debugging new JOVIAL/ROSE
   connection code */
#undef ROSE_DEBUG_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION

/* Controls large volumes of output spew useful for debugging new
   Octave/Matlab ROSE connection code */
#undef ROSE_DEBUG_EXPERIMENTAL_MATLAB_ROSE_CONNECTION

/* Controls large volumes of output spew useful for debugging new OFP/ROSE
   connection code */
#undef ROSE_DEBUG_EXPERIMENTAL_OFP_ROSE_CONNECTION

/* Controls large volumes of output spew useful for debugging new EDG/ROSE
   connection code */
#undef ROSE_DEBUG_NEW_EDG_ROSE_CONNECTION

/* EDG major version number */
#undef ROSE_EDG_MAJOR_VERSION_NUMBER

/* EDG minor version number */
#undef ROSE_EDG_MINOR_VERSION_NUMBER

/* Define if you want a Python API */
#undef ROSE_ENABLE_PYTHON_API

/* Enables development of experimental ada frontend */
#undef ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION

/* Path to GNAT Ada compiler used in development of experimental ada frontend
   */
#undef ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION_GNAT_HOME

/* Enables development of experimental cobol frontend */
#undef ROSE_EXPERIMENTAL_COBOL_ROSE_CONNECTION

/* Enables development of experimental csharp frontend */
#undef ROSE_EXPERIMENTAL_CSHARP_ROSE_CONNECTION

/* Path to Mono Csharp compiler used in development of experimental csharp
   frontend */
#undef ROSE_EXPERIMENTAL_CSHARP_ROSE_CONNECTION_MONO_HOME

/* Path to Roslyn Csharp library used in development of experimental csharp
   frontend */
#undef ROSE_EXPERIMENTAL_CSHARP_ROSE_CONNECTION_ROSLYN_HOME

/* Enables development of experimental fortran flang frontend */
#undef ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION

/* Enables development of experimental jovial frontend */
#undef ROSE_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION

/* Enables development of experimental Octave/Matlab frontend */
#undef ROSE_EXPERIMENTAL_MATLAB_ROSE_CONNECTION

/* Enables development of experimental fortran frontend */
#undef ROSE_EXPERIMENTAL_OFP_ROSE_CONNECTION

/* Defined if the Capstone library is available */
#undef ROSE_HAVE_CAPSTONE

/* Defined if dlib is available. */
#undef ROSE_HAVE_DLIB

/* Defined when libdwarf is available. */
#undef ROSE_HAVE_LIBDWARF

/* Defined when libelf is available. */
#undef ROSE_HAVE_LIBELF

/* Defined when libgcrypt is available. */
#undef ROSE_HAVE_LIBGCRYPT

/* Defined when libmagic is available. */
#undef ROSE_HAVE_LIBMAGIC

/* Defined if the pqxx library is available */
#undef ROSE_HAVE_LIBPQXX

/* Defined if the readline library and headers are available. */
#undef ROSE_HAVE_LIBREADLINE

/* Defined when libyaml-cpp is available */
#undef ROSE_HAVE_LIBYAML

/* Defined when the Yices SMT-Solver library is present and should be used. */
#undef ROSE_HAVE_LIBYICES

/* Define to 1 if you have Z3 libs and headers. */
#undef ROSE_HAVE_Z3

/* Define if z3_version.h exists */
#undef ROSE_HAVE_Z3_VERSION_H

/* Location (unquoted) of the top directory path to which ROSE is installed.
   */
#undef ROSE_INSTALLATION_PATH

/* Defined if the Armadillo library is available. */
#undef ROSE_MATLAB_USE_ARMADILLO

/* OFP class path for Jave Virtual Machine */
#undef ROSE_OFP_CLASSPATH

/* OFP jar file */
#undef ROSE_OFP_JAR_FILE

/* OFP major version number */
#undef ROSE_OFP_MAJOR_VERSION_NUMBER

/* OFP minor version number */
#undef ROSE_OFP_MINOR_VERSION_NUMBER

/* OFP patch version number */
#undef ROSE_OFP_PATCH_VERSION_NUMBER

/* OFP version number */
#undef ROSE_OFP_VERSION_NUMBER

/* RedHat Operating System (OS) major release number being used to build ROSE
   */
#undef ROSE_OS_MAJOR_RELEASE_NUMBER

/* RedHat Operating System (OS) minor release number being used to build ROSE
   */
#undef ROSE_OS_MINOR_RELEASE_NUMBER

/* RedHat Operating System (OS) being used to build ROSE */
#undef ROSE_REDHAT_OS_VENDOR

/* Set SCM version information to ROSE version. */
#undef ROSE_SCM_VERSION_ID

/* Variable like LD_LIBRARY_PATH */
#undef ROSE_SHLIBPATH_VAR

/* Location of ROSE Source Tree. */
#undef ROSE_SOURCE_TREE_PATH

/* Ubuntu Operating System (OS) being used to build ROSE */
#undef ROSE_UBUNTU_OS_VENDOR

/* Whether to use Candl support or not within ROSE */
#undef ROSE_USE_CANDL

/* Use Clang for parsing C/C++-like languages */
#undef ROSE_USE_CLANG_FRONTEND

/* Whether to use Cloog support or not within ROSE */
#undef ROSE_USE_CLOOG

/* Enables support for __float80 and __float128 in EDG. */
#undef ROSE_USE_EDG_QUAD_FLOAT

/* Whether to use the new EDG version 4.12 */
#undef ROSE_USE_EDG_VERSION_4_12

/* Whether to use the new EDG version 5.0 */
#undef ROSE_USE_EDG_VERSION_5_0

/* Whether to use the new EDG version 6.0 */
#undef ROSE_USE_EDG_VERSION_6_0

/* Whether to use the new EDG version 6.1 */
#undef ROSE_USE_EDG_VERSION_6_1

/* Defined if Ether from Georgia Tech is available. */
#undef ROSE_USE_ETHER

/* Support for a list of warnings that will be treated as errors for ROSE
   development */
#undef ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT

/* Mark that Intel FPP is used in backend */
#undef ROSE_USE_INTEL_FPP

/* Whether to use a special no-reuse mode of memory pools */
#undef ROSE_USE_MEMORY_POOL_NO_REUSE

/* Controls use of Microsoft MSVC features */
#undef ROSE_USE_MICROSOFT_EXTENSIONS

/* Whether to use Parma Polyhedral Library (PPL) support or not within ROSE */
#undef ROSE_USE_PPL

/* Whether to use ScopLib support or not within ROSE */
#undef ROSE_USE_SCOPLIB

/* Whether to use smaller (but more numerous) generated files for the ROSE IR
   */
#undef ROSE_USE_SMALLER_GENERATED_FILES

/* Support for an advanced uniform warning level for ROSE development */
#undef ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT

/* Defined if the web toolkit Wt is available. */
#undef ROSE_USE_WT

/* Whether to use the new graph IR nodes compatability option with older API
   */
#undef ROSE_USING_GRAPH_IR_NODES_FOR_BACKWARD_COMPATABILITY

/* Integer encoded ROSE version A.B.C.D as ABBCCCDDD. */
#undef ROSE_VERSION

/* Simple preprocessor as default in ROSE */
#undef ROSE_WAVE_DEFAULT

/* Location (unquoted) of Wave specified on configure line. */
#undef ROSE_WAVE_PATH

/* libharu enabled */
#undef ROSE_WITH_LIBHARU

/* Absolute name of yices executable, or the empty string. */
#undef ROSE_YICES

/* Absolute name of z3 executable, or the empty string. */
#undef ROSE_Z3

/* Control use of SAGE within EDG. */
#undef SAGE_TRANSFORM

/* The size of `char', as computed by sizeof. */
#undef SIZEOF_CHAR

/* The size of `double', as computed by sizeof. */
#undef SIZEOF_DOUBLE

/* The size of `float', as computed by sizeof. */
#undef SIZEOF_FLOAT

/* The size of `int', as computed by sizeof. */
#undef SIZEOF_INT

/* The size of `long', as computed by sizeof. */
#undef SIZEOF_LONG

/* The size of `long double', as computed by sizeof. */
#undef SIZEOF_LONG_DOUBLE

/* The size of `long long', as computed by sizeof. */
#undef SIZEOF_LONG_LONG

/* The size of `short', as computed by sizeof. */
#undef SIZEOF_SHORT

/* The size of `void *', as computed by sizeof. */
#undef SIZEOF_VOID_P

/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS

/* Absolute path of the STRATEGO installation bin directory */
#undef STRATEGO_BIN_PATH

/* Absolute path of the STRATEGO installation */
#undef STRATEGO_INSTALL_PATH

/* Absolute path of the STRATEGO installation lib directory */
#undef STRATEGO_LIBRARY_PATH

/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
#undef TIME_WITH_SYS_TIME

/* Define to 1 if your <sys/time.h> declares `struct tm'. */
#undef TM_IN_SYS_TIME

/* Mark that GFORTRAN is available */
#undef USE_GFORTRAN_IN_ROSE

/* Link-time support for Insure. */
#undef USE_INSURE

/* Support for Purify */
#undef USE_PURIFY

/* Support for Purify API (Compiling with the Purify library). */
#undef USE_PURIFY_API

/* Link-time support for Purify. */
#undef USE_PURIFY_LINKER

/* Controls use of ROSE support for ATerm Library. */
#undef USE_ROSE_ATERM_SUPPORT

/* Controls use of ROSE support for bddbddb (Binary decision diagrams (BDD)
   BDD-Based Deductive DataBase. */
#undef USE_ROSE_BDDBDDB_SUPPORT

/* Controls use of BOOST WAVE support in ROSE. */
#undef USE_ROSE_BOOST_WAVE_SUPPORT

/* Controls if EDG Union/Struct debugging support is to be used. */
#undef USE_ROSE_EDG_DEBUGGING_SUPPORT

/* Use of GCC OpenMP in ROSE. */
#undef USE_ROSE_GCC_OMP

/* Controls use of ROSE support for GLUT library. */
#undef USE_ROSE_GLUT_SUPPORT

/* Controls use of ROSE support for GNAT ADA frontend Support. */
#undef USE_ROSE_GNAT_SUPPORT

/* Controls use of ROSE support for GnuCOBOL parse-tree library. */
#undef USE_ROSE_GNU_COBOL_PT_SUPPORT

/* Controls use of ROSE support for the modified GNU Octave parser. */
#undef USE_ROSE_GNU_OCTAVE_SUPPORT

/* Controls use of ROSE support for OpenMP Translator targeting GCC 4.4 's
   GOMP OpenMP RTL. */
#undef USE_ROSE_GOMP_OPENMP_LIBRARY

/* Controls use of IDA support for disassembling. */
#undef USE_ROSE_IDA_SUPPORT

/* Controls use of ROSE support for Intel Pin Dynamic Instrumentation Package.
   */
#undef USE_ROSE_INTEL_PIN_SUPPORT

/* Controls use of ROSE support for Java. */
#undef USE_ROSE_INTERNAL_JAVA_SUPPORT

/* Controls use of ROSE support for Java. */
#undef USE_ROSE_JAVA_SUPPORT

/* Controls use of ROSE support for LLVM. */
#undef USE_ROSE_LLVM_SUPPORT

/* Controls use of ROSE support for Maple Symbolic Algebra Package. */
#undef USE_ROSE_MAPLE_SUPPORT

/* Controls use of ROSE support for OpenMP Translator targeting Omni RTL. */
#undef USE_ROSE_OMNI_OPENMP_SUPPORT

/* Controls use of ROSE support for PHP. */
#undef USE_ROSE_PHP_SUPPORT

/* Controls use of ROSE support for Python. */
#undef USE_ROSE_PYTHON_SUPPORT

/* Controls use of ROSE support for RTED library. */
#undef USE_ROSE_RTED_SUPPORT

/* Controls use of ROSE support for internal Satisfiability (SAT) Solver. */
#undef USE_ROSE_SAT_SUPPORT

/* Controls use of ROSE support for SSL (libssl -- MD5) library (incompatable
   with Java, so disables Fortran support). */
#undef USE_ROSE_SSL_SUPPORT

/* Controls use of ROSE support for Stratego Library. */
#undef USE_ROSE_STRATEGO_SUPPORT

/* Wine provides access to Windows header files for analysis of windows
   applications under Linux. */
#undef USE_ROSE_WINDOWS_ANALYSIS_SUPPORT

/* Support for PURIFY debugging software. */
#undef USING_PURIFY

/* Version number of package */
#undef VERSION

/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most
   significant byte first (like Motorola and SPARC, unlike Intel). */
#if defined AC_APPLE_UNIVERSAL_BUILD
# if defined __BIG_ENDIAN__
#  define WORDS_BIGENDIAN 1
# endif
#else
# ifndef WORDS_BIGENDIAN
#  undef WORDS_BIGENDIAN
# endif
#endif

/* Absolute path of the X10 installation bin directory */
#undef X10_BIN_PATH

/* Absolute path of the X10 installation */
#undef X10_INSTALL_PATH

/* Absolute path of the X10 installation lib directory */
#undef X10_LIBRARY_PATH

/* Version number of the user-specified X10 compiler */
#undef X10_VERSION

/* Define to 1 if `lex' declares `yytext' as a `char *' by default, not a
   `char[]'. */
#undef YYTEXT_POINTER

/* Define to 1 if type `char' is unsigned and you are not using gcc.  */
#ifndef __CHAR_UNSIGNED__
# undef __CHAR_UNSIGNED__
#endif

/* Define so that glibc/gnulib argp.h does not typedef error_t. */
#undef __error_t_defined

/* Define to a type to use for 'error_t' if it is not otherwise available. */
#undef error_t

/* Define to `__inline__' or `__inline' if that's what the C compiler
   calls it, or to nothing if 'inline' is not supported under any name.  */
#ifndef __cplusplus
#undef inline
#endif

/* Define to `long int' if <sys/types.h> does not define. */
#undef off_t

/* Define to `unsigned int' if <sys/types.h> does not define. */
#undef size_t
