# Makefile.in generated by automake 1.16.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2020 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Makefile for an x86 simulator called "x86sim". At this time the simulator is highly Linux-specific.  On platforms other
# than Linux, this simulator is simply a main() that prints an error message and exits.

# These definitions are for the benefit of independent software contained			-*- makefile -*-
# in ROSE.  (Currently, this means SAGE and ROSETTA.)
# It defines ROSE_INCLUDES and ROSE_LIBS so they can use the ROSE codes.

# ROSE_INCLUDES contains the include flags for compiling with ROSE code.
# (ROSE software should set the include paths in their respective Makefile.am
# files, since they are expected to know the ROSE source tree structure.)
# To use ROSE_INCLUDES, the independent software packages contained in ROSE
# should define the variable ROSE_HOME to be the relative path to the root
# of the ROSE directory tree.

# This fixes some problem caused by automake or autoconf
# (detailed documentation is in the ChangeLog)
# MAKE=gmake

# DQ (8/10/2007): Valentin suggested this be commented out.
# DQ (4/23/2006): This is the default when build using automake version 1.6.3 but it
# causes errors so we would like to specify --run automake instead
# AUTOMAKE = ${SHELL} $(top_srcdir)/config/missing --run automake-1.6
# AUTOMAKE = ${SHELL} $(top_srcdir)/config/missing --run automake

# force ranlib to just call touch so that *.so (dynamic libraries) will not
# be run with ranlib (which is a error).  This allows us to use dynamic
# libraries as the default within ROSE.
# JJW 7/25/2008: Do we really need this?



VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@

# DQ (10/23/2020): Pei-Hung and I think this may not be required (not available on my system).
# I get the error: 
#    /bin/ld: skipping incompatible /lib/libtinfo.so when searching for -ltinfo
#    clang-10: error: linker command failed with exit code 1 (use -v to see invocation)
# ROSE_LIBS += $(CLANG_LDFLAGS) -ltinfo
@ROSE_USE_CLANG_FRONTEND_TRUE@am__append_1 = $(CLANG_LDFLAGS)
@ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION_TRUE@am__append_2 = -R $(DOT_ASIS_LIB_DIR_) 
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@bin_PROGRAMS =  \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	rsim-x86sim$(EXEEXT)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@noinst_PROGRAMS = rsim-show-initial-stack$(EXEEXT) \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	rsim-ports-opened$(EXEEXT)
subdir = projects/simulator2
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acmacros/canonicalize-symlink.m4 \
	$(top_srcdir)/acmacros/compiler-ar.m4 \
	$(top_srcdir)/acmacros/compiler-id.m4 \
	$(top_srcdir)/acmacros/configure-log.m4 \
	$(top_srcdir)/acmacros/pkg.m4 $(top_srcdir)/acmacros/upc.m4 \
	$(top_srcdir)/config/EDG.m4 $(top_srcdir)/config/ROSE.m4 \
	$(top_srcdir)/config/ac_pkg_swig.m4 \
	$(top_srcdir)/config/acinclude.m4 \
	$(top_srcdir)/config/ax_boost_base.m4 \
	$(top_srcdir)/config/ax_boost_chrono.m4 \
	$(top_srcdir)/config/ax_boost_date_time.m4 \
	$(top_srcdir)/config/ax_boost_filesystem.m4 \
	$(top_srcdir)/config/ax_boost_iostreams.m4 \
	$(top_srcdir)/config/ax_boost_program_options.m4 \
	$(top_srcdir)/config/ax_boost_random.m4 \
	$(top_srcdir)/config/ax_boost_regex.m4 \
	$(top_srcdir)/config/ax_boost_serialization.m4 \
	$(top_srcdir)/config/ax_boost_system.m4 \
	$(top_srcdir)/config/ax_boost_thread.m4 \
	$(top_srcdir)/config/ax_boost_wave.m4 \
	$(top_srcdir)/config/ax_compare_version.m4 \
	$(top_srcdir)/config/ax_compiler_vendor.m4 \
	$(top_srcdir)/config/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/config/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/config/ax_cxx_compile_stdcxx_14.m4 \
	$(top_srcdir)/config/ax_lib_mysql.m4 \
	$(top_srcdir)/config/ax_lib_sqlite3.m4 \
	$(top_srcdir)/config/ax_lib_xerces.m4 \
	$(top_srcdir)/config/ax_prog_bison_version.m4 \
	$(top_srcdir)/config/ax_python_devel.m4 \
	$(top_srcdir)/config/ax_with_prog.m4 \
	$(top_srcdir)/config/choose-backend-compiler.m4 \
	$(top_srcdir)/config/compiler-defs.m4 \
	$(top_srcdir)/config/determine-os.m4 \
	$(top_srcdir)/config/enable-rosehpct.m4 \
	$(top_srcdir)/config/generate-backend-compiler-specific-headers.m4 \
	$(top_srcdir)/config/libtool.m4 $(top_srcdir)/config/libxml.m4 \
	$(top_srcdir)/config/ltargz.m4 $(top_srcdir)/config/ltdl.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 \
	$(top_srcdir)/config/mdl_have_opengl_2014.m4 \
	$(top_srcdir)/config/qrose_indigo_1.m4 \
	$(top_srcdir)/config/qrose_indigo_1_windows.m4 \
	$(top_srcdir)/config/support-GraphViz.m4 \
	$(top_srcdir)/config/support-IntelPin.m4 \
	$(top_srcdir)/config/support-accelerator.m4 \
	$(top_srcdir)/config/support-aterm.m4 \
	$(top_srcdir)/config/support-backend-x10.m4 \
	$(top_srcdir)/config/support-bddbddb.m4 \
	$(top_srcdir)/config/support-binary.m4 \
	$(top_srcdir)/config/support-bison.m4 \
	$(top_srcdir)/config/support-blacklist.m4 \
	$(top_srcdir)/config/support-boost.m4 \
	$(top_srcdir)/config/support-capstone.m4 \
	$(top_srcdir)/config/support-clang.m4 \
	$(top_srcdir)/config/support-cobol.m4 \
	$(top_srcdir)/config/support-compass2.m4 \
	$(top_srcdir)/config/support-compiler-features.m4 \
	$(top_srcdir)/config/support-cuda.m4 \
	$(top_srcdir)/config/support-doxygen.m4 \
	$(top_srcdir)/config/support-dwarf.m4 \
	$(top_srcdir)/config/support-edg-debugging.m4 \
	$(top_srcdir)/config/support-edg.m4 \
	$(top_srcdir)/config/support-elf.m4 \
	$(top_srcdir)/config/support-fatal-rose-warnings.m4 \
	$(top_srcdir)/config/support-flang.m4 \
	$(top_srcdir)/config/support-gcc-omp.m4 \
	$(top_srcdir)/config/support-gcrypt.m4 \
	$(top_srcdir)/config/support-gmp.m4 \
	$(top_srcdir)/config/support-gnat.m4 \
	$(top_srcdir)/config/support-gomp-omp.m4 \
	$(top_srcdir)/config/support-haskell.m4 \
	$(top_srcdir)/config/support-i386.m4 \
	$(top_srcdir)/config/support-ida.m4 \
	$(top_srcdir)/config/support-insure.m4 \
	$(top_srcdir)/config/support-isl.m4 \
	$(top_srcdir)/config/support-java.m4 \
	$(top_srcdir)/config/support-languages.m4 \
	$(top_srcdir)/config/support-lcov.m4 \
	$(top_srcdir)/config/support-libffi.m4 \
	$(top_srcdir)/config/support-libharu.m4 \
	$(top_srcdir)/config/support-libpqxx.m4 \
	$(top_srcdir)/config/support-llvm.m4 \
	$(top_srcdir)/config/support-magic.m4 \
	$(top_srcdir)/config/support-maple.m4 \
	$(top_srcdir)/config/support-mint.m4 \
	$(top_srcdir)/config/support-mpi.m4 \
	$(top_srcdir)/config/support-octave.m4 \
	$(top_srcdir)/config/support-ofp.m4 \
	$(top_srcdir)/config/support-omp.m4 \
	$(top_srcdir)/config/support-php.m4 \
	$(top_srcdir)/config/support-pocc.m4 \
	$(top_srcdir)/config/support-projects.m4 \
	$(top_srcdir)/config/support-purify.m4 \
	$(top_srcdir)/config/support-python-api.m4 \
	$(top_srcdir)/config/support-python.m4 \
	$(top_srcdir)/config/support-readline.m4 \
	$(top_srcdir)/config/support-rose.m4 \
	$(top_srcdir)/config/support-rted.m4 \
	$(top_srcdir)/config/support-rtedupc.m4 \
	$(top_srcdir)/config/support-sanitizer.m4 \
	$(top_srcdir)/config/support-sat.m4 \
	$(top_srcdir)/config/support-spot.m4 \
	$(top_srcdir)/config/support-ssl.m4 \
	$(top_srcdir)/config/support-stratego.m4 \
	$(top_srcdir)/config/support-summary.m4 \
	$(top_srcdir)/config/support-swipl.m4 \
	$(top_srcdir)/config/support-valgrind.m4 \
	$(top_srcdir)/config/support-vectorization.m4 \
	$(top_srcdir)/config/support-visualization.m4 \
	$(top_srcdir)/config/support-windows.m4 \
	$(top_srcdir)/config/support-x10.m4 \
	$(top_srcdir)/config/support-yaml.m4 \
	$(top_srcdir)/config/support-yices.m4 \
	$(top_srcdir)/config/support-z3.m4 \
	$(top_srcdir)/config/support_POET.m4 \
	$(top_srcdir)/config/swig_enable_cxx.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__include_HEADERS_DIST) \
	$(am__noinst_HEADERS_DIST) $(am__DIST_COMMON)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/rose_config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(includedir)"
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
LTLIBRARIES = $(lib_LTLIBRARIES)
libRSIM_la_LIBADD =
am__libRSIM_la_SOURCES_DIST = RSIM_Adapter.C RSIM_Callbacks.C \
	RSIM_ColdFire.C RSIM_Common.C RSIM_Debugger.C RSIM_Futex.C \
	RSIM_Linux.C RSIM_Linux32.C RSIM_Linux64.C RSIM_Pentium4.C \
	RSIM_Printer.C RSIM_Process.C RSIM_Semantics.C \
	RSIM_SignalHandling.C RSIM_Simulator.C RSIM_Thread.C \
	RSIM_Tools.C
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@am_libRSIM_la_OBJECTS = libRSIM_la-RSIM_Adapter.lo \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	libRSIM_la-RSIM_Callbacks.lo \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	libRSIM_la-RSIM_ColdFire.lo \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	libRSIM_la-RSIM_Common.lo \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	libRSIM_la-RSIM_Debugger.lo \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	libRSIM_la-RSIM_Futex.lo \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	libRSIM_la-RSIM_Linux.lo \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	libRSIM_la-RSIM_Linux32.lo \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	libRSIM_la-RSIM_Linux64.lo \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	libRSIM_la-RSIM_Pentium4.lo \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	libRSIM_la-RSIM_Printer.lo \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	libRSIM_la-RSIM_Process.lo \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	libRSIM_la-RSIM_Semantics.lo \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	libRSIM_la-RSIM_SignalHandling.lo \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	libRSIM_la-RSIM_Simulator.lo \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	libRSIM_la-RSIM_Thread.lo \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	libRSIM_la-RSIM_Tools.lo
libRSIM_la_OBJECTS = $(am_libRSIM_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libRSIM_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(libRSIM_la_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@am_libRSIM_la_rpath = -rpath \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(libdir)
am__rsim_ports_opened_SOURCES_DIST = demos/ports_opened.C
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@am_rsim_ports_opened_OBJECTS = rsim_ports_opened-ports_opened.$(OBJEXT)
rsim_ports_opened_OBJECTS = $(am_rsim_ports_opened_OBJECTS)
am__DEPENDENCIES_1 =
@ROSE_USE_SQLITE_DATABASE_TRUE@am__DEPENDENCIES_2 =  \
@ROSE_USE_SQLITE_DATABASE_TRUE@	$(am__DEPENDENCIES_1)
am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
@ROSE_USE_PHP_TRUE@am__DEPENDENCIES_4 = $(php_path)/lib/libphc.so \
@ROSE_USE_PHP_TRUE@	$(php_path)/lib/libphp5.so \
@ROSE_USE_PHP_TRUE@	$(am__DEPENDENCIES_1)
@ROSE_USE_QT_TRUE@am__DEPENDENCIES_5 = $(am__DEPENDENCIES_1)
@ROSE_WITH_LIBREADLINE_TRUE@am__DEPENDENCIES_6 =  \
@ROSE_WITH_LIBREADLINE_TRUE@	$(am__DEPENDENCIES_1)
@ROSE_USE_CLANG_FRONTEND_TRUE@am__DEPENDENCIES_7 =  \
@ROSE_USE_CLANG_FRONTEND_TRUE@	$(am__DEPENDENCIES_1)
am__DEPENDENCIES_8 = $(abspath $(top_builddir)/src/librose.la) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(ROSE_YICES_LIBS_WITH_PATH) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(ROSE_GUI_LIBS_WITH_PATH) $(am__DEPENDENCIES_5) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_7)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@rsim_ports_opened_DEPENDENCIES = $(am__DEPENDENCIES_1) \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	libRSIM.la \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(am__DEPENDENCIES_8)
rsim_ports_opened_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(rsim_ports_opened_LDFLAGS) \
	$(LDFLAGS) -o $@
am__rsim_show_initial_stack_SOURCES_DIST = show-initial-stack.C
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@am_rsim_show_initial_stack_OBJECTS = rsim_show_initial_stack-show-initial-stack.$(OBJEXT)
rsim_show_initial_stack_OBJECTS =  \
	$(am_rsim_show_initial_stack_OBJECTS)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@rsim_show_initial_stack_DEPENDENCIES = $(am__DEPENDENCIES_8)
rsim_show_initial_stack_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(rsim_show_initial_stack_LDFLAGS) \
	$(LDFLAGS) -o $@
am__rsim_x86sim_SOURCES_DIST = x86sim.C
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@am_rsim_x86sim_OBJECTS = rsim_x86sim-x86sim.$(OBJEXT)
rsim_x86sim_OBJECTS = $(am_rsim_x86sim_OBJECTS)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@rsim_x86sim_DEPENDENCIES = $(am__DEPENDENCIES_1) \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	libRSIM.la \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(am__DEPENDENCIES_8)
rsim_x86sim_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(rsim_x86sim_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp =
am__maybe_remake_depfiles =
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libRSIM_la_SOURCES) $(rsim_ports_opened_SOURCES) \
	$(rsim_show_initial_stack_SOURCES) $(rsim_x86sim_SOURCES)
DIST_SOURCES = $(am__libRSIM_la_SOURCES_DIST) \
	$(am__rsim_ports_opened_SOURCES_DIST) \
	$(am__rsim_show_initial_stack_SOURCES_DIST) \
	$(am__rsim_x86sim_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__include_HEADERS_DIST = RSIM_Adapter.h RSIM_Callbacks.h \
	RSIM_ColdFire.h RSIM_Common.h RSIM_Debugger.h RSIM_Futex.h \
	RSIM_Linux.h RSIM_Linux32.h RSIM_Linux64.h RSIM_Pentium4.h \
	RSIM_Printer.h RSIM_Process.h RSIM_Semantics.h \
	RSIM_SignalHandling.h RSIM_Simulator.h RSIM_Thread.h \
	RSIM_Tools.h
am__noinst_HEADERS_DIST = $(srcdir)/syscall_tests/ipcmsg.h \
	$(srcdir)/syscall_tests/ipcsem.h \
	$(srcdir)/syscall_tests/ipcshm.h
HEADERS = $(include_HEADERS) $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs \
	$(top_srcdir)/config/mkinstalldirs README
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ABS_COMPASS2_XML_SRCDIR = @ABS_COMPASS2_XML_SRCDIR@
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
ARMA_PREFIX = @ARMA_PREFIX@
ATERM_BIN_PATH = @ATERM_BIN_PATH@
ATERM_INSTALL_PATH = @ATERM_INSTALL_PATH@
ATERM_LIBRARY_PATH = @ATERM_LIBRARY_PATH@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AUX_LINKER = @AUX_LINKER@
AWK = @AWK@
Axx_INCLUDES = @Axx_INCLUDES@
Axx_LIBS = @Axx_LIBS@
BACKEND_ADA_COMPILER = @BACKEND_ADA_COMPILER@
BACKEND_COBOL_COMPILER = @BACKEND_COBOL_COMPILER@
BACKEND_COMPILER_VERSION_MAJOR_NUMBER = @BACKEND_COMPILER_VERSION_MAJOR_NUMBER@
BACKEND_COMPILER_VERSION_MINOR_NUMBER = @BACKEND_COMPILER_VERSION_MINOR_NUMBER@
BACKEND_COMPILER_VERSION_NAME = @BACKEND_COMPILER_VERSION_NAME@
BACKEND_COMPILER_VERSION_PATCHLEVEL_NUMBER = @BACKEND_COMPILER_VERSION_PATCHLEVEL_NUMBER@
BACKEND_CSHARP_COMPILER = @BACKEND_CSHARP_COMPILER@
BACKEND_CXX_COMPILER = @BACKEND_CXX_COMPILER@
BACKEND_CXX_VENDOR_AND_VERSION2 = @BACKEND_CXX_VENDOR_AND_VERSION2@
BACKEND_CXX_VENDOR_AND_VERSION3 = @BACKEND_CXX_VENDOR_AND_VERSION3@
BACKEND_C_COMPILER = @BACKEND_C_COMPILER@
BACKEND_FORTRAN_COMPILER = @BACKEND_FORTRAN_COMPILER@
BACKEND_JAVA_COMPILER = @BACKEND_JAVA_COMPILER@
BACKEND_JOVIAL_COMPILER = @BACKEND_JOVIAL_COMPILER@
BACKEND_MATLAB_COMPILER = @BACKEND_MATLAB_COMPILER@
BACKEND_X10_COMPILER = @BACKEND_X10_COMPILER@
BISON = @BISON@
BISON_VERSION = @BISON_VERSION@
BOOST_CHRONO_LIB = @BOOST_CHRONO_LIB@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_DATE_TIME_LIB = @BOOST_DATE_TIME_LIB@
BOOST_FILESYSTEM_LIB = @BOOST_FILESYSTEM_LIB@
BOOST_IOSTREAMS_LIB = @BOOST_IOSTREAMS_LIB@
BOOST_LDFLAGS = @BOOST_LDFLAGS@
BOOST_PROGRAM_OPTIONS_LIB = @BOOST_PROGRAM_OPTIONS_LIB@
BOOST_RANDOM_LIB = @BOOST_RANDOM_LIB@
BOOST_REGEX_LIB = @BOOST_REGEX_LIB@
BOOST_SERIALIZATION_LIB = @BOOST_SERIALIZATION_LIB@
BOOST_SYSTEM_LIB = @BOOST_SYSTEM_LIB@
BOOST_THREAD_LIB = @BOOST_THREAD_LIB@
BOOST_WAVE_LIB = @BOOST_WAVE_LIB@
CANDL_PATH = @CANDL_PATH@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CCLD = @CCLD@
CFLAGS = @CFLAGS@
CFLAGS32 = @CFLAGS32@
CLANG_CXXFLAGS = @CLANG_CXXFLAGS@
CLANG_LDFLAGS = @CLANG_LDFLAGS@
CLANG_LIBDIR = @CLANG_LIBDIR@
CLASSPATH = @CLASSPATH@
CLOOG_PATH = @CLOOG_PATH@
COBPT_INSTALL_PATH = @COBPT_INSTALL_PATH@
COBPT_LIBRARY_PATH = @COBPT_LIBRARY_PATH@
CPP = @CPP@

# DQ (9/27/2015): Added to support new use of AM_CPPFLAGS instead of INCLUDES
# (depreicated in automake and for which many warnings are generated).
CPPFLAGS = $(AM_CPPFLAGS)
CUDA_BIN_DIR = @CUDA_BIN_DIR@
CUDA_INC_DIR = @CUDA_INC_DIR@
CUDA_LIB_DIR = @CUDA_LIB_DIR@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXXLD = @CXXLD@
CXX_DEBUG = @CXX_DEBUG@
CXX_OPTIMIZE = @CXX_OPTIMIZE@
CXX_SHARED_LIB_UPDATE = @CXX_SHARED_LIB_UPDATE@
CXX_STATIC_LIB_UPDATE = @CXX_STATIC_LIB_UPDATE@
CXX_TEMPLATE_OBJECTS = @CXX_TEMPLATE_OBJECTS@
CXX_TEMPLATE_REPOSITORY_PATH = @CXX_TEMPLATE_REPOSITORY_PATH@
CXX_WARNINGS = @CXX_WARNINGS@
CYGPATH_W = @CYGPATH_W@
C_DEBUG = @C_DEBUG@
C_OPTIMIZE = @C_OPTIMIZE@
C_WARNINGS = @C_WARNINGS@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLIB_PREFIX = @DLIB_PREFIX@
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
DOXYGEN_ADDED_DIRECTORY_1 = @DOXYGEN_ADDED_DIRECTORY_1@
DOXYGEN_ADDED_DIRECTORY_2 = @DOXYGEN_ADDED_DIRECTORY_2@
DOXYGEN_ENABLED_SECTIONS = @DOXYGEN_ENABLED_SECTIONS@
DOXYGEN_EXTRACT_ALL = @DOXYGEN_EXTRACT_ALL@
DOXYGEN_EXTRACT_PRIVATE = @DOXYGEN_EXTRACT_PRIVATE@
DOXYGEN_EXTRACT_STATIC = @DOXYGEN_EXTRACT_STATIC@
DOXYGEN_HIDE_FRIEND_COMPOUNDS = @DOXYGEN_HIDE_FRIEND_COMPOUNDS@
DOXYGEN_HIDE_UNDOC_CLASSES = @DOXYGEN_HIDE_UNDOC_CLASSES@
DOXYGEN_HIDE_UNDOC_MEMBERS = @DOXYGEN_HIDE_UNDOC_MEMBERS@
DOXYGEN_INTERNAL_DOCS = @DOXYGEN_INTERNAL_DOCS@
DOXYGEN_USE_TAG_FILE = @DOXYGEN_USE_TAG_FILE@
DOXYINDEXER = @DOXYINDEXER@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ETHER_PREFIX = @ETHER_PREFIX@
EXE = @EXE@
EXEEXT = @EXEEXT@
F77 = @F77@
FC = @FC@
FCFLAGS = @FCFLAGS@
FFLAGS = @FFLAGS@
FGREP = @FGREP@
FLANG_INSTALL_PATH = @FLANG_INSTALL_PATH@
FLANG_SOURCE_PATH = @FLANG_SOURCE_PATH@
FLTK_include_path = @FLTK_include_path@
FLTK_libs_path = @FLTK_libs_path@
FRONTEND_CXX_VENDOR_AND_VERSION2 = @FRONTEND_CXX_VENDOR_AND_VERSION2@
FRONTEND_CXX_VENDOR_AND_VERSION3 = @FRONTEND_CXX_VENDOR_AND_VERSION3@
GCC_MINOR_VERSION = @GCC_MINOR_VERSION@
GCC_VERSION = @GCC_VERSION@
GENERATED_COMPILER_NAME_AND_VERSION_SUFFIX = @GENERATED_COMPILER_NAME_AND_VERSION_SUFFIX@
GEN_BE = @GEN_BE@
GFORTRAN_PATH = @GFORTRAN_PATH@
GHCBIN = @GHCBIN@
GLUT_CFLAGS = @GLUT_CFLAGS@
GLUT_LIBS = ${glut_path}
GLUT_include_path = @GLUT_include_path@
GLUT_libs_path = @GLUT_libs_path@
GL_CFLAGS = @GL_CFLAGS@
GL_LIBS = @GL_LIBS@
GMP_INCLUDE_PATH = @GMP_INCLUDE_PATH@
GMP_INSTALL_PATH = @GMP_INSTALL_PATH@
GMP_LIBRARY_PATH = @GMP_LIBRARY_PATH@
GNAT_INCLUDES = @GNAT_INCLUDES@
GREP = @GREP@
GraphViz_include_path = @GraphViz_include_path@
GraphViz_libs_path = @GraphViz_libs_path@
HAVE_CXX11 = @HAVE_CXX11@
HAVE_CXX14 = @HAVE_CXX14@
HS_CONFIG_OPTS = @HS_CONFIG_OPTS@
INCLTDL = @INCLTDL@
INCLUDE_COMPASS_MAKEFILE_INC = @INCLUDE_COMPASS_MAKEFILE_INC@
INDENT = @INDENT@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSURE_OPTIONS = @INSURE_OPTIONS@
INTEL_FPP_PATH = @INTEL_FPP_PATH@
ISL_INCLUDE_PATH = @ISL_INCLUDE_PATH@
ISL_INSTALL_PATH = @ISL_INSTALL_PATH@
ISL_LIBRARY_PATH = @ISL_LIBRARY_PATH@
IntelPin_path = @IntelPin_path@
JAR = @JAR@
JAVA = @JAVA@
JAVAC = @JAVAC@
JAVA_JVM_INCLUDE = @JAVA_JVM_INCLUDE@
JAVA_JVM_LINK = @JAVA_JVM_LINK@
JAVA_JVM_PATH = @JAVA_JVM_PATH@
JAVA_PATH = @JAVA_PATH@
LD = @LD@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBADD_DL = @LIBADD_DL@
LIBADD_DLD_LINK = @LIBADD_DLD_LINK@
LIBADD_DLOPEN = @LIBADD_DLOPEN@
LIBADD_SHL_LOAD = @LIBADD_SHL_LOAD@
LIBDWARF_CPPFLAGS = @LIBDWARF_CPPFLAGS@
LIBDWARF_LDFLAGS = @LIBDWARF_LDFLAGS@
LIBDWARF_PREFIX = @LIBDWARF_PREFIX@
LIBELF_CPPFLAGS = @LIBELF_CPPFLAGS@
LIBELF_LDFLAGS = @LIBELF_LDFLAGS@
LIBELF_PREFIX = @LIBELF_PREFIX@
LIBFFI_CFLAGS = @LIBFFI_CFLAGS@
LIBFFI_LIBS = @LIBFFI_LIBS@
LIBGCRYPT_CPPFLAGS = @LIBGCRYPT_CPPFLAGS@
LIBGCRYPT_LDFLAGS = @LIBGCRYPT_LDFLAGS@
LIBGCRYPT_PREFIX = @LIBGCRYPT_PREFIX@
LIBLTDL = @LIBLTDL@
LIBOBJS = @LIBOBJS@
LIBREADLINE_INCLUDE_PATH = @LIBREADLINE_INCLUDE_PATH@
LIBREADLINE_INSTALL_PATH = @LIBREADLINE_INSTALL_PATH@
LIBREADLINE_LIBRARY_PATH = @LIBREADLINE_LIBRARY_PATH@
LIBREADLINE_LIBS = @LIBREADLINE_LIBS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LLVM_CONFIG = @LLVM_CONFIG@
LLVM_CPPFLAGS = @LLVM_CPPFLAGS@
LLVM_LDFLAGS = @LLVM_LDFLAGS@
LLVM_LIBS = @LLVM_LIBS@
LN_S = @LN_S@
LTDLDEPS = @LTDLDEPS@
LTDLINCL = @LTDLINCL@
LTDLOPEN = @LTDLOPEN@
LTLIBOBJS = @LTLIBOBJS@
LT_ARGZ_H = @LT_ARGZ_H@
LT_CONFIG_H = @LT_CONFIG_H@
LT_DLLOADERS = @LT_DLLOADERS@
LT_DLPREOPEN = @LT_DLPREOPEN@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MAPLE_INCLUDES = @MAPLE_INCLUDES@
MAPLE_LIBDIR = @MAPLE_LIBDIR@
MAPLE_LIBS = @MAPLE_LIBS@
MD5 = @MD5@
MINT = @MINT@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MPICC = @MPICC@
MPICXX = @MPICXX@
MPIF77 = @MPIF77@
MPIFC = @MPIFC@
MYSQL_CFLAGS = @MYSQL_CFLAGS@
MYSQL_CONFIG = @MYSQL_CONFIG@
MYSQL_INCLUDE = @MYSQL_INCLUDE@
MYSQL_LDFLAGS = @MYSQL_LDFLAGS@
MYSQL_VERSION = @MYSQL_VERSION@
NM = @NM@
NMEDIT = @NMEDIT@
NVCCBIN = @NVCCBIN@
OBJ = @OBJ@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OCTAVE_PARSER_INSTALL_TARFILE = @OCTAVE_PARSER_INSTALL_TARFILE@
OPENCL_INC_DIR = @OPENCL_INC_DIR@
OPENCL_LIB_DIR = @OPENCL_LIB_DIR@
OPEN_FORTRAN_PARSER_PATH = @OPEN_FORTRAN_PARSER_PATH@
OPTIONAL_PROJECTS = @OPTIONAL_PROJECTS@
OS_major_release_number = @OS_major_release_number@
OS_minor_release_number = @OS_minor_release_number@
OS_release = @OS_release@
OS_vendor = @OS_vendor@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PACKAGE_VERSION_NUMERIC = @PACKAGE_VERSION_NUMERIC@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
POET_INCL = @POET_INCL@
POET_LIB = @POET_LIB@
PPL_PATH = @PPL_PATH@
PURIFY_OPTIONS = @PURIFY_OPTIONS@
PYTHON = @PYTHON@
PYTHON_CPPFLAGS = @PYTHON_CPPFLAGS@
PYTHON_EXTRA_LDFLAGS = @PYTHON_EXTRA_LDFLAGS@
PYTHON_EXTRA_LIBS = @PYTHON_EXTRA_LIBS@
PYTHON_LDFLAGS = @PYTHON_LDFLAGS@
PYTHON_ROOT = @PYTHON_ROOT@
PYTHON_SITE_PKG = @PYTHON_SITE_PKG@
PYTHON_VERSION_MM = @PYTHON_VERSION_MM@
Pxx_INCLUDES = @Pxx_INCLUDES@
Pxx_LIBS = @Pxx_LIBS@
QROSE_PREFIX = @QROSE_PREFIX@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
QT_VERSION = @QT_VERSION@
QT_VERSION_MAJOR = @QT_VERSION_MAJOR@
QT_VERSION_MINOR = @QT_VERSION_MINOR@
RANLIB = @RANLIB@
RCC = @RCC@
ROSEHPCT_DEP_INCLUDES = @ROSEHPCT_DEP_INCLUDES@
ROSEHPCT_DEP_LIBS = @ROSEHPCT_DEP_LIBS@
ROSE_BOOST_NORMAL_INCLUDE_PATH = @ROSE_BOOST_NORMAL_INCLUDE_PATH@

# DQ (12/22/2008): Specification of Boost path for use with "-isystem" option (may be GNU
# specific).  We use this option only if the configuration of ROSE has detected a
# previously installed version of Boost (which we do not want to use).
# Note that only one of these will be non-empty makefile variables.
ROSE_BOOST_PREINCLUDE_PATH = @ROSE_BOOST_PREINCLUDE_PATH@
ROSE_CAPSTONE_PREFIX = @ROSE_CAPSTONE_PREFIX@
ROSE_EDG_MAJOR_VERSION_NUMBER = @ROSE_EDG_MAJOR_VERSION_NUMBER@
ROSE_EDG_MINOR_VERSION_NUMBER = @ROSE_EDG_MINOR_VERSION_NUMBER@
ROSE_HOME = @ROSE_HOME@
ROSE_LIBMAGIC_PREFIX = @ROSE_LIBMAGIC_PREFIX@
ROSE_LIBPQXX_PREFIX = @ROSE_LIBPQXX_PREFIX@
ROSE_LSB_RELEASE = @ROSE_LSB_RELEASE@
ROSE_OBJDUMP_PATH = @ROSE_OBJDUMP_PATH@
ROSE_OFP_JAR_FILE = @ROSE_OFP_JAR_FILE@
ROSE_OFP_MAJOR_VERSION_NUMBER = @ROSE_OFP_MAJOR_VERSION_NUMBER@
ROSE_OFP_MINOR_VERSION_NUMBER = @ROSE_OFP_MINOR_VERSION_NUMBER@
ROSE_OFP_PATCH_VERSION_NUMBER = @ROSE_OFP_PATCH_VERSION_NUMBER@
ROSE_OFP_VERSION_NUMBER = @ROSE_OFP_VERSION_NUMBER@
ROSE_PS2PDF_PATH = @ROSE_PS2PDF_PATH@
ROSE_SUPPORT_GNU_EXTENSIONS = @ROSE_SUPPORT_GNU_EXTENSIONS@
ROSE_SUPPORT_MICROSOFT_EXTENSIONS = @ROSE_SUPPORT_MICROSOFT_EXTENSIONS@
ROSE_USE_CANDL = @ROSE_USE_CANDL@
ROSE_USE_CLOOG = @ROSE_USE_CLOOG@
ROSE_USE_EDG_QUAD_FLOAT = @ROSE_USE_EDG_QUAD_FLOAT@
ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT = @ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT@
ROSE_USE_PPL = @ROSE_USE_PPL@
ROSE_USE_SCOPLIB = @ROSE_USE_SCOPLIB@
ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT = @ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT@
ROSE_WGET_PATH = @ROSE_WGET_PATH@
ROSE_WITH_MPI_CFLAGS = @ROSE_WITH_MPI_CFLAGS@
ROSE_WITH_MPI_CLDFLAGS = @ROSE_WITH_MPI_CLDFLAGS@
ROSE_WITH_MPI_CXXFLAGS = @ROSE_WITH_MPI_CXXFLAGS@
ROSE_WITH_MPI_CXXLDFLAGS = @ROSE_WITH_MPI_CXXLDFLAGS@
ROSE_WITH_MPI_F77FLAGS = @ROSE_WITH_MPI_F77FLAGS@
ROSE_WITH_MPI_F77LDFLAGS = @ROSE_WITH_MPI_F77LDFLAGS@
ROSE_WITH_MPI_FFLAGS = @ROSE_WITH_MPI_FFLAGS@
ROSE_WITH_MPI_FLDFLAGS = @ROSE_WITH_MPI_FLDFLAGS@
ROSE_YAML_PREFIX = @ROSE_YAML_PREFIX@
ROSE_YICES = @ROSE_YICES@
ROSE_YICES_PREFIX = @ROSE_YICES_PREFIX@
ROSE_Z3_PREFIX = @ROSE_Z3_PREFIX@
RT_LIBS = @RT_LIBS@
SCOPLIB_PATH = @SCOPLIB_PATH@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SPOT_INCLUDE_PATH = @SPOT_INCLUDE_PATH@
SPOT_INSTALL_PATH = @SPOT_INSTALL_PATH@
SPOT_LIBRARY_PATH = @SPOT_LIBRARY_PATH@
SQLITE3_CFLAGS = @SQLITE3_CFLAGS@
SQLITE3_LDFLAGS = @SQLITE3_LDFLAGS@
SQLITE3_VERSION = @SQLITE3_VERSION@
STRATEGO_BIN_PATH = @STRATEGO_BIN_PATH@
STRATEGO_INSTALL_PATH = @STRATEGO_INSTALL_PATH@
STRATEGO_LIBRARY_PATH = @STRATEGO_LIBRARY_PATH@
STRIP = @STRIP@
SWIG = @SWIG@
SWIG_LIB = @SWIG_LIB@
SWIPLBIN = @SWIPLBIN@
TCLSH = @TCLSH@
TEST_SMT_SOLVER = @TEST_SMT_SOLVER@
UIC = @UIC@
UPC = @UPC@
UPCDEPMODE = @UPCDEPMODE@
UPCFLAGS = @UPCFLAGS@
USING_WINDOWS = @USING_WINDOWS@
VALGRIND_BINARY = @VALGRIND_BINARY@
VALGRIND_BIN_PATH = @VALGRIND_BIN_PATH@
VALGRIND_INCLUDE_PATH = @VALGRIND_INCLUDE_PATH@
VALGRIND_INSTALL_PATH = @VALGRIND_INSTALL_PATH@
VALGRIND_LIBRARY_PATH = @VALGRIND_LIBRARY_PATH@
VECTORIZATION = @VECTORIZATION@
VERSION = @VERSION@
WT_PREFIX = @WT_PREFIX@
X10_BIN_PATH = @X10_BIN_PATH@
X10_INSTALL_PATH = @X10_INSTALL_PATH@
X10_LIBRARY_PATH = @X10_LIBRARY_PATH@
X10_VERSION = @X10_VERSION@
XERCES_CPPFLAGS = @XERCES_CPPFLAGS@
XERCES_LDFLAGS = @XERCES_LDFLAGS@
XERCES_LIBS = @XERCES_LIBS@
XERCES_VERSION = @XERCES_VERSION@
XMKMF = @XMKMF@
XML2_CONFIG = @XML2_CONFIG@
XML_CPPFLAGS = @XML_CPPFLAGS@
XML_LIBS = @XML_LIBS@
YACC = @YACC@
YFLAGS = @YFLAGS@
Z3BIN = @Z3BIN@
Z3_INCLUDE_PATH = @Z3_INCLUDE_PATH@
Z3_LIBRARY_PATH = @Z3_LIBRARY_PATH@
Z3_PREFIX = @Z3_PREFIX@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
absolute_path_srcdir = @absolute_path_srcdir@
ac_boost_path = @ac_boost_path@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_F77 = @ac_ct_F77@
ac_ct_FC = @ac_ct_FC@
ac_ct_MPICXX = @ac_ct_MPICXX@
ac_ct_UPC = @ac_ct_UPC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bddbddb_path = @bddbddb_path@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_triplet_without_redhat = @build_triplet_without_redhat@
build_vendor = @build_vendor@
builddir = @builddir@
configure_date = @configure_date@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
edg_union_struct_debugging_value = @edg_union_struct_debugging_value@
exec_prefix = @exec_prefix@
glut_path = @glut_path@
gnat_home = @gnat_home@
gnat_path = @gnat_path@
gomp_omp_runtime_library_path = @gomp_omp_runtime_library_path@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
ida_path = @ida_path@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
insure_BIN = @insure_BIN@
insure_LIBS = @insure_LIBS@
insure_PREFIX = @insure_PREFIX@
libdir = @libdir@
libexecdir = @libexecdir@
llvm_path = @llvm_path@
localedir = @localedir@
localstatedir = @localstatedir@
ltdl_LIBOBJS = @ltdl_LIBOBJS@
ltdl_LTLIBOBJS = @ltdl_LTLIBOBJS@
mandir = @mandir@
maple_path = @maple_path@
mkdir_p = @mkdir_p@
mono_home = @mono_home@
oldincludedir = @oldincludedir@
omni_omp_runtime_support_path = @omni_omp_runtime_support_path@
optional_Visualization_subdirs = @optional_Visualization_subdirs@
parallel_ast_traversal_omp_path = @parallel_ast_traversal_omp_path@
pdfdir = @pdfdir@
php_path = @php_path@
poet_dir = @poet_dir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
purify_BIN = @purify_BIN@
purify_INCLUDES = @purify_INCLUDES@
purify_LIBS = @purify_LIBS@
purify_PREFIX = @purify_PREFIX@
res_top_src = @res_top_src@
rosyln_home = @rosyln_home@
rted_path = @rted_path@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sys_symbol_underscore = @sys_symbol_underscore@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_pwd = @top_pwd@
top_srcdir = @top_srcdir@
wine_path = @wine_path@

# SQLite is a simpler database to use than MySQL
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_INCLUDE = $(SQLITE3_CFLAGS)
@ROSE_USE_SQLITE_DATABASE_TRUE@SQLITE_DATABASE_INCLUDE = $(SQLITE3_CFLAGS) -I$(top_srcdir)/src/roseExtensions/sqlite3x
@ROSE_USE_SQLITE_DATABASE_TRUE@SQLITE_DATABASE_LIBS = $(SQLITE3_LDFLAGS)
#   ROSE_SQLITE_DATABASE_OBJS     = $(top_builddir)/src/roseExtensions/sqlite3x/*o
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_LIB_NAME = RoseSQLite3xDatabase
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_LIB_FILE = lib$(ROSE_SQLITE_DATABASE_LIB_NAME).la
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_LIBS = -l$(ROSE_SQLITE_DATABASE_LIB_NAME)
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SIDEEFFECT_INCLUDE = -I$(top_srcdir)/src/midend/programAnalysis/sideEffectAnalysis
@ROSE_HAVE_LIBZ3_TRUE@Z3_LIB_NAME = z3
@ROSE_HAVE_LIBZ3_TRUE@Z3_LIB_FILE = lib$(Z3_LIB_NAME).so
@ROSE_HAVE_LIBZ3_TRUE@Z3_LIBS = -l$(Z3_LIB_NAME)
@ROSE_HAVE_LIBZ3_TRUE@Z3_INCLUDES = -I$(Z3_PREFIX)/include
@ROSE_HAVE_LIBZ3_TRUE@Z3_LIB_INCLUDES = -L$(Z3_PREFIX)/lib
@ROSE_HAVE_LIBZ3_TRUE@ROSE_Z3_INCLUDES = -I@ROSE_Z3_PREFIX@/include
@ROSE_HAVE_LIBZ3_TRUE@ROSE_Z3_LIBS = -lz3
@ROSE_HAVE_LIBZ3_TRUE@ROSE_Z3_LIBS_WITH_PATH = -L@ROSE_Z3_PREFIX@/lib -lz3

# This is properly handled by automake even when specified in an include file
EDG_LIBS = @EDG_LIBS@

# Conditional support for Gabriel's QRose GUI Library
#  ROSE_GUI_INCLUDE =   -I${QROSE_PREFIX}/include
@ROSE_USE_QT_TRUE@ROSE_GUI_INCLUDE = -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Framework -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Widgets -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/Common -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/QueryBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/TreeBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/QueryBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/SourceBox

# ROSE_GUI_LIBS = -lqrose
#  ROSE_GUI_LIBS_WITH_PATH = -L${QROSE_PREFIX}/lib -lqrose
#  ROSE_GUI_LIBS_WITH_PATH =  -L${top_builddir}/src/3rdPartyLibraries/qrose/QRoseLib/  -lqrose
@ROSE_USE_QT_TRUE@ROSE_GUI_LIBS_WITH_PATH = ${top_builddir}/src/3rdPartyLibraries/qrose/QRoseLib/libqrose.la

# ROSE_GUI_LIB_FILE = libqrose.a
@ROSE_USE_QT_TRUE@ROSE_QT_INCLUDE = $(QT_INCLUDES)
# ROSE_QT_LIBS = -lqt
@ROSE_USE_QT_TRUE@ROSE_QT_LIBS_WITH_PATH = ${QT_LDFLAGS}
# ROSE_QT_LIB_FILE = libqt.a

# ROSE-HPCToolkit module
@ROSE_BUILD_ROSEHPCT_TRUE@ROSE_ROSEHPCT_INCLUDES = -I$(top_srcdir)/src/roseExtensions/roseHPCToolkit/include
@ROSE_BUILD_ROSEHPCT_TRUE@ROSE_ROSEHPCT_LIBS = -lrosehpct
@ROSE_BUILD_ROSEHPCT_TRUE@ROSE_ROSEHPCT_LIBS_WITH_PATH = $(top_builddir)/src/roseExtensions/roseHPCToolkit/src/librosehpct.la
# ROSE_ROSEHPCT_LIB_FILE = librosehpct.so

# ROSE-YICES Package (destributed by SRI as a static library)
@ROSE_HAVE_LIBYICES_TRUE@ROSE_YICES_INCLUDES = -I@ROSE_YICES_PREFIX@/include
@ROSE_HAVE_LIBYICES_TRUE@ROSE_YICES_LIBS = -lyices
@ROSE_HAVE_LIBYICES_TRUE@ROSE_YICES_LIBS_WITH_PATH = @ROSE_YICES_PREFIX@/lib/libyices.a

# YAML-CPP package for parsing YAML/JSON files
@ROSE_HAVE_LIBYAML_TRUE@ROSE_YAML_INCLUDES = -I@ROSE_YAML_PREFIX@/include
@ROSE_HAVE_LIBYAML_TRUE@ROSE_YAML_LIBS = -lyaml-cpp
@ROSE_HAVE_LIBYAML_TRUE@ROSE_YAML_LIBS_WITH_PATH = -L@ROSE_YAML_PREFIX@/lib -lyaml-cpp

# GNU readline
@ROSE_WITH_LIBREADLINE_TRUE@ROSE_READLINE_INCLUDES = -I@LIBREADLINE_INCLUDE_PATH@
@ROSE_WITH_LIBREADLINE_TRUE@ROSE_READLINE_LIBS = @LIBREADLINE_LIBS@
@ROSE_WITH_LIBREADLINE_TRUE@ROSE_READLINE_LIBS_WITH_PATH = -L@LIBREADLINE_LIBRARY_PATH@ $(ROSE_READLINE_LIBS)

# libmagic for identifying file types based on magic numbers
@ROSE_HAVE_LIBMAGIC_TRUE@ROSE_LIBMAGIC_INCLUDES = -I@ROSE_LIBMAGIC_PREFIX@/include
@ROSE_HAVE_LIBMAGIC_TRUE@ROSE_LIBMAGIC_LIBS = -lmagic
@ROSE_HAVE_LIBMAGIC_TRUE@ROSE_LIBMAGIC_LIBS_WITH_PATH = -L@ROSE_LIBMAGIC_PREFIX@/lib -lmagic

# PostgreSQL C++ API
@ROSE_HAVE_LIBPQXX_TRUE@ROSE_LIBPQXX_INCLUDES = -I@ROSE_LIBPQXX_PREFIX@/include
@ROSE_HAVE_LIBPQXX_TRUE@ROSE_LIBPQXX_LIBS = -lpqxx -lpq
@ROSE_HAVE_LIBPQXX_TRUE@ROSE_LIBPQXX_LIBS_WITH_PATH = -L@ROSE_LIBPQXX_PREFIX@/lib -lpqxx -lpq

# Capstone disassembler
@ROSE_HAVE_CAPSTONE_TRUE@ROSE_CAPSTONE_INCLUDES = -I@ROSE_CAPSTONE_PREFIX@/include
@ROSE_HAVE_CAPSTONE_TRUE@ROSE_CAPSTONE_LIBS = -lcapstone
@ROSE_HAVE_CAPSTONE_TRUE@ROSE_CAPSTONE_LIBS_WITH_PATH = -L@ROSE_CAPSTONE_PREFIX@/lib -lcapstone

# Math algorithms from http://dlib.net. This is a headers-only library neede by some binary analyses.
@ROSE_HAVE_DLIB_TRUE@ROSE_DLIB_INCLUDES = -I@DLIB_PREFIX@
@ROSE_HAVE_DLIB_TRUE@ROSE_DLIB_LIBS = 
@ROSE_HAVE_DLIB_TRUE@ROSE_DLIB_LIBS_WITH_PATH = 

# DQ (11/4/2016): Adding support for use of Address Sanitizer (for where the ROSE Test Handler (RTH) is used.
# Note the quotes and escapes that are required:
ADDRESS_SANITIZER_OPTIONS = "ASAN_OPTIONS=halt_on_error=0:symbolize=1:detect_leaks=0 ASAN_SYMBOLIZER_PATH=\`which llvm-symbolizer\`"

# DQ(11/4/2016): Need a version when not using the ROSE Test Handler (RTH):
NON_RTH_ADDRESS_SANITIZER_OPTIONS = ASAN_OPTIONS=halt_on_error=1:symbolize=1:detect_leaks=0 ASAN_SYMBOLIZER_PATH=`which llvm-symbolizer`
@ROSE_HAVE_LIBELF_TRUE@ROSE_ELF_INCLUDES = @LIBELF_CPPFLAGS@
@ROSE_HAVE_LIBELF_TRUE@ROSE_ELF_LIBS_WITH_PATH = @LIBELF_LDFLAGS@

# ROSE gcrypt support (for things like md5, sha1, etc)
@ROSE_HAVE_LIBGCRYPT_TRUE@ROSE_GCRYPT_INCLUDES = @LIBGCRYPT_CPPFLAGS@
@ROSE_HAVE_LIBGCRYPT_TRUE@ROSE_GCRYPT_LIBS_WITH_PATH = @LIBGCRYPT_LDFLAGS@

# ROSE-DWARF libdwarf support
@ROSE_HAVE_LIBDWARF_TRUE@ROSE_DWARF_INCLUDES = @LIBDWARF_CPPFLAGS@
@ROSE_HAVE_LIBDWARF_TRUE@@ROSE_USE_INTEL_PIN_FALSE@ROSE_DWARF_LIBS_WITH_PATH = @LIBDWARF_LDFLAGS@

# DQ (3/13/2009):
# If Dwarf is used with Intel Pin then reference the same copy of libdwarf.a (in the same
# directory).  However, it does NOT work to link both references to libdwarf into more
# than one dynamic (shared) library, so we need to link libdwarf dynamically.
# To avoid additional LD_LIBRARY_PATH requirements, we do so using rpath.
# To support this the libdwarf.so should be placed into $(INTEL_PIN_PATH)/intel64/lib-ext
# and the static libdwarf.a moved out (renamed) so that it will not be used.
# Note that this will also cause librose.so to use the shared library for
# dwarf when used with Intel Pin.
@ROSE_HAVE_LIBDWARF_TRUE@@ROSE_USE_INTEL_PIN_TRUE@ROSE_DWARF_LIBS_WITH_PATH = -L$(INTEL_PIN_PATH)/intel64/lib-ext -ldwarf -lelf
# DQ (3/14/2009): This factors the lib paths.
@ROSE_HAVE_LIBDWARF_TRUE@@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_WITH_DWARF_LIBS_PATH = $(INTEL_PIN_LIB_PATHS) -lpin -lxed -ldl $(ROSE_DWARF_LIBS_WITH_PATH)

# ROSE-WINE Package (Wine is a package to permit execution of Windows binaries under Linux)
@ROSE_USE_WINDOWS_ANALYSIS_SUPPORT_TRUE@ROSE_WINE_INCLUDES = -I$(wine_path)/include
@ROSE_USE_PHP_TRUE@ROSE_PHP_INCLUDES = -I$(php_path)/include/phc -I$(php_path)/include/php
@ROSE_USE_PHP_TRUE@ROSE_PHP_LIBS = -lphp5 -lphc -lltdl
@ROSE_USE_PHP_TRUE@ROSE_PHP_LIBS_WITH_PATH = $(php_path)/lib/libphc.so $(php_path)/lib/libphp5.so $(LIBLTDL)

# ASR (06/09/2010): adding llvm support variables
@ROSE_USE_LLVM_TRUE@ROSE_LLVM_INCLUDES = -I$(llvm_path)/include
@ROSE_USE_LLVM_TRUE@ROSE_LLVM_LIBS = -L$(llvm_path)/lib \
@ROSE_USE_LLVM_TRUE@	-lLLVMXCoreCodeGen -lLLVMXCoreAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMXCoreInfo -lLLVMSystemZCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMSystemZAsmPrinter -lLLVMSystemZInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMSparcCodeGen -lLLVMSparcAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMSparcInfo -lLLVMPowerPCCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMPowerPCAsmPrinter -lLLVMPowerPCInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMpic16passes -lLLVMPIC16AsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMPIC16CodeGen -lLLVMPIC16Info \
@ROSE_USE_LLVM_TRUE@	-lLLVMMSP430CodeGen -lLLVMMSP430AsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMMSP430Info -lLLVMMSIL -lLLVMMSILInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMMipsAsmPrinter -lLLVMMipsCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMMipsInfo -lLLVMMBlazeAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMMBlazeCodeGen -lLLVMMBlazeInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMLinker -lLLVMipo -lLLVMInterpreter \
@ROSE_USE_LLVM_TRUE@	-lLLVMInstrumentation -lLLVMJIT \
@ROSE_USE_LLVM_TRUE@	-lLLVMExecutionEngine -lLLVMCppBackend \
@ROSE_USE_LLVM_TRUE@	-lLLVMCppBackendInfo -lLLVMCellSPUCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMCellSPUAsmPrinter -lLLVMCellSPUInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMCBackend -lLLVMCBackendInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMBlackfinCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMBlackfinAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMBlackfinInfo -lLLVMBitWriter \
@ROSE_USE_LLVM_TRUE@	-lLLVMX86Disassembler -lLLVMX86AsmParser \
@ROSE_USE_LLVM_TRUE@	-lLLVMX86AsmPrinter -lLLVMX86CodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMX86Info -lLLVMAsmParser \
@ROSE_USE_LLVM_TRUE@	-lLLVMARMAsmParser -lLLVMMCParser \
@ROSE_USE_LLVM_TRUE@	-lLLVMARMAsmPrinter -lLLVMARMCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMARMInfo -lLLVMArchive \
@ROSE_USE_LLVM_TRUE@	-lLLVMBitReader -lLLVMAlphaCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMSelectionDAG -lLLVMAlphaAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMAsmPrinter -lLLVMCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMScalarOpts -lLLVMInstCombine \
@ROSE_USE_LLVM_TRUE@	-lLLVMTransformUtils -lLLVMipa \
@ROSE_USE_LLVM_TRUE@	-lLLVMAnalysis -lLLVMTarget -lLLVMMC \
@ROSE_USE_LLVM_TRUE@	-lLLVMCore -lLLVMAlphaInfo -lLLVMSupport \
@ROSE_USE_LLVM_TRUE@	-lLLVMSystem

# adding all libraries for now

# Python API support
@ROSE_USE_PYTHON_DEV_TRUE@ROSE_PYTHON_INCLUDES = @PYTHON_CPPFLAGS@
@ROSE_USE_PYTHON_DEV_TRUE@ROSE_PYTHON_LIBS_WITH_PATH = @PYTHON_LDFLAGS@

# SSL support permits use of MD5 checksums internally for binary library identification.
@ROSE_USE_SSL_SUPPORT_TRUE@ROSE_SSL_LIBS = -lssl -lcrypto

# support for precompiled headers
@ROSE_PCH_TRUE@ROSE_PCH_INCLUDE = -Winvalid-pch -fPIC -DPIC
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_PATH = @IntelPin_path@
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_INCLUDE_PATHS = -I$(INTEL_PIN_PATH)/source/include -I$(INTEL_PIN_PATH)/source/include/gen -I$(INTEL_PIN_PATH)/extras/xed2-intel64/include -I$(INTEL_PIN_PATH)/source/tools/InstLib

# DQ (3/8/2009): These cause rose/src/testSharedRoseLib to fail, I don't know why (fails in system call to map()).
# INTEL_PIN_LIB_PATHS     = -L$(INTEL_PIN_PATH)/intel64/lib -L$(INTEL_PIN_PATH)/extras/xed2-intel64/lib -L$(INTEL_PIN_PATH)/intel64/lib-ext
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_LIB_PATHS = -L$(INTEL_PIN_PATH)/intel64/lib -L$(INTEL_PIN_PATH)/extras/xed2-intel64/lib

# Do we want to handle this differently when Dwarf is used optionally with ROSE.
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_LIBS = -lpin -lxed -ldwarf -lelf -ldl
#if ROSE_HAVE_LIBDWARF
#  INTEL_PIN_LIBS          = -lpin -lxed -lelf -ldl
#else
#  INTEL_PIN_LIBS          = -lpin -lxed -ldwarf -lelf -ldl
#endif
@ROSE_USE_ETHER_TRUE@ROSE_ETHER_INCLUDE = -I$(ETHER_PREFIX)/include
@ROSE_USE_ETHER_TRUE@ROSE_ETHER_LIBS = -L$(ETHER_PREFIX)/lib -lxenctrl
@ROSE_WITH_ATERM_TRUE@ROSE_ATERM_INCLUDE = -I$(ATERM_LIBRARY_PATH)/../include
@ROSE_WITH_ATERM_TRUE@ROSE_ATERM_LIBS = -L$(ATERM_LIBRARY_PATH) -lATerm

# Added support for Fortran front-end development using the flang (F18) compiler [Rasmussen 8/12/2019]
@ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION_TRUE@ROSE_FLANG_INCLUDES = -I$(FLANG_INSTALL_PATH)/include
@ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION_TRUE@ROSE_FLANG_LIBS = -L$(FLANG_INSTALL_PATH)/lib -lLLVMDemangle -lLLVMSupport -lLLVMFrontendOpenMP -lFortranParser -lFortranSemantics -lFortranEvaluate -lFortranCommon -lFortranDecimal -lFortranLower -lncurses

# DQ (5/9/2017): Adding Ada library support.
# ROSE_ADA_INCLUDES = -I$(ada_path)/include_xxx
@ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION_TRUE@ROSE_ADA_INCLUDES = -I$(ada_path)/include_xxx
@ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION_TRUE@DOT_ASIS_LIB_DIR_ = $(abs_top_builddir)/src/frontend/Experimental_Ada_ROSE_Connection/dot_asis/dot_asis_library/lib
#  ROSE_ADA_LIBS = -ldot_asis
#  ROSE_ADA_LIBS_WITH_PATH = $(DOT_ASIS_LIB_DIR_)/libdot_asis.so

# RASMUSSEN (10/24/2017): Adding the GnuCOBOL parse-tree library support.
@ROSE_EXPERIMENTAL_COBOL_ROSE_CONNECTION_TRUE@ROSE_COBOL_PT_LIBS_WITH_PATH = -L$(COBPT_LIBRARY_PATH) -lcob -lcobpt
@ROSE_USE_EDG_QUAD_FLOAT_TRUE@ROSE_QUAD_FLOAT_MATH = -lquadmath

# DQ (1/9/2010): Added use of libimf with libm (the two go together when using Intel icc and icpc)
#  ROSE_INTEL_COMPILER_MATH_LIBS = -limf -lm
# DQ (11/16/2017): We need to link in these Intel specific required libraries to avoid: error hidden symbol `__intel_cpu_features_init_x'
# ROSE_INTEL_COMPILER_MATH_LIBS =
#    ROSE_INTEL_COMPILER_MATH_LIBS += -limf
@USING_INTEL_COMPILER_TRUE@ROSE_INTEL_COMPILER_MATH_LIBS = -limf \
@USING_INTEL_COMPILER_TRUE@	-lirng -lintlc -lsvml -lm
# ROSE_INCLUDES =
#     $(ROSE_BOOST_PREINCLUDE_PATH)
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@ROSE_INCLUDES_WITHOUT_BOOST_ISYSTEM_PATH = \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_builddir)/src/roseSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_builddir)/src/frontend/SageIII \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astFixup \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astPostProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astMerge \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astVisualization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astFileIO \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/sageInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/virtualCFG \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astTokenStream \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astHiddenTypeAndDeclarationLists \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_builddir)/src/frontend/SageIII/astFileIO \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astFromString \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/includeDirectivesProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/sage_support \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/OpenFortranParser_SAGE_Connection \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/ECJ_ROSE_Connection \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I"$(JAVA_HOME)/include" \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/PHPFrontend \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_CLANG_FRONTEND_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/PythonFrontend \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/BinaryFormats \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/BinaryLoader \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/Disassemblers \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_CLANG_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/formatSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/languageIndependenceSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/CxxCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/JavaCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/FortranCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/PHPCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/PythonCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/X10CodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/AdaCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/JovialCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/asmUnparser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/support \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/graphs  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/stringSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/commandlineProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/abstractHandle \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/abstractMemoryObject \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/abstractLayer \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astDiagnostics \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/astInlining \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/astOutlining  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/transformationTracking \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astMatching \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astQuery \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astRewriteMechanism \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/annotation \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/astInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/astSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/symbolicVal \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/BinaryAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/BinaryAnalysis/dataflowanalyses \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/BinaryAnalysis/instructionSemantics \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/computation \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/depGraph \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/depInfo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/driver \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/outsideInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/prepostTransformation \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/ompLowering \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/extractFunctionArgumentsNormalization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/singleStatementToBlockNormalization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/arithmeticIntensity \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/annotationLanguageParser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/CFG \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/staticSingleAssignment \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/ssaUnfilteredCfg \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/systemDependenceGraph \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/systemDependenceGraph \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/CallGraphAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/OAWrap \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/bitvectorDataflow \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/VirtualFunctionAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/defUseAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/distributedMemoryAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/dominanceAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/pointerAnal \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/staticInterproceduralSlicing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/valuePropagation \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/variableRenaming \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_SIDEEFFECTS_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_DATABASE_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_GUI_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_QT_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_SQLITE_DATABASE_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@			$(ROSE_SIDEEFFECT_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(SQLITE_DATABASE_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/partialRedundancyElimination \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/finiteDifferencing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/functionCallNormalization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/constantFolding \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/implicitCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/roseSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/3rdPartyLibraries/MSTL \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/3rdPartyLibraries/libharu-2.1.0/include \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_builddir)/src/3rdPartyLibraries/libharu-2.1.0/include \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Framework \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Widgets  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/graphs \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/astInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/libltdl \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/roseExtensions/failSafe \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_PHP_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_PYTHON_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_YICES_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_Z3_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_YAML_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_LIBPQXX_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_CAPSTONE_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_READLINE_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_LIBMAGIC_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_DLIB_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_GCRYPT_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_ELF_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_DWARF_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_WINE_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(VALGRIND_CFLAGS) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(SQLITE3_CFLAGS) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_BOOST_NORMAL_INCLUDE_PATH) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_PCH_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(INTEL_PIN_INCLUDE_PATHS) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_ETHER_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_ATERM_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_FLANG_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_CSHARP_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_ADA_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_JOVIAL_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_COBOL_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(BOOST_CPPFLAGS)


# DQ (4/13/2016): Is there were we put the support to include -lstdc++.so on the link line directly?

# DQ (3/6/2013): We need to build a SWIG path that can't include the isystem option.
# Note use of "-isystem" option in ROSE_BOOST_PREINCLUDE_PATH to have the
# boost specified on the configure
# command-line be used instead of the OS version of boost that is sometimes
# installed with Linux (it is always a version too old to be used with ROSE).
# This is used only when the ROSE configuration detects a previously installed
# version of Boost (e.g /usr/include/boost) that we don't want to use.
# ROSE_INCLUDES =
#    $(ROSE_BOOST_PREINCLUDE_PATH)
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@ROSE_INCLUDES_WITHOUT_BOOST_ISYSTEM_PATH = \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_builddir)/src/roseSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_builddir)/src/frontend/SageIII \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/astFixup \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/astPostProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/astVisualization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/sageInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/includeDirectivesProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/sage_support \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/OpenFortranParser_SAGE_Connection \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/ECJ_ROSE_Connection \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I"$(JAVA_HOME)/include" \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/BinaryFormats \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/BinaryLoader \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/Disassemblers \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/formatSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/languageIndependenceSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/CxxCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/JavaCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/FortranCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/PHPCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/PythonCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/X10CodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/AdaCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/JovialCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/asmUnparser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/support \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/graphs  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/stringSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/commandlineProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/astDiagnostics \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/astProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/astMatching \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/astQuery \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/BinaryAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/programAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/roseSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/3rdPartyLibraries/MSTL \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/graphs \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/roseExtensions/failSafe \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     $(ROSE_ATERM_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     $(ROSE_FLANG_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     $(ROSE_BOOST_NORMAL_INCLUDE_PATH)


# DQ (10/23/2015): These paths have been replaces with the following variables.
# These variable are empty for now (reflecting the default usage, and need to
# be set properly where ever Clang support is processed as a configure option.
#    -I$(top_srcdir)/src/frontend/CxxFrontend/ClangFrontend
#    -I$(top_srcdir)/src/frontend/CxxFrontend/Clang
#    $(ROSE_CLANG_FRONTEND_INCLUDE)
#    $(ROSE_CLANG_INCLUDE)
SWIG_ROSE_INCLUDES = $(ROSE_INCLUDES_WITHOUT_BOOST_ISYSTEM_PATH)
ROSE_INCLUDES = $(ROSE_BOOST_PREINCLUDE_PATH) $(ROSE_INCLUDES_WITHOUT_BOOST_ISYSTEM_PATH)

# DQ (8/15/2010): I have removed these directories from the include paths since it no longer exists.
# I expect that the directories were removed and the include list not properly cleaned up.
# -I$(top_srcdir)/src/midend/binaryAnalyses/graph
# -I$(top_srcdir)/src/midend/programTransformation/runtimeTransformation
# -I$(top_srcdir)/projects/dataBase

# DQ (12/22/2008): Move Boost directory to front and used "-isystem" option so
# that a system with a previous (older) installation of boost does not interfer
# with the use of ROSE (and the version of boost specified using "--with-boost").
# $(BOOST_CPPFLAGS)

# DQ (10/28/2008): I think these should be included, I don't know why they
# were removed (used with Microsoft Windows tests, and Yices tests).
# DQ: Not used currently
#     $(ROSE_WINE_INCLUDES)

# DQ (5/3/2007): Removed from ROSE
#     -I$(top_srcdir)/src/midend/programAnalysis/dominatorTreesAndDominanceFrontiers
#     -I$(top_srcdir)/src/midend/programAnalysis/staticProgramSlicing

# DQ (10/22/2004): Removed when I could not get annotation work to compile properly with make distcheck rule
#     -I$(top_srcdir)/src/midend/programAnalysis/annotationLanguageParser

# New way using two libraries
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.a $(top_builddir)/src/libedg.a
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.so $(top_builddir)/src/libedg.so
# ROSE_LIBS_WITH_PATH = $(libdir)/librose.so $(libdir)/libedg.so
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.la
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.la $(JAVA_JVM_LIB)
# JJW 7/25/2008: This should probably just be the same as ROSE_LIBS
ROSE_LIBS_WITH_PATH = $(ROSE_LIBS)

# ROSE_LIBS = $(top_builddir)/src/librose.la -lm $(LEXLIB) $(SQLITE_DATABASE_LIBS) $(LIB_QT) $(WAVE_LDFLAGS) $(WAVE_LIBRARIES) $(WAVE_LIBS) $(JAVA_JVM_LIB) $(RT_LIBS)

# MS 10/19/2015: added ROSE_BOOST_LIBS variable to share exact same
# boost libs list in ROSE an in the ROSTTA Makefiles.
ROSE_BOOST_LIBS = $(BOOST_LDFLAGS) $(BOOST_DATE_TIME_LIB) $(BOOST_CHRONO_LIB) \
  $(BOOST_THREAD_LIB) $(BOOST_FILESYSTEM_LIB) $(BOOST_PROGRAM_OPTIONS_LIB) \
  $(BOOST_RANDOM_LIB) $(BOOST_REGEX_LIB)  $(BOOST_SYSTEM_LIB) $(BOOST_SERIALIZATION_LIB)  \
  $(BOOST_WAVE_LIB) $(BOOST_IOSTREAMS_LIB) $(BOOST_PYTHON_LIB)

ROSE_LIBS = $(abspath $(top_builddir)/src/librose.la) -lm \
	$(JAVA_JVM_LINK) $(SQLITE_DATABASE_LIBS) $(QT_LIBS) \
	$(ROSE_BOOST_LIBS) $(SQLITE3_LDFLAGS) $(RT_LIBS) \
	$(ROSE_YICES_LIBS_WITH_PATH) $(ROSE_Z3_LIBS_WITH_PATH) \
	$(ROSE_PHP_LIBS_WITH_PATH) $(ROSE_DWARF_LIBS_WITH_PATH) \
	$(ROSE_ELF_LIBS_WITH_PATH) $(ROSE_GUI_LIBS_WITH_PATH) \
	$(ROSE_QT_LIBS_WITH_PATH) $(ROSE_SSL_LIBS) $(ROSE_ETHER_LIBS) \
	$(ROSE_INTEL_COMPILER_MATH_LIBS) $(ROSE_ATERM_LIBS) \
	$(ROSE_FLANG_LIBS) $(ROSE_YAML_LIBS_WITH_PATH) \
	$(ROSE_LIBMAGIC_LIBS_WITH_PATH) \
	$(ROSE_READLINE_LIBS_WITH_PATH) $(ROSE_DLIB_LIBS_WITH_PATH) \
	$(ROSE_GCRYPT_LIBS_WITH_PATH) $(ROSE_LIBPQXX_LIBS_WITH_PATH) \
	$(ROSE_COBOL_PT_LIBS_WITH_PATH) $(ROSE_PYTHON_LIBS_WITH_PATH) \
	$(ROSE_QUAD_FLOAT_MATH) $(ROSE_CAPSTONE_LIBS_WITH_PATH) \
	$(am__append_1)

#if ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION
#ROSE_LIBS += $(libroseAdalibraries) 
#endif

#========================================================================================================================
# These are the "-R directory" switches that need to be passed to libtool running in link mode to make sure that ROSE
# executables have rpath properties that point to the directories containing the libraries we're using. Do not add
# system directories (or at least not at the front of this list) because that will cause the system-installed version of
# a library to be used rather than some user-specific version.
#
# Here's the motivation for using rpath instead of LD_LIBRARY_PATH: Consider what happens if some ROSE tool, call it
# myTranslator, is compiled and linked against a custom, user-installed version of libz.so (perhaps because myTranslator
# is using a custom version of some graphics library, like libgraphicsmagick.so, that needs a newer libz.so than what's
# installed on the system).  If I then set LD_LIBRARY_PATH to point to the directory with my libz.so I'll be able to run
# myTranslator, however I probably won't be able any system installed tool that uses libz.so. This includes not being
# able to run /usr/bin/as, which might be called indirectly when myTranslator invokes the backend compiler (because
# LD_LIBRARY_PATH overrides the rpath built into /usr/bin/as).  Run-time linking with the wrong dynamic library at best
# produces an error message from the linker, but more often just results in a fault of some sort.
#
# How does rpath fix this problem? It encodes into each executable the list of directories that should be searched when
# the executable is run, similar to LD_LIBRARY_PATH but on a per-executable basis.
#
# The filter-out is removing specific libraries (-lwhatever), the GCC's POSIX thread switch (-pthread), static libraries
# (whatever.a), and various system directories that might have the wrong library versions and which are searched
# automatically anyway. The outer patsubst is changing "-Ldirectory" to just "directory", and the addprefix is changing
# each directory to "-R directory" which is libtool's switch for adding an rpath to an executable.
#
# The inner-most patsubst needs more explanation: Although most low-level libraries like libz, libpng, etc. are normally
# installed in well-known system-wide locations (like /usr/lib), when testing ROSE in matrix testing using RMC, these
# libraries are often compiled and installed locally in such ways that they're not binary compatible with the
# system-installed versions. However, ROSE doesn't have configuration or cmake options for all these libraries because
# there could eventually be far too many. Therefore, we use the fact that RMC has already chosen the correct library
# directories and added their names to various environment variables. The lines of the form
#     $(subst :, ,# $(whatever_LIBDIRS))
# split the named environment variable into individual directory names.  If there's a ROSE configure option to specify
# the library location, then DO NOT list an environment variable here--use the directory from configure instead (which
# goes into ROSE_LIBS above).
ROSE_RPATHS = $(patsubst -L%,-R %, $(filter-out -L/lib% -L/usr/lib% \
	-L/usr/local/lib% -L/var/lib%, $(filter -L%, $(ROSE_LIBS) \
	$(subst :, , $(GNU_COMPILERS_LIBDIRS)) $(subst :, , \
	$(LIBBZ2_LIBDIRS)) $(subst :, , $(LIBGRAPHICSMAGICK_LIBDIRS)) \
	$(subst :, , $(LIBJPEG_LIBDIRS)) $(subst :, , \
	$(LIBLCMS_LIBDIRS)) $(subst :, , $(LIBLZMA_LIBDIRS)) $(subst \
	:, , $(LIBPNG_LIBDIRS)) $(subst :, , $(LIBTIFF_LIBDIRS)) \
	$(subst :, , $(PYTHON_LIBDIRS)) $(subst :, , $(SPOT_LIBDIRS)) \
	$(subst :, , $(ZLIB_LIBDIRS)) $(subst :, , \
	$(INTEL_COMPILER_RPATHS)) ) ) ) $(am__append_2)
@OS_MACOSX_FALSE@ROSE_LINK_RPATHS = $(addprefix -Wl$(comma)-rpath , $(filter-out -R , $(ROSE_RPATHS)))

# Rasmussen (3/23/2018): Added ROSE_LINK_RPATHS to enable linking on Mac OSX with ROSE installation
@OS_MACOSX_TRUE@ROSE_LINK_RPATHS = $(addprefix -Xlinker -rpath -Xlinker , $(filter-out -R , $(ROSE_RPATHS)))
@OS_MACOSX_FALSE@comma = ,
INTEL_COMPILER_RPATHS = $(shell $(top_srcdir)/scripts/intel-compiler-rpaths.sh)

# DQ (3/8/2009): This fails when I try to include it (fails in rose/src/testSharedRoseLib).
#  $(INTEL_PIN_LIB_PATHS) $(INTEL_PIN_LIBS)

# DQ (3/14/2009): It is cleaner to just required that Intel Pin support require setting
# the LD_LIBRARYPATH to include: $(INTEL_PIN_PATH)/intel64/lib-ext

# This ROSE_SEPARATE_LIBS is used for the linking of preprocessor.C used within
# development. The use of the seperate libraries make the linking faster where the
# main librose library is not built.  Libtool may have changed this so that we could
# just link to librose now just as easily, but one has to rebuild librose each time
# instead of just the individual shared library.
# JJW 7/25/2008: This should probably just be the same as ROSE_LIBS
ROSE_SEPARATE_LIBS = $(ROSE_LIBS)

# QY (11/2/04): removed -lastoutlining from ROSE_SEPARATE_LIBS

# DQ (10/22/2004): Removed when I could not get annotation work to compile properly
# with make distcheck rule
# -lannotationLanguageParser(appears after -lvaluePropagation)

# Test harness variables. See "rth_run.pl --help" for more info.  The RTH_RUN_FLAGS is meant to be set on the
# "make" command-line, but the default depends on the value of the verbosity $(V) flag.
RTH_RUN_FLAGS_V_ = 
RTH_RUN_FLAGS_V_0 = 
RTH_RUN_FLAGS_V_1 = --immediate-output
RTH_RUN_FLAGS = $(RTH_RUN_FLAGS_V_$(V))

# Default timeout that you can override on the "make" commandline. Valid values
# are integers followed by "s" (seconds), "m" (minutes), "h" (hours), or the
# word "never".  See scripts/rth_run.pl for detailed documentation.
RTH_TIMEOUT = 15m
RTH_RUN = $(top_srcdir)/scripts/rth_run.pl $(RTH_RUN_FLAGS) \
	srcdir=$(abspath $(srcdir)) top_srcdir=$(abspath $(top_srcdir)) \
	blddir=$$(pwd) top_blddir=$(abspath $(top_builddir)) \
	VALGRIND=$(VALGRIND) TIMEOUT=$(RTH_TIMEOUT)

RTH_STATS = $(top_srcdir)/scripts/rth_stats.pl

# Forward declarations for "+="

# Some of the tests create files name "tfile_%d_%d" where the two numbers are a serial number and a PID. About 5000 of
# these files are created in total and many of them are not placed in the specified temporary directories. Therefore
# we have to remove them with a wildcard instead. Sorry if you had your own files with similar names (we tried to be careful).
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@MOSTLYCLEANFILES = $(SyscallTests_Standalone_Exes) \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(SyscallTests_WithTestLib_Exes) \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(SYS_TEST_INPUTS) \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(addsuffix .o, \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(SYS_TEST_INPUTS)) \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(addsuffix .o, \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(basename $(notdir \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(SYS_TEST_SUPPORT_SRC)))) \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	libtestsupport.a \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	libipc.a rm -f \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	tfile_[0-9]_[0-9][0-9][0-9] \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	rm -f \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	tfile_[0-9]_[0-9][0-9][0-9][0-9] \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	rm -f \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	tfile_[0-9]_[0-9][0-9][0-9][0-9][0-9] \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	rm -f \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	tfile_[0-9][0-9]_[0-9][0-9][0-9] \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	rm -f \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	tfile_[0-9][0-9]_[0-9][0-9][0-9][0-9] \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	rm -f \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	tfile_[0-9][0-9]_[0-9][0-9][0-9][0-9][0-9] \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	rm -f \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	tfile_[0-9][0-9][0-9]_[0-9][0-9][0-9] \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	rm -f \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	tfile_[0-9][0-9][0-9]_[0-9][0-9][0-9][0-9] \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	rm -f \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	tfile_[0-9][0-9][0-9]_[0-9][0-9][0-9][0-9][0-9] \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	rm -f \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	tfile_[0-9][0-9][0-9][0-9]_[0-9][0-9][0-9] \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	rm -f \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	tfile_[0-9][0-9][0-9][0-9]_[0-9][0-9][0-9][0-9] \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	rm -f \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	tfile_[0-9][0-9][0-9][0-9]_[0-9][0-9][0-9][0-9][0-9] \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(PTHREAD_TEST_INPUTS) \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(addsufix .o, \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(PTHREAD_TEST_INPUTS))

###############################################################################################################################
#  DOCUMENTATION, CONFIGURATION, ETC
###############################################################################################################################

###############################################################################################################################
#  PROGRAMS
###############################################################################################################################

# Do not install RSIM_Private.h -- it is only used during compilation.

#-----------------------------------------------------------------------
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@EXTRA_DIST = README \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	test_status.txt \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	internal_tests.conf \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	syscall_tests.conf \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	pthread_tests.conf \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM.dxy \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	USED_HEADER_FILES.C \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	demos/MultiDomainDemo.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	demos/RiscTracingPolicy.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Private.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(SYS_TEST_SUPPORT_SRC) \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/audit_parse_verify.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/audit_utils.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/bintest_config.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/clone_platform.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/compat_16.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/compat_uid.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/compiler.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/getdents.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/include_j_h.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/includes.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/ipcmsg.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/ipcsem.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/ipcshm.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/libtestsuite.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/linux_syscall_numbers.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/ltp_signal.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/rmobj.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/search_path.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/set_thread_area.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/system_specific_process_info.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/test.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/usctest.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.120.1.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.120.2.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.120.3.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.120.4.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.120.5.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.120.6.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.120.7.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.183.3.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.54.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.65.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(SYS_TEST_INPUTS_SRC) \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(IPC_SUPPORT_SRC) \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(PTHREAD_TEST_INPUTS_SRC) \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(PTHREAD_TEST_INCLUDES)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@include_HEADERS =  \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Adapter.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Callbacks.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_ColdFire.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Common.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Debugger.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Futex.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Linux.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Linux32.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Linux64.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Pentium4.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Printer.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Process.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Semantics.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_SignalHandling.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Simulator.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Thread.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Tools.h

# The ipc support library
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@noinst_HEADERS = $(srcdir)/syscall_tests/ipcmsg.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/ipcsem.h \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/ipcshm.h
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@TEST_TARGETS = $(SyscallTests_Standalone_Tests) \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(SyscallTests_WithTestLib_Tests)

###############################################################################################################################
#  SIMULATOR LIBRARY
###############################################################################################################################
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@lib_LTLIBRARIES = libRSIM.la
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@libRSIM_la_CPPFLAGS = $(ROSE_INCLUDES)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@libRSIM_la_CXXFLAGS = $(AM_CXXFLAGS) -Wno-unused-result
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@libRSIM_la_SOURCES = \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Adapter.C				\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Callbacks.C			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_ColdFire.C				\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Common.C				\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Debugger.C				\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Futex.C				\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Linux.C				\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Linux32.C				\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Linux64.C				\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Pentium4.C				\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Printer.C				\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Process.C				\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Semantics.C			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_SignalHandling.C			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Simulator.C			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Thread.C				\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	RSIM_Tools.C

@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@rsim_x86sim_SOURCES = x86sim.C
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@rsim_x86sim_CPPFLAGS = $(ROSE_INCLUDES)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@rsim_x86sim_LDFLAGS = $(ROSE_RPATHS)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@rsim_x86sim_LDADD = $(BOOST_LDFLAGS) libRSIM.la $(ROSE_LIBS)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@rsim_show_initial_stack_SOURCES = show-initial-stack.C
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@rsim_show_initial_stack_CPPFLAGS = $(ROSE_INCLUDES)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@rsim_show_initial_stack_LDFLAGS = $(ROSE_RPATHS)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@rsim_show_initial_stack_LDADD = $(ROSE_LIBS)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@rsim_ports_opened_SOURCES = demos/ports_opened.C
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@rsim_ports_opened_CPPFLAGS = $(ROSE_INCLUDES)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@rsim_ports_opened_LDFLAGS = $(ROSE_RPATHS)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@rsim_ports_opened_LDADD = $(BOOST_LDFLAGS) libRSIM.la $(ROSE_LIBS)

###############################################################################################################################
#  INTERNAL SIMULATOR TESTS
###############################################################################################################################
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@SimulatorFlags = --arch=linux-amd64 --native-load --trace=syscall,mmap,progress

###############################################################################################################################
#  SYSTEM CALL TESTS
###############################################################################################################################

# Sources to generate the 32- or 64-bit specimen executables.  These come in three flavors depending on how they're linked:
#    SyscallTests_Standalone   -- stand-alone, no additional source required
#    SyscallTests_WithTestLib  -- use the SYS_TEST_SUPPORT library
#    SyscallTests_WithRtLib    -- require linking with librt

#-----------------------------------------------------------------------
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@SyscallTests_Standalone_Src = \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.114.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.122.01.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.122.02.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.122.03.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.13.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.197.1.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.197.3.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.20.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.24.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.3.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.4.1.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.41.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.4.2.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.47.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.49.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.50.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.5.1.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.5.2.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.5.4.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.5.6.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.57.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.5.9.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.64.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.65.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.78.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.83.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_sa.85.c 

@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@SyscallTests_Standalone_Exes = $(notdir $(basename $(SyscallTests_Standalone_Src)))
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@SyscallTests_Standalone_Tests = $(addsuffix .passed, $(SyscallTests_Standalone_Exes))

#-----------------------------------------------------------------------

# The test support library, statically compiled into each test
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@SyscallTests_LibTest_Src = \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/audit_parse_verify.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/syscall_tests/audit_parse_verify_utils.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/syscall_tests/audit_utils.c			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/syscall_tests/cleanup.c			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/syscall_tests/cloner.c			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/syscall_tests/get_high_address.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/libipc.c			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/syscall_tests/libtestsuite.c			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/syscall_tests/parse_opts.c			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/syscall_tests/rmobj.c				\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/syscall_tests/search_path.c			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/syscall_tests/simple_test_looping.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/syscall_tests/system_specific_process_info.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/syscall_tests/tst_is_cwd.c			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/syscall_tests/tst_kvercmp.c			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/syscall_tests/tst_res.c			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/syscall_tests/tst_sig.c			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/syscall_tests/tst_tmpdir.c


# Each test...
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@SyscallTests_WithTestLib_Src = \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.100.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.100.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.102.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.102.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.102.3.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.102.4.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.114.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.114.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.116.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.116.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.msgctl.01.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.msgctl.02.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.msgctl.03.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.msgctl.08.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.msgget.01.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.msgget.02.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.msgrcv.01.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.msgrcv.03.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.msgrcv.04.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.msgrcv.05.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.msgrcv.06.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.msgsnd.01.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.msgsnd.03.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.msgsnd.04.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.msgsnd.05.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.msgsnd.06.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.semctl.01.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.semctl.05.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.semget.01.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.semget.03.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.semop.01.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.semop.03.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.semop.04.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.semop.05.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.shmat.01.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.shmctl.01.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.shmctl.04.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.shmdt.01.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.shmdt.02.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.shmget.01.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.117.shmget.02.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.118.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.118.3.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.122.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.125.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.125.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.125.3.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.133.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.140.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.141.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.141.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.141.3.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.141.4.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.142.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.142.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.142.3.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.144.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.144.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.144.3.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.144.4.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.144.5.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.146.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.146.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.146.3.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.146.4.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.146.5.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.146.6.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.162.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.162.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.162.3.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.162.4.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.174.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.174.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.174.3.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.175.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.176.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.179.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.183.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.183.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.186.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.186.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst_18.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.192.10.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.192.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.192.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.192.3.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.192.4.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.192.5.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.192.6.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.192.7.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.192.8.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.192.9.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.195.5.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.195.6.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.196.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.197.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.197.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.199.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.199.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.199.3.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.200.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.200.3.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.201.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.205.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.205.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.205.4.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.207.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.212.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.220.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.220.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.220.3.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.220.4.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.221.01.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.221.02.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.221.03.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.221.04.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.221.05.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.221.06.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.221.07.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.221.08.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.221.09.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.221.10.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.221.11.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.221.12.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.221.13.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.221.16.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.221.17.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.221.19.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.221.20.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.221.21.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.221.22.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.221.23.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.221.24.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.221.25.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.221.26.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.221.27.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.221.28.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.224.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.243.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.243.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.252.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.258.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.265.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.266.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.306.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.1.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.1.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.3.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.3.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.3.3.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.3.4.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.4.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.4.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.4.3.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.4.4.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.4.5.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.9.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.9.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.9.3.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.9.4.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.13.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.13.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.19.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.19.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.19.3.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.19.4.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.19.5.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.19.6.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.19.7.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.19.8.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.19.9.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.19.10.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.20.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.20.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.29.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.29.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.29.3.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.30.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.311.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.33.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.33.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.36.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.36.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.38.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.38.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.38.3.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.38.4.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.38.5.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.38.6.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.38.7.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.38.8.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.38.10.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.38.13.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.38.14.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.24.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.24.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.24.3.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.57.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.57.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.57.3.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.60.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.60.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.60.3.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.63.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.63.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.63.3.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.63.4.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.63.5.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.64.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.64.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.76.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.76.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.78.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.83.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.83.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.83.4.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.83.5.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.91.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.91.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.91.3.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.93.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.93.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.93.3.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.93.4.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.94.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.94.2.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.99.1.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/syscall_tests/syscall_tst.99.2.c

@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@SyscallTests_WithTestLib_Exes = $(notdir $(basename $(SyscallTests_WithTestLib_Src)))
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@SyscallTests_WithTestLib_Tests = $(addsuffix .passed, $(SyscallTests_WithTestLib_Exes))
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@SYS_TEST_INPUTS_RT_SRC = \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@                   $(srcdir)/syscall_tests/syscall_rt.18.c


# SYS_TEST_INPUTS_TS_SRC = $(wildcard $(srcdir)/syscall_tests/syscall_ts*.c)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@SYS_TEST_INPUTS_TS_SRC = 

# DQ (2/13/2011): This test fails to terminate when run on Hudson 
# (failed on hudson-rose-07, email with error details sent morning of 2/13/2011 to Robb and Andreas).
#		   $(srcdir)/syscall_tests/syscall_tst.183.3.c
# Liao 2/16/2011: I have to comment out this since  ERROR: Cannot create file /tmp/notty		   
#		   $(srcdir)/syscall_tests/syscall_tst.54.c

# These cannot be run reliably (at least not concurrently with other tests.
# This variable is unused, but the scripts/policies/UnusedSources policy picks up these names to make these
# otherwise unused fails as used.
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@TEST_INPUTS_FAILING = \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.117.msgget.03.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.117.shmget.03.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.78.2.c          \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.95.c 	       \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.117.msgctl.06.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.117.msgctl.07.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.117.msgget.03.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.117.msgget.04.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.117.msgrcv.02.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.117.msgsnd.02.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.117.semctl.02.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.117.semctl.03.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.117.semctl.04.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.117.semget.02.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.117.semop.02.c  \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.117.shmat.02.c  \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.117.shmat.03.c  \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.117.shmctl.02.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.117.shmctl.03.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.117.shmget.03.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.117.shmget.04.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.117.shmget.05.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall_tst.118.2.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.195.1.c	       \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.195.2.c	       \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.195.3.c	       \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.196.2.c	       \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.196.3.c	       \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.221.18.c	       \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.83.3.c	       \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.99.3.c	       \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.117.msgctl.09.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.117.msgctl.10.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.117.msgctl.11.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.117.semctl.06.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.221.14.c	       \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.221.15.c	       \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/tests/syscall_tst.140.1.c


#	Comments about $(TEST_INPUTS_FAILING) and why they're commented out.
#		   $(srcdir)/syscall_tests/syscall_tst.117.msgget.03.c
#		   $(srcdir)/syscall_tests/syscall_tst.117.shmget.03.c
#  			Tries to create message queues or shared memory segments until all resources are exhausted in order
#                       to see what kind of error number is returned. Unfortunately, other tests are also requiring these
#			resources at the same time.
#		   $(srcdir)/syscall_tests/syscall_tst.78.2.c
#			Calls gettimeofday() in rapid succession for 30 seconds to make sure the value is monotonically
#			increasing. However, some versions of the kernel have a bug in the way they interact with the RTC
#			which can cause the clock to go backward by small amounts every so often.  See this discussion
#			for an example: http://www.gossamer-threads.com/lists/linux/kernel/813344.
#			This test can also fail if run while a leap-second is introduced since POSIX time goes backward
#			near the leap second (slim chance we're actually testing right then!)
#		   $(srcdir)/syscall_tests/syscall_tst.95.c 
#			This test does not pass natively on some systems, therefore we shouldn't expect it to pass
#			under x86sim either.
#		   $(srcdir)/syscall_tests/syscall_tst.117.msgctl.06.c
#		   $(srcdir)/syscall_tests/syscall_tst.117.msgctl.07.c
#		   $(srcdir)/syscall_tests/syscall_tst.117.msgget.04.c
#		   $(srcdir)/syscall_tests/syscall_tst.117.msgrcv.02.c
#		   $(srcdir)/syscall_tests/syscall_tst.117.msgsnd.02.c
#		   $(srcdir)/syscall_tests/syscall_tst.117.semctl.02.c
#		   $(srcdir)/syscall_tests/syscall_tst.117.semctl.03.c
#		   $(srcdir)/syscall_tests/syscall_tst.117.semctl.04.c
#		   $(srcdir)/syscall_tests/syscall_tst.117.semget.02.c
#		   $(srcdir)/syscall_tests/syscall_tst.117.semop.02.c
#		   $(srcdir)/syscall_tests/syscall_tst.117.shmat.02.c
#		   $(srcdir)/syscall_tests/syscall_tst.117.shmat.03.c
#		   $(srcdir)/syscall_tests/syscall_tst.117.shmctl.02.c
#		   $(srcdir)/syscall_tests/syscall_tst.117.shmctl.03.c
#		   $(srcdir)/syscall_tests/syscall_tst.117.shmget.04.c
#		   $(srcdir)/syscall_tests/syscall_tst.117.shmget.05.c
#		   $(srcdir)/syscall_tests/syscall_tst.195.1.c
#		   $(srcdir)/syscall_tests/syscall_tst.195.2.c
#		   $(srcdir)/syscall_tests/syscall_tst.195.3.c
#		   $(srcdir)/syscall_tests/syscall_tst.196.2.c
#		   $(srcdir)/syscall_tests/syscall_tst.196.3.c
#		   $(srcdir)/syscall_tests/syscall_tst.221.18.c  (tries to setreud in a privileged way)
#		   $(srcdir)/syscall_tests/syscall_tst.83.3.c
#		   $(srcdir)/syscall_tests/syscall_tst.99.3.c
#			These tests either explicitly check for root effective uid, or the fail with EACCESS on some
#			kernels. We can't be testing ROSE as root!
#		   $(srcdir)/syscall_tests/syscall_tst.117.msgctl.09.c
#		   $(srcdir)/syscall_tests/syscall_tst.117.msgctl.10.c
#		   $(srcdir)/syscall_tests/syscall_tst.117.msgctl.11.c
#		   $(srcdir)/syscall_tests/syscall_tst.117.semctl.06.c
#		   $(srcdir)/syscall_tests/syscall_tst.221.14.c
#		   $(srcdir)/syscall_tests/syscall_tst.221.15.c
#			Disabled because of deadlocks in simulated futex() call.  These need more work and should be enabled
#			when possible. [FIXME RPM 2011-01-07]
#		   $(srcdir)/syscall_tests/syscall_tst.140.1.c
#			This test cannot be run under the simulator with stderr redirected to a file (it enters an infinite loop
#			somewhere in the setrlimit() syscall emulation). Since "make check" runs tests with their stderr
#			redirected to a file, we will skip this test.
#		   $(srcdir)/syscall_tests/syscall_tst.118.2.c
#			Uses floating point instructions
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@SYS_TEST_INPUTS_NM_SRC = \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.114.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.122.01.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.122.02.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.122.03.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.13.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.197.1.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.197.3.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.199.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.200.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.201.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.202.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.20.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.224.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.3.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.4.1.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.41.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.4.2.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.47.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.49.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.50.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.5.1.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.5.2.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.5.4.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.5.6.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.57.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.5.9.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.64.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.65.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.78.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.83.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		   $(srcdir)/syscall_tests/syscall.85.c 

@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@SYS_TEST_INPUTS_SRC = $(SYS_TEST_INPUTS_SA_SRC) $(SYS_TEST_INPUTS_RT_SRC) $(SYS_TEST_INPUTS_TS_SRC) $(SYS_TEST_INPUTS_NM_SRC)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@SYS_TEST_INPUTS_SA = $(basename $(notdir $(SYS_TEST_INPUTS_SA_SRC)))
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@SYS_TEST_INPUTS_RT = $(basename $(notdir $(SYS_TEST_INPUTS_RT_SRC)))
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@SYS_TEST_INPUTS_TS = $(basename $(notdir $(SYS_TEST_INPUTS_TS_SRC)))
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@SYS_TEST_INPUTS_NM = $(basename $(notdir $(SYS_TEST_INPUTS_NM_SRC)))
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@SYS_TEST_INPUTS = $(SYS_TEST_INPUTS_SA) $(SYS_TEST_INPUTS_RT) $(SYS_TEST_INPUTS_TS) $(SYS_TEST_INPUTS_NM)

# The test support library. These will not be generated if ENABLE_I386 is not defined.
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@SYS_TEST_SUPPORT_OBJ = $(patsubst %.c, %.o, $(notdir $(SYS_TEST_SUPPORT_SRC)))
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@IPC_SUPPORT_SRC = $(srcdir)/syscall_tests/libipc.c
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@IPC_SUPPORT_OBJ = $(patsubst %.c, %.o, $(notdir $(IPC_SUPPORT_SRC)))
@ENABLE_I386_FALSE@@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@SYS_TEST_TARGETS = warn_no_tests

# Test targets are test names suffixed with ".passed" (but when a test fails it produces ".failed" instead).
# Each target runs "x86sim" on one of the TEST_INPUT files. Exit status determines success or failure.
# Test targets must be 32-bit x86; if we don't have that capability then the tests are not run.
@ENABLE_I386_TRUE@@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@SYS_TEST_TARGETS = $(addsuffix .passed, $(SYS_TEST_INPUTS))

# Cleanup targets. We can't put all the generated files in MOSTLYCLEANFILES because the list gets too long to pass
# as arguments to "rm" (deficiency in automake).  Therefore we'll create a *.clean target for each test and have
# clean-local depend on it.
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@SYS_TEST_CLEANUPS = $(addsuffix .clean, $(SYS_TEST_INPUTS))

###############################################################################################################################
#  PTHREAD TESTS
###############################################################################################################################
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@PTHREAD_TEST_INPUTS_SRC = \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_atfork.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_atfork.1-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_atfork.2-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_atfork.2-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_atfork.3-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_atfork.3-3.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_atfork.4-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_destroy.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_destroy.2-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_destroy.3-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_getdetachstate.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_getdetachstate.1-2.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_getinheritsched.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_getschedparam.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_getschedpolicy.2-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_getscope.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_getstack.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_getstacksize.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_init.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_init.2-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_init.3-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_init.4-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_setdetachstate.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_setdetachstate.1-2.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_setdetachstate.2-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_setdetachstate.4-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_setinheritsched.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_setinheritsched.2-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_setinheritsched.4-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_setschedparam.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_setschedparam.1-2.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_setschedpolicy.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_setschedpolicy.4-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_setscope.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_setscope.4-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_setstack.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_setstack.2-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_setstack.4-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_setstack.6-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_setstack.7-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_setstacksize.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_setstacksize.2-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_setstacksize.4-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_barrier_destroy.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_barrier_destroy.2-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_barrier_init.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_barrier_init.3-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_barrier_init.4-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_barrier_wait.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_barrier_wait.2-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_barrier_wait.3-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_barrier_wait.3-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_barrierattr_destroy.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_barrierattr_getpshared.1-1.c   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_barrierattr_getpshared.2-1.c   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_barrierattr_init.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_barrierattr_init.2-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_barrierattr_setpshared.1-1.c   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_barrierattr_setpshared.2-1.c   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cancel.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cancel.1-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cancel.1-3.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cancel.2-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cancel.2-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cancel.2-3.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cancel.3-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cancel.4-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cancel.5-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cancel.5-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cleanup_pop.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cleanup_pop.1-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cleanup_pop.1-3.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cleanup_push.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cleanup_push.1-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cleanup_push.1-3.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_broadcast.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_broadcast.1-2.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_broadcast.2-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_broadcast.2-2.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_broadcast.2-3.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_broadcast.4-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_broadcast.4-2.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_destroy.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_destroy.3-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_init.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_init.1-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_init.2-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_init.2-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_init.3-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_init.4-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_signal.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_signal.2-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_signal.2-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_signal.4-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_signal.4-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_timedwait.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_timedwait.2-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_timedwait.2-2.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_timedwait.2-3.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_timedwait.2-4.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_timedwait.2-5.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_timedwait.2-6.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_timedwait.2-7.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_timedwait.3-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_timedwait.4-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_timedwait.4-2.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_timedwait.4-3.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_wait.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_wait.2-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_wait.2-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_wait.2-3.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_wait.3-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_cond_wait.4-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_condattr_destroy.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_condattr_destroy.2-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_condattr_destroy.3-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_condattr_destroy.4-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_condattr_getclock.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_condattr_getclock.1-2.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_condattr_getpshared.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_condattr_getpshared.1-2.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_condattr_getpshared.2-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_condattr_init.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_condattr_init.3-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_condattr_setclock.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_condattr_setclock.1-2.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_condattr_setclock.1-3.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_condattr_setclock.2-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_condattr_setpshared.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_condattr_setpshared.1-2.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_condattr_setpshared.2-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_create.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_create.1-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_create.1-3.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_create.1-4.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_create.1-5.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_create.1-6.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_create.11-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_create.12-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_create.14-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_create.15-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_create.2-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_create.3-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_create.3-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_create.4-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_create.5-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_create.5-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_create.8-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_create.8-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_detach.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_detach.1-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_detach.2-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_detach.2-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_detach.3-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_detach.4-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_detach.4-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_detach.4-3.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_equal.1-1.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_equal.1-2.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_equal.2-1.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_exit.1-1.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_exit.1-2.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_exit.2-1.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_exit.2-2.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_exit.3-1.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_exit.3-2.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_exit.4-1.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_exit.5-1.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_exit.6-1.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_exit.6-2.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_getcpuclockid.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_getschedparam.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_getschedparam.1-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_getschedparam.1-3.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_getschedparam.4-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_getspecific.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_getspecific.3-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_join.1-1.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_join.1-2.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_join.2-1.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_join.3-1.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_join.4-1.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_join.5-1.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_join.6-2.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_join.6-3.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_key_create.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_key_create.1-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_key_create.2-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_key_create.3-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_key_delete.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_key_delete.1-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_key_delete.2-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_kill.1-1.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_kill.1-2.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_kill.2-1.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_kill.3-1.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_kill.6-1.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_kill.7-1.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_kill.8-1.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_destroy.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_destroy.2-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_destroy.2-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_destroy.3-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_destroy.5-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_destroy.5-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_getprioceiling.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_init.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_init.1-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_init.2-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_init.3-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_init.3-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_init.4-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_init.5-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_init.5-3.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_lock.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_lock.2-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_lock.3-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_lock.4-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_lock.5-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_timedlock.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_timedlock.2-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_timedlock.4-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_timedlock.5-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_timedlock.5-2.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_timedlock.5-3.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_trylock.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_trylock.1-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_trylock.2-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_trylock.3-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_trylock.4-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_trylock.4-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_trylock.4-3.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_unlock.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_unlock.2-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_unlock.3-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_unlock.5-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutex_unlock.5-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_destroy.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_destroy.2-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_destroy.3-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_destroy.4-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_getprioceiling.1-1.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_getprioceiling.1-2.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_getprioceiling.3-1.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_getprotocol.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_getpshared.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_getpshared.1-2.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_getpshared.1-3.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_getpshared.3-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_gettype.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_gettype.1-2.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_gettype.1-3.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_gettype.1-4.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_gettype.1-5.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_init.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_init.3-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_setprioceiling.1-1.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_setprioceiling.3-1.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_setprioceiling.3-2.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_setpshared.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_setpshared.1-2.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_setpshared.2-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_setpshared.2-2.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_setpshared.3-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_setpshared.3-2.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_settype.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_settype.3-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_settype.3-2.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_settype.3-3.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_settype.3-4.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_mutexattr_settype.7-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_once.1-1.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_once.1-2.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_once.1-3.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_once.2-1.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_once.3-1.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_once.6-1.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_destroy.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_destroy.3-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_init.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_init.2-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_init.3-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_init.6-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_rdlock.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_rdlock.2-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_rdlock.2-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_rdlock.2-3.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_rdlock.4-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_rdlock.5-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_timedrdlock.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_timedrdlock.2-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_timedrdlock.3-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_timedrdlock.5-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_timedrdlock.6-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_timedrdlock.6-2.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_timedwrlock.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_timedwrlock.2-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_timedwrlock.3-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_timedwrlock.5-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_timedwrlock.6-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_timedwrlock.6-2.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_tryrdlock.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_trywrlock.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_unlock.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_unlock.2-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_unlock.3-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_unlock.4-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_unlock.4-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_wrlock.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_wrlock.2-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlock_wrlock.3-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlockattr_destroy.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlockattr_destroy.2-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlockattr_getpshared.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlockattr_getpshared.2-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlockattr_getpshared.4-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlockattr_init.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlockattr_init.2-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_rwlockattr_setpshared.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_self.1-1.c			   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_setcancelstate.1-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_setcancelstate.1-2.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_setcancelstate.2-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_setcancelstate.3-1.c	   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_setcanceltype.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_setcanceltype.1-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_setcanceltype.2-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_setschedparam.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_setschedparam.1-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_setschedparam.4-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_setschedparam.5-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_setschedprio.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_setspecific.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_setspecific.1-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_sigmask.10-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_sigmask.12-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_sigmask.14-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_sigmask.15-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_sigmask.16-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_sigmask.18-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_sigmask.4-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_sigmask.5-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_sigmask.6-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_sigmask.7-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_sigmask.8-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_sigmask.8-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_sigmask.8-3.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_sigmask.9-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_spin_destroy.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_spin_destroy.3-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_spin_init.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_spin_init.2-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_spin_init.2-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_spin_init.4-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_spin_lock.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_spin_lock.1-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_spin_lock.3-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_spin_lock.3-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_spin_trylock.4-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_spin_unlock.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_spin_unlock.1-2.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_spin_unlock.3-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_testcancel.1-1.c		   \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_testcancel.2-1.c

@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@PTHREAD_INPUTS_FAILING = \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@                    $(srcdir)/pthread_tests/pthread_attr_setinheritsched.2-2.c  \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@                    $(srcdir)/pthread_tests/pthread_attr_setinheritsched.2-3.c  \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@                    $(srcdir)/pthread_tests/pthread_attr_setinheritsched.2-4.c  \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@                    $(srcdir)/pthread_tests/pthread_attr_setschedparam.1-3.c    \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@                    $(srcdir)/pthread_tests/pthread_attr_setschedparam.1-4.c    \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		    $(srcdir)/pthread_tests/pthread_attr_setscope.5-1.c         \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@                    $(srcdir)/pthread_tests/pthread_barrier_wait.6-1.c          \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@                    $(srcdir)/pthread_tests/pthread_cond_destroy.2-1.c          \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@                    $(srcdir)/pthread_tests/pthread_cond_init.1-3.c             \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@                    $(srcdir)/pthread_tests/pthread_cond_init.4-2.c             \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@                    $(srcdir)/pthread_tests/pthread_cond_signal.1-2.c           \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@                    $(srcdir)/pthread_tests/pthread_create.10-1.c               \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@                    $(srcdir)/pthread_tests/pthread_mutexattr_getprotocol.1-2.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@                    $(srcdir)/pthread_tests/pthread_mutexattr_setprotocol.1-1.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@                    $(srcdir)/pthread_tests/pthread_mutexattr_setprotocol.3-1.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@                    $(srcdir)/pthread_tests/pthread_mutexattr_setprotocol.3-2.c \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@                    $(srcdir)/pthread_tests/pthread_mutexattr_settype.2-1.c     \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@                    $(srcdir)/pthread_tests/pthread_once.4-1.c                  \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@                    $(srcdir)/pthread_tests/pthread_spin_trylock.1-1.c


# Details about why things are listed in $(PTHREAD_INPUTS_FAILING)
#	test result is non-deterministic when run natively
#		    $(srcdir)/pthread_tests/pthread_create.10-1.c
# 	compile error in these tests with undeclared variables
#		    $(srcdir)/pthread_tests/pthread_mutexattr_getprotocol.1-2.c
#		    $(srcdir)/pthread_tests/pthread_mutexattr_setprotocol.1-1.c
#		    $(srcdir)/pthread_tests/pthread_mutexattr_setprotocol.3-1.c
#		    $(srcdir)/pthread_tests/pthread_mutexattr_setprotocol.3-2.c
# 	these tests just take a very long time
#		    $(srcdir)/pthread_tests/pthread_spin_trylock.1-1.c
#		    $(srcdir)/pthread_tests/pthread_cond_init.1-3.c
# 	these jobs doen't stop even when terminated with control c and make terminates
# 	it has to be killed by 'kill -9 '
#		    $(srcdir)/pthread_tests/pthread_mutexattr_settype.2-1.c
#		    $(srcdir)/pthread_tests/pthread_barrier_wait.6-1.c
# 	no main function: 
#		    $(srcdir)/pthread_tests/pthread_once.4-1.c
#	these tests fail when run natively, outside the simulator, within 2 minutes.
#		    $(srcdir)/pthread_tests/pthread_cond_destroy.2-1.c
#		    $(srcdir)/pthread_tests/pthread_cond_init.4-2.c
#		    $(srcdir)/pthread_tests/pthread_cond_signal.1-2.c
#       these tests require special privileges that aren't available for many users
#		    $(srcdir)/pthread_tests/pthread_attr_setinheritsched.2-2.c
#		    $(srcdir)/pthread_tests/pthread_attr_setinheritsched.2-3.c
#		    $(srcdir)/pthread_tests/pthread_attr_setinheritsched.2-4.c
#		    $(srcdir)/pthread_tests/pthread_attr_setschedparam.1-3.c
#		    $(srcdir)/pthread_tests/pthread_attr_setschedparam.1-4.c
#	these tests are hard coded to always fail
#		    $(srcdir)/pthread_tests/pthread_attr_setscope.5-1.c
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@PTHREAD_TEST_INCLUDES = \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/pthread_tests/posixtest.h 	 			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_atfork.testfrmw.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_atfork.testfrmw.h		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_cancel.testfrmw.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_cancel.testfrmw.h		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_cond_broadcast.testfrmw.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_cond_broadcast.testfrmw.h	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_cond_destroy.testfrmw.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_cond_destroy.testfrmw.h		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_cond_init.testfrmw.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_cond_init.testfrmw.h		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_cond_signal.testfrmw.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_cond_signal.testfrmw.h		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_cond_timedwait.testfrmw.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_cond_timedwait.testfrmw.h	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_cond_wait.testfrmw.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_cond_wait.testfrmw.h		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_create.testfrmw.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_create.testfrmw.h		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_create.threads_scenarii.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_detach.testfrmw.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_detach.testfrmw.h		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_detach.threads_scenarii.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_equal.testfrmw.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_equal.testfrmw.h		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_exit.testfrmw.c			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_exit.testfrmw.h			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_exit.threads_scenarii.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_getschedparam.testfrmw.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_getschedparam.testfrmw.h	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_join.testfrmw.c			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_join.testfrmw.h			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_join.threads_scenarii.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_kill.testfrmw.c			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_kill.testfrmw.h			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_mutex_destroy.testfrmw.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_mutex_destroy.testfrmw.h	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_mutex_init.testfrmw.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_mutex_init.testfrmw.h		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_mutex_lock.testfrmw.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_mutex_lock.testfrmw.h		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_mutex_trylock.testfrmw.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_mutex_trylock.testfrmw.h	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_mutex_unlock.testfrmw.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_mutex_unlock.testfrmw.h		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_once.testfrmw.c			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_once.testfrmw.h			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_setschedparam.testfrmw.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_setschedparam.testfrmw.h	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_sigmask.testfrmw.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@        $(srcdir)/pthread_tests/pthread_sigmask.testfrmw.h		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/pthread_tests/speculative.3-1.c			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/pthread_tests/speculative.3-2.c			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/pthread_tests/speculative.4-1.c			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/pthread_tests/speculative.4-2.c			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/pthread_tests/speculative.5-1.c			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/pthread_tests/speculative.5-2.c			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(srcdir)/pthread_tests/speculative.6-1.c

@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@PTHREAD_TEST_INPUTS = $(basename $(notdir $(PTHREAD_TEST_INPUTS_SRC)))
# warn_no_tests was already defined in the "SYSTEM CALL TESTS" section of this makefile
@ENABLE_I386_FALSE@@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@PTHREAD_TEST_TARGETS = warn_no_tests

# Liao 2/11/2011, ensure PTHREAD_TEST_TARGETS = warn_no_tests on MAC
# The assignment of PTHREAD_TEST_TARGETS must be in the same if -statement.
# Without this, the order of this statement and the following if-ENABLE_I386 may be rearranged on MAC
@ENABLE_I386_TRUE@@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@PTHREAD_TEST_TARGETS = $(addsuffix .passed, $(PTHREAD_TEST_INPUTS))

# Cleanup targets. We can't put all the generated files in MOSTLYCLEANFILES because the list gets too long to pass
# as arguments to "rm" (deficiency in automake).  Therefore we'll create a *.clean target for each test and have
# clean-local depend on it.
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@PTHREAD_TEST_CLEANUPS = $(addsuffix .clean, $(PTHREAD_TEST_INPUTS))

###############################################################################################################################
# These things are reported by the policy checkers as being unused. They should be investigated and them removed. Some of them
# likely don't work anymore anyway since we never compile them.
###############################################################################################################################
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@old_stuff_to_remove = \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	local_tests/client_transactions.c	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	local_tests/testFutexInput.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	local_tests/types_extern.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	papers/concrete_1.C			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	papers/concrete_2.C			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	papers/glibc_strcmp.c			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	papers/grep_sample_1.c			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	papers/gzip_sample_1.c			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	papers/gzip_sample_2.c			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	papers/ptrace_jmp.C			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	papers/symbolic_1.C			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	papers/symbolic_2.C			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	papers/types_1.C			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	syscall_tests/syscall_sa.199.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	syscall_tests/syscall_sa.200.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	syscall_tests/syscall_sa.201.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	syscall_tests/syscall_sa.202.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	syscall_tests/syscall_sa.224.c		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	testFutex.C				\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	x86dis.C				\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	x86futex.C				\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	x86robb.C				\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	x86win.C

all: all-am

.SUFFIXES:
.SUFFIXES: .C .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign --ignore-deps projects/simulator2/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign --ignore-deps projects/simulator2/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libRSIM.la: $(libRSIM_la_OBJECTS) $(libRSIM_la_DEPENDENCIES) $(EXTRA_libRSIM_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libRSIM_la_LINK) $(am_libRSIM_la_rpath) $(libRSIM_la_OBJECTS) $(libRSIM_la_LIBADD) $(LIBS)

rsim-ports-opened$(EXEEXT): $(rsim_ports_opened_OBJECTS) $(rsim_ports_opened_DEPENDENCIES) $(EXTRA_rsim_ports_opened_DEPENDENCIES) 
	@rm -f rsim-ports-opened$(EXEEXT)
	$(AM_V_CXXLD)$(rsim_ports_opened_LINK) $(rsim_ports_opened_OBJECTS) $(rsim_ports_opened_LDADD) $(LIBS)

rsim-show-initial-stack$(EXEEXT): $(rsim_show_initial_stack_OBJECTS) $(rsim_show_initial_stack_DEPENDENCIES) $(EXTRA_rsim_show_initial_stack_DEPENDENCIES) 
	@rm -f rsim-show-initial-stack$(EXEEXT)
	$(AM_V_CXXLD)$(rsim_show_initial_stack_LINK) $(rsim_show_initial_stack_OBJECTS) $(rsim_show_initial_stack_LDADD) $(LIBS)

rsim-x86sim$(EXEEXT): $(rsim_x86sim_OBJECTS) $(rsim_x86sim_DEPENDENCIES) $(EXTRA_rsim_x86sim_DEPENDENCIES) 
	@rm -f rsim-x86sim$(EXEEXT)
	$(AM_V_CXXLD)$(rsim_x86sim_LINK) $(rsim_x86sim_OBJECTS) $(rsim_x86sim_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.C.o:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ $<

.C.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.C.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -c -o $@ $<

libRSIM_la-RSIM_Adapter.lo: RSIM_Adapter.C
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libRSIM_la_CPPFLAGS) $(CPPFLAGS) $(libRSIM_la_CXXFLAGS) $(CXXFLAGS) -c -o libRSIM_la-RSIM_Adapter.lo `test -f 'RSIM_Adapter.C' || echo '$(srcdir)/'`RSIM_Adapter.C

libRSIM_la-RSIM_Callbacks.lo: RSIM_Callbacks.C
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libRSIM_la_CPPFLAGS) $(CPPFLAGS) $(libRSIM_la_CXXFLAGS) $(CXXFLAGS) -c -o libRSIM_la-RSIM_Callbacks.lo `test -f 'RSIM_Callbacks.C' || echo '$(srcdir)/'`RSIM_Callbacks.C

libRSIM_la-RSIM_ColdFire.lo: RSIM_ColdFire.C
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libRSIM_la_CPPFLAGS) $(CPPFLAGS) $(libRSIM_la_CXXFLAGS) $(CXXFLAGS) -c -o libRSIM_la-RSIM_ColdFire.lo `test -f 'RSIM_ColdFire.C' || echo '$(srcdir)/'`RSIM_ColdFire.C

libRSIM_la-RSIM_Common.lo: RSIM_Common.C
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libRSIM_la_CPPFLAGS) $(CPPFLAGS) $(libRSIM_la_CXXFLAGS) $(CXXFLAGS) -c -o libRSIM_la-RSIM_Common.lo `test -f 'RSIM_Common.C' || echo '$(srcdir)/'`RSIM_Common.C

libRSIM_la-RSIM_Debugger.lo: RSIM_Debugger.C
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libRSIM_la_CPPFLAGS) $(CPPFLAGS) $(libRSIM_la_CXXFLAGS) $(CXXFLAGS) -c -o libRSIM_la-RSIM_Debugger.lo `test -f 'RSIM_Debugger.C' || echo '$(srcdir)/'`RSIM_Debugger.C

libRSIM_la-RSIM_Futex.lo: RSIM_Futex.C
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libRSIM_la_CPPFLAGS) $(CPPFLAGS) $(libRSIM_la_CXXFLAGS) $(CXXFLAGS) -c -o libRSIM_la-RSIM_Futex.lo `test -f 'RSIM_Futex.C' || echo '$(srcdir)/'`RSIM_Futex.C

libRSIM_la-RSIM_Linux.lo: RSIM_Linux.C
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libRSIM_la_CPPFLAGS) $(CPPFLAGS) $(libRSIM_la_CXXFLAGS) $(CXXFLAGS) -c -o libRSIM_la-RSIM_Linux.lo `test -f 'RSIM_Linux.C' || echo '$(srcdir)/'`RSIM_Linux.C

libRSIM_la-RSIM_Linux32.lo: RSIM_Linux32.C
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libRSIM_la_CPPFLAGS) $(CPPFLAGS) $(libRSIM_la_CXXFLAGS) $(CXXFLAGS) -c -o libRSIM_la-RSIM_Linux32.lo `test -f 'RSIM_Linux32.C' || echo '$(srcdir)/'`RSIM_Linux32.C

libRSIM_la-RSIM_Linux64.lo: RSIM_Linux64.C
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libRSIM_la_CPPFLAGS) $(CPPFLAGS) $(libRSIM_la_CXXFLAGS) $(CXXFLAGS) -c -o libRSIM_la-RSIM_Linux64.lo `test -f 'RSIM_Linux64.C' || echo '$(srcdir)/'`RSIM_Linux64.C

libRSIM_la-RSIM_Pentium4.lo: RSIM_Pentium4.C
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libRSIM_la_CPPFLAGS) $(CPPFLAGS) $(libRSIM_la_CXXFLAGS) $(CXXFLAGS) -c -o libRSIM_la-RSIM_Pentium4.lo `test -f 'RSIM_Pentium4.C' || echo '$(srcdir)/'`RSIM_Pentium4.C

libRSIM_la-RSIM_Printer.lo: RSIM_Printer.C
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libRSIM_la_CPPFLAGS) $(CPPFLAGS) $(libRSIM_la_CXXFLAGS) $(CXXFLAGS) -c -o libRSIM_la-RSIM_Printer.lo `test -f 'RSIM_Printer.C' || echo '$(srcdir)/'`RSIM_Printer.C

libRSIM_la-RSIM_Process.lo: RSIM_Process.C
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libRSIM_la_CPPFLAGS) $(CPPFLAGS) $(libRSIM_la_CXXFLAGS) $(CXXFLAGS) -c -o libRSIM_la-RSIM_Process.lo `test -f 'RSIM_Process.C' || echo '$(srcdir)/'`RSIM_Process.C

libRSIM_la-RSIM_Semantics.lo: RSIM_Semantics.C
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libRSIM_la_CPPFLAGS) $(CPPFLAGS) $(libRSIM_la_CXXFLAGS) $(CXXFLAGS) -c -o libRSIM_la-RSIM_Semantics.lo `test -f 'RSIM_Semantics.C' || echo '$(srcdir)/'`RSIM_Semantics.C

libRSIM_la-RSIM_SignalHandling.lo: RSIM_SignalHandling.C
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libRSIM_la_CPPFLAGS) $(CPPFLAGS) $(libRSIM_la_CXXFLAGS) $(CXXFLAGS) -c -o libRSIM_la-RSIM_SignalHandling.lo `test -f 'RSIM_SignalHandling.C' || echo '$(srcdir)/'`RSIM_SignalHandling.C

libRSIM_la-RSIM_Simulator.lo: RSIM_Simulator.C
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libRSIM_la_CPPFLAGS) $(CPPFLAGS) $(libRSIM_la_CXXFLAGS) $(CXXFLAGS) -c -o libRSIM_la-RSIM_Simulator.lo `test -f 'RSIM_Simulator.C' || echo '$(srcdir)/'`RSIM_Simulator.C

libRSIM_la-RSIM_Thread.lo: RSIM_Thread.C
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libRSIM_la_CPPFLAGS) $(CPPFLAGS) $(libRSIM_la_CXXFLAGS) $(CXXFLAGS) -c -o libRSIM_la-RSIM_Thread.lo `test -f 'RSIM_Thread.C' || echo '$(srcdir)/'`RSIM_Thread.C

libRSIM_la-RSIM_Tools.lo: RSIM_Tools.C
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libRSIM_la_CPPFLAGS) $(CPPFLAGS) $(libRSIM_la_CXXFLAGS) $(CXXFLAGS) -c -o libRSIM_la-RSIM_Tools.lo `test -f 'RSIM_Tools.C' || echo '$(srcdir)/'`RSIM_Tools.C

rsim_ports_opened-ports_opened.o: demos/ports_opened.C
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rsim_ports_opened_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rsim_ports_opened-ports_opened.o `test -f 'demos/ports_opened.C' || echo '$(srcdir)/'`demos/ports_opened.C

rsim_ports_opened-ports_opened.obj: demos/ports_opened.C
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rsim_ports_opened_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rsim_ports_opened-ports_opened.obj `if test -f 'demos/ports_opened.C'; then $(CYGPATH_W) 'demos/ports_opened.C'; else $(CYGPATH_W) '$(srcdir)/demos/ports_opened.C'; fi`

rsim_show_initial_stack-show-initial-stack.o: show-initial-stack.C
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rsim_show_initial_stack_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rsim_show_initial_stack-show-initial-stack.o `test -f 'show-initial-stack.C' || echo '$(srcdir)/'`show-initial-stack.C

rsim_show_initial_stack-show-initial-stack.obj: show-initial-stack.C
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rsim_show_initial_stack_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rsim_show_initial_stack-show-initial-stack.obj `if test -f 'show-initial-stack.C'; then $(CYGPATH_W) 'show-initial-stack.C'; else $(CYGPATH_W) '$(srcdir)/show-initial-stack.C'; fi`

rsim_x86sim-x86sim.o: x86sim.C
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rsim_x86sim_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rsim_x86sim-x86sim.o `test -f 'x86sim.C' || echo '$(srcdir)/'`x86sim.C

rsim_x86sim-x86sim.obj: x86sim.C
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rsim_x86sim_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rsim_x86sim-x86sim.obj `if test -f 'x86sim.C'; then $(CYGPATH_W) 'x86sim.C'; else $(CYGPATH_W) '$(srcdir)/x86sim.C'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_FALSE@check-local:
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-am
all-am: Makefile $(PROGRAMS) $(LTLIBRARIES) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am check-local clean \
	clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local clean-noinstPROGRAMS cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-includeHEADERS uninstall-libLTLIBRARIES

.PRECIOUS: Makefile


# JJW (2/25/2008): set a flag (only used when running ROSE applications) to
# have them run using the build tree rather than the install tree -- this is
# important for "make check" in an uninstalled copy of ROSE.
@USE_ROSE_IN_BUILD_TREE_VAR_TRUE@export ROSE_IN_BUILD_TREE=$(top_builddir)

@ROSE_HAVE_LIBZ3_TRUE@  # The previous "Z3_*" variables should have been named "ROSE_Z3_*" following the pattern in the rest of this
@ROSE_HAVE_LIBZ3_TRUE@  # makefile. I don't want to break code that uses the wrong names, so I'll just add the correct ones. [Matzke 2017-10-17]

show-rpaths:
	@echo "ROSE_LIBS = $(ROSE_LIBS)"
	@echo "ROSE_RPATHS = $(ROSE_RPATHS)"
	@echo "ROSE_LINK_RPATHS = $(ROSE_LINK_RPATHS)"

clean-test-targets:
	rm -f $(TEST_TARGETS)
	rm -f $(TEST_TARGETS:.passed=.failed)
	rm -f $(TEST_TARGETS:.passed=.out)
	rm -f $(TEST_TARGETS:.passed=.err)

clean-local: clean-test-targets

.PHONY: clean-test-targets

@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@warn_no_tests:
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	@echo "  NOTE    simulator testing is disabled (no i386 support)"

@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@$(libRSIM_la_SOURCES:.C=.o): %.o: %.h
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@$(libRSIM_la_SOURCES:.C=.lo): %.lo: %.h

@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@$(SyscallTests_Standalone_Exes): %: $(srcdir)/syscall_tests/%.c
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(CC) -Wall -g -o $@ $^

@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@$(SyscallTests_Standalone_Tests): %.passed: % rsim-x86sim
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	@$(RTH_RUN)										\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		TITLE="rsim-x86sim $< [$@]"							\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		USE_SUBDIR=yes									\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		CMD="x86_64 -R $(abspath .)/rsim-x86sim $(SimulatorFlags) $(abspath $<)"	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		$(top_srcdir)/scripts/test_exit_status $@

@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@.PHONY: check-syscalltests-standalone
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@check-syscalltests-standalone: $(SyscallTests_Standalone_Tests)

@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@$(SyscallTests_WithTestLib_Exes): %: $(srcdir)/syscall_tests/%.c $(SyscallTests_LibTest_Src)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	$(CC) -Wall -g -I $(srcdir)/syscall_tests -o $@ $^

@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@$(SyscallTests_WithTestLib_Tests): %.passed: % rsim-x86sim
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	@$(RTH_RUN)										\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		TITLE="rsim-x86sim $< [$@]"							\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		USE_SUBDIR=yes									\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		CMD="x86_64 -R $(abspath .)/rsim-x86sim $(SimulatorFlags) $(abspath $<)"	\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@		$(top_srcdir)/scripts/test_exit_status $@

@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@.PHONY: check-syscalltests-withtestlib
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@check-syscalltests-withtestlib: $(SyscallTests_WithTestLib_Tests)

# The test inputs. These will not be generated if ENABLE_I386 is not defined.
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@$(SYS_TEST_INPUTS_SA): %: $(srcdir)/syscall_tests/%.c
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	@echo "  CC32    $@"
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	@$(CC) $(CFLAGS32) -g -I$(srcdir)/syscall_tests -Wall -o $@ $^
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@$(SYS_TEST_INPUTS_RT): %: $(srcdir)/syscall_tests/%.c
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	@echo "  CC32    $@"
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	@$(CC) $(CFLAGS32) -g -I$(srcdir)/syscall_tests -Wall -o $@ $^ -lrt
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@$(SYS_TEST_INPUTS_TS): %: $(srcdir)/syscall_tests/%.c libtestsupport.a libipc.a
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	@echo "  CC32    $@"
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	@$(CC) $(CFLAGS32) -g -I$(srcdir)/syscall_tests -Wall -o $@ $^ -lrt 
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@$(SYS_TEST_INPUTS_NM): %: $(srcdir)/syscall_tests/%.c
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	@echo "  CC32    $@"
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	@$(CC) $(CFLAGS32) -g -I$(srcdir)/syscall_tests -Wall -o $@ $^ 

# Target to manually build the syscall test inputs. (Not used internally)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@.PHONY: sys_test_inputs
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@sys_test_inputs: $(SYS_TEST_INPUTS)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@libtestsupport.a: $(SYS_TEST_SUPPORT_OBJ)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	@echo "  AR      $@"
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	@ar -rc $@ $(SYS_TEST_SUPPORT_OBJ)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@$(SYS_TEST_SUPPORT_OBJ): %.o: $(srcdir)/syscall_tests/%.c
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	@echo "  CC32    $@"
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	@$(CC) -m32 -g -I$(srcdir)/syscall_tests -Wall -o $@ -c $^
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@libipc.a: $(IPC_SUPPORT_OBJ)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	@echo "  AR      $@"
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	@ar -rc $@ $(IPC_SUPPORT_OBJ)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@$(IPC_SUPPORT_OBJ): %.o: $(srcdir)/syscall_tests/%.c
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	@echo "  CC32    $@"
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	@$(CC) -m32 -g -I$(srcdir)/syscall_tests -Wall -o $@ -c $^
@ENABLE_I386_TRUE@@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@$(SYS_TEST_TARGETS): %.passed: % $(srcdir)/syscall_tests.conf rsim-x86sim
@ENABLE_I386_TRUE@@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	@$(RTH_RUN) INPUT=./$< $(srcdir)/syscall_tests.conf $@
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@.PHONY: $(SYS_TEST_CLEANUPS)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@$(SYS_TEST_CLEANUPS):
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	rm -f $(foreach ext, passed failed err out, $(patsubst %.clean, %, $@).$(ext))

# Main syscall testing target, on which "make check" depends.
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@check-syscalls:  $(SYS_TEST_TARGETS)

@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@$(PTHREAD_TEST_INPUTS): %: $(srcdir)/pthread_tests/%.c
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	@echo "  CC32    $@"
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	@$(CC) $(CFLAGS32) -g -I$(srcdir)/pthread_tests -Wall -o $@ $^ -lpthread -lrt

# Target to manually build the test inputs. (Not used internally)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@.PHONY: pthread_test_inputs
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@pthread_test_inputs: $(PTHREAD_TEST_INPUTS)
@ENABLE_I386_TRUE@@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@$(PTHREAD_TEST_TARGETS): %.passed: % $(srcdir)/pthread_tests.conf rsim-x86sim
@ENABLE_I386_TRUE@@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	@$(RTH_RUN) INPUT=./$< $(srcdir)/pthread_tests.conf $@
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@.PHONY: $(SYS_TEST_CLEANUPS)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@$(PTHREAD_TEST_CLEANUPS):
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	rm -f $(foreach ext, passed failed err out, $(patsubst %.clean, %, $@).$(ext))

# Main pthread testing target, on which "make check" depends.
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@check-pthread:  $(PTHREAD_TEST_TARGETS)

###############################################################################################################################
# Misc targets
###############################################################################################################################

# Conveniently build all test inputs in case we want to run some manually
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@.PHONY: test-inputs
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@test-inputs: $(SYS_TEST_INPUTS) $(PTHREAD_TEST_INPUTS)

@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@.PHONY: run-tests
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@run-tests: check-syscalls
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	@$(RTH_STATS)

# check-pthread commented out because the simulator is not designed to work with multi-threaded specimens.
#run-tests: check-syscalls check-pthread
#	@$(RTH_STATS)

@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@check-local: run-tests
#check-local:  #run-tests
#	@echo "The simulator project is excluded from make check for now due to random hanging problems."
#	@echo "Run 'make run-tests' in $$(pwd) instead."

# "tmp-sim" is the temp directory used to run the tests. See x86sim.conf.
# Rather than stuffing *everything* in MOSTLYCLEANFILES, we use cleanup targets. This is to avoid argument lists that
# are too long due.  In general, we don't want to use wild cards because some users might have some similarly named files
# that they wouldn't expect a "make clean" to delete.
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@clean-local: $(SYS_TEST_CLEANUPS) $(PTHREAD_TEST_CLEANUPS) $(TYPES_1_CLEANUPS)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	rm -rf $(TEST_TARGETS) $(TEST_TARGETS:.passed=.failed)
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	-chmod -f -R a+rwx tmp-sim
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	rm -rf tmp-sim x-core.rose test-file-fchown32
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	-chmod -f -R a+rwx fchmodattestdir* fchmodattestfile*.txt
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	rm -rf             fchmodattestdir* fchmodattestfile*.txt

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
