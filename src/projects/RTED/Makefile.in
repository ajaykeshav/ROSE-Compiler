# Makefile.in generated by automake 1.16.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2020 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# These definitions are for the benefit of independent software contained			-*- makefile -*-
# in ROSE.  (Currently, this means SAGE and ROSETTA.)
# It defines ROSE_INCLUDES and ROSE_LIBS so they can use the ROSE codes.

# ROSE_INCLUDES contains the include flags for compiling with ROSE code.
# (ROSE software should set the include paths in their respective Makefile.am
# files, since they are expected to know the ROSE source tree structure.)
# To use ROSE_INCLUDES, the independent software packages contained in ROSE
# should define the variable ROSE_HOME to be the relative path to the root
# of the ROSE directory tree.

# This fixes some problem caused by automake or autoconf
# (detailed documentation is in the ChangeLog)
# MAKE=gmake

# DQ (8/10/2007): Valentin suggested this be commented out.
# DQ (4/23/2006): This is the default when build using automake version 1.6.3 but it
# causes errors so we would like to specify --run automake instead
# AUTOMAKE = ${SHELL} $(top_srcdir)/config/missing --run automake-1.6
# AUTOMAKE = ${SHELL} $(top_srcdir)/config/missing --run automake

# force ranlib to just call touch so that *.so (dynamic libraries) will not
# be run with ranlib (which is a error).  This allows us to use dynamic
# libraries as the default within ROSE.
# JJW 7/25/2008: Do we really need this?

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@

# DQ (10/23/2020): Pei-Hung and I think this may not be required (not available on my system).
# I get the error: 
#    /bin/ld: skipping incompatible /lib/libtinfo.so when searching for -ltinfo
#    clang-10: error: linker command failed with exit code 1 (use -v to see invocation)
# ROSE_LIBS += $(CLANG_LDFLAGS) -ltinfo
@ROSE_USE_CLANG_FRONTEND_TRUE@am__append_1 = $(CLANG_LDFLAGS)
@ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION_TRUE@am__append_2 = -R $(DOT_ASIS_LIB_DIR_) 
@OS_MACOSX_FALSE@bin_PROGRAMS = runtimeCheck$(EXEEXT)
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@am__append_3 = ${call \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	GENERATE_RTED_BINFILES, \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	.c, $(rted_path), \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	$(RTED_ORIGSOURCES_C)} \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	${call \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	GENERATE_RTED_BINFILES, \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	.cpp, $(rted_path), \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	$(RTED_ORIGSOURCES_CPP)} \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	${call \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	GENERATE_RTED_BINFILES, \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	.upc, $(rted_path), \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	$(RTED_ORIGSOURCES_UPC)} \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	${call \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	GENERATE_RTED_BINFILES, \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	.upc, $(srcdir), \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	$(RTED_ORIGSOURCES_UPC)}
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@am__append_4 = -I$(dir $(patsubst rted_source/%, $(rted_path)/%, $@))
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@am__append_5 = -I$(dir $(patsubst rted_source/%, $(rted_path)/%, $@))
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@am__append_6 = -I$(dir $(patsubst rted_source/%, $(rted_path)/%, $@))
subdir = projects/RTED
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acmacros/canonicalize-symlink.m4 \
	$(top_srcdir)/acmacros/compiler-ar.m4 \
	$(top_srcdir)/acmacros/compiler-id.m4 \
	$(top_srcdir)/acmacros/configure-log.m4 \
	$(top_srcdir)/acmacros/pkg.m4 $(top_srcdir)/acmacros/upc.m4 \
	$(top_srcdir)/config/EDG.m4 $(top_srcdir)/config/ROSE.m4 \
	$(top_srcdir)/config/ac_pkg_swig.m4 \
	$(top_srcdir)/config/acinclude.m4 \
	$(top_srcdir)/config/ax_boost_base.m4 \
	$(top_srcdir)/config/ax_boost_chrono.m4 \
	$(top_srcdir)/config/ax_boost_date_time.m4 \
	$(top_srcdir)/config/ax_boost_filesystem.m4 \
	$(top_srcdir)/config/ax_boost_iostreams.m4 \
	$(top_srcdir)/config/ax_boost_program_options.m4 \
	$(top_srcdir)/config/ax_boost_random.m4 \
	$(top_srcdir)/config/ax_boost_regex.m4 \
	$(top_srcdir)/config/ax_boost_serialization.m4 \
	$(top_srcdir)/config/ax_boost_system.m4 \
	$(top_srcdir)/config/ax_boost_thread.m4 \
	$(top_srcdir)/config/ax_boost_wave.m4 \
	$(top_srcdir)/config/ax_compare_version.m4 \
	$(top_srcdir)/config/ax_compiler_vendor.m4 \
	$(top_srcdir)/config/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/config/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/config/ax_cxx_compile_stdcxx_14.m4 \
	$(top_srcdir)/config/ax_lib_mysql.m4 \
	$(top_srcdir)/config/ax_lib_sqlite3.m4 \
	$(top_srcdir)/config/ax_lib_xerces.m4 \
	$(top_srcdir)/config/ax_prog_bison_version.m4 \
	$(top_srcdir)/config/ax_python_devel.m4 \
	$(top_srcdir)/config/ax_with_prog.m4 \
	$(top_srcdir)/config/choose-backend-compiler.m4 \
	$(top_srcdir)/config/compiler-defs.m4 \
	$(top_srcdir)/config/determine-os.m4 \
	$(top_srcdir)/config/enable-rosehpct.m4 \
	$(top_srcdir)/config/generate-backend-compiler-specific-headers.m4 \
	$(top_srcdir)/config/libtool.m4 $(top_srcdir)/config/libxml.m4 \
	$(top_srcdir)/config/ltargz.m4 $(top_srcdir)/config/ltdl.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 \
	$(top_srcdir)/config/mdl_have_opengl_2014.m4 \
	$(top_srcdir)/config/qrose_indigo_1.m4 \
	$(top_srcdir)/config/qrose_indigo_1_windows.m4 \
	$(top_srcdir)/config/support-GraphViz.m4 \
	$(top_srcdir)/config/support-IntelPin.m4 \
	$(top_srcdir)/config/support-accelerator.m4 \
	$(top_srcdir)/config/support-aterm.m4 \
	$(top_srcdir)/config/support-backend-x10.m4 \
	$(top_srcdir)/config/support-bddbddb.m4 \
	$(top_srcdir)/config/support-binary.m4 \
	$(top_srcdir)/config/support-bison.m4 \
	$(top_srcdir)/config/support-blacklist.m4 \
	$(top_srcdir)/config/support-boost.m4 \
	$(top_srcdir)/config/support-capstone.m4 \
	$(top_srcdir)/config/support-clang.m4 \
	$(top_srcdir)/config/support-cobol.m4 \
	$(top_srcdir)/config/support-compass2.m4 \
	$(top_srcdir)/config/support-compiler-features.m4 \
	$(top_srcdir)/config/support-cuda.m4 \
	$(top_srcdir)/config/support-doxygen.m4 \
	$(top_srcdir)/config/support-dwarf.m4 \
	$(top_srcdir)/config/support-edg-debugging.m4 \
	$(top_srcdir)/config/support-edg.m4 \
	$(top_srcdir)/config/support-elf.m4 \
	$(top_srcdir)/config/support-fatal-rose-warnings.m4 \
	$(top_srcdir)/config/support-flang.m4 \
	$(top_srcdir)/config/support-gcc-omp.m4 \
	$(top_srcdir)/config/support-gcrypt.m4 \
	$(top_srcdir)/config/support-gmp.m4 \
	$(top_srcdir)/config/support-gnat.m4 \
	$(top_srcdir)/config/support-gomp-omp.m4 \
	$(top_srcdir)/config/support-haskell.m4 \
	$(top_srcdir)/config/support-i386.m4 \
	$(top_srcdir)/config/support-ida.m4 \
	$(top_srcdir)/config/support-insure.m4 \
	$(top_srcdir)/config/support-isl.m4 \
	$(top_srcdir)/config/support-java.m4 \
	$(top_srcdir)/config/support-languages.m4 \
	$(top_srcdir)/config/support-lcov.m4 \
	$(top_srcdir)/config/support-libffi.m4 \
	$(top_srcdir)/config/support-libharu.m4 \
	$(top_srcdir)/config/support-libpqxx.m4 \
	$(top_srcdir)/config/support-llvm.m4 \
	$(top_srcdir)/config/support-magic.m4 \
	$(top_srcdir)/config/support-maple.m4 \
	$(top_srcdir)/config/support-mint.m4 \
	$(top_srcdir)/config/support-mpi.m4 \
	$(top_srcdir)/config/support-octave.m4 \
	$(top_srcdir)/config/support-ofp.m4 \
	$(top_srcdir)/config/support-omp.m4 \
	$(top_srcdir)/config/support-php.m4 \
	$(top_srcdir)/config/support-pocc.m4 \
	$(top_srcdir)/config/support-projects.m4 \
	$(top_srcdir)/config/support-purify.m4 \
	$(top_srcdir)/config/support-python-api.m4 \
	$(top_srcdir)/config/support-python.m4 \
	$(top_srcdir)/config/support-readline.m4 \
	$(top_srcdir)/config/support-rose.m4 \
	$(top_srcdir)/config/support-rted.m4 \
	$(top_srcdir)/config/support-rtedupc.m4 \
	$(top_srcdir)/config/support-sanitizer.m4 \
	$(top_srcdir)/config/support-sat.m4 \
	$(top_srcdir)/config/support-spot.m4 \
	$(top_srcdir)/config/support-ssl.m4 \
	$(top_srcdir)/config/support-stratego.m4 \
	$(top_srcdir)/config/support-summary.m4 \
	$(top_srcdir)/config/support-swipl.m4 \
	$(top_srcdir)/config/support-valgrind.m4 \
	$(top_srcdir)/config/support-vectorization.m4 \
	$(top_srcdir)/config/support-visualization.m4 \
	$(top_srcdir)/config/support-windows.m4 \
	$(top_srcdir)/config/support-x10.m4 \
	$(top_srcdir)/config/support-yaml.m4 \
	$(top_srcdir)/config/support-yices.m4 \
	$(top_srcdir)/config/support-z3.m4 \
	$(top_srcdir)/config/support_POET.m4 \
	$(top_srcdir)/config/swig_enable_cxx.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/rose_config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__runtimeCheck_SOURCES_DIST = runtimeCheck.cpp \
	RtedTransformation.cpp ExecuteTransformations.cpp \
	RtedSymbols.cpp RtedTransf_registerType.cpp \
	RtedTransf_array.cpp RtedTransf_prolog.cpp \
	RtedTransf_support.cpp RtedTransf_funccall.cpp \
	RtedTransf_locals.cpp RtedTransf_funcdef.cpp \
	RtedTransf_variable.cpp RtedTransf_returnStmt.cpp \
	RtedTransf_Upc.cpp RtedTransf_iofunccall.cpp \
	RtedTransf_operators.cpp RtedTransf_copyClass.cpp \
	RtedTransformation.h RtedSymbols.h DataStructures.h \
	RuntimeSystem_ParsingWorkaround.h RtedVisit_Variable.cpp \
	RtedVisit.h
@OS_MACOSX_FALSE@am_runtimeCheck_OBJECTS = runtimeCheck.$(OBJEXT) \
@OS_MACOSX_FALSE@	RtedTransformation.$(OBJEXT) \
@OS_MACOSX_FALSE@	ExecuteTransformations.$(OBJEXT) \
@OS_MACOSX_FALSE@	RtedSymbols.$(OBJEXT) \
@OS_MACOSX_FALSE@	RtedTransf_registerType.$(OBJEXT) \
@OS_MACOSX_FALSE@	RtedTransf_array.$(OBJEXT) \
@OS_MACOSX_FALSE@	RtedTransf_prolog.$(OBJEXT) \
@OS_MACOSX_FALSE@	RtedTransf_support.$(OBJEXT) \
@OS_MACOSX_FALSE@	RtedTransf_funccall.$(OBJEXT) \
@OS_MACOSX_FALSE@	RtedTransf_locals.$(OBJEXT) \
@OS_MACOSX_FALSE@	RtedTransf_funcdef.$(OBJEXT) \
@OS_MACOSX_FALSE@	RtedTransf_variable.$(OBJEXT) \
@OS_MACOSX_FALSE@	RtedTransf_returnStmt.$(OBJEXT) \
@OS_MACOSX_FALSE@	RtedTransf_Upc.$(OBJEXT) \
@OS_MACOSX_FALSE@	RtedTransf_iofunccall.$(OBJEXT) \
@OS_MACOSX_FALSE@	RtedTransf_operators.$(OBJEXT) \
@OS_MACOSX_FALSE@	RtedTransf_copyClass.$(OBJEXT) \
@OS_MACOSX_FALSE@	RtedVisit_Variable.$(OBJEXT)
runtimeCheck_OBJECTS = $(am_runtimeCheck_OBJECTS)
am__DEPENDENCIES_1 =
@ROSE_USE_SQLITE_DATABASE_TRUE@am__DEPENDENCIES_2 =  \
@ROSE_USE_SQLITE_DATABASE_TRUE@	$(am__DEPENDENCIES_1)
am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
@ROSE_USE_PHP_TRUE@am__DEPENDENCIES_4 = $(php_path)/lib/libphc.so \
@ROSE_USE_PHP_TRUE@	$(php_path)/lib/libphp5.so \
@ROSE_USE_PHP_TRUE@	$(am__DEPENDENCIES_1)
@ROSE_USE_QT_TRUE@am__DEPENDENCIES_5 = $(am__DEPENDENCIES_1)
@ROSE_WITH_LIBREADLINE_TRUE@am__DEPENDENCIES_6 =  \
@ROSE_WITH_LIBREADLINE_TRUE@	$(am__DEPENDENCIES_1)
@ROSE_USE_CLANG_FRONTEND_TRUE@am__DEPENDENCIES_7 =  \
@ROSE_USE_CLANG_FRONTEND_TRUE@	$(am__DEPENDENCIES_1)
am__DEPENDENCIES_8 = $(abspath $(top_builddir)/src/librose.la) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(ROSE_YICES_LIBS_WITH_PATH) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(ROSE_GUI_LIBS_WITH_PATH) $(am__DEPENDENCIES_5) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_7)
@OS_MACOSX_FALSE@runtimeCheck_DEPENDENCIES = $(am__DEPENDENCIES_8)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp =
am__maybe_remake_depfiles =
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(runtimeCheck_SOURCES)
DIST_SOURCES = $(am__runtimeCheck_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir distdir-am
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = CppRuntimeSystem
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs \
	$(top_srcdir)/config/mkinstalldirs README
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ABS_COMPASS2_XML_SRCDIR = @ABS_COMPASS2_XML_SRCDIR@
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
ARMA_PREFIX = @ARMA_PREFIX@
ATERM_BIN_PATH = @ATERM_BIN_PATH@
ATERM_INSTALL_PATH = @ATERM_INSTALL_PATH@
ATERM_LIBRARY_PATH = @ATERM_LIBRARY_PATH@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AUX_LINKER = @AUX_LINKER@
AWK = @AWK@
Axx_INCLUDES = @Axx_INCLUDES@
Axx_LIBS = @Axx_LIBS@
BACKEND_ADA_COMPILER = @BACKEND_ADA_COMPILER@
BACKEND_COBOL_COMPILER = @BACKEND_COBOL_COMPILER@
BACKEND_COMPILER_VERSION_MAJOR_NUMBER = @BACKEND_COMPILER_VERSION_MAJOR_NUMBER@
BACKEND_COMPILER_VERSION_MINOR_NUMBER = @BACKEND_COMPILER_VERSION_MINOR_NUMBER@
BACKEND_COMPILER_VERSION_NAME = @BACKEND_COMPILER_VERSION_NAME@
BACKEND_COMPILER_VERSION_PATCHLEVEL_NUMBER = @BACKEND_COMPILER_VERSION_PATCHLEVEL_NUMBER@
BACKEND_CSHARP_COMPILER = @BACKEND_CSHARP_COMPILER@
BACKEND_CXX_COMPILER = @BACKEND_CXX_COMPILER@
BACKEND_CXX_VENDOR_AND_VERSION2 = @BACKEND_CXX_VENDOR_AND_VERSION2@
BACKEND_CXX_VENDOR_AND_VERSION3 = @BACKEND_CXX_VENDOR_AND_VERSION3@
BACKEND_C_COMPILER = @BACKEND_C_COMPILER@
BACKEND_FORTRAN_COMPILER = @BACKEND_FORTRAN_COMPILER@
BACKEND_JAVA_COMPILER = @BACKEND_JAVA_COMPILER@
BACKEND_JOVIAL_COMPILER = @BACKEND_JOVIAL_COMPILER@
BACKEND_MATLAB_COMPILER = @BACKEND_MATLAB_COMPILER@
BACKEND_X10_COMPILER = @BACKEND_X10_COMPILER@
BISON = @BISON@
BISON_VERSION = @BISON_VERSION@
BOOST_CHRONO_LIB = @BOOST_CHRONO_LIB@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_DATE_TIME_LIB = @BOOST_DATE_TIME_LIB@
BOOST_FILESYSTEM_LIB = @BOOST_FILESYSTEM_LIB@
BOOST_IOSTREAMS_LIB = @BOOST_IOSTREAMS_LIB@
BOOST_LDFLAGS = @BOOST_LDFLAGS@
BOOST_PROGRAM_OPTIONS_LIB = @BOOST_PROGRAM_OPTIONS_LIB@
BOOST_RANDOM_LIB = @BOOST_RANDOM_LIB@
BOOST_REGEX_LIB = @BOOST_REGEX_LIB@
BOOST_SERIALIZATION_LIB = @BOOST_SERIALIZATION_LIB@
BOOST_SYSTEM_LIB = @BOOST_SYSTEM_LIB@
BOOST_THREAD_LIB = @BOOST_THREAD_LIB@
BOOST_WAVE_LIB = @BOOST_WAVE_LIB@
CANDL_PATH = @CANDL_PATH@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CCLD = @CCLD@
CFLAGS = @CFLAGS@
CFLAGS32 = @CFLAGS32@
CLANG_CXXFLAGS = @CLANG_CXXFLAGS@
CLANG_LDFLAGS = @CLANG_LDFLAGS@
CLANG_LIBDIR = @CLANG_LIBDIR@
CLASSPATH = @CLASSPATH@
CLOOG_PATH = @CLOOG_PATH@
COBPT_INSTALL_PATH = @COBPT_INSTALL_PATH@
COBPT_LIBRARY_PATH = @COBPT_LIBRARY_PATH@
CPP = @CPP@

# DQ (9/27/2015): Added to support new use of AM_CPPFLAGS instead of INCLUDES
# (depreicated in automake and for which many warnings are generated).
CPPFLAGS = $(AM_CPPFLAGS)
CUDA_BIN_DIR = @CUDA_BIN_DIR@
CUDA_INC_DIR = @CUDA_INC_DIR@
CUDA_LIB_DIR = @CUDA_LIB_DIR@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXXLD = @CXXLD@
CXX_DEBUG = @CXX_DEBUG@
CXX_OPTIMIZE = @CXX_OPTIMIZE@
CXX_SHARED_LIB_UPDATE = @CXX_SHARED_LIB_UPDATE@
CXX_STATIC_LIB_UPDATE = @CXX_STATIC_LIB_UPDATE@
CXX_TEMPLATE_OBJECTS = @CXX_TEMPLATE_OBJECTS@
CXX_TEMPLATE_REPOSITORY_PATH = @CXX_TEMPLATE_REPOSITORY_PATH@
CXX_WARNINGS = @CXX_WARNINGS@
CYGPATH_W = @CYGPATH_W@
C_DEBUG = @C_DEBUG@
C_OPTIMIZE = @C_OPTIMIZE@
C_WARNINGS = @C_WARNINGS@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLIB_PREFIX = @DLIB_PREFIX@
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
DOXYGEN_ADDED_DIRECTORY_1 = @DOXYGEN_ADDED_DIRECTORY_1@
DOXYGEN_ADDED_DIRECTORY_2 = @DOXYGEN_ADDED_DIRECTORY_2@
DOXYGEN_ENABLED_SECTIONS = @DOXYGEN_ENABLED_SECTIONS@
DOXYGEN_EXTRACT_ALL = @DOXYGEN_EXTRACT_ALL@
DOXYGEN_EXTRACT_PRIVATE = @DOXYGEN_EXTRACT_PRIVATE@
DOXYGEN_EXTRACT_STATIC = @DOXYGEN_EXTRACT_STATIC@
DOXYGEN_HIDE_FRIEND_COMPOUNDS = @DOXYGEN_HIDE_FRIEND_COMPOUNDS@
DOXYGEN_HIDE_UNDOC_CLASSES = @DOXYGEN_HIDE_UNDOC_CLASSES@
DOXYGEN_HIDE_UNDOC_MEMBERS = @DOXYGEN_HIDE_UNDOC_MEMBERS@
DOXYGEN_INTERNAL_DOCS = @DOXYGEN_INTERNAL_DOCS@
DOXYGEN_USE_TAG_FILE = @DOXYGEN_USE_TAG_FILE@
DOXYINDEXER = @DOXYINDEXER@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ETHER_PREFIX = @ETHER_PREFIX@
EXE = @EXE@
EXEEXT = @EXEEXT@
F77 = @F77@
FC = @FC@
FCFLAGS = @FCFLAGS@
FFLAGS = @FFLAGS@
FGREP = @FGREP@
FLANG_INSTALL_PATH = @FLANG_INSTALL_PATH@
FLANG_SOURCE_PATH = @FLANG_SOURCE_PATH@
FLTK_include_path = @FLTK_include_path@
FLTK_libs_path = @FLTK_libs_path@
FRONTEND_CXX_VENDOR_AND_VERSION2 = @FRONTEND_CXX_VENDOR_AND_VERSION2@
FRONTEND_CXX_VENDOR_AND_VERSION3 = @FRONTEND_CXX_VENDOR_AND_VERSION3@
GCC_MINOR_VERSION = @GCC_MINOR_VERSION@
GCC_VERSION = @GCC_VERSION@
GENERATED_COMPILER_NAME_AND_VERSION_SUFFIX = @GENERATED_COMPILER_NAME_AND_VERSION_SUFFIX@
GEN_BE = @GEN_BE@
GFORTRAN_PATH = @GFORTRAN_PATH@
GHCBIN = @GHCBIN@
GLUT_CFLAGS = @GLUT_CFLAGS@
GLUT_LIBS = ${glut_path}
GLUT_include_path = @GLUT_include_path@
GLUT_libs_path = @GLUT_libs_path@
GL_CFLAGS = @GL_CFLAGS@
GL_LIBS = @GL_LIBS@
GMP_INCLUDE_PATH = @GMP_INCLUDE_PATH@
GMP_INSTALL_PATH = @GMP_INSTALL_PATH@
GMP_LIBRARY_PATH = @GMP_LIBRARY_PATH@
GNAT_INCLUDES = @GNAT_INCLUDES@
GREP = @GREP@
GraphViz_include_path = @GraphViz_include_path@
GraphViz_libs_path = @GraphViz_libs_path@
HAVE_CXX11 = @HAVE_CXX11@
HAVE_CXX14 = @HAVE_CXX14@
HS_CONFIG_OPTS = @HS_CONFIG_OPTS@
INCLTDL = @INCLTDL@
INCLUDE_COMPASS_MAKEFILE_INC = @INCLUDE_COMPASS_MAKEFILE_INC@
INDENT = @INDENT@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSURE_OPTIONS = @INSURE_OPTIONS@
INTEL_FPP_PATH = @INTEL_FPP_PATH@
ISL_INCLUDE_PATH = @ISL_INCLUDE_PATH@
ISL_INSTALL_PATH = @ISL_INSTALL_PATH@
ISL_LIBRARY_PATH = @ISL_LIBRARY_PATH@
IntelPin_path = @IntelPin_path@
JAR = @JAR@
JAVA = @JAVA@
JAVAC = @JAVAC@
JAVA_JVM_INCLUDE = @JAVA_JVM_INCLUDE@
JAVA_JVM_LINK = @JAVA_JVM_LINK@
JAVA_JVM_PATH = @JAVA_JVM_PATH@
JAVA_PATH = @JAVA_PATH@
LD = @LD@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBADD_DL = @LIBADD_DL@
LIBADD_DLD_LINK = @LIBADD_DLD_LINK@
LIBADD_DLOPEN = @LIBADD_DLOPEN@
LIBADD_SHL_LOAD = @LIBADD_SHL_LOAD@
LIBDWARF_CPPFLAGS = @LIBDWARF_CPPFLAGS@
LIBDWARF_LDFLAGS = @LIBDWARF_LDFLAGS@
LIBDWARF_PREFIX = @LIBDWARF_PREFIX@
LIBELF_CPPFLAGS = @LIBELF_CPPFLAGS@
LIBELF_LDFLAGS = @LIBELF_LDFLAGS@
LIBELF_PREFIX = @LIBELF_PREFIX@
LIBFFI_CFLAGS = @LIBFFI_CFLAGS@
LIBFFI_LIBS = @LIBFFI_LIBS@
LIBGCRYPT_CPPFLAGS = @LIBGCRYPT_CPPFLAGS@
LIBGCRYPT_LDFLAGS = @LIBGCRYPT_LDFLAGS@
LIBGCRYPT_PREFIX = @LIBGCRYPT_PREFIX@
LIBLTDL = @LIBLTDL@
LIBOBJS = @LIBOBJS@
LIBREADLINE_INCLUDE_PATH = @LIBREADLINE_INCLUDE_PATH@
LIBREADLINE_INSTALL_PATH = @LIBREADLINE_INSTALL_PATH@
LIBREADLINE_LIBRARY_PATH = @LIBREADLINE_LIBRARY_PATH@
LIBREADLINE_LIBS = @LIBREADLINE_LIBS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LLVM_CONFIG = @LLVM_CONFIG@
LLVM_CPPFLAGS = @LLVM_CPPFLAGS@
LLVM_LDFLAGS = @LLVM_LDFLAGS@
LLVM_LIBS = @LLVM_LIBS@
LN_S = @LN_S@
LTDLDEPS = @LTDLDEPS@
LTDLINCL = @LTDLINCL@
LTDLOPEN = @LTDLOPEN@
LTLIBOBJS = @LTLIBOBJS@
LT_ARGZ_H = @LT_ARGZ_H@
LT_CONFIG_H = @LT_CONFIG_H@
LT_DLLOADERS = @LT_DLLOADERS@
LT_DLPREOPEN = @LT_DLPREOPEN@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MAPLE_INCLUDES = @MAPLE_INCLUDES@
MAPLE_LIBDIR = @MAPLE_LIBDIR@
MAPLE_LIBS = @MAPLE_LIBS@
MD5 = @MD5@
MINT = @MINT@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MPICC = @MPICC@
MPICXX = @MPICXX@
MPIF77 = @MPIF77@
MPIFC = @MPIFC@
MYSQL_CFLAGS = @MYSQL_CFLAGS@
MYSQL_CONFIG = @MYSQL_CONFIG@
MYSQL_INCLUDE = @MYSQL_INCLUDE@
MYSQL_LDFLAGS = @MYSQL_LDFLAGS@
MYSQL_VERSION = @MYSQL_VERSION@
NM = @NM@
NMEDIT = @NMEDIT@
NVCCBIN = @NVCCBIN@
OBJ = @OBJ@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OCTAVE_PARSER_INSTALL_TARFILE = @OCTAVE_PARSER_INSTALL_TARFILE@
OPENCL_INC_DIR = @OPENCL_INC_DIR@
OPENCL_LIB_DIR = @OPENCL_LIB_DIR@
OPEN_FORTRAN_PARSER_PATH = @OPEN_FORTRAN_PARSER_PATH@
OPTIONAL_PROJECTS = @OPTIONAL_PROJECTS@
OS_major_release_number = @OS_major_release_number@
OS_minor_release_number = @OS_minor_release_number@
OS_release = @OS_release@
OS_vendor = @OS_vendor@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PACKAGE_VERSION_NUMERIC = @PACKAGE_VERSION_NUMERIC@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
POET_INCL = @POET_INCL@
POET_LIB = @POET_LIB@
PPL_PATH = @PPL_PATH@
PURIFY_OPTIONS = @PURIFY_OPTIONS@
PYTHON = @PYTHON@
PYTHON_CPPFLAGS = @PYTHON_CPPFLAGS@
PYTHON_EXTRA_LDFLAGS = @PYTHON_EXTRA_LDFLAGS@
PYTHON_EXTRA_LIBS = @PYTHON_EXTRA_LIBS@
PYTHON_LDFLAGS = @PYTHON_LDFLAGS@
PYTHON_ROOT = @PYTHON_ROOT@
PYTHON_SITE_PKG = @PYTHON_SITE_PKG@
PYTHON_VERSION_MM = @PYTHON_VERSION_MM@
Pxx_INCLUDES = @Pxx_INCLUDES@
Pxx_LIBS = @Pxx_LIBS@
QROSE_PREFIX = @QROSE_PREFIX@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
QT_VERSION = @QT_VERSION@
QT_VERSION_MAJOR = @QT_VERSION_MAJOR@
QT_VERSION_MINOR = @QT_VERSION_MINOR@
RANLIB = @RANLIB@
RCC = @RCC@
ROSEHPCT_DEP_INCLUDES = @ROSEHPCT_DEP_INCLUDES@
ROSEHPCT_DEP_LIBS = @ROSEHPCT_DEP_LIBS@
ROSE_BOOST_NORMAL_INCLUDE_PATH = @ROSE_BOOST_NORMAL_INCLUDE_PATH@

# DQ (12/22/2008): Specification of Boost path for use with "-isystem" option (may be GNU
# specific).  We use this option only if the configuration of ROSE has detected a
# previously installed version of Boost (which we do not want to use).
# Note that only one of these will be non-empty makefile variables.
ROSE_BOOST_PREINCLUDE_PATH = @ROSE_BOOST_PREINCLUDE_PATH@
ROSE_CAPSTONE_PREFIX = @ROSE_CAPSTONE_PREFIX@
ROSE_EDG_MAJOR_VERSION_NUMBER = @ROSE_EDG_MAJOR_VERSION_NUMBER@
ROSE_EDG_MINOR_VERSION_NUMBER = @ROSE_EDG_MINOR_VERSION_NUMBER@
ROSE_HOME = @ROSE_HOME@
ROSE_LIBMAGIC_PREFIX = @ROSE_LIBMAGIC_PREFIX@
ROSE_LIBPQXX_PREFIX = @ROSE_LIBPQXX_PREFIX@
ROSE_LSB_RELEASE = @ROSE_LSB_RELEASE@
ROSE_OBJDUMP_PATH = @ROSE_OBJDUMP_PATH@
ROSE_OFP_JAR_FILE = @ROSE_OFP_JAR_FILE@
ROSE_OFP_MAJOR_VERSION_NUMBER = @ROSE_OFP_MAJOR_VERSION_NUMBER@
ROSE_OFP_MINOR_VERSION_NUMBER = @ROSE_OFP_MINOR_VERSION_NUMBER@
ROSE_OFP_PATCH_VERSION_NUMBER = @ROSE_OFP_PATCH_VERSION_NUMBER@
ROSE_OFP_VERSION_NUMBER = @ROSE_OFP_VERSION_NUMBER@
ROSE_PS2PDF_PATH = @ROSE_PS2PDF_PATH@
ROSE_SUPPORT_GNU_EXTENSIONS = @ROSE_SUPPORT_GNU_EXTENSIONS@
ROSE_SUPPORT_MICROSOFT_EXTENSIONS = @ROSE_SUPPORT_MICROSOFT_EXTENSIONS@
ROSE_USE_CANDL = @ROSE_USE_CANDL@
ROSE_USE_CLOOG = @ROSE_USE_CLOOG@
ROSE_USE_EDG_QUAD_FLOAT = @ROSE_USE_EDG_QUAD_FLOAT@
ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT = @ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT@
ROSE_USE_PPL = @ROSE_USE_PPL@
ROSE_USE_SCOPLIB = @ROSE_USE_SCOPLIB@
ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT = @ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT@
ROSE_WGET_PATH = @ROSE_WGET_PATH@
ROSE_WITH_MPI_CFLAGS = @ROSE_WITH_MPI_CFLAGS@
ROSE_WITH_MPI_CLDFLAGS = @ROSE_WITH_MPI_CLDFLAGS@
ROSE_WITH_MPI_CXXFLAGS = @ROSE_WITH_MPI_CXXFLAGS@
ROSE_WITH_MPI_CXXLDFLAGS = @ROSE_WITH_MPI_CXXLDFLAGS@
ROSE_WITH_MPI_F77FLAGS = @ROSE_WITH_MPI_F77FLAGS@
ROSE_WITH_MPI_F77LDFLAGS = @ROSE_WITH_MPI_F77LDFLAGS@
ROSE_WITH_MPI_FFLAGS = @ROSE_WITH_MPI_FFLAGS@
ROSE_WITH_MPI_FLDFLAGS = @ROSE_WITH_MPI_FLDFLAGS@
ROSE_YAML_PREFIX = @ROSE_YAML_PREFIX@
ROSE_YICES = @ROSE_YICES@
ROSE_YICES_PREFIX = @ROSE_YICES_PREFIX@
ROSE_Z3_PREFIX = @ROSE_Z3_PREFIX@
RT_LIBS = @RT_LIBS@
SCOPLIB_PATH = @SCOPLIB_PATH@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SPOT_INCLUDE_PATH = @SPOT_INCLUDE_PATH@
SPOT_INSTALL_PATH = @SPOT_INSTALL_PATH@
SPOT_LIBRARY_PATH = @SPOT_LIBRARY_PATH@
SQLITE3_CFLAGS = @SQLITE3_CFLAGS@
SQLITE3_LDFLAGS = @SQLITE3_LDFLAGS@
SQLITE3_VERSION = @SQLITE3_VERSION@
STRATEGO_BIN_PATH = @STRATEGO_BIN_PATH@
STRATEGO_INSTALL_PATH = @STRATEGO_INSTALL_PATH@
STRATEGO_LIBRARY_PATH = @STRATEGO_LIBRARY_PATH@
STRIP = @STRIP@
SWIG = @SWIG@
SWIG_LIB = @SWIG_LIB@
SWIPLBIN = @SWIPLBIN@
TCLSH = @TCLSH@
TEST_SMT_SOLVER = @TEST_SMT_SOLVER@
UIC = @UIC@
UPC = @UPC@
UPCDEPMODE = @UPCDEPMODE@
UPCFLAGS = @UPCFLAGS@
USING_WINDOWS = @USING_WINDOWS@
VALGRIND_BINARY = @VALGRIND_BINARY@
VALGRIND_BIN_PATH = @VALGRIND_BIN_PATH@
VALGRIND_INCLUDE_PATH = @VALGRIND_INCLUDE_PATH@
VALGRIND_INSTALL_PATH = @VALGRIND_INSTALL_PATH@
VALGRIND_LIBRARY_PATH = @VALGRIND_LIBRARY_PATH@
VECTORIZATION = @VECTORIZATION@
VERSION = @VERSION@
WT_PREFIX = @WT_PREFIX@
X10_BIN_PATH = @X10_BIN_PATH@
X10_INSTALL_PATH = @X10_INSTALL_PATH@
X10_LIBRARY_PATH = @X10_LIBRARY_PATH@
X10_VERSION = @X10_VERSION@
XERCES_CPPFLAGS = @XERCES_CPPFLAGS@
XERCES_LDFLAGS = @XERCES_LDFLAGS@
XERCES_LIBS = @XERCES_LIBS@
XERCES_VERSION = @XERCES_VERSION@
XMKMF = @XMKMF@
XML2_CONFIG = @XML2_CONFIG@
XML_CPPFLAGS = @XML_CPPFLAGS@
XML_LIBS = @XML_LIBS@
YACC = @YACC@
YFLAGS = @YFLAGS@
Z3BIN = @Z3BIN@
Z3_INCLUDE_PATH = @Z3_INCLUDE_PATH@
Z3_LIBRARY_PATH = @Z3_LIBRARY_PATH@
Z3_PREFIX = @Z3_PREFIX@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
absolute_path_srcdir = @absolute_path_srcdir@
ac_boost_path = @ac_boost_path@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_F77 = @ac_ct_F77@
ac_ct_FC = @ac_ct_FC@
ac_ct_MPICXX = @ac_ct_MPICXX@
ac_ct_UPC = @ac_ct_UPC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bddbddb_path = @bddbddb_path@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_triplet_without_redhat = @build_triplet_without_redhat@
build_vendor = @build_vendor@
builddir = @builddir@
configure_date = @configure_date@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
edg_union_struct_debugging_value = @edg_union_struct_debugging_value@
exec_prefix = @exec_prefix@
glut_path = @glut_path@
gnat_home = @gnat_home@
gnat_path = @gnat_path@
gomp_omp_runtime_library_path = @gomp_omp_runtime_library_path@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
ida_path = @ida_path@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
insure_BIN = @insure_BIN@
insure_LIBS = @insure_LIBS@
insure_PREFIX = @insure_PREFIX@
libdir = @libdir@
libexecdir = @libexecdir@
llvm_path = @llvm_path@
localedir = @localedir@
localstatedir = @localstatedir@
ltdl_LIBOBJS = @ltdl_LIBOBJS@
ltdl_LTLIBOBJS = @ltdl_LTLIBOBJS@
mandir = @mandir@
maple_path = @maple_path@
mkdir_p = @mkdir_p@
mono_home = @mono_home@
oldincludedir = @oldincludedir@
omni_omp_runtime_support_path = @omni_omp_runtime_support_path@
optional_Visualization_subdirs = @optional_Visualization_subdirs@
parallel_ast_traversal_omp_path = @parallel_ast_traversal_omp_path@
pdfdir = @pdfdir@
php_path = @php_path@
poet_dir = @poet_dir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
purify_BIN = @purify_BIN@
purify_INCLUDES = @purify_INCLUDES@
purify_LIBS = @purify_LIBS@
purify_PREFIX = @purify_PREFIX@
res_top_src = @res_top_src@
rosyln_home = @rosyln_home@
rted_path = @rted_path@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sys_symbol_underscore = @sys_symbol_underscore@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_pwd = @top_pwd@
top_srcdir = @top_srcdir@
wine_path = @wine_path@

# SQLite is a simpler database to use than MySQL
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_INCLUDE = $(SQLITE3_CFLAGS)
@ROSE_USE_SQLITE_DATABASE_TRUE@SQLITE_DATABASE_INCLUDE = $(SQLITE3_CFLAGS) -I$(top_srcdir)/src/roseExtensions/sqlite3x
@ROSE_USE_SQLITE_DATABASE_TRUE@SQLITE_DATABASE_LIBS = $(SQLITE3_LDFLAGS)
#   ROSE_SQLITE_DATABASE_OBJS     = $(top_builddir)/src/roseExtensions/sqlite3x/*o
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_LIB_NAME = RoseSQLite3xDatabase
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_LIB_FILE = lib$(ROSE_SQLITE_DATABASE_LIB_NAME).la
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_LIBS = -l$(ROSE_SQLITE_DATABASE_LIB_NAME)
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SIDEEFFECT_INCLUDE = -I$(top_srcdir)/src/midend/programAnalysis/sideEffectAnalysis
@ROSE_HAVE_LIBZ3_TRUE@Z3_LIB_NAME = z3
@ROSE_HAVE_LIBZ3_TRUE@Z3_LIB_FILE = lib$(Z3_LIB_NAME).so
@ROSE_HAVE_LIBZ3_TRUE@Z3_LIBS = -l$(Z3_LIB_NAME)
@ROSE_HAVE_LIBZ3_TRUE@Z3_INCLUDES = -I$(Z3_PREFIX)/include
@ROSE_HAVE_LIBZ3_TRUE@Z3_LIB_INCLUDES = -L$(Z3_PREFIX)/lib
@ROSE_HAVE_LIBZ3_TRUE@ROSE_Z3_INCLUDES = -I@ROSE_Z3_PREFIX@/include
@ROSE_HAVE_LIBZ3_TRUE@ROSE_Z3_LIBS = -lz3
@ROSE_HAVE_LIBZ3_TRUE@ROSE_Z3_LIBS_WITH_PATH = -L@ROSE_Z3_PREFIX@/lib -lz3

# This is properly handled by automake even when specified in an include file
EDG_LIBS = @EDG_LIBS@

# Conditional support for Gabriel's QRose GUI Library
#  ROSE_GUI_INCLUDE =   -I${QROSE_PREFIX}/include
@ROSE_USE_QT_TRUE@ROSE_GUI_INCLUDE = -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Framework -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Widgets -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/Common -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/QueryBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/TreeBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/QueryBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/SourceBox

# ROSE_GUI_LIBS = -lqrose
#  ROSE_GUI_LIBS_WITH_PATH = -L${QROSE_PREFIX}/lib -lqrose
#  ROSE_GUI_LIBS_WITH_PATH =  -L${top_builddir}/src/3rdPartyLibraries/qrose/QRoseLib/  -lqrose
@ROSE_USE_QT_TRUE@ROSE_GUI_LIBS_WITH_PATH = ${top_builddir}/src/3rdPartyLibraries/qrose/QRoseLib/libqrose.la

# ROSE_GUI_LIB_FILE = libqrose.a
@ROSE_USE_QT_TRUE@ROSE_QT_INCLUDE = $(QT_INCLUDES)
# ROSE_QT_LIBS = -lqt
@ROSE_USE_QT_TRUE@ROSE_QT_LIBS_WITH_PATH = ${QT_LDFLAGS}
# ROSE_QT_LIB_FILE = libqt.a

# ROSE-HPCToolkit module
@ROSE_BUILD_ROSEHPCT_TRUE@ROSE_ROSEHPCT_INCLUDES = -I$(top_srcdir)/src/roseExtensions/roseHPCToolkit/include
@ROSE_BUILD_ROSEHPCT_TRUE@ROSE_ROSEHPCT_LIBS = -lrosehpct
@ROSE_BUILD_ROSEHPCT_TRUE@ROSE_ROSEHPCT_LIBS_WITH_PATH = $(top_builddir)/src/roseExtensions/roseHPCToolkit/src/librosehpct.la
# ROSE_ROSEHPCT_LIB_FILE = librosehpct.so

# ROSE-YICES Package (destributed by SRI as a static library)
@ROSE_HAVE_LIBYICES_TRUE@ROSE_YICES_INCLUDES = -I@ROSE_YICES_PREFIX@/include
@ROSE_HAVE_LIBYICES_TRUE@ROSE_YICES_LIBS = -lyices
@ROSE_HAVE_LIBYICES_TRUE@ROSE_YICES_LIBS_WITH_PATH = @ROSE_YICES_PREFIX@/lib/libyices.a

# YAML-CPP package for parsing YAML/JSON files
@ROSE_HAVE_LIBYAML_TRUE@ROSE_YAML_INCLUDES = -I@ROSE_YAML_PREFIX@/include
@ROSE_HAVE_LIBYAML_TRUE@ROSE_YAML_LIBS = -lyaml-cpp
@ROSE_HAVE_LIBYAML_TRUE@ROSE_YAML_LIBS_WITH_PATH = -L@ROSE_YAML_PREFIX@/lib -lyaml-cpp

# GNU readline
@ROSE_WITH_LIBREADLINE_TRUE@ROSE_READLINE_INCLUDES = -I@LIBREADLINE_INCLUDE_PATH@
@ROSE_WITH_LIBREADLINE_TRUE@ROSE_READLINE_LIBS = @LIBREADLINE_LIBS@
@ROSE_WITH_LIBREADLINE_TRUE@ROSE_READLINE_LIBS_WITH_PATH = -L@LIBREADLINE_LIBRARY_PATH@ $(ROSE_READLINE_LIBS)

# libmagic for identifying file types based on magic numbers
@ROSE_HAVE_LIBMAGIC_TRUE@ROSE_LIBMAGIC_INCLUDES = -I@ROSE_LIBMAGIC_PREFIX@/include
@ROSE_HAVE_LIBMAGIC_TRUE@ROSE_LIBMAGIC_LIBS = -lmagic
@ROSE_HAVE_LIBMAGIC_TRUE@ROSE_LIBMAGIC_LIBS_WITH_PATH = -L@ROSE_LIBMAGIC_PREFIX@/lib -lmagic

# PostgreSQL C++ API
@ROSE_HAVE_LIBPQXX_TRUE@ROSE_LIBPQXX_INCLUDES = -I@ROSE_LIBPQXX_PREFIX@/include
@ROSE_HAVE_LIBPQXX_TRUE@ROSE_LIBPQXX_LIBS = -lpqxx -lpq
@ROSE_HAVE_LIBPQXX_TRUE@ROSE_LIBPQXX_LIBS_WITH_PATH = -L@ROSE_LIBPQXX_PREFIX@/lib -lpqxx -lpq

# Capstone disassembler
@ROSE_HAVE_CAPSTONE_TRUE@ROSE_CAPSTONE_INCLUDES = -I@ROSE_CAPSTONE_PREFIX@/include
@ROSE_HAVE_CAPSTONE_TRUE@ROSE_CAPSTONE_LIBS = -lcapstone
@ROSE_HAVE_CAPSTONE_TRUE@ROSE_CAPSTONE_LIBS_WITH_PATH = -L@ROSE_CAPSTONE_PREFIX@/lib -lcapstone

# Math algorithms from http://dlib.net. This is a headers-only library neede by some binary analyses.
@ROSE_HAVE_DLIB_TRUE@ROSE_DLIB_INCLUDES = -I@DLIB_PREFIX@
@ROSE_HAVE_DLIB_TRUE@ROSE_DLIB_LIBS = 
@ROSE_HAVE_DLIB_TRUE@ROSE_DLIB_LIBS_WITH_PATH = 

# DQ (11/4/2016): Adding support for use of Address Sanitizer (for where the ROSE Test Handler (RTH) is used.
# Note the quotes and escapes that are required:
ADDRESS_SANITIZER_OPTIONS = "ASAN_OPTIONS=halt_on_error=0:symbolize=1:detect_leaks=0 ASAN_SYMBOLIZER_PATH=\`which llvm-symbolizer\`"

# DQ(11/4/2016): Need a version when not using the ROSE Test Handler (RTH):
NON_RTH_ADDRESS_SANITIZER_OPTIONS = ASAN_OPTIONS=halt_on_error=1:symbolize=1:detect_leaks=0 ASAN_SYMBOLIZER_PATH=`which llvm-symbolizer`
@ROSE_HAVE_LIBELF_TRUE@ROSE_ELF_INCLUDES = @LIBELF_CPPFLAGS@
@ROSE_HAVE_LIBELF_TRUE@ROSE_ELF_LIBS_WITH_PATH = @LIBELF_LDFLAGS@

# ROSE gcrypt support (for things like md5, sha1, etc)
@ROSE_HAVE_LIBGCRYPT_TRUE@ROSE_GCRYPT_INCLUDES = @LIBGCRYPT_CPPFLAGS@
@ROSE_HAVE_LIBGCRYPT_TRUE@ROSE_GCRYPT_LIBS_WITH_PATH = @LIBGCRYPT_LDFLAGS@

# ROSE-DWARF libdwarf support
@ROSE_HAVE_LIBDWARF_TRUE@ROSE_DWARF_INCLUDES = @LIBDWARF_CPPFLAGS@
@ROSE_HAVE_LIBDWARF_TRUE@@ROSE_USE_INTEL_PIN_FALSE@ROSE_DWARF_LIBS_WITH_PATH = @LIBDWARF_LDFLAGS@

# DQ (3/13/2009):
# If Dwarf is used with Intel Pin then reference the same copy of libdwarf.a (in the same
# directory).  However, it does NOT work to link both references to libdwarf into more
# than one dynamic (shared) library, so we need to link libdwarf dynamically.
# To avoid additional LD_LIBRARY_PATH requirements, we do so using rpath.
# To support this the libdwarf.so should be placed into $(INTEL_PIN_PATH)/intel64/lib-ext
# and the static libdwarf.a moved out (renamed) so that it will not be used.
# Note that this will also cause librose.so to use the shared library for
# dwarf when used with Intel Pin.
@ROSE_HAVE_LIBDWARF_TRUE@@ROSE_USE_INTEL_PIN_TRUE@ROSE_DWARF_LIBS_WITH_PATH = -L$(INTEL_PIN_PATH)/intel64/lib-ext -ldwarf -lelf
# DQ (3/14/2009): This factors the lib paths.
@ROSE_HAVE_LIBDWARF_TRUE@@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_WITH_DWARF_LIBS_PATH = $(INTEL_PIN_LIB_PATHS) -lpin -lxed -ldl $(ROSE_DWARF_LIBS_WITH_PATH)

# ROSE-WINE Package (Wine is a package to permit execution of Windows binaries under Linux)
@ROSE_USE_WINDOWS_ANALYSIS_SUPPORT_TRUE@ROSE_WINE_INCLUDES = -I$(wine_path)/include
@ROSE_USE_PHP_TRUE@ROSE_PHP_INCLUDES = -I$(php_path)/include/phc -I$(php_path)/include/php
@ROSE_USE_PHP_TRUE@ROSE_PHP_LIBS = -lphp5 -lphc -lltdl
@ROSE_USE_PHP_TRUE@ROSE_PHP_LIBS_WITH_PATH = $(php_path)/lib/libphc.so $(php_path)/lib/libphp5.so $(LIBLTDL)

# ASR (06/09/2010): adding llvm support variables
@ROSE_USE_LLVM_TRUE@ROSE_LLVM_INCLUDES = -I$(llvm_path)/include
@ROSE_USE_LLVM_TRUE@ROSE_LLVM_LIBS = -L$(llvm_path)/lib \
@ROSE_USE_LLVM_TRUE@	-lLLVMXCoreCodeGen -lLLVMXCoreAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMXCoreInfo -lLLVMSystemZCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMSystemZAsmPrinter -lLLVMSystemZInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMSparcCodeGen -lLLVMSparcAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMSparcInfo -lLLVMPowerPCCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMPowerPCAsmPrinter -lLLVMPowerPCInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMpic16passes -lLLVMPIC16AsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMPIC16CodeGen -lLLVMPIC16Info \
@ROSE_USE_LLVM_TRUE@	-lLLVMMSP430CodeGen -lLLVMMSP430AsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMMSP430Info -lLLVMMSIL -lLLVMMSILInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMMipsAsmPrinter -lLLVMMipsCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMMipsInfo -lLLVMMBlazeAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMMBlazeCodeGen -lLLVMMBlazeInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMLinker -lLLVMipo -lLLVMInterpreter \
@ROSE_USE_LLVM_TRUE@	-lLLVMInstrumentation -lLLVMJIT \
@ROSE_USE_LLVM_TRUE@	-lLLVMExecutionEngine -lLLVMCppBackend \
@ROSE_USE_LLVM_TRUE@	-lLLVMCppBackendInfo -lLLVMCellSPUCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMCellSPUAsmPrinter -lLLVMCellSPUInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMCBackend -lLLVMCBackendInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMBlackfinCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMBlackfinAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMBlackfinInfo -lLLVMBitWriter \
@ROSE_USE_LLVM_TRUE@	-lLLVMX86Disassembler -lLLVMX86AsmParser \
@ROSE_USE_LLVM_TRUE@	-lLLVMX86AsmPrinter -lLLVMX86CodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMX86Info -lLLVMAsmParser \
@ROSE_USE_LLVM_TRUE@	-lLLVMARMAsmParser -lLLVMMCParser \
@ROSE_USE_LLVM_TRUE@	-lLLVMARMAsmPrinter -lLLVMARMCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMARMInfo -lLLVMArchive \
@ROSE_USE_LLVM_TRUE@	-lLLVMBitReader -lLLVMAlphaCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMSelectionDAG -lLLVMAlphaAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMAsmPrinter -lLLVMCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMScalarOpts -lLLVMInstCombine \
@ROSE_USE_LLVM_TRUE@	-lLLVMTransformUtils -lLLVMipa \
@ROSE_USE_LLVM_TRUE@	-lLLVMAnalysis -lLLVMTarget -lLLVMMC \
@ROSE_USE_LLVM_TRUE@	-lLLVMCore -lLLVMAlphaInfo -lLLVMSupport \
@ROSE_USE_LLVM_TRUE@	-lLLVMSystem

# adding all libraries for now

# Python API support
@ROSE_USE_PYTHON_DEV_TRUE@ROSE_PYTHON_INCLUDES = @PYTHON_CPPFLAGS@
@ROSE_USE_PYTHON_DEV_TRUE@ROSE_PYTHON_LIBS_WITH_PATH = @PYTHON_LDFLAGS@

# SSL support permits use of MD5 checksums internally for binary library identification.
@ROSE_USE_SSL_SUPPORT_TRUE@ROSE_SSL_LIBS = -lssl -lcrypto

# support for precompiled headers
@ROSE_PCH_TRUE@ROSE_PCH_INCLUDE = -Winvalid-pch -fPIC -DPIC
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_PATH = @IntelPin_path@
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_INCLUDE_PATHS = -I$(INTEL_PIN_PATH)/source/include -I$(INTEL_PIN_PATH)/source/include/gen -I$(INTEL_PIN_PATH)/extras/xed2-intel64/include -I$(INTEL_PIN_PATH)/source/tools/InstLib

# DQ (3/8/2009): These cause rose/src/testSharedRoseLib to fail, I don't know why (fails in system call to map()).
# INTEL_PIN_LIB_PATHS     = -L$(INTEL_PIN_PATH)/intel64/lib -L$(INTEL_PIN_PATH)/extras/xed2-intel64/lib -L$(INTEL_PIN_PATH)/intel64/lib-ext
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_LIB_PATHS = -L$(INTEL_PIN_PATH)/intel64/lib -L$(INTEL_PIN_PATH)/extras/xed2-intel64/lib

# Do we want to handle this differently when Dwarf is used optionally with ROSE.
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_LIBS = -lpin -lxed -ldwarf -lelf -ldl
#if ROSE_HAVE_LIBDWARF
#  INTEL_PIN_LIBS          = -lpin -lxed -lelf -ldl
#else
#  INTEL_PIN_LIBS          = -lpin -lxed -ldwarf -lelf -ldl
#endif
@ROSE_USE_ETHER_TRUE@ROSE_ETHER_INCLUDE = -I$(ETHER_PREFIX)/include
@ROSE_USE_ETHER_TRUE@ROSE_ETHER_LIBS = -L$(ETHER_PREFIX)/lib -lxenctrl
@ROSE_WITH_ATERM_TRUE@ROSE_ATERM_INCLUDE = -I$(ATERM_LIBRARY_PATH)/../include
@ROSE_WITH_ATERM_TRUE@ROSE_ATERM_LIBS = -L$(ATERM_LIBRARY_PATH) -lATerm

# Added support for Fortran front-end development using the flang (F18) compiler [Rasmussen 8/12/2019]
@ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION_TRUE@ROSE_FLANG_INCLUDES = -I$(FLANG_INSTALL_PATH)/include
@ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION_TRUE@ROSE_FLANG_LIBS = -L$(FLANG_INSTALL_PATH)/lib -lLLVMDemangle -lLLVMSupport -lLLVMFrontendOpenMP -lFortranParser -lFortranSemantics -lFortranEvaluate -lFortranCommon -lFortranDecimal -lFortranLower -lncurses

# DQ (5/9/2017): Adding Ada library support.
# ROSE_ADA_INCLUDES = -I$(ada_path)/include_xxx
@ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION_TRUE@ROSE_ADA_INCLUDES = -I$(ada_path)/include_xxx
@ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION_TRUE@DOT_ASIS_LIB_DIR_ = $(abs_top_builddir)/src/frontend/Experimental_Ada_ROSE_Connection/dot_asis/dot_asis_library/lib
#  ROSE_ADA_LIBS = -ldot_asis
#  ROSE_ADA_LIBS_WITH_PATH = $(DOT_ASIS_LIB_DIR_)/libdot_asis.so

# RASMUSSEN (10/24/2017): Adding the GnuCOBOL parse-tree library support.
@ROSE_EXPERIMENTAL_COBOL_ROSE_CONNECTION_TRUE@ROSE_COBOL_PT_LIBS_WITH_PATH = -L$(COBPT_LIBRARY_PATH) -lcob -lcobpt
@ROSE_USE_EDG_QUAD_FLOAT_TRUE@ROSE_QUAD_FLOAT_MATH = -lquadmath

# DQ (1/9/2010): Added use of libimf with libm (the two go together when using Intel icc and icpc)
#  ROSE_INTEL_COMPILER_MATH_LIBS = -limf -lm
# DQ (11/16/2017): We need to link in these Intel specific required libraries to avoid: error hidden symbol `__intel_cpu_features_init_x'
# ROSE_INTEL_COMPILER_MATH_LIBS =
#    ROSE_INTEL_COMPILER_MATH_LIBS += -limf
@USING_INTEL_COMPILER_TRUE@ROSE_INTEL_COMPILER_MATH_LIBS = -limf \
@USING_INTEL_COMPILER_TRUE@	-lirng -lintlc -lsvml -lm
# ROSE_INCLUDES =
#     $(ROSE_BOOST_PREINCLUDE_PATH)
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@ROSE_INCLUDES_WITHOUT_BOOST_ISYSTEM_PATH = \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_builddir)/src/roseSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_builddir)/src/frontend/SageIII \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astFixup \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astPostProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astMerge \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astVisualization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astFileIO \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/sageInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/virtualCFG \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astTokenStream \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astHiddenTypeAndDeclarationLists \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_builddir)/src/frontend/SageIII/astFileIO \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astFromString \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/includeDirectivesProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/sage_support \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/OpenFortranParser_SAGE_Connection \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/ECJ_ROSE_Connection \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I"$(JAVA_HOME)/include" \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/PHPFrontend \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_CLANG_FRONTEND_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/PythonFrontend \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/BinaryFormats \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/BinaryLoader \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/Disassemblers \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_CLANG_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/formatSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/languageIndependenceSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/CxxCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/JavaCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/FortranCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/PHPCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/PythonCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/X10CodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/AdaCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/JovialCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/asmUnparser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/support \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/graphs  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/stringSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/commandlineProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/abstractHandle \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/abstractMemoryObject \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/abstractLayer \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astDiagnostics \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/astInlining \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/astOutlining  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/transformationTracking \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astMatching \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astQuery \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astRewriteMechanism \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/annotation \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/astInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/astSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/symbolicVal \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/BinaryAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/BinaryAnalysis/dataflowanalyses \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/BinaryAnalysis/instructionSemantics \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/computation \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/depGraph \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/depInfo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/driver \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/outsideInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/prepostTransformation \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/ompLowering \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/extractFunctionArgumentsNormalization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/singleStatementToBlockNormalization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/arithmeticIntensity \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/annotationLanguageParser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/CFG \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/staticSingleAssignment \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/ssaUnfilteredCfg \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/systemDependenceGraph \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/systemDependenceGraph \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/CallGraphAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/OAWrap \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/bitvectorDataflow \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/VirtualFunctionAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/defUseAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/distributedMemoryAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/dominanceAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/pointerAnal \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/staticInterproceduralSlicing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/valuePropagation \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/variableRenaming \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_SIDEEFFECTS_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_DATABASE_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_GUI_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_QT_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_SQLITE_DATABASE_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@			$(ROSE_SIDEEFFECT_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(SQLITE_DATABASE_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/partialRedundancyElimination \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/finiteDifferencing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/functionCallNormalization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/constantFolding \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/implicitCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/roseSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/3rdPartyLibraries/MSTL \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/3rdPartyLibraries/libharu-2.1.0/include \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_builddir)/src/3rdPartyLibraries/libharu-2.1.0/include \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Framework \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Widgets  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/graphs \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/astInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/libltdl \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/roseExtensions/failSafe \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_PHP_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_PYTHON_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_YICES_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_Z3_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_YAML_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_LIBPQXX_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_CAPSTONE_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_READLINE_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_LIBMAGIC_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_DLIB_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_GCRYPT_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_ELF_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_DWARF_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_WINE_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(VALGRIND_CFLAGS) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(SQLITE3_CFLAGS) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_BOOST_NORMAL_INCLUDE_PATH) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_PCH_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(INTEL_PIN_INCLUDE_PATHS) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_ETHER_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_ATERM_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_FLANG_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_CSHARP_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_ADA_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_JOVIAL_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_COBOL_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(BOOST_CPPFLAGS)


# DQ (4/13/2016): Is there were we put the support to include -lstdc++.so on the link line directly?

# DQ (3/6/2013): We need to build a SWIG path that can't include the isystem option.
# Note use of "-isystem" option in ROSE_BOOST_PREINCLUDE_PATH to have the
# boost specified on the configure
# command-line be used instead of the OS version of boost that is sometimes
# installed with Linux (it is always a version too old to be used with ROSE).
# This is used only when the ROSE configuration detects a previously installed
# version of Boost (e.g /usr/include/boost) that we don't want to use.
# ROSE_INCLUDES =
#    $(ROSE_BOOST_PREINCLUDE_PATH)
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@ROSE_INCLUDES_WITHOUT_BOOST_ISYSTEM_PATH = \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_builddir)/src/roseSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_builddir)/src/frontend/SageIII \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/astFixup \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/astPostProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/astVisualization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/sageInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/includeDirectivesProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/sage_support \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/OpenFortranParser_SAGE_Connection \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/ECJ_ROSE_Connection \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I"$(JAVA_HOME)/include" \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/BinaryFormats \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/BinaryLoader \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/Disassemblers \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/formatSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/languageIndependenceSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/CxxCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/JavaCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/FortranCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/PHPCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/PythonCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/X10CodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/AdaCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/JovialCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/asmUnparser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/support \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/graphs  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/stringSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/commandlineProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/astDiagnostics \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/astProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/astMatching \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/astQuery \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/BinaryAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/programAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/roseSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/3rdPartyLibraries/MSTL \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/graphs \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/roseExtensions/failSafe \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     $(ROSE_ATERM_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     $(ROSE_FLANG_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     $(ROSE_BOOST_NORMAL_INCLUDE_PATH)


# DQ (10/23/2015): These paths have been replaces with the following variables.
# These variable are empty for now (reflecting the default usage, and need to
# be set properly where ever Clang support is processed as a configure option.
#    -I$(top_srcdir)/src/frontend/CxxFrontend/ClangFrontend
#    -I$(top_srcdir)/src/frontend/CxxFrontend/Clang
#    $(ROSE_CLANG_FRONTEND_INCLUDE)
#    $(ROSE_CLANG_INCLUDE)
SWIG_ROSE_INCLUDES = $(ROSE_INCLUDES_WITHOUT_BOOST_ISYSTEM_PATH)
ROSE_INCLUDES = $(ROSE_BOOST_PREINCLUDE_PATH) $(ROSE_INCLUDES_WITHOUT_BOOST_ISYSTEM_PATH)

# DQ (8/15/2010): I have removed these directories from the include paths since it no longer exists.
# I expect that the directories were removed and the include list not properly cleaned up.
# -I$(top_srcdir)/src/midend/binaryAnalyses/graph
# -I$(top_srcdir)/src/midend/programTransformation/runtimeTransformation
# -I$(top_srcdir)/projects/dataBase

# DQ (12/22/2008): Move Boost directory to front and used "-isystem" option so
# that a system with a previous (older) installation of boost does not interfer
# with the use of ROSE (and the version of boost specified using "--with-boost").
# $(BOOST_CPPFLAGS)

# DQ (10/28/2008): I think these should be included, I don't know why they
# were removed (used with Microsoft Windows tests, and Yices tests).
# DQ: Not used currently
#     $(ROSE_WINE_INCLUDES)

# DQ (5/3/2007): Removed from ROSE
#     -I$(top_srcdir)/src/midend/programAnalysis/dominatorTreesAndDominanceFrontiers
#     -I$(top_srcdir)/src/midend/programAnalysis/staticProgramSlicing

# DQ (10/22/2004): Removed when I could not get annotation work to compile properly with make distcheck rule
#     -I$(top_srcdir)/src/midend/programAnalysis/annotationLanguageParser

# New way using two libraries
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.a $(top_builddir)/src/libedg.a
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.so $(top_builddir)/src/libedg.so
# ROSE_LIBS_WITH_PATH = $(libdir)/librose.so $(libdir)/libedg.so
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.la
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.la $(JAVA_JVM_LIB)
# JJW 7/25/2008: This should probably just be the same as ROSE_LIBS
ROSE_LIBS_WITH_PATH = $(ROSE_LIBS)

# ROSE_LIBS = $(top_builddir)/src/librose.la -lm $(LEXLIB) $(SQLITE_DATABASE_LIBS) $(LIB_QT) $(WAVE_LDFLAGS) $(WAVE_LIBRARIES) $(WAVE_LIBS) $(JAVA_JVM_LIB) $(RT_LIBS)

# MS 10/19/2015: added ROSE_BOOST_LIBS variable to share exact same
# boost libs list in ROSE an in the ROSTTA Makefiles.
ROSE_BOOST_LIBS = $(BOOST_LDFLAGS) $(BOOST_DATE_TIME_LIB) $(BOOST_CHRONO_LIB) \
  $(BOOST_THREAD_LIB) $(BOOST_FILESYSTEM_LIB) $(BOOST_PROGRAM_OPTIONS_LIB) \
  $(BOOST_RANDOM_LIB) $(BOOST_REGEX_LIB)  $(BOOST_SYSTEM_LIB) $(BOOST_SERIALIZATION_LIB)  \
  $(BOOST_WAVE_LIB) $(BOOST_IOSTREAMS_LIB) $(BOOST_PYTHON_LIB)

ROSE_LIBS = $(abspath $(top_builddir)/src/librose.la) -lm \
	$(JAVA_JVM_LINK) $(SQLITE_DATABASE_LIBS) $(QT_LIBS) \
	$(ROSE_BOOST_LIBS) $(SQLITE3_LDFLAGS) $(RT_LIBS) \
	$(ROSE_YICES_LIBS_WITH_PATH) $(ROSE_Z3_LIBS_WITH_PATH) \
	$(ROSE_PHP_LIBS_WITH_PATH) $(ROSE_DWARF_LIBS_WITH_PATH) \
	$(ROSE_ELF_LIBS_WITH_PATH) $(ROSE_GUI_LIBS_WITH_PATH) \
	$(ROSE_QT_LIBS_WITH_PATH) $(ROSE_SSL_LIBS) $(ROSE_ETHER_LIBS) \
	$(ROSE_INTEL_COMPILER_MATH_LIBS) $(ROSE_ATERM_LIBS) \
	$(ROSE_FLANG_LIBS) $(ROSE_YAML_LIBS_WITH_PATH) \
	$(ROSE_LIBMAGIC_LIBS_WITH_PATH) \
	$(ROSE_READLINE_LIBS_WITH_PATH) $(ROSE_DLIB_LIBS_WITH_PATH) \
	$(ROSE_GCRYPT_LIBS_WITH_PATH) $(ROSE_LIBPQXX_LIBS_WITH_PATH) \
	$(ROSE_COBOL_PT_LIBS_WITH_PATH) $(ROSE_PYTHON_LIBS_WITH_PATH) \
	$(ROSE_QUAD_FLOAT_MATH) $(ROSE_CAPSTONE_LIBS_WITH_PATH) \
	$(am__append_1)

#if ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION
#ROSE_LIBS += $(libroseAdalibraries) 
#endif

#========================================================================================================================
# These are the "-R directory" switches that need to be passed to libtool running in link mode to make sure that ROSE
# executables have rpath properties that point to the directories containing the libraries we're using. Do not add
# system directories (or at least not at the front of this list) because that will cause the system-installed version of
# a library to be used rather than some user-specific version.
#
# Here's the motivation for using rpath instead of LD_LIBRARY_PATH: Consider what happens if some ROSE tool, call it
# myTranslator, is compiled and linked against a custom, user-installed version of libz.so (perhaps because myTranslator
# is using a custom version of some graphics library, like libgraphicsmagick.so, that needs a newer libz.so than what's
# installed on the system).  If I then set LD_LIBRARY_PATH to point to the directory with my libz.so I'll be able to run
# myTranslator, however I probably won't be able any system installed tool that uses libz.so. This includes not being
# able to run /usr/bin/as, which might be called indirectly when myTranslator invokes the backend compiler (because
# LD_LIBRARY_PATH overrides the rpath built into /usr/bin/as).  Run-time linking with the wrong dynamic library at best
# produces an error message from the linker, but more often just results in a fault of some sort.
#
# How does rpath fix this problem? It encodes into each executable the list of directories that should be searched when
# the executable is run, similar to LD_LIBRARY_PATH but on a per-executable basis.
#
# The filter-out is removing specific libraries (-lwhatever), the GCC's POSIX thread switch (-pthread), static libraries
# (whatever.a), and various system directories that might have the wrong library versions and which are searched
# automatically anyway. The outer patsubst is changing "-Ldirectory" to just "directory", and the addprefix is changing
# each directory to "-R directory" which is libtool's switch for adding an rpath to an executable.
#
# The inner-most patsubst needs more explanation: Although most low-level libraries like libz, libpng, etc. are normally
# installed in well-known system-wide locations (like /usr/lib), when testing ROSE in matrix testing using RMC, these
# libraries are often compiled and installed locally in such ways that they're not binary compatible with the
# system-installed versions. However, ROSE doesn't have configuration or cmake options for all these libraries because
# there could eventually be far too many. Therefore, we use the fact that RMC has already chosen the correct library
# directories and added their names to various environment variables. The lines of the form
#     $(subst :, ,# $(whatever_LIBDIRS))
# split the named environment variable into individual directory names.  If there's a ROSE configure option to specify
# the library location, then DO NOT list an environment variable here--use the directory from configure instead (which
# goes into ROSE_LIBS above).
ROSE_RPATHS = $(patsubst -L%,-R %, $(filter-out -L/lib% -L/usr/lib% \
	-L/usr/local/lib% -L/var/lib%, $(filter -L%, $(ROSE_LIBS) \
	$(subst :, , $(GNU_COMPILERS_LIBDIRS)) $(subst :, , \
	$(LIBBZ2_LIBDIRS)) $(subst :, , $(LIBGRAPHICSMAGICK_LIBDIRS)) \
	$(subst :, , $(LIBJPEG_LIBDIRS)) $(subst :, , \
	$(LIBLCMS_LIBDIRS)) $(subst :, , $(LIBLZMA_LIBDIRS)) $(subst \
	:, , $(LIBPNG_LIBDIRS)) $(subst :, , $(LIBTIFF_LIBDIRS)) \
	$(subst :, , $(PYTHON_LIBDIRS)) $(subst :, , $(SPOT_LIBDIRS)) \
	$(subst :, , $(ZLIB_LIBDIRS)) $(subst :, , \
	$(INTEL_COMPILER_RPATHS)) ) ) ) $(am__append_2)
@OS_MACOSX_FALSE@ROSE_LINK_RPATHS = $(addprefix -Wl$(comma)-rpath , $(filter-out -R , $(ROSE_RPATHS)))

# Rasmussen (3/23/2018): Added ROSE_LINK_RPATHS to enable linking on Mac OSX with ROSE installation
@OS_MACOSX_TRUE@ROSE_LINK_RPATHS = $(addprefix -Xlinker -rpath -Xlinker , $(filter-out -R , $(ROSE_RPATHS)))
@OS_MACOSX_FALSE@comma = ,
INTEL_COMPILER_RPATHS = $(shell $(top_srcdir)/scripts/intel-compiler-rpaths.sh)

# DQ (3/8/2009): This fails when I try to include it (fails in rose/src/testSharedRoseLib).
#  $(INTEL_PIN_LIB_PATHS) $(INTEL_PIN_LIBS)

# DQ (3/14/2009): It is cleaner to just required that Intel Pin support require setting
# the LD_LIBRARYPATH to include: $(INTEL_PIN_PATH)/intel64/lib-ext

# This ROSE_SEPARATE_LIBS is used for the linking of preprocessor.C used within
# development. The use of the seperate libraries make the linking faster where the
# main librose library is not built.  Libtool may have changed this so that we could
# just link to librose now just as easily, but one has to rebuild librose each time
# instead of just the individual shared library.
# JJW 7/25/2008: This should probably just be the same as ROSE_LIBS
ROSE_SEPARATE_LIBS = $(ROSE_LIBS)

# QY (11/2/04): removed -lastoutlining from ROSE_SEPARATE_LIBS

# DQ (10/22/2004): Removed when I could not get annotation work to compile properly
# with make distcheck rule
# -lannotationLanguageParser(appears after -lvaluePropagation)

# Test harness variables. See "rth_run.pl --help" for more info.  The RTH_RUN_FLAGS is meant to be set on the
# "make" command-line, but the default depends on the value of the verbosity $(V) flag.
RTH_RUN_FLAGS_V_ = 
RTH_RUN_FLAGS_V_0 = 
RTH_RUN_FLAGS_V_1 = --immediate-output
RTH_RUN_FLAGS = $(RTH_RUN_FLAGS_V_$(V))

# Default timeout that you can override on the "make" commandline. Valid values
# are integers followed by "s" (seconds), "m" (minutes), "h" (hours), or the
# word "never".  See scripts/rth_run.pl for detailed documentation.
RTH_TIMEOUT = 15m
RTH_RUN = $(top_srcdir)/scripts/rth_run.pl $(RTH_RUN_FLAGS) \
	srcdir=$(abspath $(srcdir)) top_srcdir=$(abspath $(top_srcdir)) \
	blddir=$$(pwd) top_blddir=$(abspath $(top_builddir)) \
	VALGRIND=$(VALGRIND) TIMEOUT=$(RTH_TIMEOUT)

RTH_STATS = $(top_srcdir)/scripts/rth_stats.pl
EXTRA_DIST = index_array.txt \
             file_read.txt \
	     tests upccrose \
	     upcparam.h upcparam_s.h \
	     extract-actual-error.sed extract-expected-error.sed

# required/upc.h

# Currently, we exclude 32bit and MacOS
#if !OS_VENDOR_REDHAT_32BIT

# To keep compile commands tidy, please ONLY put required include flags here.
# tps removed -pthreads from AM_CPPFLAGS
@OS_MACOSX_FALSE@AM_CPPFLAGS = $(ROSE_INCLUDES) $(BOOST_CPPFLAGS) -I. -Winvalid-pch
@OS_MACOSX_FALSE@TESTSUITEINCL = -I$(srcdir) -I.
@OS_MACOSX_FALSE@UPC_INCLUDES = -I$(top_srcdir)/config
@OS_MACOSX_FALSE@EXTRACT_EXPECTED_ERROR_SCRIPT = $(srcdir)/extract-expected-error.sed
@OS_MACOSX_FALSE@EXTRACT_EXPECTED_ERROR = sed -n -f $(EXTRACT_EXPECTED_ERROR_SCRIPT)
@OS_MACOSX_FALSE@EXTRACT_ACTUAL_ERROR = sed -n -f $(srcdir)/extract-actual-error.sed

# Qt Debugger is now linked into CppRuntimeSystem
@OS_MACOSX_FALSE@LINK_QT_DEBUGGER = 
@OS_MACOSX_FALSE@LDADD = $(LIBS_WITH_RPATH) $(ROSE_LIBS) -ldl
#$(top_builddir)/projects/RTED/CppRuntimeSystem/libCppRuntimeSystem.a
@OS_MACOSX_FALSE@RTS = $(srcdir)/RuntimeSystem.cpp
@OS_MACOSX_FALSE@RTSCXX = RuntimeSystemCxx.o
@OS_MACOSX_FALSE@RTSUPC = RuntimeSystemUpc.o ParallelRTS.o
@OS_MACOSX_FALSE@RTED_CXX = $(LIBTOOL) --tag=CXX --mode=link g++ -g $(AM_CXXFLAGS) \
@OS_MACOSX_FALSE@	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS)

@OS_MACOSX_FALSE@RTED_CC = $(LIBTOOL) --tag=CC --mode=link gcc -g $(AM_CXXFLAGS) \
@OS_MACOSX_FALSE@	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS)

@OS_MACOSX_FALSE@@ROSE_USE_RTED_FALSE@RTED_UPC = 

#$(LIBTOOL) --tag=CXX  --mode=link $(AM_PROG_UPC)
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@RTED_UPC = ./upccrose $(AM_CXXFLAGS) \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	 $(AM_LDFLAGS)

@OS_MACOSX_FALSE@RTED_LIB = CppRuntimeSystem/libCppRuntimeSystem.la
@OS_MACOSX_FALSE@RTED_UPC_LIB = CppRuntimeSystem/libUpcRuntimeSystem.la
@OS_MACOSX_FALSE@runtimeCheck_SOURCES = runtimeCheck.cpp \
@OS_MACOSX_FALSE@                       RtedTransformation.cpp ExecuteTransformations.cpp \
@OS_MACOSX_FALSE@                       RtedSymbols.cpp RtedTransf_registerType.cpp \
@OS_MACOSX_FALSE@                       RtedTransf_array.cpp RtedTransf_prolog.cpp \
@OS_MACOSX_FALSE@                       RtedTransf_support.cpp RtedTransf_funccall.cpp \
@OS_MACOSX_FALSE@                       RtedTransf_locals.cpp \
@OS_MACOSX_FALSE@                       RtedTransf_funcdef.cpp RtedTransf_variable.cpp \
@OS_MACOSX_FALSE@										   RtedTransf_returnStmt.cpp RtedTransf_Upc.cpp \
@OS_MACOSX_FALSE@                       RtedTransf_iofunccall.cpp RtedTransf_operators.cpp \
@OS_MACOSX_FALSE@                       RtedTransf_copyClass.cpp \
@OS_MACOSX_FALSE@		       RtedTransformation.h \
@OS_MACOSX_FALSE@		       RtedSymbols.h \
@OS_MACOSX_FALSE@		       DataStructures.h \
@OS_MACOSX_FALSE@		       RuntimeSystem_ParsingWorkaround.h \
@OS_MACOSX_FALSE@		       RtedVisit_Variable.cpp RtedVisit.h


# \pp included: RuntimeSystem.h RuntimeSystem.cpp
@OS_MACOSX_FALSE@SUBDIRS = CppRuntimeSystem

# \pp was: runtimeCheck_LDADD =  $(ROSE_LIBS) CppRuntimeSystem/libCppRuntimeSystem.la
@OS_MACOSX_FALSE@runtimeCheck_LDADD = $(ROSE_LIBS)
@OS_MACOSX_FALSE@ROSE_FLAGS = -rose:verbose 0
@OS_MACOSX_FALSE@TEST_TRANSLATOR = ./runtimeCheck all $(ROSE_FLAGS)
@OS_MACOSX_FALSE@TESTCODE_INCLUDES = 
@OS_MACOSX_FALSE@CLEANFILES = *.out *.ti *.pdf test_runtime* *.txt rose_test_c_E_1_1_a
@OS_MACOSX_FALSE@RTED_C_LOCAL_TEST_DIRS = \
@OS_MACOSX_FALSE@		 $(srcdir)/tests/C/panasTests \
@OS_MACOSX_FALSE@		 $(srcdir)/tests/C/memoryleaks \
@OS_MACOSX_FALSE@		 $(srcdir)/tests/C/memoverlap \
@OS_MACOSX_FALSE@		 $(srcdir)/tests/C/pointer \
@OS_MACOSX_FALSE@		 $(srcdir)/tests/C/types

@OS_MACOSX_FALSE@RTED_CPP_LOCAL_TEST_DIRS = \
@OS_MACOSX_FALSE@   $(srcdir)/tests/Cxx/io

@OS_MACOSX_FALSE@FULL_RTED_CPP_LOCAL_TEST_DIRS = \
@OS_MACOSX_FALSE@		 $(srcdir)/tests/Cxx/memory \
@OS_MACOSX_FALSE@		 $(srcdir)/tests/Cxx/overloading \
@OS_MACOSX_FALSE@		 $(srcdir)/tests/Cxx/pointer \
@OS_MACOSX_FALSE@		 $(srcdir)/tests/Cxx/simple \
@OS_MACOSX_FALSE@		 $(srcdir)/tests/Cxx/types


# DQ (7/16/2011): rted_source/tests/Cxx/io/cxx_stream2.cpp is failing.
#  $(srcdir)/tests/Cxx/io
@OS_MACOSX_FALSE@RTED_CPP_LOCAL_TEST_DIRS_NQ_TEST = \
@OS_MACOSX_FALSE@   $(srcdir)/tests/Cxx/io


#				 $(srcdir)/tests/Cxx/templates # temporarily removed b/c unparsed code
#                                      # cannot be fed into GCC4.3
@OS_MACOSX_FALSE@RTED_UPC_LOCAL_TEST_DIRS = $(srcdir)/tests/UPC/simple/simple
#~	    $(rted_path)/UPC/E_Outofbnds  arrays as arguments to std function
#~      $(rted_path)/UPC/A_Deadlcks   not our task
#~      $(rted_path)/UPC/B_RacCond    not our task
#~      $(rted_path)/UPC/F_Argmterr   not yet handled
#~      $(rted_path)/UPC/I_Wronorder  not yet handled
#~      $(rted_path)/UPC/J_Nonportbl  not yet handled
#~      $(rted_path)/UPC/K_Warnings   not yet handled
@OS_MACOSX_FALSE@@ROSE_USE_RTED_FALSE@RTED_C_TEST_DIRS = $(RTED_C_LOCAL_TEST_DIRS)
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@RTED_C_TEST_DIRS = $(rted_path)/C/array_index_out_of_bound \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		 $(rted_path)/C/string_errors \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		 $(rted_path)/C/subprogram_call_errors \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		 $(rted_path)/C/allocation_deallocation_errors \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		 $(rted_path)/C/input_output_errors \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		 $(rted_path)/C/memory_leaks \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		 $(rted_path)/C/uninitialized_variables \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		 $(rted_path)/C/C99_specific_errors \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		 $(rted_path)/C/pointer_errors \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		 $(RTED_C_LOCAL_TEST_DIRS)

@OS_MACOSX_FALSE@@ROSE_USE_RTED_FALSE@RTED_CPP_TEST_DIRS = $(RTED_CPP_LOCAL_TEST_DIRS)

#		 $(rted_path)/C/floating_point_errors \ \pp excluded from tests b/c do not work
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@RTED_CPP_TEST_DIRS = $(rted_path)/C++/array_index_out_of_bound \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		 $(rted_path)/C++/string_errors \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		 $(rted_path)/C++/allocation_deallocation_errors \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		 $(rted_path)/C++/input_output_errors \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		 $(rted_path)/C++/memory_leaks \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		 $(rted_path)/C++/uninitialized_variables \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		 $(rted_path)/C++/pointer_errors \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		 $(RTED_CPP_LOCAL_TEST_DIRS) \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		 $(RTED_CPP_LOCAL_TEST_DIRS_NQ_TESTS)

@OS_MACOSX_FALSE@@ROSE_USE_RTED_FALSE@RTED_UPC_TEST_DIRS = $(RTED_UPC_LOCAL_TEST_DIRS)

#		 $(rted_path)/C++/floating_point_errors \	\pp excluded from tests b/c do not work
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@RTED_UPC_TEST_DIRS = $(RTED_UPC_LOCAL_TEST_DIRS) \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	   $(rted_path)/UPC/C_Outofbnds \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		 $(rted_path)/UPC/D_Outofbnds \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		 $(rted_path)/UPC/G_Uninit \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		 $(rted_path)/UPC/H_Memoryerr \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		 $(rted_path)/UPC/xtra

@OS_MACOSX_FALSE@RTED_TEST_DIRS = $(RTED_C_TEST_DIRS) $(RTED_CPP_TEST_DIRS) $(RTED_UPC_TEST_DIRS)
@OS_MACOSX_FALSE@GENERATE_RTED_ORIGSOURCES = ${foreach RTED_TEST_DIR, $(RTED_TEST_DIRS), $(patsubst $(RTED_TEST_DIR)/%_s$(strip $(1)), , ${wildcard $(RTED_TEST_DIR)/*${strip $(1)}}) }
@OS_MACOSX_FALSE@GENERATE_RTED_COPYSOURCES = ${foreach RTED_TEST_DIR, ${filter ${strip $(2)}%, $(RTED_TEST_DIRS)}, ${patsubst ${strip $(2)}/%${strip $(1)}, rted_source/%${strip $(1)}, ${wildcard $(RTED_TEST_DIR)/*${strip $(1)}} } }
@OS_MACOSX_FALSE@GENERATE_RTED_ROSESOURCES = ${patsubst %${strip $(1)}, %_rose${strip $(1)}, $(2) }
@OS_MACOSX_FALSE@GENERATE_RTED_BINFILES = ${patsubst ${strip $(2)}/%${strip $(1)}, rted_source/%.bin, ${filter ${strip $(2)}%, ${strip $(3)}}}
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@GENERATE_RTED_OUTPUTFILES = ${patsubst $(rted_path)/%${strip $(1)}, rted_source/%.${strip $(2)}-output, ${strip $(3)}}
@OS_MACOSX_FALSE@RTED_ORIGSOURCES_C = ${call GENERATE_RTED_ORIGSOURCES, .c}
@OS_MACOSX_FALSE@RTED_ORIGSOURCES_CPP = ${call GENERATE_RTED_ORIGSOURCES, .cpp}
@OS_MACOSX_FALSE@RTED_ORIGSOURCES_UPC = ${call GENERATE_RTED_ORIGSOURCES, .upc}
@OS_MACOSX_FALSE@RTED_ORIGSOURCES = $(RTED_ORIGSOURCES_C) $(RTED_ORIGSOURCES_CPP) $(RTED_ORIGSOURCES_UPC)
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@RTED_COPYSOURCES_GLOBAL_C = ${call GENERATE_RTED_COPYSOURCES, .c, $(rted_path)}
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@RTED_COPYSOURCES_GLOBAL_CPP = ${call GENERATE_RTED_COPYSOURCES, .cpp, $(rted_path)}
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@RTED_COPYSOURCES_GLOBAL_UPC = ${call GENERATE_RTED_COPYSOURCES, .upc, $(rted_path)}
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@RTED_COPYSOURCES_LOCAL_UPC = ${call GENERATE_RTED_COPYSOURCES, .upc, $(srcdir)}
@OS_MACOSX_FALSE@RTED_COPYSOURCES_LOCAL_C = ${call GENERATE_RTED_COPYSOURCES, .c, $(srcdir)}
@OS_MACOSX_FALSE@RTED_COPYSOURCES_LOCAL_CPP = ${call GENERATE_RTED_COPYSOURCES, .cpp, $(srcdir)}
@OS_MACOSX_FALSE@RTED_COPYSOURCES_GLOBAL = $(RTED_COPYSOURCES_GLOBAL_C) $(RTED_COPYSOURCES_GLOBAL_CPP) $(RTED_COPYSOURCES_GLOBAL_UPC)
@OS_MACOSX_FALSE@RTED_COPYSOURCES_LOCAL = $(RTED_COPYSOURCES_LOCAL_C) $(RTED_COPYSOURCES_LOCAL_CPP) $(RTED_COPYSOURCES_LOCAL_UPC)
@OS_MACOSX_FALSE@RTED_COPYSOURCES_C = $(RTED_COPYSOURCES_LOCAL_C) $(RTED_COPYSOURCES_GLOBAL_C)
@OS_MACOSX_FALSE@RTED_COPYSOURCES_CPP = $(RTED_COPYSOURCES_LOCAL_CPP) $(RTED_COPYSOURCES_GLOBAL_CPP)
@OS_MACOSX_FALSE@RTED_COPYSOURCES_UPC = $(RTED_COPYSOURCES_LOCAL_UPC) $(RTED_COPYSOURCES_GLOBAL_UPC)
@OS_MACOSX_FALSE@RTED_COPYSOURCES = $(RTED_COPYSOURCES_GLOBAL) $(RTED_COPYSOURCES_LOCAL)
@OS_MACOSX_FALSE@RTED_ROSESOURCES = ${call GENERATE_RTED_ROSESOURCES, \
@OS_MACOSX_FALSE@	.c, $(RTED_COPYSOURCES_C)} ${call \
@OS_MACOSX_FALSE@	GENERATE_RTED_ROSESOURCES, .cpp, \
@OS_MACOSX_FALSE@	$(RTED_COPYSOURCES_CPP)} ${call \
@OS_MACOSX_FALSE@	GENERATE_RTED_ROSESOURCES, .upc, \
@OS_MACOSX_FALSE@	$(RTED_COPYSOURCES_UPC)}
@OS_MACOSX_FALSE@RTED_BINFILES = ${call GENERATE_RTED_BINFILES, .c, \
@OS_MACOSX_FALSE@	$(srcdir), $(RTED_ORIGSOURCES_C)} ${call \
@OS_MACOSX_FALSE@	GENERATE_RTED_BINFILES, .cpp, $(srcdir), \
@OS_MACOSX_FALSE@	$(RTED_ORIGSOURCES_CPP)} $(am__append_3)
@OS_MACOSX_FALSE@RTED_OUTPUTFILES = ${call GENERATE_RTED_OUTPUTFILES, \
@OS_MACOSX_FALSE@	.c, actual, $(RTED_ORIGSOURCES_C)} ${call \
@OS_MACOSX_FALSE@	GENERATE_RTED_OUTPUTFILES, .c, expected, \
@OS_MACOSX_FALSE@	$(RTED_ORIGSOURCES_C)} ${call \
@OS_MACOSX_FALSE@	GENERATE_RTED_OUTPUTFILES, .cpp, actual, \
@OS_MACOSX_FALSE@	$(RTED_ORIGSOURCES_CPP)} ${call \
@OS_MACOSX_FALSE@	GENERATE_RTED_OUTPUTFILES, .cpp, expected, \
@OS_MACOSX_FALSE@	$(RTED_ORIGSOURCES_CPP)} ${call \
@OS_MACOSX_FALSE@	GENERATE_RTED_OUTPUTFILES, .upc, actual, \
@OS_MACOSX_FALSE@	$(RTED_ORIGSOURCES_UPC)} ${call \
@OS_MACOSX_FALSE@	GENERATE_RTED_OUTPUTFILES, .upc, expected, \
@OS_MACOSX_FALSE@	$(RTED_ORIGSOURCES_UPC)}

#testcases in rted distribution
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@COPYING_FILE = @SOURCE_FILE='$(strip $(patsubst rted_source/%, $(rted_path)/%, $(1)))';\
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		if [ -f $$SOURCE_FILE ]; then\
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@			echo -n "    copying input file $(1)... ";\
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@			cp $$SOURCE_FILE $(dir $(1));\
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@			echo " done.";\
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@			echo -n "    inserting include \"RuntimeSystem.h\" ... ";\
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@			sed -i '1i\#include \"RuntimeSystem.h\"' $(1);\
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@			echo " done.";\
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		else\
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@			echo -n "    not copying fake dependency $(1) ... ";\
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		fi


# TODO 2: Remove this once the assert( sym != null ) issue is fixed.
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@COPYING_FILE_WITH_WORKAROUND = @SOURCE_FILE='$(strip $(patsubst rted_source/%, $(rted_path)/%, $(1)))';\
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		if [ -f $$SOURCE_FILE ]; then\
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@			echo -n "    copying input file $(1)... ";\
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@			cp $$SOURCE_FILE $(dir $(1));\
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@			echo " done.";\
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@			echo -n "    inserting include \"RuntimeSystem_ParsingWorkaround.h\" ... ";\
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@			sed -i '1i\#include \"RuntimeSystem_ParsingWorkaround.h\"' $(1);\
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@			echo " done.";\
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		else\
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@			echo -n "    not copying fake dependency $(1) ... ";\
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@		fi


# parameters:
#  1: file extension (.c, .cpp, .f, ... )
#  2: compile command
#  3: rose option, for example: C_Only

#TRANSFORMING_FILES += echo -n "$(2) -g -o $(patsubst %_rose$(strip $(1)), %.bin, $@) \
#		      $(filter rted_source/%$(strip $(1)), $^) \
#		      -I$(dir $(patsubst rted_source/%, $(rted_path)/%, $@)) \
#		      -I$(dir $(patsubst rted_source/%, $(srcdir)/%, $@)) \
#		      -I$(top_builddir) -I$(srcdir) $(RTED_LIB) ";

#was:TRANSFORMING_FILES += echo -n "   adding line information ... ";
#was:TRANSFORMING_FILES += cat rose_$(notdir $(patsubst %_rose$(strip $(1)), %$(strip $(1)), $@ ) ) | \
#was:			  nl -p -b 'a' | \
#was:			  sed -e 's/^ \+\([0-9]\+\)\t\(.*\)x%%x\(.*\)/\2\1\3/; t end; s/^ \+\([0-9]\+\)\t//; : end' > $@;
#was: TRANSFORMING_FILES += cat rose_$(notdir $(patsubst %_rose$(strip $(1)), %$(strip $(1)), $@ ) ) > $@;
#was: TRANSFORMING_FILES += rm rose_$(notdir $(patsubst %_rose$(strip $(1)), %$(strip $(1)), $@ ) );

# \pp \todo remove the mv and have the Makefile operate on rose_* instead of *_rose files
#was:		      if [ -f $$SUPPORT_FILE ]; \
#was:		      then \
#was:			cat $$SUPPORT_FILE | \
#was:			    nl -p -b 'a' | \
#was:			    sed -e 's/^ \+\([0-9]\+\)\t\(.*\)x%%x\(.*\)/\2\1\3/; t end; s/^ \+\([0-9]\+\)\t//; : end' > $(patsubst %_rose$(strip $(1)), %_s_rose$(strip $(1)), $@ ); \
#was:		      fi;

#was:TRANSFORMING_FILES += rm -f rose_$(notdir $(patsubst %_rose$(strip $(1)), %_s$(strip $(1)), $@ ) );
@OS_MACOSX_FALSE@TRANSFORMING_FILES = @echo -n " testing if files \
@OS_MACOSX_FALSE@	compiles with gcc (with _s) ... $(patsubst \
@OS_MACOSX_FALSE@	%_rose$(strip $(1)), %.bin, $@)"; $(2) -g -o \
@OS_MACOSX_FALSE@	$(patsubst %_rose$(strip $(1)), %.bin, $@) \
@OS_MACOSX_FALSE@	$(filter rted_source/%$(strip $(1)), $^) \
@OS_MACOSX_FALSE@	$(am__append_4) -I$(dir $(patsubst \
@OS_MACOSX_FALSE@	rted_source/%, $(srcdir)/%, $@)) \
@OS_MACOSX_FALSE@	-I$(top_builddir) -I$(srcdir) $(RTED_LIB) > \
@OS_MACOSX_FALSE@	$@.compile.out 2> $@.compile.err || { cat \
@OS_MACOSX_FALSE@	$@.compile.err; false; }; if [ $$? -ne 0 ]; \
@OS_MACOSX_FALSE@	then exit 1; fi; rm $(patsubst %_rose$(strip \
@OS_MACOSX_FALSE@	$(1)), %.bin, $@); echo " done."; echo -n " \
@OS_MACOSX_FALSE@	running transformation ... $(patsubst \
@OS_MACOSX_FALSE@	%_rose$(strip $(1)), %.bin, $@)"; \
@OS_MACOSX_FALSE@	./runtimeCheck $(filter rted_source/%$(strip \
@OS_MACOSX_FALSE@	$(1)), $^) -rose:$(strip $(3)) -c \
@OS_MACOSX_FALSE@	$(TESTSUITEINCL) -I$(top_builddir) \
@OS_MACOSX_FALSE@	-I$(srcdir) $(am__append_5) -I$(dir \
@OS_MACOSX_FALSE@	$(patsubst rted_source/%, $(srcdir)/%, $@)) > \
@OS_MACOSX_FALSE@	$@.runtimeCheck.out 2> $@.runtimeCheck.err || \
@OS_MACOSX_FALSE@	{ cat $@.runtimeCheck.err; false; }; if [ $$? \
@OS_MACOSX_FALSE@	-ne 0 ]; then exit 1; fi; echo " done."; mv \
@OS_MACOSX_FALSE@	rose_$(notdir $(patsubst %_rose$(strip $(1)), \
@OS_MACOSX_FALSE@	%$(strip $(1)), $@)) $@; \
@OS_MACOSX_FALSE@	SUPPORT_FILE='rose_$(notdir $(patsubst \
@OS_MACOSX_FALSE@	%_rose$(strip $(1)), %_s$(strip $(1)), $@ ) \
@OS_MACOSX_FALSE@	)'; if [ -f $$SUPPORT_FILE ]; then mv \
@OS_MACOSX_FALSE@	$$SUPPORT_FILE $(patsubst %_rose$(strip \
@OS_MACOSX_FALSE@	$(1)), %_s_rose$(strip $(1)), $@); fi; echo " \
@OS_MACOSX_FALSE@	done.";

#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# rules to create the binary files
#------------------------------------------------------------------------------

# parameters:
#  1: file extension (.c, .cpp, .f, ... )
#  2: compile command
#  3: additional parameters, like linking against debugger ...
#COMPILING_RUNTIME_SYSTEM =  @echo -n "$(2) -g -o $@ $(filter rted_source/%$(strip $(1)), $^) \
#				      $(srcdir)/$(RTS) \
#				      $(AM_CPPFLAGS) \
#				      -I$(dir $(patsubst rted_source/%, $(rted_path)/%, $@)) \
#	 		              -I$(dir $(patsubst rted_source/%, $(srcdir)/%, $@)) \
#				      -I$(top_builddir) \
#				      -I$(srcdir) \
#				      $(3) $(RTED_LIB)";
@OS_MACOSX_FALSE@COMPILING_RUNTIME_SYSTEM = @echo " !>>>>> compiling \
@OS_MACOSX_FALSE@	instrumented debugger code (with _s) ... \
@OS_MACOSX_FALSE@	$(filter rted_source/%$(strip $(1)), $^)"; \
@OS_MACOSX_FALSE@	$(2) -g -o $@ $(filter rted_source/%$(strip \
@OS_MACOSX_FALSE@	$(1)), $^) $(TESTSUITEINCL) $(am__append_6) \
@OS_MACOSX_FALSE@	-I$(dir $(patsubst rted_source/%, \
@OS_MACOSX_FALSE@	$(srcdir)/%, $@)) -I$(top_builddir) \
@OS_MACOSX_FALSE@	-I$(srcdir) $(3) $(4) $(5) > $@.compile.out \
@OS_MACOSX_FALSE@	2> $@.compile.err || { cat $@.compile.err; \
@OS_MACOSX_FALSE@	false; }; if [ $$? -ne 0 ]; then exit 1; fi; \
@OS_MACOSX_FALSE@	echo -n " done.";

# TODO: make this aware of different file extensions ...

# parameters:
#  1: file extension (.c, .cpp, .f, ... )
#  2: location to search ( $(srcdir), $(rted_path), ... )
@OS_MACOSX_FALSE@GENERATE_EXPECTED_OUTPUT = @OUTPUT_SRC='$(strip $(patsubst rted_source/%.expected-output, $(strip $(2))/%.ok_msg, $@))';\
@OS_MACOSX_FALSE@			   TEST_FILE='$(strip $(patsubst rted_source/%.expected-output, $(strip $(2))/%$(strip $(1)), $@))';\
@OS_MACOSX_FALSE@			   if [ -f "$$OUTPUT_SRC" ]; then \
@OS_MACOSX_FALSE@				echo ===`wc -l $$TEST_FILE`=== | $(EXTRACT_EXPECTED_ERROR) - $$OUTPUT_SRC | head -n 1 > $@;\
@OS_MACOSX_FALSE@			   fi


#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# rules to run all tests in the directories listed in RTED_ORIGSOURCES
#------------------------------------------------------------------------------
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@RTED_ORIGSOURCES_GLOBAL_C = ${filter $(rted_path)%, $(RTED_ORIGSOURCES_C)}
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@RTED_ORIGSOURCES_GLOBAL_CPP = ${filter $(rted_path)%, $(RTED_ORIGSOURCES_CPP)}
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@RTED_ORIGSOURCES_GLOBAL_UPC = ${filter $(rted_path)%, $(RTED_ORIGSOURCES_UPC)}
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@RTED_ORIGSOURCES_LOCAL_UPC = ${filter $(srcdir)%, $(RTED_ORIGSOURCES_UPC)}
@OS_MACOSX_FALSE@RTED_ORIGSOURCES_LOCAL_C = ${filter $(srcdir)%, $(RTED_ORIGSOURCES_C)}
@OS_MACOSX_FALSE@RTED_ORIGSOURCES_LOCAL_CPP = ${filter $(srcdir)%, $(RTED_ORIGSOURCES_CPP)}
@OS_MACOSX_FALSE@GENERATE_RTED_RUN_TARGET = ${patsubst ${strip $(4)}/%${strip $(1)}, ${strip $(2)}/%, $(3)}
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@RUN_TARGETS_GLOBAL_C = ${call GENERATE_RTED_RUN_TARGET, .c, run, $(RTED_ORIGSOURCES_GLOBAL_C), $(rted_path)}
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@RUN_TARGETS_GLOBAL_CPP = ${call GENERATE_RTED_RUN_TARGET, .cpp, run, $(RTED_ORIGSOURCES_GLOBAL_CPP), $(rted_path)}
@OS_MACOSX_FALSE@RUN_TARGETS_LOCAL_C = ${call GENERATE_RTED_RUN_TARGET, .c, run, $(RTED_ORIGSOURCES_LOCAL_C), $(srcdir)}
@OS_MACOSX_FALSE@RUN_TARGETS_LOCAL_CPP = ${call GENERATE_RTED_RUN_TARGET, .cpp, run, $(RTED_ORIGSOURCES_LOCAL_CPP), $(srcdir)}
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@RUN_TARGETS_GLOBAL_UPC = ${call GENERATE_RTED_RUN_TARGET, .upc, runupc, $(RTED_ORIGSOURCES_GLOBAL_UPC), $(rted_path)}
@OS_MACOSX_FALSE@RUN_TARGETS_LOCAL_UPC = ${call GENERATE_RTED_RUN_TARGET, .upc, runupc, $(RTED_ORIGSOURCES_LOCAL_UPC), $(srcdir)}
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@RUN_LOG_TARGETS_GLOBAL_C = ${call GENERATE_RTED_RUN_TARGET, .c, run_log, $(RTED_ORIGSOURCES_GLOBAL_C), $(rted_path)}
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@RUN_LOG_TARGETS_GLOBAL_CPP = ${call GENERATE_RTED_RUN_TARGET, .cpp, run_log, $(RTED_ORIGSOURCES_GLOBAL_CPP), $(rted_path)}
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@RUN_LOG_TARGETS_GLOBAL_UPC = ${call GENERATE_RTED_RUN_TARGET, .upc, runupc_log, $(RTED_ORIGSOURCES_GLOBAL_UPC), $(rted_path)}
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@RUN_LOG_TARGETS_LOCAL_UPC = ${call GENERATE_RTED_RUN_TARGET, .upc, runupc_log, $(RTED_ORIGSOURCES_LOCAL_UPC), $(srcdir)}
@OS_MACOSX_FALSE@RUN_LOG_TARGETS_LOCAL_C = ${call GENERATE_RTED_RUN_TARGET, .c, run_log, $(RTED_ORIGSOURCES_LOCAL_C), $(srcdir)}
@OS_MACOSX_FALSE@RUN_LOG_TARGETS_LOCAL_CPP = ${call GENERATE_RTED_RUN_TARGET, .cpp, run_log, $(RTED_ORIGSOURCES_LOCAL_CPP), $(srcdir)}

#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# Tests that are known to fail
#------------------------------------------------------------------------------

# upc:c_G_4_a test RTED does not catch invalid assignment
#                  and RTED/UPC does not catch negative numbers passed as affinity expr
# upc:c_G_2_g ptr reads are not tested when casted
# upc:c_G_6_i ptr reads are not tested when evaluated as binary operations
# upc:c_G_6_i ptr reads are not tested when evaluated as binary operations
# upc:c_H_5_b helper file (_s) declares its own variable; RTED adds the
#             CreateVariable call to the first function
# upc:c_H_5_d see upc:c_H_5_b
# upc:c_H_5_f see upc:c_H_5_b

# TODO 2: Handle these tests
@OS_MACOSX_FALSE@TESTS_KNOWN_TO_FAIL = run/C/subprogram_call_errors/c_C_1_3_f \
@OS_MACOSX_FALSE@					  run/C++/allocation_deallocation_errors/C_G_2_1_g_d \
@OS_MACOSX_FALSE@					  run/C++/allocation_deallocation_errors/C_G_2_1_h_ld \
@OS_MACOSX_FALSE@					  run/C++/allocation_deallocation_errors/C_G_2_3_a_d \
@OS_MACOSX_FALSE@					  run/C++/allocation_deallocation_errors/C_G_2_4_a_d \
@OS_MACOSX_FALSE@					  run/C++/allocation_deallocation_errors/C_G_4_1_o_f \
@OS_MACOSX_FALSE@					  run/C++/array_index_out_of_bound/C_E_1_7_a_o \
@OS_MACOSX_FALSE@					  run/C++/array_index_out_of_bound/C_E_1_7_i_f \
@OS_MACOSX_FALSE@					  run/C++/array_index_out_of_bound/C_E_1_7_i_sh \
@OS_MACOSX_FALSE@					  run/C++/memory_leaks/C_I_2_2_a_d \
@OS_MACOSX_FALSE@					  run/C++/memory_leaks/C_I_2_5_a_d \
@OS_MACOSX_FALSE@					  run/C++/memory_leaks/C_I_2_6_a_d \
@OS_MACOSX_FALSE@					  run/C++/memory_leaks/C_I_2_6_b_o \
@OS_MACOSX_FALSE@					  run/C++/pointer_errors/C_J_1_4_a_d \
@OS_MACOSX_FALSE@					  run/C++/pointer_errors/C_J_2_1_a_d \
@OS_MACOSX_FALSE@					  run/C++/uninitialized_variables/C_A_1_1_c_uc \
@OS_MACOSX_FALSE@					  run/C++/uninitialized_variables/C_A_1_2_a_d \
@OS_MACOSX_FALSE@					  run/C++/uninitialized_variables/C_A_1_2_a_i \
@OS_MACOSX_FALSE@					  run/C++/uninitialized_variables/C_A_1_3_a_d \
@OS_MACOSX_FALSE@					  run/C++/uninitialized_variables/C_A_1_3_a_i \
@OS_MACOSX_FALSE@					  run/C++/uninitialized_variables/C_A_2_1_b_uc \
@OS_MACOSX_FALSE@					  run/C++/uninitialized_variables/C_A_3_1_c_uc \
@OS_MACOSX_FALSE@					  run/C++/uninitialized_variables/C_A_3_2_c_uc \
@OS_MACOSX_FALSE@					  run/C++/input_output_errors/C_H_1_2_a_fs \
@OS_MACOSX_FALSE@					  run/C++/input_output_errors/C_H_1_2_a_ifs \
@OS_MACOSX_FALSE@					  run/C++/input_output_errors/C_H_1_3_a_fs \
@OS_MACOSX_FALSE@					  run/C++/input_output_errors/C_H_2_2_a_fs \
@OS_MACOSX_FALSE@					  run/C++/input_output_errors/C_H_2_2_a_ofs \
@OS_MACOSX_FALSE@					  run/C++/input_output_errors/C_H_2_3_a_fs \
@OS_MACOSX_FALSE@					  run/C++/input_output_errors/C_H_3_3_a_fs \
@OS_MACOSX_FALSE@					  run/C++/input_output_errors/C_H_3_3_a_ifs \
@OS_MACOSX_FALSE@					  run/C++/input_output_errors/C_H_3_4_a_fs \
@OS_MACOSX_FALSE@					  run/C++/input_output_errors/C_H_3_4_a_ofs \
@OS_MACOSX_FALSE@					  run/tests/C/memoryleaks/assignment_scope_switch \
@OS_MACOSX_FALSE@					  run/tests/C/memoryleaks/assignment_to_locals_then_globals_then_local \
@OS_MACOSX_FALSE@					  run/tests/C/memoryleaks/assignment_to_fn_malloc_novar \
@OS_MACOSX_FALSE@					  run/tests/C/memoverlap/heap_array_in_struct \
@OS_MACOSX_FALSE@					  run/tests/C/memoverlap/heap_array_in_struct_in_array \
@OS_MACOSX_FALSE@					  run/tests/C/pointer/arraytest \
@OS_MACOSX_FALSE@					  run/tests/Cxx/overloading/array_index \
@OS_MACOSX_FALSE@					  run/tests/C/types/union \
@OS_MACOSX_FALSE@					  run/tests/Cxx/pointer/arrow_star \
@OS_MACOSX_FALSE@					  run/tests/Cxx/pointer/C_F_3_3_a_i \
@OS_MACOSX_FALSE@					  run/tests/Cxx/pointer/dot_star \
@OS_MACOSX_FALSE@					  run/tests/Cxx/pointer/nulltest \
@OS_MACOSX_FALSE@					  run/tests/UPC/simple/test \
@OS_MACOSX_FALSE@					  run/tests/UPC/simple/simple \
@OS_MACOSX_FALSE@					  run/tests/Cxx/pointer/arrow_varref2 \
@OS_MACOSX_FALSE@					  run/C/uninitialized_variables/c_A_6_a_in \
@OS_MACOSX_FALSE@					  run/C/uninitialized_variables/c_A_6_b_in \
@OS_MACOSX_FALSE@					  run/C/uninitialized_variables/c_A_6_c_in \
@OS_MACOSX_FALSE@					  run/C/uninitialized_variables/c_A_6_d_in \
@OS_MACOSX_FALSE@					  run/C/uninitialized_variables/c_A_6_e_in \
@OS_MACOSX_FALSE@					  run/C++/uninitialized_variables/c_A_6_a_in \
@OS_MACOSX_FALSE@					  run/C++/uninitialized_variables/c_A_6_b_in \
@OS_MACOSX_FALSE@					  run/C++/uninitialized_variables/c_A_6_c_in \
@OS_MACOSX_FALSE@					  run/C++/uninitialized_variables/c_A_6_d_in \
@OS_MACOSX_FALSE@					  run/C++/uninitialized_variables/c_A_6_e_in \
@OS_MACOSX_FALSE@					  runupc/UPC/G_Uninit/c_G_4_a \
@OS_MACOSX_FALSE@					  runupc/UPC/G_Uninit/c_G_4_c \
@OS_MACOSX_FALSE@            runupc/UPC/G_Uninit/c_G_2_g_D \
@OS_MACOSX_FALSE@            runupc/UPC/G_Uninit/c_G_2_g_I \
@OS_MACOSX_FALSE@            runupc/UPC/G_Uninit/c_G_2_g_L \
@OS_MACOSX_FALSE@            runupc/UPC/G_Uninit/c_G_2_g_F \
@OS_MACOSX_FALSE@            runupc/UPC/G_Uninit/c_G_2_g_S \
@OS_MACOSX_FALSE@            runupc/UPC/G_Uninit/c_G_2_h_D \
@OS_MACOSX_FALSE@            runupc/UPC/G_Uninit/c_G_2_h_I \
@OS_MACOSX_FALSE@            runupc/UPC/G_Uninit/c_G_2_h_L \
@OS_MACOSX_FALSE@            runupc/UPC/G_Uninit/c_G_2_h_F \
@OS_MACOSX_FALSE@            runupc/UPC/G_Uninit/c_G_2_h_S \
@OS_MACOSX_FALSE@            runupc/UPC/G_Uninit/c_G_6_i \
@OS_MACOSX_FALSE@            runupc/UPC/G_Uninit/c_G_6_j \
@OS_MACOSX_FALSE@            runupc/UPC/H_Memoryerr/c_H_5_b \
@OS_MACOSX_FALSE@            runupc/UPC/H_Memoryerr/c_H_5_d \
@OS_MACOSX_FALSE@            runupc/UPC/H_Memoryerr/c_H_5_f \
@OS_MACOSX_FALSE@					  TheEnd_KNOWN_TO_FAIL


# These tests do not compile
#   most likely because a function's result value is cast
#   to shared (as in "int shared * shared", where a stack value -the pointer-
#   cannot be shared)
@OS_MACOSX_FALSE@TEST_HAS_COMPILE_ERROR = runupc/UPC/G_Uninit/c_G_1_b_D \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_1_b_I \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_1_b_L \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_1_b_S \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_1_b_F \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_1_e_D \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_1_e_I \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_1_e_L \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_1_e_S \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_1_e_F \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_1_f_D \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_1_f_I \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_1_f_L \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_1_f_S \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_1_f_F \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_a_D \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_a_I \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_a_L \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_a_S \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_a_F \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_b_D \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_b_I \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_b_L \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_b_S \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_b_F \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_c_D \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_c_I \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_c_L \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_c_S \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_c_F \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_d_D \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_d_I \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_d_L \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_d_S \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_d_F \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_e_D \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_e_I \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_e_L \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_e_S \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_e_F \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_f_D \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_f_I \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_f_L \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_f_S \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_3_f_F \
@OS_MACOSX_FALSE@                         runupc/UPC/G_Uninit/c_G_6_a \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_10_2_c_F \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_10_2_c_I \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_10_2_c_L \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_10_2_c_D \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_10_2_c_S \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_10_2_d_F \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_10_2_d_I \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_10_2_d_L \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_10_2_d_D \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_10_2_d_S \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_10_4_c_F \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_10_4_c_I \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_10_4_c_L \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_10_4_c_D \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_10_4_c_S \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_10_4_d_F \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_10_4_d_I \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_10_4_d_L \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_10_4_d_D \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_10_4_d_S \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_11_2_c_F \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_11_2_c_I \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_11_2_c_L \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_11_2_c_D \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_11_2_c_S \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_11_2_d_F \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_11_2_d_I \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_11_2_d_L \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_11_2_d_D \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_11_2_d_S \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_11_4_c_F \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_11_4_c_I \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_11_4_c_L \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_11_4_c_D \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_11_4_c_S \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_11_4_d_F \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_11_4_d_I \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_11_4_d_L \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_11_4_d_D \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_11_4_d_S \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_a_F \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_a_I \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_a_L \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_a_D \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_a_S \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_b_F \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_b_I \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_b_L \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_b_D \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_b_S \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_c_F \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_c_I \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_c_L \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_c_D \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_c_S \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_d_F \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_d_I \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_d_L \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_d_D \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_d_S \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_e_F \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_e_I \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_e_L \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_e_D \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_e_S \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_f_F \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_f_I \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_f_L \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_f_D \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_f_S \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_g_F \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_g_I \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_g_L \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_g_D \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_g_S \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_h_F \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_h_I \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_h_L \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_h_D \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_1_h_S \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_a_F \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_a_I \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_a_L \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_a_D \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_a_S \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_b_F \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_b_I \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_b_L \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_b_D \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_b_S \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_c_F \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_c_I \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_c_L \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_c_D \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_c_S \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_d_F \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_d_I \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_d_L \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_d_D \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_d_S \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_e_F \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_e_I \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_e_L \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_e_D \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_e_S \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_f_F \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_f_I \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_f_L \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_f_D \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_f_S \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_g_F \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_g_I \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_g_L \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_g_D \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_g_S \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_h_F \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_h_I \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_h_L \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_h_D \
@OS_MACOSX_FALSE@                         runupc/UPC/C_Outofbnds/c_C_6_2_h_S \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_a_F \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_a_I \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_a_L \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_a_D \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_a_S \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_b_F \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_b_I \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_b_L \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_b_D \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_b_S \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_c_F \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_c_I \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_c_L \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_c_D \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_c_S \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_d_F \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_d_I \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_d_L \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_d_D \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_d_S \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_e_F \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_e_I \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_e_L \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_e_D \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_e_S \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_f_F \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_f_I \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_f_L \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_f_D \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_f_S \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_g_F \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_g_I \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_g_L \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_g_D \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_g_S \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_h_F \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_h_I \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_h_L \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_h_D \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_1_h_S \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_a_F \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_a_I \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_a_L \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_a_D \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_a_S \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_b_F \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_b_I \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_b_L \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_b_D \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_b_S \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_c_F \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_c_I \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_c_L \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_c_D \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_c_S \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_d_F \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_d_I \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_d_L \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_d_D \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_d_S \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_e_F \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_e_I \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_e_L \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_e_D \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_e_S \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_f_F \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_f_I \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_f_L \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_f_D \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_f_S \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_g_F \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_g_I \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_g_L \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_g_D \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_g_S \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_h_F \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_h_I \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_h_L \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_h_D \
@OS_MACOSX_FALSE@                         runupc/UPC/D_Outofbnds/c_D_3_2_h_S \
@OS_MACOSX_FALSE@                         runupc/UPC/H_Memoryerr/c_H_2_b \
@OS_MACOSX_FALSE@                         runupc/UPC/H_Memoryerr/c_H_2_d \
@OS_MACOSX_FALSE@                         runupc/UPC/H_Memoryerr/c_H_3_b \
@OS_MACOSX_FALSE@                         runupc/UPC/H_Memoryerr/c_H_3_d \
@OS_MACOSX_FALSE@                         runupc/UPC/H_Memoryerr/c_H_4_c \
@OS_MACOSX_FALSE@                         runupc/UPC/H_Memoryerr/c_H_5_c \
@OS_MACOSX_FALSE@                         runupc/UPC/H_Memoryerr/c_H_5_e \
@OS_MACOSX_FALSE@						             runupc/UPC/H_Memoryerr/c_H_6_c \
@OS_MACOSX_FALSE@						             runupc/UPC/H_Memoryerr/c_H_6_e \
@OS_MACOSX_FALSE@						             runupc/UPC/H_Memoryerr/c_H_7_e \
@OS_MACOSX_FALSE@						             runupc/UPC/H_Memoryerr/c_H_7_f \
@OS_MACOSX_FALSE@                         TheEnd_COMPILE_ERROR


# Test bugs prevent us from finding expected errors
# BUG Description
# c_C_10_2_a_L  (F/D) unexpected out of bounds access (allocates int, means other type[L,F,D])
# c_C_10_2_b_L  same
# c_C_10_4_a_L  same
#               note, the S version does not have a bug, b/c the array is allocated
#               in terms of int, thus no out of bounds access occurs.
# c_C_10_4_b_L  same
# c_C_11_2_a_L  same
# c_C_11_2_b_L  same
# c_C_11_4_a_L  same (see c_C_10_4_a_S)
# c_C_11_4_b_L  same
# c_H_2_c       forward declares a function, but calls that function differently in the call
# c_H_1_d       wrong line number for expected errors
# c_H_7_b       memory is allocated using upc_global_alloc, but released with free (C library function)
@OS_MACOSX_FALSE@TEST_HAS_BUG = runupc/UPC/C_Outofbnds/c_C_10_2_a_F \
@OS_MACOSX_FALSE@               runupc/UPC/C_Outofbnds/c_C_10_2_a_L \
@OS_MACOSX_FALSE@               runupc/UPC/C_Outofbnds/c_C_10_2_a_D \
@OS_MACOSX_FALSE@               runupc/UPC/C_Outofbnds/c_C_10_2_b_F \
@OS_MACOSX_FALSE@               runupc/UPC/C_Outofbnds/c_C_10_2_b_L \
@OS_MACOSX_FALSE@               runupc/UPC/C_Outofbnds/c_C_10_2_b_D \
@OS_MACOSX_FALSE@							 runupc/UPC/C_Outofbnds/c_C_10_4_a_F \
@OS_MACOSX_FALSE@               runupc/UPC/C_Outofbnds/c_C_10_4_a_L \
@OS_MACOSX_FALSE@               runupc/UPC/C_Outofbnds/c_C_10_4_a_D \
@OS_MACOSX_FALSE@               runupc/UPC/C_Outofbnds/c_C_10_4_a_S \
@OS_MACOSX_FALSE@               runupc/UPC/C_Outofbnds/c_C_10_4_b_F \
@OS_MACOSX_FALSE@               runupc/UPC/C_Outofbnds/c_C_10_4_b_L \
@OS_MACOSX_FALSE@               runupc/UPC/C_Outofbnds/c_C_10_4_b_D \
@OS_MACOSX_FALSE@               runupc/UPC/C_Outofbnds/c_C_11_2_a_F \
@OS_MACOSX_FALSE@               runupc/UPC/C_Outofbnds/c_C_11_2_a_L \
@OS_MACOSX_FALSE@               runupc/UPC/C_Outofbnds/c_C_11_2_a_D \
@OS_MACOSX_FALSE@               runupc/UPC/C_Outofbnds/c_C_11_2_b_F \
@OS_MACOSX_FALSE@               runupc/UPC/C_Outofbnds/c_C_11_2_b_L \
@OS_MACOSX_FALSE@               runupc/UPC/C_Outofbnds/c_C_11_2_b_D \
@OS_MACOSX_FALSE@               runupc/UPC/C_Outofbnds/c_C_11_4_a_F \
@OS_MACOSX_FALSE@               runupc/UPC/C_Outofbnds/c_C_11_4_a_L \
@OS_MACOSX_FALSE@               runupc/UPC/C_Outofbnds/c_C_11_4_a_D \
@OS_MACOSX_FALSE@               runupc/UPC/C_Outofbnds/c_C_11_4_a_S \
@OS_MACOSX_FALSE@               runupc/UPC/C_Outofbnds/c_C_11_4_b_F \
@OS_MACOSX_FALSE@               runupc/UPC/C_Outofbnds/c_C_11_4_b_L \
@OS_MACOSX_FALSE@               runupc/UPC/C_Outofbnds/c_C_11_4_b_D \
@OS_MACOSX_FALSE@               runupc/UPC/H_Memoryerr/c_H_2_c \
@OS_MACOSX_FALSE@               runupc/UPC/H_Memoryerr/c_H_1_d \
@OS_MACOSX_FALSE@               runupc/UPC/H_Memoryerr/c_H_7_a \
@OS_MACOSX_FALSE@               runupc/UPC/H_Memoryerr/c_H_7_b \
@OS_MACOSX_FALSE@               TheEnd_TEST_BUGS


# Late bugs do not prevent us from finding expected errors (the unexpected bug
# occurs after the expected one).
@OS_MACOSX_FALSE@TEST_HAS_LATE_BUG = runupc/UPC/C_Outofbnds/c_C_10_1_c_F \
@OS_MACOSX_FALSE@                    runupc/UPC/C_Outofbnds/c_C_10_1_c_I \
@OS_MACOSX_FALSE@                    runupc/UPC/C_Outofbnds/c_C_10_1_c_L \
@OS_MACOSX_FALSE@                    runupc/UPC/C_Outofbnds/c_C_10_1_c_D \
@OS_MACOSX_FALSE@                    runupc/UPC/C_Outofbnds/c_C_10_1_c_S \
@OS_MACOSX_FALSE@                    runupc/UPC/C_Outofbnds/c_C_10_1_d_F \
@OS_MACOSX_FALSE@                    runupc/UPC/C_Outofbnds/c_C_10_1_d_I \
@OS_MACOSX_FALSE@                    runupc/UPC/C_Outofbnds/c_C_10_1_d_L \
@OS_MACOSX_FALSE@                    runupc/UPC/C_Outofbnds/c_C_10_1_d_D \
@OS_MACOSX_FALSE@                    runupc/UPC/C_Outofbnds/c_C_10_1_d_S \
@OS_MACOSX_FALSE@                    runupc/UPC/C_Outofbnds/c_C_10_3_c_F \
@OS_MACOSX_FALSE@                    runupc/UPC/C_Outofbnds/c_C_10_3_c_I \
@OS_MACOSX_FALSE@                    runupc/UPC/C_Outofbnds/c_C_10_3_c_L \
@OS_MACOSX_FALSE@                    runupc/UPC/C_Outofbnds/c_C_10_3_c_D \
@OS_MACOSX_FALSE@                    runupc/UPC/C_Outofbnds/c_C_10_3_c_S \
@OS_MACOSX_FALSE@                    runupc/UPC/C_Outofbnds/c_C_10_3_d_F \
@OS_MACOSX_FALSE@                    runupc/UPC/C_Outofbnds/c_C_10_3_d_I \
@OS_MACOSX_FALSE@                    runupc/UPC/C_Outofbnds/c_C_10_3_d_L \
@OS_MACOSX_FALSE@                    runupc/UPC/C_Outofbnds/c_C_10_3_d_D \
@OS_MACOSX_FALSE@                    runupc/UPC/C_Outofbnds/c_C_10_3_d_S \
@OS_MACOSX_FALSE@                    TheEnd_LATE_TEST_BUGS

all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign --ignore-deps projects/RTED/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign --ignore-deps projects/RTED/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

runtimeCheck$(EXEEXT): $(runtimeCheck_OBJECTS) $(runtimeCheck_DEPENDENCIES) $(EXTRA_runtimeCheck_DEPENDENCIES) 
	@rm -f runtimeCheck$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(runtimeCheck_OBJECTS) $(runtimeCheck_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-recursive
all-am: Makefile $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool clean-local \
	mostlyclean-am

distclean: distclean-recursive
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am check-local clean clean-binPROGRAMS clean-generic \
	clean-libtool clean-local cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS

.PRECIOUS: Makefile


# JJW (2/25/2008): set a flag (only used when running ROSE applications) to
# have them run using the build tree rather than the install tree -- this is
# important for "make check" in an uninstalled copy of ROSE.
@USE_ROSE_IN_BUILD_TREE_VAR_TRUE@export ROSE_IN_BUILD_TREE=$(top_builddir)

@ROSE_HAVE_LIBZ3_TRUE@  # The previous "Z3_*" variables should have been named "ROSE_Z3_*" following the pattern in the rest of this
@ROSE_HAVE_LIBZ3_TRUE@  # makefile. I don't want to break code that uses the wrong names, so I'll just add the correct ones. [Matzke 2017-10-17]

show-rpaths:
	@echo "ROSE_LIBS = $(ROSE_LIBS)"
	@echo "ROSE_RPATHS = $(ROSE_RPATHS)"
	@echo "ROSE_LINK_RPATHS = $(ROSE_LINK_RPATHS)"

clean-test-targets:
	rm -f $(TEST_TARGETS)
	rm -f $(TEST_TARGETS:.passed=.failed)
	rm -f $(TEST_TARGETS:.passed=.out)
	rm -f $(TEST_TARGETS:.passed=.err)

clean-local: clean-test-targets

.PHONY: clean-test-targets

@OS_MACOSX_FALSE@runtimeCheck.o: runtimeCheck.cpp

@OS_MACOSX_FALSE@.SECONDARY: $(RTED_BINFILES)$(RTED_COPYSOURCES) $(RTED_ROSESOURCES) $(RTED_OUTPUTFILES)
@OS_MACOSX_FALSE@.PRECIOUS: $(RTED_BINFILES) $(RTED_COPYSOURCES) $(RTED_ROSESOURCES) $(RTED_OUTPUTFILES)

@OS_MACOSX_FALSE@print:
@OS_MACOSX_FALSE@	@echo $(RTED_TEST_DIRS)

@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@check-C-array: run/C/array_index_out_of_bound

@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@check-C-string: run/C/string_errors

@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@check-C-subprogram: run/C/subprogram_call_errors

@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@check-C-allocation: run/C/allocation_deallocation_errors

@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@check-C-inputoutput: run/C/input_output_errors

@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@check-C-memoryleaks: run/C/memory_leaks

@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@check-C-uninitvar: run/C/uninitialized_variables

@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@check-C-C99specific: run/C/C99_specific_errors

@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@rted_source:
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	@echo "Copying all files .... "
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	@cp -f $(srcdir)/index_array.txt .
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	@cp -f $(srcdir)/file_read.txt .
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	@cp -f $(srcdir)/upcparam.h .
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	@cp -f $(srcdir)/upcparam_s.h .
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	@cp -f $(srcdir)/upccrose .
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	@mkdir -p $(foreach rted_dir,$(filter $(rted_path)%, $(RTED_TEST_DIRS) ), $(patsubst $(rted_path)/%, rted_source/%, $(rted_dir) ) )
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	@mkdir -p $(foreach local_test_dir,$(filter $(srcdir)%, $(RTED_TEST_DIRS) ), $(patsubst $(srcdir)/%, rted_source/%, $(local_test_dir) ) )
@OS_MACOSX_FALSE@@ROSE_USE_RTED_FALSE@rted_source:
@OS_MACOSX_FALSE@@ROSE_USE_RTED_FALSE@	@echo "Copying all files .... "
@OS_MACOSX_FALSE@@ROSE_USE_RTED_FALSE@	@mkdir -p $(foreach local_test_dir,$(filter $(srcdir)%, $(RTED_TEST_DIRS) ), $(patsubst $(srcdir)/%, rted_source/%, $(local_test_dir) ) )

#------------------------------------------------------------------------------
# rule to copy the sources into our current working directory
#------------------------------------------------------------------------------

#testcases in $(top_srcdir)/projects/RTED/tests
@OS_MACOSX_FALSE@rted_source/tests/%.c: rted_source $(top_srcdir)/projects/RTED/tests/%.c
@OS_MACOSX_FALSE@	@echo -e Checking $(patsubst $(top_srcdir)/projects/RTED/tests/%.c, %, $(filter $(top_srcdir)/%, $^)) ...
@OS_MACOSX_FALSE@	@echo -n "    copying input file (.c) ... "
@OS_MACOSX_FALSE@	@cp $(filter $(top_srcdir)/%.c, $^) $(dir $@)
@OS_MACOSX_FALSE@	@echo " done."
@OS_MACOSX_FALSE@	@echo -n "    inserting #include \"RuntimeSystem.h\" ... "
@OS_MACOSX_FALSE@	@sed -i '1i\#include \"RuntimeSystem.h\"' $@
@OS_MACOSX_FALSE@	@echo " done."

#testcases in $(top_srcdir)/projects/RTED/tests
@OS_MACOSX_FALSE@rted_source/tests/%.cpp: rted_source $(top_srcdir)/projects/RTED/tests/%.cpp
@OS_MACOSX_FALSE@	@echo -e Checking $(patsubst $(top_srcdir)/projects/RTED/tests/%.cpp, %, $(filter $(top_srcdir)/%, $^)) ...
@OS_MACOSX_FALSE@	@echo -n "    copying input file (.cpp) ... "
@OS_MACOSX_FALSE@	@cp $(filter $(top_srcdir)/%.cpp, $^) $(dir $@)
@OS_MACOSX_FALSE@	@echo " done."
@OS_MACOSX_FALSE@	@echo -n "    inserting #include \"RuntimeSystem.h\" ... "
@OS_MACOSX_FALSE@	@sed -i '1i\#include \"RuntimeSystem.h\"' $@
@OS_MACOSX_FALSE@	@echo " done."

#testcases in $(top_srcdir)/projects/RTED/tests
@OS_MACOSX_FALSE@rted_source/tests/%.upc: rted_source $(top_srcdir)/projects/RTED/tests/%.upc
@OS_MACOSX_FALSE@	@echo -e Checking $(patsubst $(top_srcdir)/projects/RTED/tests/%.upc, %, $(filter $(top_srcdir)/%, $^)) ...
@OS_MACOSX_FALSE@	@echo -n "    copying input file (.upc) ... $(filter $(top_srcdir)/%.upc, $^) $(dir $@) "
@OS_MACOSX_FALSE@	@cp $(filter $(top_srcdir)/%.upc, $^) $(dir $@)
@OS_MACOSX_FALSE@	@echo " done."
@OS_MACOSX_FALSE@	@echo -n "    inserting #include \"RuntimeSystem.h\" ... "
@OS_MACOSX_FALSE@	@sed -i '1i\#include \"RuntimeSystem.h\"' $@
@OS_MACOSX_FALSE@	@echo " done."

@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@rted_source/%_s.c: rted_source $(rted_path)/%_s.c
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	$(call COPYING_FILE, $@)

@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@rted_source/%_s.cpp: rted_source $(rted_path)/%_s.cpp
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	$(call COPYING_FILE, $@)

@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@rted_source/%_s.upc: rted_source $(rted_path)/%_s.upc
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	$(call COPYING_FILE, $@)

@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@rted_source/%.c: rted_source $(rted_path)/%.c
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	$(call COPYING_FILE, $@)

@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@rted_source/%.cpp: rted_source $(rted_path)/%.cpp
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	$(call COPYING_FILE_WITH_WORKAROUND, $@)

@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@rted_source/%.upc: rted_source $(rted_path)/%.upc
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	$(call COPYING_FILE, $@)

#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# rules to create _rose.c and _s_rose.c files
#------------------------------------------------------------------------------

@OS_MACOSX_FALSE@rted_source/%_s_rose.c: rted_source/%_s.c
@OS_MACOSX_FALSE@	@touch $@

@OS_MACOSX_FALSE@rted_source/%_s_rose.cpp: rted_source/%_s.cpp
@OS_MACOSX_FALSE@	@touch $@

@OS_MACOSX_FALSE@rted_source/%_s_rose.upc: rted_source/%_s.upc
@OS_MACOSX_FALSE@	@touch $@

@OS_MACOSX_FALSE@rted_source/%_rose.c: runtimeCheck rted_source/%.c rted_source/%_s.c $(RTS) $(srcdir)/RuntimeSystem.h
@OS_MACOSX_FALSE@	$(call TRANSFORMING_FILES, .c, $(RTED_CC), C_Only)

@OS_MACOSX_FALSE@rted_source/%_rose.cpp: runtimeCheck rted_source/%.cpp rted_source/%_s.cpp $(RTS) $(srcdir)/RuntimeSystem.h
@OS_MACOSX_FALSE@	$(call TRANSFORMING_FILES, .cpp, $(RTED_CXX), Cxx)

@OS_MACOSX_FALSE@rted_source/%_rose.upc: runtimeCheck rted_source/%.upc rted_source/%_s.upc $(RTS) $(srcdir)/RuntimeSystem.h
@OS_MACOSX_FALSE@	$(call TRANSFORMING_FILES, .upc, $(RTED_UPC), UPC -DWITH_UPC $(UPC_INCLUDES))

@OS_MACOSX_FALSE@rted_source/%_rose.c: runtimeCheck rted_source/%.c $(RTS) $(srcdir)/RuntimeSystem.h
@OS_MACOSX_FALSE@	$(call TRANSFORMING_FILES, .c, $(RTED_CC), C_Only)

@OS_MACOSX_FALSE@rted_source/%_rose.cpp: runtimeCheck rted_source/%.cpp $(RTS) $(srcdir)/RuntimeSystem.h
@OS_MACOSX_FALSE@	$(call TRANSFORMING_FILES, .cpp, $(RTED_CXX), Cxx)

@OS_MACOSX_FALSE@rted_source/%_rose.upc: runtimeCheck rted_source/%.upc $(RTS) $(srcdir)/RuntimeSystem.h
@OS_MACOSX_FALSE@	$(call TRANSFORMING_FILES, .upc, $(RTED_UPC), UPC -DWITH_UPC $(UPC_INCLUDES))

@OS_MACOSX_FALSE@RuntimeSystemCxx.o: $(srcdir)/RuntimeSystem.cpp $(srcdir)/RuntimeSystem.h
@OS_MACOSX_FALSE@	$(CXX) -g -Wall -Wextra $(AM_CPPFLAGS) -o $@ -c $<

@OS_MACOSX_FALSE@RuntimeSystemUpc.o: $(srcdir)/RuntimeSystem.cpp $(srcdir)/RuntimeSystem.h
@OS_MACOSX_FALSE@	$(CXX) -g -Wall -Wextra -DWITH_UPC=1 $(AM_CPPFLAGS) -o $@ -c $<

@OS_MACOSX_FALSE@ParallelRTS.o: $(srcdir)/ParallelRTS.upc $(srcdir)/ParallelRTS.h
@OS_MACOSX_FALSE@	$(UPC) -g -Wall -Wextra -DIN_TARGET_LIBS -DWITH_UPC=1 -o $@ -c $<

@OS_MACOSX_FALSE@rted_source/%.bin: rted_source/%_rose.c rted_source/%_s_rose.c $(RTSCXX) $(srcdir)/RuntimeSystem.h
@OS_MACOSX_FALSE@	$(call COMPILING_RUNTIME_SYSTEM, .c, $(RTED_CC), $(RTED_LIB), $(RTSCXX))

@OS_MACOSX_FALSE@rted_source/%.bin: rted_source/%_rose.c $(RTSCXX) $(srcdir)/RuntimeSystem.h
@OS_MACOSX_FALSE@	$(call COMPILING_RUNTIME_SYSTEM, .c, $(RTED_CC), $(RTED_LIB), $(RTSCXX))

@OS_MACOSX_FALSE@rted_source/%.bin: rted_source/%_rose.cpp rted_source/%_s_rose.cpp $(RTSCXX) $(srcdir)/RuntimeSystem.h
@OS_MACOSX_FALSE@	$(call COMPILING_RUNTIME_SYSTEM, .cpp, $(RTED_CXX), $(RTED_LIB), $(RTSCXX))

@OS_MACOSX_FALSE@rted_source/%.bin: rted_source/%_rose.cpp $(RTSCXX) $(srcdir)/RuntimeSystem.h
@OS_MACOSX_FALSE@	$(call COMPILING_RUNTIME_SYSTEM, .cpp, $(RTED_CXX), $(RTED_LIB), $(RTSCXX))

@OS_MACOSX_FALSE@rted_source/%.bin: rted_source/%_rose.upc rted_source/%_s_rose.upc $(RTSUPC) $(srcdir)/RuntimeSystem.h
@OS_MACOSX_FALSE@	$(call COMPILING_RUNTIME_SYSTEM, .upc, $(RTED_UPC), $(RTED_UPC_LIB), $(RTSUPC))

@OS_MACOSX_FALSE@rted_source/%.bin: rted_source/%_rose.upc $(RTSUPC) $(srcdir)/RuntimeSystem.h
@OS_MACOSX_FALSE@	$(call COMPILING_RUNTIME_SYSTEM, .upc, $(RTED_UPC), $(RTED_UPC_LIB), $(RTSUPC))
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@rted_source/C/%.expected-output: rted_source $(EXTRACT_EXPECTED_ERROR_SCRIPT)
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	$(call GENERATE_EXPECTED_OUTPUT, .c, $(rted_path))

@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@rted_source/C++/%.expected-output: rted_source $(EXTRACT_EXPECTED_ERROR_SCRIPT)
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	$(call GENERATE_EXPECTED_OUTPUT, .cpp, $(rted_path))

@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@rted_source/UPC/%.expected-output: rted_source $(EXTRACT_EXPECTED_ERROR_SCRIPT)
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	$(call GENERATE_EXPECTED_OUTPUT, .upc, $(rted_path))

@OS_MACOSX_FALSE@rted_source/tests/C/%.expected-output: rted_source $(EXTRACT_EXPECTED_ERROR_SCRIPT)
@OS_MACOSX_FALSE@	$(call GENERATE_EXPECTED_OUTPUT, .c, $(srcdir) )

@OS_MACOSX_FALSE@rted_source/tests/Cxx/%.expected-output: rted_source $(EXTRACT_EXPECTED_ERROR_SCRIPT)
@OS_MACOSX_FALSE@	$(call GENERATE_EXPECTED_OUTPUT, .cpp, $(srcdir))

@OS_MACOSX_FALSE@rted_source/tests/UPC/%.expected-output: rted_source $(EXTRACT_EXPECTED_ERROR_SCRIPT)
@OS_MACOSX_FALSE@	$(call GENERATE_EXPECTED_OUTPUT, .upc, $(srcdir))

#@OUTPUT_SRC='$(strip $(patsubst rted_source/%.expected-output, $(rted_path)/%.ok_msg, $@))';\
#TEST_FILE='$(strip $(patsubst rted_source/%.expected-output, $(rted_path)/%, $@))';\
#if [ -f "$$OUTPUT_SRC" ]; then \
#echo ===`wc -l $$TEST_FILE`=== | $(EXTRACT_EXPECTED_ERROR) - $$OUTPUT_SRC > $@;\
#fi
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# rules to run arbitrary tests from the rted distribution
#------------------------------------------------------------------------------

@OS_MACOSX_FALSE@run/%: rted_source/%.bin rted_source/%.expected-output
@OS_MACOSX_FALSE@	@echo -n "   running runtime error detection ... $(filter %.bin, $?)"
@OS_MACOSX_FALSE@	@OUTPUT_SRC='$(strip $(filter %.expected-output, $?))';\
@OS_MACOSX_FALSE@		if [ -f "$$OUTPUT_SRC" ]; then\
@OS_MACOSX_FALSE@			RESULT='$(strip $(patsubst %.bin, %.result.txt, $(filter rted_source/%.bin, $?)))';\
@OS_MACOSX_FALSE@			export LD_LIBRARY_PATH=$(top_builddir)/projects/RTED/CppRuntimeSystem/.libs/:${LD_LIBRARY_PATH};\
@OS_MACOSX_FALSE@			./$(filter rted_source/%.bin, $?);\
@OS_MACOSX_FALSE@			./$(filter rted_source/%.bin, $?) 2> $$RESULT;\
@OS_MACOSX_FALSE@			if [ $$? -ne 0 ];then cat $$RESULT && echo "Test exited unexpectedly with non-zero status" && exit 1; fi;\
@OS_MACOSX_FALSE@			ACTUAL_OUTPUT='./$(strip $(patsubst %.bin, %.actual-output, $(filter rted_source/%.bin, $?)))';\
@OS_MACOSX_FALSE@			if [ ! -f $$RESULT ]; then echo "no result produced!" && exit 1; fi; \
@OS_MACOSX_FALSE@			$(EXTRACT_ACTUAL_ERROR) $$RESULT > $$ACTUAL_OUTPUT;\
@OS_MACOSX_FALSE@			echo "Expected Output file = $(filter %.expected-output, $?)"; \
@OS_MACOSX_FALSE@			cat $(filter %.expected-output, $?); \
@OS_MACOSX_FALSE@         echo "Actual Output file = $$ACTUAL_OUTPUT"; \
@OS_MACOSX_FALSE@         cat $$ACTUAL_OUTPUT; \
@OS_MACOSX_FALSE@			diff --ignore-all-space --ignore-case -q $$ACTUAL_OUTPUT $(filter %.expected-output, $?) > /dev/null;\
@OS_MACOSX_FALSE@			if [ $$? -ne 0 ]; then\
@OS_MACOSX_FALSE@				echo -e '\n\n';\
@OS_MACOSX_FALSE@				echo 'Expected error did not match actual error found';\
@OS_MACOSX_FALSE@				echo ' (the error may be in the extraction scripts -- see the actual files that were diff-d';\
@OS_MACOSX_FALSE@				echo "  $(filter %.expected-output, $?) $$ACTUAL_OUTPUT)";\
@OS_MACOSX_FALSE@				echo -e '\n----------- Expected Error ------------';\
@OS_MACOSX_FALSE@				echo "(remember to subtract 1 from actual line numbers (for non-instrumented source) to compensate for added lines)";\
@OS_MACOSX_FALSE@				RTED_OKMSG="$(strip $(patsubst rted_source/%.expected-output, $(rted_path)/%.ok_msg, $(filter %.expected-output, $?)))";\
@OS_MACOSX_FALSE@				LOCAL_OKMSG="$(strip $(patsubst rted_source/%.expected-output, $(srcdir)/%.ok_msg, $(filter %.expected-output, $?)))";\
@OS_MACOSX_FALSE@				if [ -f "$$RTED_OKMSG" ]; then cat $$RTED_OKMSG;\
@OS_MACOSX_FALSE@				elif [ -f "$$LOCAL_OKMSG" ]; then cat $$LOCAL_OKMSG;\
@OS_MACOSX_FALSE@				fi;\
@OS_MACOSX_FALSE@				echo -e '\n----------- Actual   Error ------------';\
@OS_MACOSX_FALSE@				cat $$RESULT;\
@OS_MACOSX_FALSE@				exit 1;\
@OS_MACOSX_FALSE@			fi;\
@OS_MACOSX_FALSE@		else\
@OS_MACOSX_FALSE@			./$(filter rted_source/%.bin, $?);\
@OS_MACOSX_FALSE@		fi;
@OS_MACOSX_FALSE@	@echo " done."

# was: upcrun -quiet -n 4 ./$(filter rted_source/%.bin, $?) 2> $$RESULT;
#			./$(filter rted_source/%.bin, $?) -n 4 2> $$RESULT;

@OS_MACOSX_FALSE@runupc/%: rted_source/%.bin rted_source/%.expected-output
@OS_MACOSX_FALSE@	@echo "   running (UPC) runtime error detection ... $(filter %.bin, $?) -n 4"
@OS_MACOSX_FALSE@	@OUTPUT_SRC='$(strip $(filter %.expected-output, $?))';\
@OS_MACOSX_FALSE@		if [ -f "$$OUTPUT_SRC" ]; then\
@OS_MACOSX_FALSE@			RESULT='$(strip $(patsubst %.bin, %.result.txt, $(filter rted_source/%.bin, $?)))';\
@OS_MACOSX_FALSE@			./$(filter rted_source/%.bin, $?) -n 4 2> $$RESULT;\
@OS_MACOSX_FALSE@			if [ $$? -ne 0 ];then cat $$RESULT && echo "Test exited unexpectedly with non-zero status" && exit 1; fi;\
@OS_MACOSX_FALSE@			ACTUAL_OUTPUT='./$(strip $(patsubst %.bin, %.actual-output, $(filter rted_source/%.bin, $?)))';\
@OS_MACOSX_FALSE@			if [ ! -f $$RESULT ]; then echo "no result produced!" && exit 1; fi; \
@OS_MACOSX_FALSE@			$(EXTRACT_ACTUAL_ERROR) $$RESULT > $$ACTUAL_OUTPUT;\
@OS_MACOSX_FALSE@			diff --ignore-all-space --ignore-case -q $$ACTUAL_OUTPUT $(filter %.expected-output, $?) > /dev/null;\
@OS_MACOSX_FALSE@			if [ $$? -ne 0 ]; then\
@OS_MACOSX_FALSE@				echo -e '\n\n';\
@OS_MACOSX_FALSE@				echo 'Expected error did not match actual error found';\
@OS_MACOSX_FALSE@				echo ' (the error may be in the extraction scripts -- see the actual files that were diff-d';\
@OS_MACOSX_FALSE@				echo "  $(filter %.expected-output, $?) $$ACTUAL_OUTPUT)";\
@OS_MACOSX_FALSE@				echo -e '\n----------- Expected Error ------------';\
@OS_MACOSX_FALSE@				echo "(remember to subtract 1 from actual line numbers (for non-instrumented source) to compensate for added lines)";\
@OS_MACOSX_FALSE@	        		RTED_OKMSG="$(strip $(patsubst rted_source/%.expected-output, $(rted_path)/%.ok_msg, $(filter %.expected-output, $?)))";\
@OS_MACOSX_FALSE@			        LOCAL_OKMSG="$(strip $(patsubst rted_source/%.expected-output, $(srcdir)/%.ok_msg, $(filter %.expected-output, $?)))";\
@OS_MACOSX_FALSE@				if [ -f "$$RTED_OKMSG" ]; then cat $$RTED_OKMSG;\
@OS_MACOSX_FALSE@				elif [ -f "$$LOCAL_OKMSG" ]; then cat $$LOCAL_OKMSG;\
@OS_MACOSX_FALSE@				fi;\
@OS_MACOSX_FALSE@				echo -e '\n----------- Actual   Error ------------';\
@OS_MACOSX_FALSE@				cat $$RESULT;\
@OS_MACOSX_FALSE@				echo "$<" >>badlist.txt; \
@OS_MACOSX_FALSE@			else\
@OS_MACOSX_FALSE@			  echo "$<" >>goodlist.txt; \
@OS_MACOSX_FALSE@			fi;\
@OS_MACOSX_FALSE@		else\
@OS_MACOSX_FALSE@			./$(filter rted_source/%.bin, $?) -n 4;\
@OS_MACOSX_FALSE@		fi;
@OS_MACOSX_FALSE@	@echo " done."

@OS_MACOSX_FALSE@run_log/%: rted_source/%.bin rted_source/%.expected-output
@OS_MACOSX_FALSE@	@echo "   logging results for runtime error detection ... $(filter %.bin, $?)"
@OS_MACOSX_FALSE@	@OUTPUT_SRC='$(strip $(filter %.expected-output, $?))';\
@OS_MACOSX_FALSE@		if [ -f "$$OUTPUT_SRC" ]; then\
@OS_MACOSX_FALSE@			RESULT='$(strip $(patsubst %.bin, %.result.txt, $(filter rted_source/%.bin, $?)))';\
@OS_MACOSX_FALSE@			./$(filter rted_source/%.bin, $?) 2> $$RESULT;\
@OS_MACOSX_FALSE@			if [ $$? -ne 0 ];then cat $$RESULT && echo "Test exited unexpectedly with non-zero status" && exit 1; fi;\
@OS_MACOSX_FALSE@			ACTUAL_OUTPUT='./$(strip $(patsubst %.bin, %.actual-output, $(filter rted_source/%.bin, $?)))';\
@OS_MACOSX_FALSE@			if [ ! -f $$RESULT ]; then echo "no result produced!" && exit 1; fi; \
@OS_MACOSX_FALSE@			$(EXTRACT_ACTUAL_ERROR) $$RESULT > $$ACTUAL_OUTPUT;\
@OS_MACOSX_FALSE@			diff --ignore-all-space --ignore-case -q $$ACTUAL_OUTPUT $(filter %.expected-output, $?) > /dev/null;\
@OS_MACOSX_FALSE@			if [ $$? -ne 0 ]; then\
@OS_MACOSX_FALSE@				echo " $@ failed" >> test_log.txt;\
@OS_MACOSX_FALSE@			else \
@OS_MACOSX_FALSE@				echo " $@ passed" >> test_log.txt;\
@OS_MACOSX_FALSE@			fi;\
@OS_MACOSX_FALSE@		else\
@OS_MACOSX_FALSE@			./$(filter rted_source/%.bin, $?);\
@OS_MACOSX_FALSE@		fi;
@OS_MACOSX_FALSE@	@echo " done."

# was:			upcrun -n 4 ./$(filter rted_source/%.bin, $?) 2> $$RESULT;

@OS_MACOSX_FALSE@runupc_log/%: rted_source/%.bin rted_source/%.expected-output
@OS_MACOSX_FALSE@	@echo "   logging results for runtime error detection ... $(filter %.bin, $?)"
@OS_MACOSX_FALSE@	@OUTPUT_SRC='$(strip $(filter %.expected-output, $?))';\
@OS_MACOSX_FALSE@		if [ -f "$$OUTPUT_SRC" ]; then\
@OS_MACOSX_FALSE@			RESULT='$(strip $(patsubst %.bin, %.result.txt, $(filter rted_source/%.bin, $?)))';\
@OS_MACOSX_FALSE@			./$(filter rted_source/%.bin, $?) -n 4 2> $$RESULT;\
@OS_MACOSX_FALSE@			if [ $$? -ne 0 ];then cat $$RESULT && echo "Test exited unexpectedly with non-zero status" && exit 1; fi;\
@OS_MACOSX_FALSE@			ACTUAL_OUTPUT='./$(strip $(patsubst %.bin, %.actual-output, $(filter rted_source/%.bin, $?)))';\
@OS_MACOSX_FALSE@			if [ ! -f $$RESULT ]; then echo "no result produced!" && exit 1; fi; \
@OS_MACOSX_FALSE@			$(EXTRACT_ACTUAL_ERROR) $$RESULT > $$ACTUAL_OUTPUT;\
@OS_MACOSX_FALSE@			diff --ignore-all-space --ignore-case -q $$ACTUAL_OUTPUT $(filter %.expected-output, $?) > /dev/null;\
@OS_MACOSX_FALSE@			if [ $$? -ne 0 ]; then\
@OS_MACOSX_FALSE@				echo " $@ failed" >> test_log.txt;\
@OS_MACOSX_FALSE@			else \
@OS_MACOSX_FALSE@				echo " $@ passed" >> test_log.txt;\
@OS_MACOSX_FALSE@			fi;\
@OS_MACOSX_FALSE@		else\
@OS_MACOSX_FALSE@			./$(filter rted_source/%.bin, $?);\
@OS_MACOSX_FALSE@		fi;
@OS_MACOSX_FALSE@	@echo " done."

@OS_MACOSX_FALSE@run: $(RUN_TARGETS_GLOBAL_C) $(RUN_TARGETS_LOCAL_C) $(RUN_TARGETS_GLOBAL_CPP) $(RUN_TARGETS_LOCAL_CPP)

@OS_MACOSX_FALSE@runupc:  $(RUN_TARGETS_GLOBAL_UPC) $(RUN_TARGETS_LOCAL_UPC)

@OS_MACOSX_FALSE@run_log: $(RUN_LOG_TARGETS_GLOBAL_C) $(RUN_LOG_TARGETS_LOCAL_C) $(RUN_LOG_TARGETS_GLOBAL_CPP) $(RUN_LOG_TARGETS_LOCAL_CPP)

@OS_MACOSX_FALSE@runupc_log: $(RUN_LOG_TARGETS_GLOBAL_UPC) $(RUN_LOG_TARGETS_LOCAL_UPC)

@OS_MACOSX_FALSE@run_log/c:		$(RUN_LOG_TARGETS_GLOBAL_C)

@OS_MACOSX_FALSE@run_log/cpp:	$(RUN_LOG_TARGETS_GLOBAL_CPP)

#run_log/upc:	$(RUN_LOG_TARGETS_GLOBAL_UPC)

@OS_MACOSX_FALSE@test:
@OS_MACOSX_FALSE@	@echo $(RTED_ORIGSOURCES_GLOBAL_CPP)

#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# rules to run all tests in a directory listed in RTED_ORIGSOURCES
#------------------------------------------------------------------------------

@OS_MACOSX_FALSE@define RUN_TARGET_C
@OS_MACOSX_FALSE@$(1): $(filter $(1)%, $(RUN_TARGETS_GLOBAL_C)) $(filter $(1)%, $(RUN_TARGETS_LOCAL_C))
@OS_MACOSX_FALSE@	@echo $(1) complete
@OS_MACOSX_FALSE@endef

@OS_MACOSX_FALSE@define RUN_LOG_TARGET_C
@OS_MACOSX_FALSE@$(1): $(filter $(1)%, $(RUN_LOG_TARGETS_GLOBAL_C))
@OS_MACOSX_FALSE@	@echo $(1) complete
@OS_MACOSX_FALSE@endef

@OS_MACOSX_FALSE@define RUN_TARGET_CPP
@OS_MACOSX_FALSE@$(1): $(filter $(1)%, $(RUN_TARGETS_GLOBAL_CPP)) $(filter $(1)%, $(RUN_TARGETS_LOCAL_CPP))
@OS_MACOSX_FALSE@	@echo $(1) complete
@OS_MACOSX_FALSE@endef

@OS_MACOSX_FALSE@define RUN_LOG_TARGET_CPP
@OS_MACOSX_FALSE@$(1): $(filter $(1)%, $(RUN_LOG_TARGETS_GLOBAL_CPP))
@OS_MACOSX_FALSE@	@echo $(1) complete
@OS_MACOSX_FALSE@endef

@OS_MACOSX_FALSE@define RUN_TARGET_UPC
@OS_MACOSX_FALSE@$(1): $(filter $(1)%, $(RUN_TARGETS_GLOBAL_UPC)) $(filter $(1)%, $(RUN_TARGETS_LOCAL_UPC))
@OS_MACOSX_FALSE@	@echo $(1) complete
@OS_MACOSX_FALSE@endef

@OS_MACOSX_FALSE@define RUN_LOG_TARGET_UPC
@OS_MACOSX_FALSE@$(1): $(filter $(1)%, $(RUN_LOG_TARGETS_GLOBAL_UPC))
@OS_MACOSX_FALSE@	@echo $(1) complete
@OS_MACOSX_FALSE@endef

@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@${foreach rted_dir, ${filter $(rted_path)%, $(RTED_C_TEST_DIRS)}, ${eval ${call RUN_TARGET_C, ${patsubst $(rted_path)%, run%, $(rted_dir)}}}}
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@${foreach rted_dir, ${filter $(rted_path)%, $(RTED_CPP_TEST_DIRS)}, ${eval ${call RUN_TARGET_CPP, ${patsubst $(rted_path)%, run%, $(rted_dir)}}}}

@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@${foreach rted_dir, ${filter $(rted_path)%, $(RTED_UPC_TEST_DIRS)}, ${eval ${call RUN_TARGET_UPC, ${patsubst $(rted_path)%, runupc%, $(rted_dir)}}}}
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@${foreach rted_dir, ${filter $(srcdir)%, $(RTED_UPC_TEST_DIRS)}, ${eval ${call RUN_TARGET_UPC, ${patsubst $(srcdir)%, runupc%, $(rted_dir)}}}}
@OS_MACOSX_FALSE@${foreach rted_dir, ${filter $(srcdir)%, $(RTED_C_TEST_DIRS)}, ${eval ${call RUN_TARGET_C, ${patsubst $(srcdir)%, run%, $(rted_dir)}}}}
@OS_MACOSX_FALSE@${foreach rted_dir, ${filter $(srcdir)%, $(RTED_CPP_TEST_DIRS)}, ${eval ${call RUN_TARGET_CPP, ${patsubst $(srcdir)%, run%, $(rted_dir)}}}}

@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@${foreach rted_dir, ${filter $(rted_path)%, $(RTED_C_TEST_DIRS)}, ${eval ${call RUN_LOG_TARGET_C, ${patsubst $(rted_path)%, run_log%, $(rted_dir)}}}}
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@${foreach rted_dir, ${filter $(rted_path)%, $(RTED_CPP_TEST_DIRS)}, ${eval ${call RUN_LOG_TARGET_CPP, ${patsubst $(rted_path)%, run_log%, $(rted_dir)}}}}
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@${foreach rted_dir, ${filter $(rted_path)%, $(RTED_UPC_TEST_DIRS)}, ${eval ${call RUN_LOG_TARGET_UPC, ${patsubst $(rted_path)%, runupc_log%, $(rted_dir)}}}}

@OS_MACOSX_FALSE@$(TEST_HAS_BUG):
@OS_MACOSX_FALSE@	@echo This test fails due to a bug in the test code: $@

@OS_MACOSX_FALSE@$(TESTS_KNOWN_TO_FAIL):
@OS_MACOSX_FALSE@	@echo This test is known to fail, not running it now: $@

@OS_MACOSX_FALSE@$(TEST_HAS_COMPILE_ERROR):
@OS_MACOSX_FALSE@	@echo This test does not compile, not running it now: $@

@OS_MACOSX_FALSE@run/tests/C/panasTests/%:
@OS_MACOSX_FALSE@	@echo ignoring test: $@

#------------------------------------------------------------------------------

@OS_MACOSX_FALSE@deleteAllbinfiles:
@OS_MACOSX_FALSE@	rm -rf rted_source

#checkfast:	runtimeCheck
@OS_MACOSX_FALSE@checkfast:	runtimeCheck \
@OS_MACOSX_FALSE@				$(patsubst $(srcdir)/%, run/%, $(RTED_C_LOCAL_TEST_DIRS)) \
@OS_MACOSX_FALSE@				$(patsubst $(srcdir)/%, run/%, $(RTED_CPP_LOCAL_TEST_DIRS)) \
@OS_MACOSX_FALSE@				$(patsubst $(srcdir)/%, run/%, $(RTED_UPC_LOCAL_TEST_DIRS))
@OS_MACOSX_FALSE@	@echo "---------------------------------------------------------------------------------------"
@OS_MACOSX_FALSE@	@echo "--- ROSE/projects/RTED: checkfast passed                                            ---"
@OS_MACOSX_FALSE@	@echo "---------------------------------------------------------------------------------------"

# DQ (7/16/2011): These are the tests that are failing with the new name qualification.
#				$(patsubst $(srcdir)/%, run/%, $(RTED_CPP_LOCAL_TEST_DIRS))

# DQ (7/16/2011): These are isolated tests that fail for the new name qualification (some progress).
# test_name_qualification_1: $(patsubst $(srcdir)/%, run/%, $(RTED_CPP_LOCAL_TEST_DIRS))
# test_name_qualification_1: $(patsubst $(srcdir)/%, run/%, $(srcdir)/tests/Cxx/io)
# RTED_CPP_LOCAL_TEST_DIRS_TEST = $(srcdir)/tests/Cxx/io $(srcdir)/tests/Cxx/types
# test_name_qualification_1: $(patsubst $(srcdir)/%, run/%, $(RTED_CPP_LOCAL_TEST_DIRS_NQ_TEST))
@OS_MACOSX_FALSE@test_name_qualification_1: $(patsubst $(srcdir)/%, run/%, $(RTED_CPP_LOCAL_TEST_DIRS))

@OS_MACOSX_FALSE@test_name_qualification_2: run/C++/array_index_out_of_bound

# run/C/floating_point_errors
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@conditional-check-local: runtimeCheck checkfast \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@				run/C/allocation_deallocation_errors \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@				run/C/array_index_out_of_bound \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@				run/C/C99_specific_errors \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@				run/C/input_output_errors \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@				run/C/memory_leaks \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@				run/C/pointer_errors \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@				run/C/string_errors \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@				run/C/subprogram_call_errors \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@				run/C/uninitialized_variables \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@				run/C++/allocation_deallocation_errors \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@				run/C++/memory_leaks \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@				run/C++/pointer_errors \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@				run/C++/string_errors \
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@				run/C++/uninitialized_variables
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	@echo "***************************************************************************************"
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	@echo "*** ROSE/projects/runtimeErrorCheck: make check rule complete (terminated normally) ***"
@OS_MACOSX_FALSE@@ROSE_USE_RTED_TRUE@	@echo "***************************************************************************************"

# DQ (7/16/2011): Something in here fails
#				run/C++/array_index_out_of_bound

# DQ (11/10/2009): Comment out, with permission from Thomas, the RTED test until we
# can explore the RedHat version 5 problem, 32-bit problem, and Mac OSX problem.
# check-local: runtimeCheck checkfast
@OS_MACOSX_FALSE@@ROSE_USE_RTED_FALSE@conditional-check-local:
@OS_MACOSX_FALSE@@ROSE_USE_RTED_FALSE@	@echo "\n RTED short tests not run (Commented out temporarily):"
@OS_MACOSX_FALSE@@ROSE_USE_RTED_FALSE@	@echo "***********************************************************************************************************"
@OS_MACOSX_FALSE@@ROSE_USE_RTED_FALSE@	@echo "****** ROSE/projects/runtimeErrorCheck: make check not run here: configure --enable-rted=<RTED Path> ******"
@OS_MACOSX_FALSE@@ROSE_USE_RTED_FALSE@	@echo "***********************************************************************************************************"

#endif

check-local: conditional-check-local

clean-local:
	rm -rf $(CXX_TEMPLATE_OBJECTS) test_bin* *.o rose_*.C rose_*.c *.dot Templates.DB *~ rose_rose* test *.bin *.txt *.c *.cpp rted_source

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
