# Makefile.in generated by automake 1.16.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2020 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# These definitions are for the benefit of independent software contained			-*- makefile -*-
# in ROSE.  (Currently, this means SAGE and ROSETTA.)
# It defines ROSE_INCLUDES and ROSE_LIBS so they can use the ROSE codes.

# ROSE_INCLUDES contains the include flags for compiling with ROSE code.
# (ROSE software should set the include paths in their respective Makefile.am
# files, since they are expected to know the ROSE source tree structure.)
# To use ROSE_INCLUDES, the independent software packages contained in ROSE
# should define the variable ROSE_HOME to be the relative path to the root
# of the ROSE directory tree.

# This fixes some problem caused by automake or autoconf
# (detailed documentation is in the ChangeLog)
# MAKE=gmake

# DQ (8/10/2007): Valentin suggested this be commented out.
# DQ (4/23/2006): This is the default when build using automake version 1.6.3 but it
# causes errors so we would like to specify --run automake instead
# AUTOMAKE = ${SHELL} $(top_srcdir)/config/missing --run automake-1.6
# AUTOMAKE = ${SHELL} $(top_srcdir)/config/missing --run automake

# force ranlib to just call touch so that *.so (dynamic libraries) will not
# be run with ranlib (which is a error).  This allows us to use dynamic
# libraries as the default within ROSE.
# JJW 7/25/2008: Do we really need this?


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@ROSE_USE_CLANG_FRONTEND_TRUE@am__append_1 = $(CLANG_LDFLAGS) -ltinfo

# TOO (2/16/2011): Errors with Tensilica's Xtensa compilers as alternative backend compilers. We can
# gradually enable these tests at a later stage if necessary.
@USING_XTENSA_BACKEND_COMPILER_FALSE@am__append_2 = roseHPCT 
noinst_PROGRAMS = $(am__EXEEXT_2) $(am__EXEEXT_4) $(am__EXEEXT_5)
bin_PROGRAMS = buildCallGraph$(EXEEXT) defuseAnalysis$(EXEEXT) \
	livenessAnalysis$(EXEEXT) interproceduralCFG$(EXEEXT) \
	loopProcessor$(EXEEXT) virtualCFG$(EXEEXT) $(am__EXEEXT_1)
@ROSE_HAVE_YICES_TRUE@am__append_3 = \
@ROSE_HAVE_YICES_TRUE@   yicesTutorialExample

@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@am__append_4 = \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	binaryAnalysis_symbolTable		\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	binaryAttribute				\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	binaryCallGraph				\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	binaryDominance				\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	binaryFunctionCfg			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	binaryHelloWorld			\
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	binaryStrings

@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@am__append_5 = binaryAnalysis

# TV (02/13/2014) : desactivated tutorials using the deprecated AST rewrite mechanism.
#   instrumentationExample

# DQ (3/21/2009): Separate those that compile under Cygwin from those that don't.
@ROSE_BUILD_OS_IS_CYGWIN_TRUE@am__append_6 = $(NOINST_TUTORIAL_EXAMPLES)
@ROSE_BUILD_OS_IS_CYGWIN_FALSE@am__append_7 = $(NOINST_TUTORIAL_EXAMPLES) sharedMemoryTraversals

# TV (02/13/2014) : remove as translator use deprecated AST Rewrite Mechanism
#   rose_inputCode_InstrumentationTranslator.C

# TOO (2/17/11): Errors with Tensilica's Xtensa compilers. 
@USING_XTENSA_BACKEND_COMPILER_FALSE@am__append_8 = \
@USING_XTENSA_BACKEND_COMPILER_FALSE@   codeCoverage.out

@ROSE_HAVE_YICES_TRUE@am__append_9 = yicesInputExample.C
subdir = tutorial
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acmacros/canonicalize-symlink.m4 \
	$(top_srcdir)/acmacros/compiler-ar.m4 \
	$(top_srcdir)/acmacros/compiler-id.m4 \
	$(top_srcdir)/acmacros/configure-log.m4 \
	$(top_srcdir)/acmacros/pkg.m4 $(top_srcdir)/acmacros/upc.m4 \
	$(top_srcdir)/config/EDG.m4 $(top_srcdir)/config/ROSE.m4 \
	$(top_srcdir)/config/ac_pkg_swig.m4 \
	$(top_srcdir)/config/acinclude.m4 \
	$(top_srcdir)/config/ax_boost_base.m4 \
	$(top_srcdir)/config/ax_boost_chrono.m4 \
	$(top_srcdir)/config/ax_boost_date_time.m4 \
	$(top_srcdir)/config/ax_boost_filesystem.m4 \
	$(top_srcdir)/config/ax_boost_iostreams.m4 \
	$(top_srcdir)/config/ax_boost_program_options.m4 \
	$(top_srcdir)/config/ax_boost_random.m4 \
	$(top_srcdir)/config/ax_boost_regex.m4 \
	$(top_srcdir)/config/ax_boost_serialization.m4 \
	$(top_srcdir)/config/ax_boost_system.m4 \
	$(top_srcdir)/config/ax_boost_thread.m4 \
	$(top_srcdir)/config/ax_boost_wave.m4 \
	$(top_srcdir)/config/ax_compare_version.m4 \
	$(top_srcdir)/config/ax_compiler_vendor.m4 \
	$(top_srcdir)/config/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/config/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/config/ax_cxx_compile_stdcxx_14.m4 \
	$(top_srcdir)/config/ax_lib_mysql.m4 \
	$(top_srcdir)/config/ax_lib_sqlite3.m4 \
	$(top_srcdir)/config/ax_lib_xerces.m4 \
	$(top_srcdir)/config/ax_prog_bison_version.m4 \
	$(top_srcdir)/config/ax_python_devel.m4 \
	$(top_srcdir)/config/ax_with_prog.m4 \
	$(top_srcdir)/config/choose-backend-compiler.m4 \
	$(top_srcdir)/config/compiler-defs.m4 \
	$(top_srcdir)/config/determine-os.m4 \
	$(top_srcdir)/config/enable-rosehpct.m4 \
	$(top_srcdir)/config/generate-backend-compiler-specific-headers.m4 \
	$(top_srcdir)/config/libtool.m4 $(top_srcdir)/config/libxml.m4 \
	$(top_srcdir)/config/ltargz.m4 $(top_srcdir)/config/ltdl.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 \
	$(top_srcdir)/config/mdl_have_opengl_2014.m4 \
	$(top_srcdir)/config/qrose_indigo_1.m4 \
	$(top_srcdir)/config/qrose_indigo_1_windows.m4 \
	$(top_srcdir)/config/support-GraphViz.m4 \
	$(top_srcdir)/config/support-IntelPin.m4 \
	$(top_srcdir)/config/support-accelerator.m4 \
	$(top_srcdir)/config/support-aterm.m4 \
	$(top_srcdir)/config/support-backend-x10.m4 \
	$(top_srcdir)/config/support-bddbddb.m4 \
	$(top_srcdir)/config/support-binary.m4 \
	$(top_srcdir)/config/support-bison.m4 \
	$(top_srcdir)/config/support-blacklist.m4 \
	$(top_srcdir)/config/support-boost.m4 \
	$(top_srcdir)/config/support-capstone.m4 \
	$(top_srcdir)/config/support-clang.m4 \
	$(top_srcdir)/config/support-cobol.m4 \
	$(top_srcdir)/config/support-compass2.m4 \
	$(top_srcdir)/config/support-compiler-features.m4 \
	$(top_srcdir)/config/support-cuda.m4 \
	$(top_srcdir)/config/support-doxygen.m4 \
	$(top_srcdir)/config/support-dwarf.m4 \
	$(top_srcdir)/config/support-edg-debugging.m4 \
	$(top_srcdir)/config/support-edg.m4 \
	$(top_srcdir)/config/support-elf.m4 \
	$(top_srcdir)/config/support-fatal-rose-warnings.m4 \
	$(top_srcdir)/config/support-flang.m4 \
	$(top_srcdir)/config/support-gcc-omp.m4 \
	$(top_srcdir)/config/support-gcrypt.m4 \
	$(top_srcdir)/config/support-gmp.m4 \
	$(top_srcdir)/config/support-gnat.m4 \
	$(top_srcdir)/config/support-gomp-omp.m4 \
	$(top_srcdir)/config/support-haskell.m4 \
	$(top_srcdir)/config/support-i386.m4 \
	$(top_srcdir)/config/support-ida.m4 \
	$(top_srcdir)/config/support-insure.m4 \
	$(top_srcdir)/config/support-isl.m4 \
	$(top_srcdir)/config/support-java.m4 \
	$(top_srcdir)/config/support-languages.m4 \
	$(top_srcdir)/config/support-lcov.m4 \
	$(top_srcdir)/config/support-libffi.m4 \
	$(top_srcdir)/config/support-libharu.m4 \
	$(top_srcdir)/config/support-libpqxx.m4 \
	$(top_srcdir)/config/support-llvm.m4 \
	$(top_srcdir)/config/support-magic.m4 \
	$(top_srcdir)/config/support-maple.m4 \
	$(top_srcdir)/config/support-mint.m4 \
	$(top_srcdir)/config/support-mpi.m4 \
	$(top_srcdir)/config/support-octave.m4 \
	$(top_srcdir)/config/support-ofp.m4 \
	$(top_srcdir)/config/support-omp.m4 \
	$(top_srcdir)/config/support-php.m4 \
	$(top_srcdir)/config/support-pocc.m4 \
	$(top_srcdir)/config/support-projects.m4 \
	$(top_srcdir)/config/support-purify.m4 \
	$(top_srcdir)/config/support-python-api.m4 \
	$(top_srcdir)/config/support-python.m4 \
	$(top_srcdir)/config/support-readline.m4 \
	$(top_srcdir)/config/support-rose.m4 \
	$(top_srcdir)/config/support-rted.m4 \
	$(top_srcdir)/config/support-rtedupc.m4 \
	$(top_srcdir)/config/support-sanitizer.m4 \
	$(top_srcdir)/config/support-sat.m4 \
	$(top_srcdir)/config/support-spot.m4 \
	$(top_srcdir)/config/support-ssl.m4 \
	$(top_srcdir)/config/support-stratego.m4 \
	$(top_srcdir)/config/support-summary.m4 \
	$(top_srcdir)/config/support-swipl.m4 \
	$(top_srcdir)/config/support-valgrind.m4 \
	$(top_srcdir)/config/support-vectorization.m4 \
	$(top_srcdir)/config/support-visualization.m4 \
	$(top_srcdir)/config/support-windows.m4 \
	$(top_srcdir)/config/support-x10.m4 \
	$(top_srcdir)/config/support-yaml.m4 \
	$(top_srcdir)/config/support-yices.m4 \
	$(top_srcdir)/config/support-z3.m4 \
	$(top_srcdir)/config/support_POET.m4 \
	$(top_srcdir)/config/swig_enable_cxx.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(noinst_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/rose_config.h
CONFIG_CLEAN_FILES = exampleMakefile
CONFIG_CLEAN_VPATH_FILES =
@ROSE_HAVE_YICES_TRUE@am__EXEEXT_1 = yicesTutorialExample$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)"
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@am__EXEEXT_2 = binaryAnalysis_symbolTable$(EXEEXT) \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	binaryAttribute$(EXEEXT) \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	binaryCallGraph$(EXEEXT) \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	binaryDominance$(EXEEXT) \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	binaryFunctionCfg$(EXEEXT) \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	binaryHelloWorld$(EXEEXT) \
@ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@	binaryStrings$(EXEEXT)
am__EXEEXT_3 = abstractHandle1$(EXEEXT) abstractHandle2$(EXEEXT) \
	accumulatorAttributeTraversal$(EXEEXT) \
	addAssignmentStmt$(EXEEXT) addComments$(EXEEXT) \
	addArbitraryTextForUnparser$(EXEEXT) addExpression$(EXEEXT) \
	addFunctionCalls$(EXEEXT) addFunctionDeclaration$(EXEEXT) \
	addFunctionDeclaration2$(EXEEXT) \
	addFunctionDeclaration3$(EXEEXT) addStruct$(EXEEXT) \
	addVariableDeclaration$(EXEEXT) \
	addVariableDeclaration2$(EXEEXT) AST_PDF_Generator$(EXEEXT) \
	astFileIO_GenerateBinaryFile$(EXEEXT) \
	astFileIO_ReadMultipleASTs$(EXEEXT) ASTGraphGenerator$(EXEEXT) \
	ASTGraphGeneratorCustomized$(EXEEXT) bin_example$(EXEEXT) \
	binaryFileRead$(EXEEXT) binaryFileWrite$(EXEEXT) \
	buildFile$(EXEEXT) buildCFG$(EXEEXT) buildVFA$(EXEEXT) \
	changeFunction$(EXEEXT) charmSupport$(EXEEXT) \
	classHierarchyGraph$(EXEEXT) \
	classicObjectOrientedVisitorPatternMemoryPoolTraversal$(EXEEXT) \
	classicObjectOrientedVisitorPatternTraversal$(EXEEXT) \
	codeCoverage$(EXEEXT) codeGenerationFormatControl$(EXEEXT) \
	collectComments$(EXEEXT) collectDefineDirectives$(EXEEXT) \
	combinedTraversals$(EXEEXT) commandlineProcessing$(EXEEXT) \
	constantFoldingTransformation$(EXEEXT) \
	constantUnFoldingTransformation$(EXEEXT) \
	customGraphGeneration$(EXEEXT) \
	customGraphGenerationWithColors$(EXEEXT) \
	customGraphGenerationWithFiltering$(EXEEXT) \
	dataBaseUsage$(EXEEXT) dataFlowGraph$(EXEEXT) \
	debuggingIRnodeToString$(EXEEXT) \
	debuggingSourceCodePositionInformation$(EXEEXT) \
	dwarfAnalysis$(EXEEXT) \
	dwarfInstructionAddressToSourceLineAnalysis$(EXEEXT) \
	findVariableDeclarations$(EXEEXT) \
	generatingUniqueNamesFromDeclaration$(EXEEXT) \
	graphGenerationOfSubtree$(EXEEXT) graphTraversal$(EXEEXT) \
	identityTranslator$(EXEEXT) \
	inheritedAndSynthesizedAttributeTraversal$(EXEEXT) \
	inheritedAttributeTraversal$(EXEEXT) \
	inlineTransformations$(EXEEXT) \
	instrumentEndOfFunction$(EXEEXT) interveneAtVariables$(EXEEXT) \
	lineReplacement$(EXEEXT) loopNestingInfoProcessing$(EXEEXT) \
	loopOptimization$(EXEEXT) loopRecognition$(EXEEXT) \
	nestedQueryExample$(EXEEXT) nestedTraversal$(EXEEXT) \
	partialRedundancyElimination$(EXEEXT) \
	persistantAttributes$(EXEEXT) prePostTraversal$(EXEEXT) \
	queryLibraryExample$(EXEEXT) reductionRecognition$(EXEEXT) \
	resolveOverloadedFunction$(EXEEXT) \
	seedBugsExample_arrayIndexing$(EXEEXT) \
	scopeInformation$(EXEEXT) selectedFileTranslation$(EXEEXT) \
	sprintf_to_snprintf$(EXEEXT) switchWithoutDefault$(EXEEXT) \
	symbolTableHandling$(EXEEXT) \
	synthesizedAttributeTraversal$(EXEEXT) \
	tauInstrumenter$(EXEEXT) templateParameter$(EXEEXT) \
	traversalShortCircuit$(EXEEXT) traverseIRnodeTypes$(EXEEXT) \
	typeInfoFromFunctionParameters$(EXEEXT) \
	typeTransformation$(EXEEXT) \
	virtualFunctionIdentification$(EXEEXT) \
	visitorMemoryPoolTraversal$(EXEEXT) visitorTraversal$(EXEEXT) \
	volatileTypeModifier$(EXEEXT) wholeASTGraphGenerator$(EXEEXT) \
	wholeGraphAST$(EXEEXT) \
	wholeGraphFilterOnPersistantAttributes$(EXEEXT)
@ROSE_BUILD_OS_IS_CYGWIN_TRUE@am__EXEEXT_4 = $(am__EXEEXT_3)
@ROSE_BUILD_OS_IS_CYGWIN_FALSE@am__EXEEXT_5 = $(am__EXEEXT_3) \
@ROSE_BUILD_OS_IS_CYGWIN_FALSE@	sharedMemoryTraversals$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_ASTGraphGenerator_OBJECTS = ASTGraphGenerator.$(OBJEXT)
ASTGraphGenerator_OBJECTS = $(am_ASTGraphGenerator_OBJECTS)
ASTGraphGenerator_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
@ROSE_USE_SQLITE_DATABASE_TRUE@am__DEPENDENCIES_2 =  \
@ROSE_USE_SQLITE_DATABASE_TRUE@	$(am__DEPENDENCIES_1)
am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
@ROSE_USE_PHP_TRUE@am__DEPENDENCIES_4 = $(php_path)/lib/libphc.so \
@ROSE_USE_PHP_TRUE@	$(php_path)/lib/libphp5.so \
@ROSE_USE_PHP_TRUE@	$(am__DEPENDENCIES_1)
@ROSE_USE_QT_TRUE@am__DEPENDENCIES_5 = $(am__DEPENDENCIES_1)
@ROSE_WITH_LIBREADLINE_TRUE@am__DEPENDENCIES_6 =  \
@ROSE_WITH_LIBREADLINE_TRUE@	$(am__DEPENDENCIES_1)
@ROSE_USE_CLANG_FRONTEND_TRUE@am__DEPENDENCIES_7 =  \
@ROSE_USE_CLANG_FRONTEND_TRUE@	$(am__DEPENDENCIES_1)
am__DEPENDENCIES_8 = $(abspath $(top_builddir)/src/librose.la) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(ROSE_YICES_LIBS_WITH_PATH) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(ROSE_GUI_LIBS_WITH_PATH) $(am__DEPENDENCIES_5) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(ROSE_ADA_LIBS_WITH_PATH) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_7)
am__DEPENDENCIES_9 = $(am__DEPENDENCIES_8)
ASTGraphGenerator_DEPENDENCIES = $(am__DEPENDENCIES_9)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
am_ASTGraphGeneratorCustomized_OBJECTS =  \
	ASTGraphGeneratorCustomized.$(OBJEXT)
ASTGraphGeneratorCustomized_OBJECTS =  \
	$(am_ASTGraphGeneratorCustomized_OBJECTS)
ASTGraphGeneratorCustomized_LDADD = $(LDADD)
ASTGraphGeneratorCustomized_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_AST_PDF_Generator_OBJECTS = AST_PDF_Generator.$(OBJEXT)
AST_PDF_Generator_OBJECTS = $(am_AST_PDF_Generator_OBJECTS)
AST_PDF_Generator_LDADD = $(LDADD)
AST_PDF_Generator_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_abstractHandle1_OBJECTS = abstractHandle1.$(OBJEXT)
abstractHandle1_OBJECTS = $(am_abstractHandle1_OBJECTS)
abstractHandle1_LDADD = $(LDADD)
abstractHandle1_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_abstractHandle2_OBJECTS = abstractHandle2.$(OBJEXT)
abstractHandle2_OBJECTS = $(am_abstractHandle2_OBJECTS)
abstractHandle2_LDADD = $(LDADD)
abstractHandle2_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_accumulatorAttributeTraversal_OBJECTS =  \
	accumulatorAttributeTraversal.$(OBJEXT)
accumulatorAttributeTraversal_OBJECTS =  \
	$(am_accumulatorAttributeTraversal_OBJECTS)
accumulatorAttributeTraversal_LDADD = $(LDADD)
accumulatorAttributeTraversal_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_addArbitraryTextForUnparser_OBJECTS =  \
	addArbitraryTextForUnparser.$(OBJEXT)
addArbitraryTextForUnparser_OBJECTS =  \
	$(am_addArbitraryTextForUnparser_OBJECTS)
addArbitraryTextForUnparser_LDADD = $(LDADD)
addArbitraryTextForUnparser_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_addAssignmentStmt_OBJECTS = addAssignmentStmt.$(OBJEXT)
addAssignmentStmt_OBJECTS = $(am_addAssignmentStmt_OBJECTS)
addAssignmentStmt_LDADD = $(LDADD)
addAssignmentStmt_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_addComments_OBJECTS = addComments.$(OBJEXT)
addComments_OBJECTS = $(am_addComments_OBJECTS)
addComments_LDADD = $(LDADD)
addComments_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_addExpression_OBJECTS = addExpression.$(OBJEXT)
addExpression_OBJECTS = $(am_addExpression_OBJECTS)
addExpression_LDADD = $(LDADD)
addExpression_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_addFunctionCalls_OBJECTS = addFunctionCalls.$(OBJEXT)
addFunctionCalls_OBJECTS = $(am_addFunctionCalls_OBJECTS)
addFunctionCalls_LDADD = $(LDADD)
addFunctionCalls_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_addFunctionDeclaration_OBJECTS = addFunctionDeclaration.$(OBJEXT)
addFunctionDeclaration_OBJECTS = $(am_addFunctionDeclaration_OBJECTS)
addFunctionDeclaration_LDADD = $(LDADD)
addFunctionDeclaration_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_addFunctionDeclaration2_OBJECTS =  \
	addFunctionDeclaration2.$(OBJEXT)
addFunctionDeclaration2_OBJECTS =  \
	$(am_addFunctionDeclaration2_OBJECTS)
addFunctionDeclaration2_LDADD = $(LDADD)
addFunctionDeclaration2_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_addFunctionDeclaration3_OBJECTS =  \
	addFunctionDeclaration3.$(OBJEXT)
addFunctionDeclaration3_OBJECTS =  \
	$(am_addFunctionDeclaration3_OBJECTS)
addFunctionDeclaration3_LDADD = $(LDADD)
addFunctionDeclaration3_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_addStruct_OBJECTS = addStruct.$(OBJEXT)
addStruct_OBJECTS = $(am_addStruct_OBJECTS)
addStruct_LDADD = $(LDADD)
addStruct_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_addVariableDeclaration_OBJECTS = addVariableDeclaration.$(OBJEXT)
addVariableDeclaration_OBJECTS = $(am_addVariableDeclaration_OBJECTS)
addVariableDeclaration_LDADD = $(LDADD)
addVariableDeclaration_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_addVariableDeclaration2_OBJECTS =  \
	addVariableDeclaration2.$(OBJEXT)
addVariableDeclaration2_OBJECTS =  \
	$(am_addVariableDeclaration2_OBJECTS)
addVariableDeclaration2_LDADD = $(LDADD)
addVariableDeclaration2_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_astFileIO_GenerateBinaryFile_OBJECTS =  \
	astFileIO_GenerateBinaryFile.$(OBJEXT)
astFileIO_GenerateBinaryFile_OBJECTS =  \
	$(am_astFileIO_GenerateBinaryFile_OBJECTS)
astFileIO_GenerateBinaryFile_LDADD = $(LDADD)
astFileIO_GenerateBinaryFile_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_astFileIO_ReadMultipleASTs_OBJECTS =  \
	astFileIO_ReadMultipleASTs.$(OBJEXT)
astFileIO_ReadMultipleASTs_OBJECTS =  \
	$(am_astFileIO_ReadMultipleASTs_OBJECTS)
astFileIO_ReadMultipleASTs_LDADD = $(LDADD)
astFileIO_ReadMultipleASTs_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_bin_example_OBJECTS = bin_example.$(OBJEXT)
bin_example_OBJECTS = $(am_bin_example_OBJECTS)
bin_example_LDADD = $(LDADD)
bin_example_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_binaryAnalysis_symbolTable_OBJECTS =  \
	binaryAnalysis_symbolTable.$(OBJEXT)
binaryAnalysis_symbolTable_OBJECTS =  \
	$(am_binaryAnalysis_symbolTable_OBJECTS)
binaryAnalysis_symbolTable_LDADD = $(LDADD)
binaryAnalysis_symbolTable_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_binaryAttribute_OBJECTS = binaryAttribute.$(OBJEXT)
binaryAttribute_OBJECTS = $(am_binaryAttribute_OBJECTS)
binaryAttribute_LDADD = $(LDADD)
binaryAttribute_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_binaryCallGraph_OBJECTS = binaryCallGraph.$(OBJEXT)
binaryCallGraph_OBJECTS = $(am_binaryCallGraph_OBJECTS)
binaryCallGraph_LDADD = $(LDADD)
binaryCallGraph_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_binaryDominance_OBJECTS = binaryDominance.$(OBJEXT)
binaryDominance_OBJECTS = $(am_binaryDominance_OBJECTS)
binaryDominance_LDADD = $(LDADD)
binaryDominance_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_binaryFileRead_OBJECTS = binaryFileRead.$(OBJEXT)
binaryFileRead_OBJECTS = $(am_binaryFileRead_OBJECTS)
binaryFileRead_LDADD = $(LDADD)
binaryFileRead_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_binaryFileWrite_OBJECTS = binaryFileWrite.$(OBJEXT)
binaryFileWrite_OBJECTS = $(am_binaryFileWrite_OBJECTS)
binaryFileWrite_LDADD = $(LDADD)
binaryFileWrite_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_binaryFunctionCfg_OBJECTS = binaryFunctionCfg.$(OBJEXT)
binaryFunctionCfg_OBJECTS = $(am_binaryFunctionCfg_OBJECTS)
binaryFunctionCfg_LDADD = $(LDADD)
binaryFunctionCfg_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_binaryHelloWorld_OBJECTS = binaryHelloWorld.$(OBJEXT)
binaryHelloWorld_OBJECTS = $(am_binaryHelloWorld_OBJECTS)
binaryHelloWorld_LDADD = $(LDADD)
binaryHelloWorld_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_binaryStrings_OBJECTS = binaryStrings.$(OBJEXT)
binaryStrings_OBJECTS = $(am_binaryStrings_OBJECTS)
binaryStrings_LDADD = $(LDADD)
binaryStrings_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_buildCFG_OBJECTS = buildCFG.$(OBJEXT)
buildCFG_OBJECTS = $(am_buildCFG_OBJECTS)
buildCFG_LDADD = $(LDADD)
buildCFG_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_buildCallGraph_OBJECTS = buildCallGraph.$(OBJEXT)
buildCallGraph_OBJECTS = $(am_buildCallGraph_OBJECTS)
buildCallGraph_LDADD = $(LDADD)
buildCallGraph_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_buildFile_OBJECTS = buildFile.$(OBJEXT)
buildFile_OBJECTS = $(am_buildFile_OBJECTS)
buildFile_LDADD = $(LDADD)
buildFile_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_buildVFA_OBJECTS = buildVFA.$(OBJEXT)
buildVFA_OBJECTS = $(am_buildVFA_OBJECTS)
buildVFA_LDADD = $(LDADD)
buildVFA_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_changeFunction_OBJECTS = changeFunction.$(OBJEXT)
changeFunction_OBJECTS = $(am_changeFunction_OBJECTS)
changeFunction_LDADD = $(LDADD)
changeFunction_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_charmSupport_OBJECTS = CharmSupport.$(OBJEXT)
charmSupport_OBJECTS = $(am_charmSupport_OBJECTS)
charmSupport_LDADD = $(LDADD)
charmSupport_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_classHierarchyGraph_OBJECTS = classHierarchyGraph.$(OBJEXT)
classHierarchyGraph_OBJECTS = $(am_classHierarchyGraph_OBJECTS)
classHierarchyGraph_LDADD = $(LDADD)
classHierarchyGraph_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_classicObjectOrientedVisitorPatternMemoryPoolTraversal_OBJECTS = classicObjectOrientedVisitorPatternMemoryPoolTraversal.$(OBJEXT)
classicObjectOrientedVisitorPatternMemoryPoolTraversal_OBJECTS = $(am_classicObjectOrientedVisitorPatternMemoryPoolTraversal_OBJECTS)
classicObjectOrientedVisitorPatternMemoryPoolTraversal_LDADD =  \
	$(LDADD)
classicObjectOrientedVisitorPatternMemoryPoolTraversal_DEPENDENCIES =  \
	$(am__DEPENDENCIES_9)
am_classicObjectOrientedVisitorPatternTraversal_OBJECTS =  \
	classicObjectOrientedVisitorPatternTraversal.$(OBJEXT)
classicObjectOrientedVisitorPatternTraversal_OBJECTS =  \
	$(am_classicObjectOrientedVisitorPatternTraversal_OBJECTS)
classicObjectOrientedVisitorPatternTraversal_LDADD = $(LDADD)
classicObjectOrientedVisitorPatternTraversal_DEPENDENCIES =  \
	$(am__DEPENDENCIES_9)
am_codeCoverage_OBJECTS = codeCoverage.$(OBJEXT) \
	coverageCodeFromShmuel.$(OBJEXT)
codeCoverage_OBJECTS = $(am_codeCoverage_OBJECTS)
codeCoverage_LDADD = $(LDADD)
codeCoverage_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_codeGenerationFormatControl_OBJECTS =  \
	codeGenerationFormatControl.$(OBJEXT)
codeGenerationFormatControl_OBJECTS =  \
	$(am_codeGenerationFormatControl_OBJECTS)
codeGenerationFormatControl_LDADD = $(LDADD)
codeGenerationFormatControl_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_collectComments_OBJECTS = collectComments.$(OBJEXT)
collectComments_OBJECTS = $(am_collectComments_OBJECTS)
collectComments_LDADD = $(LDADD)
collectComments_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_collectDefineDirectives_OBJECTS =  \
	collectDefineDirectives.$(OBJEXT)
collectDefineDirectives_OBJECTS =  \
	$(am_collectDefineDirectives_OBJECTS)
collectDefineDirectives_LDADD = $(LDADD)
collectDefineDirectives_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_combinedTraversals_OBJECTS = combinedTraversals.$(OBJEXT)
combinedTraversals_OBJECTS = $(am_combinedTraversals_OBJECTS)
combinedTraversals_LDADD = $(LDADD)
combinedTraversals_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_commandlineProcessing_OBJECTS = commandlineProcessing.$(OBJEXT)
commandlineProcessing_OBJECTS = $(am_commandlineProcessing_OBJECTS)
commandlineProcessing_LDADD = $(LDADD)
commandlineProcessing_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_constantFoldingTransformation_OBJECTS =  \
	constantFoldingTransformation.$(OBJEXT)
constantFoldingTransformation_OBJECTS =  \
	$(am_constantFoldingTransformation_OBJECTS)
constantFoldingTransformation_LDADD = $(LDADD)
constantFoldingTransformation_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_constantUnFoldingTransformation_OBJECTS =  \
	constantUnFoldingTransformation.$(OBJEXT)
constantUnFoldingTransformation_OBJECTS =  \
	$(am_constantUnFoldingTransformation_OBJECTS)
constantUnFoldingTransformation_LDADD = $(LDADD)
constantUnFoldingTransformation_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_customGraphGeneration_OBJECTS = customGraphGeneration.$(OBJEXT)
customGraphGeneration_OBJECTS = $(am_customGraphGeneration_OBJECTS)
customGraphGeneration_LDADD = $(LDADD)
customGraphGeneration_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_customGraphGenerationWithColors_OBJECTS =  \
	customGraphGenerationWithColors.$(OBJEXT)
customGraphGenerationWithColors_OBJECTS =  \
	$(am_customGraphGenerationWithColors_OBJECTS)
customGraphGenerationWithColors_LDADD = $(LDADD)
customGraphGenerationWithColors_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_customGraphGenerationWithFiltering_OBJECTS =  \
	customGraphGenerationWithFiltering.$(OBJEXT)
customGraphGenerationWithFiltering_OBJECTS =  \
	$(am_customGraphGenerationWithFiltering_OBJECTS)
customGraphGenerationWithFiltering_LDADD = $(LDADD)
customGraphGenerationWithFiltering_DEPENDENCIES =  \
	$(am__DEPENDENCIES_9)
am_dataBaseUsage_OBJECTS = dataBaseUsage.$(OBJEXT)
dataBaseUsage_OBJECTS = $(am_dataBaseUsage_OBJECTS)
dataBaseUsage_LDADD = $(LDADD)
dataBaseUsage_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_dataFlowGraph_OBJECTS = dataFlowGraph.$(OBJEXT)
dataFlowGraph_OBJECTS = $(am_dataFlowGraph_OBJECTS)
dataFlowGraph_LDADD = $(LDADD)
dataFlowGraph_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_debuggingIRnodeToString_OBJECTS =  \
	debuggingIRnodeToString.$(OBJEXT)
debuggingIRnodeToString_OBJECTS =  \
	$(am_debuggingIRnodeToString_OBJECTS)
debuggingIRnodeToString_LDADD = $(LDADD)
debuggingIRnodeToString_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_debuggingSourceCodePositionInformation_OBJECTS =  \
	debuggingSourceCodePositionInformation.$(OBJEXT)
debuggingSourceCodePositionInformation_OBJECTS =  \
	$(am_debuggingSourceCodePositionInformation_OBJECTS)
debuggingSourceCodePositionInformation_LDADD = $(LDADD)
debuggingSourceCodePositionInformation_DEPENDENCIES =  \
	$(am__DEPENDENCIES_9)
am_defuseAnalysis_OBJECTS = defuseAnalysis.$(OBJEXT)
defuseAnalysis_OBJECTS = $(am_defuseAnalysis_OBJECTS)
defuseAnalysis_LDADD = $(LDADD)
defuseAnalysis_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_dwarfAnalysis_OBJECTS = dwarfAnalysis.$(OBJEXT)
dwarfAnalysis_OBJECTS = $(am_dwarfAnalysis_OBJECTS)
dwarfAnalysis_LDADD = $(LDADD)
dwarfAnalysis_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_dwarfInstructionAddressToSourceLineAnalysis_OBJECTS =  \
	dwarfInstructionAddressToSourceLineAnalysis.$(OBJEXT)
dwarfInstructionAddressToSourceLineAnalysis_OBJECTS =  \
	$(am_dwarfInstructionAddressToSourceLineAnalysis_OBJECTS)
dwarfInstructionAddressToSourceLineAnalysis_LDADD = $(LDADD)
dwarfInstructionAddressToSourceLineAnalysis_DEPENDENCIES =  \
	$(am__DEPENDENCIES_9)
am_findVariableDeclarations_OBJECTS =  \
	findVariableDeclarations.$(OBJEXT)
findVariableDeclarations_OBJECTS =  \
	$(am_findVariableDeclarations_OBJECTS)
findVariableDeclarations_LDADD = $(LDADD)
findVariableDeclarations_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_generatingUniqueNamesFromDeclaration_OBJECTS =  \
	generatingUniqueNamesFromDeclaration.$(OBJEXT)
generatingUniqueNamesFromDeclaration_OBJECTS =  \
	$(am_generatingUniqueNamesFromDeclaration_OBJECTS)
generatingUniqueNamesFromDeclaration_LDADD = $(LDADD)
generatingUniqueNamesFromDeclaration_DEPENDENCIES =  \
	$(am__DEPENDENCIES_9)
am_graphGenerationOfSubtree_OBJECTS =  \
	graphGenerationOfSubtree.$(OBJEXT)
graphGenerationOfSubtree_OBJECTS =  \
	$(am_graphGenerationOfSubtree_OBJECTS)
graphGenerationOfSubtree_LDADD = $(LDADD)
graphGenerationOfSubtree_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_graphTraversal_OBJECTS = graphTraversal.$(OBJEXT)
graphTraversal_OBJECTS = $(am_graphTraversal_OBJECTS)
graphTraversal_LDADD = $(LDADD)
graphTraversal_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_identityTranslator_OBJECTS = identityTranslator.$(OBJEXT)
identityTranslator_OBJECTS = $(am_identityTranslator_OBJECTS)
identityTranslator_LDADD = $(LDADD)
identityTranslator_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_inheritedAndSynthesizedAttributeTraversal_OBJECTS =  \
	inheritedAndSynthesizedAttributeTraversal.$(OBJEXT)
inheritedAndSynthesizedAttributeTraversal_OBJECTS =  \
	$(am_inheritedAndSynthesizedAttributeTraversal_OBJECTS)
inheritedAndSynthesizedAttributeTraversal_LDADD = $(LDADD)
inheritedAndSynthesizedAttributeTraversal_DEPENDENCIES =  \
	$(am__DEPENDENCIES_9)
am_inheritedAttributeTraversal_OBJECTS =  \
	inheritedAttributeTraversal.$(OBJEXT)
inheritedAttributeTraversal_OBJECTS =  \
	$(am_inheritedAttributeTraversal_OBJECTS)
inheritedAttributeTraversal_LDADD = $(LDADD)
inheritedAttributeTraversal_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_inlineTransformations_OBJECTS = inlineTransformations.$(OBJEXT)
inlineTransformations_OBJECTS = $(am_inlineTransformations_OBJECTS)
inlineTransformations_LDADD = $(LDADD)
inlineTransformations_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_instrumentEndOfFunction_OBJECTS =  \
	instrumentEndOfFunction.$(OBJEXT)
instrumentEndOfFunction_OBJECTS =  \
	$(am_instrumentEndOfFunction_OBJECTS)
instrumentEndOfFunction_LDADD = $(LDADD)
instrumentEndOfFunction_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_interproceduralCFG_OBJECTS = interproceduralCFG.$(OBJEXT)
interproceduralCFG_OBJECTS = $(am_interproceduralCFG_OBJECTS)
interproceduralCFG_LDADD = $(LDADD)
interproceduralCFG_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_interveneAtVariables_OBJECTS = interveneAtVariables.$(OBJEXT)
interveneAtVariables_OBJECTS = $(am_interveneAtVariables_OBJECTS)
interveneAtVariables_LDADD = $(LDADD)
interveneAtVariables_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_lineReplacement_OBJECTS = lineReplacement.$(OBJEXT)
lineReplacement_OBJECTS = $(am_lineReplacement_OBJECTS)
lineReplacement_LDADD = $(LDADD)
lineReplacement_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_livenessAnalysis_OBJECTS = livenessAnalysis.$(OBJEXT)
livenessAnalysis_OBJECTS = $(am_livenessAnalysis_OBJECTS)
livenessAnalysis_LDADD = $(LDADD)
livenessAnalysis_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_loopNestingInfoProcessing_OBJECTS =  \
	loopNestingInfoProcessing.$(OBJEXT)
loopNestingInfoProcessing_OBJECTS =  \
	$(am_loopNestingInfoProcessing_OBJECTS)
loopNestingInfoProcessing_LDADD = $(LDADD)
loopNestingInfoProcessing_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_loopOptimization_OBJECTS = loopOptimization.$(OBJEXT)
loopOptimization_OBJECTS = $(am_loopOptimization_OBJECTS)
loopOptimization_LDADD = $(LDADD)
loopOptimization_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_loopProcessor_OBJECTS = LoopProcessor.$(OBJEXT)
loopProcessor_OBJECTS = $(am_loopProcessor_OBJECTS)
loopProcessor_LDADD = $(LDADD)
loopProcessor_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_loopRecognition_OBJECTS = loopRecognition.$(OBJEXT)
loopRecognition_OBJECTS = $(am_loopRecognition_OBJECTS)
loopRecognition_LDADD = $(LDADD)
loopRecognition_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_nestedQueryExample_OBJECTS = nestedQueryExample.$(OBJEXT)
nestedQueryExample_OBJECTS = $(am_nestedQueryExample_OBJECTS)
nestedQueryExample_LDADD = $(LDADD)
nestedQueryExample_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_nestedTraversal_OBJECTS = nestedTraversal.$(OBJEXT)
nestedTraversal_OBJECTS = $(am_nestedTraversal_OBJECTS)
nestedTraversal_LDADD = $(LDADD)
nestedTraversal_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_partialRedundancyElimination_OBJECTS =  \
	partialRedundancyElimination.$(OBJEXT)
partialRedundancyElimination_OBJECTS =  \
	$(am_partialRedundancyElimination_OBJECTS)
partialRedundancyElimination_LDADD = $(LDADD)
partialRedundancyElimination_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_persistantAttributes_OBJECTS = persistantAttributes.$(OBJEXT)
persistantAttributes_OBJECTS = $(am_persistantAttributes_OBJECTS)
persistantAttributes_LDADD = $(LDADD)
persistantAttributes_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_prePostTraversal_OBJECTS = prePostTraversal.$(OBJEXT)
prePostTraversal_OBJECTS = $(am_prePostTraversal_OBJECTS)
prePostTraversal_LDADD = $(LDADD)
prePostTraversal_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_queryLibraryExample_OBJECTS = queryLibraryExample.$(OBJEXT)
queryLibraryExample_OBJECTS = $(am_queryLibraryExample_OBJECTS)
queryLibraryExample_LDADD = $(LDADD)
queryLibraryExample_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_reductionRecognition_OBJECTS = reductionRecognition.$(OBJEXT)
reductionRecognition_OBJECTS = $(am_reductionRecognition_OBJECTS)
reductionRecognition_LDADD = $(LDADD)
reductionRecognition_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_resolveOverloadedFunction_OBJECTS =  \
	resolveOverloadedFunction.$(OBJEXT)
resolveOverloadedFunction_OBJECTS =  \
	$(am_resolveOverloadedFunction_OBJECTS)
resolveOverloadedFunction_LDADD = $(LDADD)
resolveOverloadedFunction_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_scopeInformation_OBJECTS = scopeInformation.$(OBJEXT)
scopeInformation_OBJECTS = $(am_scopeInformation_OBJECTS)
scopeInformation_LDADD = $(LDADD)
scopeInformation_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_seedBugsExample_arrayIndexing_OBJECTS =  \
	seedBugsExample_arrayIndexing.$(OBJEXT)
seedBugsExample_arrayIndexing_OBJECTS =  \
	$(am_seedBugsExample_arrayIndexing_OBJECTS)
seedBugsExample_arrayIndexing_LDADD = $(LDADD)
seedBugsExample_arrayIndexing_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_selectedFileTranslation_OBJECTS =  \
	selectedFileTranslation.$(OBJEXT)
selectedFileTranslation_OBJECTS =  \
	$(am_selectedFileTranslation_OBJECTS)
selectedFileTranslation_LDADD = $(LDADD)
selectedFileTranslation_DEPENDENCIES = $(am__DEPENDENCIES_9)
am__sharedMemoryTraversals_SOURCES_DIST = sharedMemoryTraversals.C
@ROSE_BUILD_OS_IS_CYGWIN_FALSE@am_sharedMemoryTraversals_OBJECTS = sharedMemoryTraversals.$(OBJEXT)
sharedMemoryTraversals_OBJECTS = $(am_sharedMemoryTraversals_OBJECTS)
sharedMemoryTraversals_LDADD = $(LDADD)
sharedMemoryTraversals_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_sprintf_to_snprintf_OBJECTS = sprintf_to_snprintf.$(OBJEXT)
sprintf_to_snprintf_OBJECTS = $(am_sprintf_to_snprintf_OBJECTS)
sprintf_to_snprintf_LDADD = $(LDADD)
sprintf_to_snprintf_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_switchWithoutDefault_OBJECTS = switchWithoutDefault.$(OBJEXT)
switchWithoutDefault_OBJECTS = $(am_switchWithoutDefault_OBJECTS)
switchWithoutDefault_LDADD = $(LDADD)
switchWithoutDefault_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_symbolTableHandling_OBJECTS = symbolTableHandling.$(OBJEXT)
symbolTableHandling_OBJECTS = $(am_symbolTableHandling_OBJECTS)
symbolTableHandling_LDADD = $(LDADD)
symbolTableHandling_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_synthesizedAttributeTraversal_OBJECTS =  \
	synthesizedAttributeTraversal.$(OBJEXT)
synthesizedAttributeTraversal_OBJECTS =  \
	$(am_synthesizedAttributeTraversal_OBJECTS)
synthesizedAttributeTraversal_LDADD = $(LDADD)
synthesizedAttributeTraversal_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_tauInstrumenter_OBJECTS = tauInstrumenter.$(OBJEXT)
tauInstrumenter_OBJECTS = $(am_tauInstrumenter_OBJECTS)
tauInstrumenter_LDADD = $(LDADD)
tauInstrumenter_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_templateParameter_OBJECTS = templateParameter.$(OBJEXT)
templateParameter_OBJECTS = $(am_templateParameter_OBJECTS)
templateParameter_LDADD = $(LDADD)
templateParameter_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_traversalShortCircuit_OBJECTS = traversalShortCircuit.$(OBJEXT)
traversalShortCircuit_OBJECTS = $(am_traversalShortCircuit_OBJECTS)
traversalShortCircuit_LDADD = $(LDADD)
traversalShortCircuit_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_traverseIRnodeTypes_OBJECTS = traverseIRnodeTypes.$(OBJEXT)
traverseIRnodeTypes_OBJECTS = $(am_traverseIRnodeTypes_OBJECTS)
traverseIRnodeTypes_LDADD = $(LDADD)
traverseIRnodeTypes_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_typeInfoFromFunctionParameters_OBJECTS =  \
	typeInfoFromFunctionParameters.$(OBJEXT)
typeInfoFromFunctionParameters_OBJECTS =  \
	$(am_typeInfoFromFunctionParameters_OBJECTS)
typeInfoFromFunctionParameters_LDADD = $(LDADD)
typeInfoFromFunctionParameters_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_typeTransformation_OBJECTS = typeTransformation.$(OBJEXT)
typeTransformation_OBJECTS = $(am_typeTransformation_OBJECTS)
typeTransformation_LDADD = $(LDADD)
typeTransformation_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_virtualCFG_OBJECTS = virtualCFG.$(OBJEXT)
virtualCFG_OBJECTS = $(am_virtualCFG_OBJECTS)
virtualCFG_LDADD = $(LDADD)
virtualCFG_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_virtualFunctionIdentification_OBJECTS =  \
	virtualFunctionIdentification.$(OBJEXT)
virtualFunctionIdentification_OBJECTS =  \
	$(am_virtualFunctionIdentification_OBJECTS)
virtualFunctionIdentification_LDADD = $(LDADD)
virtualFunctionIdentification_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_visitorMemoryPoolTraversal_OBJECTS =  \
	visitorMemoryPoolTraversal.$(OBJEXT)
visitorMemoryPoolTraversal_OBJECTS =  \
	$(am_visitorMemoryPoolTraversal_OBJECTS)
visitorMemoryPoolTraversal_LDADD = $(LDADD)
visitorMemoryPoolTraversal_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_visitorTraversal_OBJECTS = visitorTraversal.$(OBJEXT)
visitorTraversal_OBJECTS = $(am_visitorTraversal_OBJECTS)
visitorTraversal_LDADD = $(LDADD)
visitorTraversal_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_volatileTypeModifier_OBJECTS = volatileTypeModifier.$(OBJEXT)
volatileTypeModifier_OBJECTS = $(am_volatileTypeModifier_OBJECTS)
volatileTypeModifier_LDADD = $(LDADD)
volatileTypeModifier_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_wholeASTGraphGenerator_OBJECTS = wholeASTGraphGenerator.$(OBJEXT)
wholeASTGraphGenerator_OBJECTS = $(am_wholeASTGraphGenerator_OBJECTS)
wholeASTGraphGenerator_LDADD = $(LDADD)
wholeASTGraphGenerator_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_wholeGraphAST_OBJECTS = wholeGraphAST.$(OBJEXT)
wholeGraphAST_OBJECTS = $(am_wholeGraphAST_OBJECTS)
wholeGraphAST_LDADD = $(LDADD)
wholeGraphAST_DEPENDENCIES = $(am__DEPENDENCIES_9)
am_wholeGraphFilterOnPersistantAttributes_OBJECTS =  \
	wholeGraphFilterOnPersistantAttributes.$(OBJEXT)
wholeGraphFilterOnPersistantAttributes_OBJECTS =  \
	$(am_wholeGraphFilterOnPersistantAttributes_OBJECTS)
wholeGraphFilterOnPersistantAttributes_LDADD = $(LDADD)
wholeGraphFilterOnPersistantAttributes_DEPENDENCIES =  \
	$(am__DEPENDENCIES_9)
am__yicesTutorialExample_SOURCES_DIST = yicesTutorialExample.C
@ROSE_HAVE_YICES_TRUE@am_yicesTutorialExample_OBJECTS =  \
@ROSE_HAVE_YICES_TRUE@	yicesTutorialExample.$(OBJEXT)
yicesTutorialExample_OBJECTS = $(am_yicesTutorialExample_OBJECTS)
yicesTutorialExample_LDADD = $(LDADD)
yicesTutorialExample_DEPENDENCIES = $(am__DEPENDENCIES_9)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp =
am__maybe_remake_depfiles =
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(ASTGraphGenerator_SOURCES) \
	$(ASTGraphGeneratorCustomized_SOURCES) \
	$(AST_PDF_Generator_SOURCES) $(abstractHandle1_SOURCES) \
	$(abstractHandle2_SOURCES) \
	$(accumulatorAttributeTraversal_SOURCES) \
	$(addArbitraryTextForUnparser_SOURCES) \
	$(addAssignmentStmt_SOURCES) $(addComments_SOURCES) \
	$(addExpression_SOURCES) $(addFunctionCalls_SOURCES) \
	$(addFunctionDeclaration_SOURCES) \
	$(addFunctionDeclaration2_SOURCES) \
	$(addFunctionDeclaration3_SOURCES) $(addStruct_SOURCES) \
	$(addVariableDeclaration_SOURCES) \
	$(addVariableDeclaration2_SOURCES) \
	$(astFileIO_GenerateBinaryFile_SOURCES) \
	$(astFileIO_ReadMultipleASTs_SOURCES) $(bin_example_SOURCES) \
	$(binaryAnalysis_symbolTable_SOURCES) \
	$(binaryAttribute_SOURCES) $(binaryCallGraph_SOURCES) \
	$(binaryDominance_SOURCES) $(binaryFileRead_SOURCES) \
	$(binaryFileWrite_SOURCES) $(binaryFunctionCfg_SOURCES) \
	$(binaryHelloWorld_SOURCES) $(binaryStrings_SOURCES) \
	$(buildCFG_SOURCES) $(buildCallGraph_SOURCES) \
	$(buildFile_SOURCES) $(buildVFA_SOURCES) \
	$(changeFunction_SOURCES) $(charmSupport_SOURCES) \
	$(classHierarchyGraph_SOURCES) \
	$(classicObjectOrientedVisitorPatternMemoryPoolTraversal_SOURCES) \
	$(classicObjectOrientedVisitorPatternTraversal_SOURCES) \
	$(codeCoverage_SOURCES) $(codeGenerationFormatControl_SOURCES) \
	$(collectComments_SOURCES) $(collectDefineDirectives_SOURCES) \
	$(combinedTraversals_SOURCES) $(commandlineProcessing_SOURCES) \
	$(constantFoldingTransformation_SOURCES) \
	$(constantUnFoldingTransformation_SOURCES) \
	$(customGraphGeneration_SOURCES) \
	$(customGraphGenerationWithColors_SOURCES) \
	$(customGraphGenerationWithFiltering_SOURCES) \
	$(dataBaseUsage_SOURCES) $(dataFlowGraph_SOURCES) \
	$(debuggingIRnodeToString_SOURCES) \
	$(debuggingSourceCodePositionInformation_SOURCES) \
	$(defuseAnalysis_SOURCES) $(dwarfAnalysis_SOURCES) \
	$(dwarfInstructionAddressToSourceLineAnalysis_SOURCES) \
	$(findVariableDeclarations_SOURCES) \
	$(generatingUniqueNamesFromDeclaration_SOURCES) \
	$(graphGenerationOfSubtree_SOURCES) $(graphTraversal_SOURCES) \
	$(identityTranslator_SOURCES) \
	$(inheritedAndSynthesizedAttributeTraversal_SOURCES) \
	$(inheritedAttributeTraversal_SOURCES) \
	$(inlineTransformations_SOURCES) \
	$(instrumentEndOfFunction_SOURCES) \
	$(interproceduralCFG_SOURCES) $(interveneAtVariables_SOURCES) \
	$(lineReplacement_SOURCES) $(livenessAnalysis_SOURCES) \
	$(loopNestingInfoProcessing_SOURCES) \
	$(loopOptimization_SOURCES) $(loopProcessor_SOURCES) \
	$(loopRecognition_SOURCES) $(nestedQueryExample_SOURCES) \
	$(nestedTraversal_SOURCES) \
	$(partialRedundancyElimination_SOURCES) \
	$(persistantAttributes_SOURCES) $(prePostTraversal_SOURCES) \
	$(queryLibraryExample_SOURCES) $(reductionRecognition_SOURCES) \
	$(resolveOverloadedFunction_SOURCES) \
	$(scopeInformation_SOURCES) \
	$(seedBugsExample_arrayIndexing_SOURCES) \
	$(selectedFileTranslation_SOURCES) \
	$(sharedMemoryTraversals_SOURCES) \
	$(sprintf_to_snprintf_SOURCES) $(switchWithoutDefault_SOURCES) \
	$(symbolTableHandling_SOURCES) \
	$(synthesizedAttributeTraversal_SOURCES) \
	$(tauInstrumenter_SOURCES) $(templateParameter_SOURCES) \
	$(traversalShortCircuit_SOURCES) \
	$(traverseIRnodeTypes_SOURCES) \
	$(typeInfoFromFunctionParameters_SOURCES) \
	$(typeTransformation_SOURCES) $(virtualCFG_SOURCES) \
	$(virtualFunctionIdentification_SOURCES) \
	$(visitorMemoryPoolTraversal_SOURCES) \
	$(visitorTraversal_SOURCES) $(volatileTypeModifier_SOURCES) \
	$(wholeASTGraphGenerator_SOURCES) $(wholeGraphAST_SOURCES) \
	$(wholeGraphFilterOnPersistantAttributes_SOURCES) \
	$(yicesTutorialExample_SOURCES)
DIST_SOURCES = $(ASTGraphGenerator_SOURCES) \
	$(ASTGraphGeneratorCustomized_SOURCES) \
	$(AST_PDF_Generator_SOURCES) $(abstractHandle1_SOURCES) \
	$(abstractHandle2_SOURCES) \
	$(accumulatorAttributeTraversal_SOURCES) \
	$(addArbitraryTextForUnparser_SOURCES) \
	$(addAssignmentStmt_SOURCES) $(addComments_SOURCES) \
	$(addExpression_SOURCES) $(addFunctionCalls_SOURCES) \
	$(addFunctionDeclaration_SOURCES) \
	$(addFunctionDeclaration2_SOURCES) \
	$(addFunctionDeclaration3_SOURCES) $(addStruct_SOURCES) \
	$(addVariableDeclaration_SOURCES) \
	$(addVariableDeclaration2_SOURCES) \
	$(astFileIO_GenerateBinaryFile_SOURCES) \
	$(astFileIO_ReadMultipleASTs_SOURCES) $(bin_example_SOURCES) \
	$(binaryAnalysis_symbolTable_SOURCES) \
	$(binaryAttribute_SOURCES) $(binaryCallGraph_SOURCES) \
	$(binaryDominance_SOURCES) $(binaryFileRead_SOURCES) \
	$(binaryFileWrite_SOURCES) $(binaryFunctionCfg_SOURCES) \
	$(binaryHelloWorld_SOURCES) $(binaryStrings_SOURCES) \
	$(buildCFG_SOURCES) $(buildCallGraph_SOURCES) \
	$(buildFile_SOURCES) $(buildVFA_SOURCES) \
	$(changeFunction_SOURCES) $(charmSupport_SOURCES) \
	$(classHierarchyGraph_SOURCES) \
	$(classicObjectOrientedVisitorPatternMemoryPoolTraversal_SOURCES) \
	$(classicObjectOrientedVisitorPatternTraversal_SOURCES) \
	$(codeCoverage_SOURCES) $(codeGenerationFormatControl_SOURCES) \
	$(collectComments_SOURCES) $(collectDefineDirectives_SOURCES) \
	$(combinedTraversals_SOURCES) $(commandlineProcessing_SOURCES) \
	$(constantFoldingTransformation_SOURCES) \
	$(constantUnFoldingTransformation_SOURCES) \
	$(customGraphGeneration_SOURCES) \
	$(customGraphGenerationWithColors_SOURCES) \
	$(customGraphGenerationWithFiltering_SOURCES) \
	$(dataBaseUsage_SOURCES) $(dataFlowGraph_SOURCES) \
	$(debuggingIRnodeToString_SOURCES) \
	$(debuggingSourceCodePositionInformation_SOURCES) \
	$(defuseAnalysis_SOURCES) $(dwarfAnalysis_SOURCES) \
	$(dwarfInstructionAddressToSourceLineAnalysis_SOURCES) \
	$(findVariableDeclarations_SOURCES) \
	$(generatingUniqueNamesFromDeclaration_SOURCES) \
	$(graphGenerationOfSubtree_SOURCES) $(graphTraversal_SOURCES) \
	$(identityTranslator_SOURCES) \
	$(inheritedAndSynthesizedAttributeTraversal_SOURCES) \
	$(inheritedAttributeTraversal_SOURCES) \
	$(inlineTransformations_SOURCES) \
	$(instrumentEndOfFunction_SOURCES) \
	$(interproceduralCFG_SOURCES) $(interveneAtVariables_SOURCES) \
	$(lineReplacement_SOURCES) $(livenessAnalysis_SOURCES) \
	$(loopNestingInfoProcessing_SOURCES) \
	$(loopOptimization_SOURCES) $(loopProcessor_SOURCES) \
	$(loopRecognition_SOURCES) $(nestedQueryExample_SOURCES) \
	$(nestedTraversal_SOURCES) \
	$(partialRedundancyElimination_SOURCES) \
	$(persistantAttributes_SOURCES) $(prePostTraversal_SOURCES) \
	$(queryLibraryExample_SOURCES) $(reductionRecognition_SOURCES) \
	$(resolveOverloadedFunction_SOURCES) \
	$(scopeInformation_SOURCES) \
	$(seedBugsExample_arrayIndexing_SOURCES) \
	$(selectedFileTranslation_SOURCES) \
	$(am__sharedMemoryTraversals_SOURCES_DIST) \
	$(sprintf_to_snprintf_SOURCES) $(switchWithoutDefault_SOURCES) \
	$(symbolTableHandling_SOURCES) \
	$(synthesizedAttributeTraversal_SOURCES) \
	$(tauInstrumenter_SOURCES) $(templateParameter_SOURCES) \
	$(traversalShortCircuit_SOURCES) \
	$(traverseIRnodeTypes_SOURCES) \
	$(typeInfoFromFunctionParameters_SOURCES) \
	$(typeTransformation_SOURCES) $(virtualCFG_SOURCES) \
	$(virtualFunctionIdentification_SOURCES) \
	$(visitorMemoryPoolTraversal_SOURCES) \
	$(visitorTraversal_SOURCES) $(volatileTypeModifier_SOURCES) \
	$(wholeASTGraphGenerator_SOURCES) $(wholeGraphAST_SOURCES) \
	$(wholeGraphFilterOnPersistantAttributes_SOURCES) \
	$(am__yicesTutorialExample_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir distdir-am
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = outliner intelPin roseHPCT binaryAnalysis
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/exampleMakefile.in \
	$(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs \
	$(top_srcdir)/config/mkinstalldirs
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ABS_COMPASS2_XML_SRCDIR = @ABS_COMPASS2_XML_SRCDIR@
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
ARMA_PREFIX = @ARMA_PREFIX@
ATERM_BIN_PATH = @ATERM_BIN_PATH@
ATERM_INSTALL_PATH = @ATERM_INSTALL_PATH@
ATERM_LIBRARY_PATH = @ATERM_LIBRARY_PATH@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AUX_LINKER = @AUX_LINKER@
AWK = @AWK@
Axx_INCLUDES = @Axx_INCLUDES@
Axx_LIBS = @Axx_LIBS@
BACKEND_ADA_COMPILER = @BACKEND_ADA_COMPILER@
BACKEND_COBOL_COMPILER = @BACKEND_COBOL_COMPILER@
BACKEND_COMPILER_VERSION_MAJOR_NUMBER = @BACKEND_COMPILER_VERSION_MAJOR_NUMBER@
BACKEND_COMPILER_VERSION_MINOR_NUMBER = @BACKEND_COMPILER_VERSION_MINOR_NUMBER@
BACKEND_COMPILER_VERSION_NAME = @BACKEND_COMPILER_VERSION_NAME@
BACKEND_COMPILER_VERSION_PATCHLEVEL_NUMBER = @BACKEND_COMPILER_VERSION_PATCHLEVEL_NUMBER@
BACKEND_CSHARP_COMPILER = @BACKEND_CSHARP_COMPILER@
BACKEND_CXX_COMPILER = @BACKEND_CXX_COMPILER@
BACKEND_CXX_VENDOR_AND_VERSION2 = @BACKEND_CXX_VENDOR_AND_VERSION2@
BACKEND_CXX_VENDOR_AND_VERSION3 = @BACKEND_CXX_VENDOR_AND_VERSION3@
BACKEND_C_COMPILER = @BACKEND_C_COMPILER@
BACKEND_FORTRAN_COMPILER = @BACKEND_FORTRAN_COMPILER@
BACKEND_JAVA_COMPILER = @BACKEND_JAVA_COMPILER@
BACKEND_JOVIAL_COMPILER = @BACKEND_JOVIAL_COMPILER@
BACKEND_MATLAB_COMPILER = @BACKEND_MATLAB_COMPILER@
BACKEND_X10_COMPILER = @BACKEND_X10_COMPILER@
BISON = @BISON@
BISON_VERSION = @BISON_VERSION@
BOOST_CHRONO_LIB = @BOOST_CHRONO_LIB@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_DATE_TIME_LIB = @BOOST_DATE_TIME_LIB@
BOOST_FILESYSTEM_LIB = @BOOST_FILESYSTEM_LIB@
BOOST_IOSTREAMS_LIB = @BOOST_IOSTREAMS_LIB@
BOOST_LDFLAGS = @BOOST_LDFLAGS@
BOOST_PROGRAM_OPTIONS_LIB = @BOOST_PROGRAM_OPTIONS_LIB@
BOOST_RANDOM_LIB = @BOOST_RANDOM_LIB@
BOOST_REGEX_LIB = @BOOST_REGEX_LIB@
BOOST_SERIALIZATION_LIB = @BOOST_SERIALIZATION_LIB@
BOOST_SYSTEM_LIB = @BOOST_SYSTEM_LIB@
BOOST_THREAD_LIB = @BOOST_THREAD_LIB@
BOOST_WAVE_LIB = @BOOST_WAVE_LIB@
CANDL_PATH = @CANDL_PATH@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CCLD = @CCLD@
CFLAGS = @CFLAGS@
CFLAGS32 = @CFLAGS32@
CLANG_CXXFLAGS = @CLANG_CXXFLAGS@
CLANG_LDFLAGS = @CLANG_LDFLAGS@
CLANG_LIBDIR = @CLANG_LIBDIR@
CLASSPATH = @CLASSPATH@
CLOOG_PATH = @CLOOG_PATH@
COBPT_INSTALL_PATH = @COBPT_INSTALL_PATH@
COBPT_LIBRARY_PATH = @COBPT_LIBRARY_PATH@
CPP = @CPP@

# DQ (9/27/2015): Added to support new use of AM_CPPFLAGS instead of INCLUDES
# (depreicated in automake and for which many warnings are generated).
CPPFLAGS = $(AM_CPPFLAGS)
CUDA_BIN_DIR = @CUDA_BIN_DIR@
CUDA_INC_DIR = @CUDA_INC_DIR@
CUDA_LIB_DIR = @CUDA_LIB_DIR@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXXLD = @CXXLD@
CXX_DEBUG = @CXX_DEBUG@
CXX_OPTIMIZE = @CXX_OPTIMIZE@
CXX_SHARED_LIB_UPDATE = @CXX_SHARED_LIB_UPDATE@
CXX_STATIC_LIB_UPDATE = @CXX_STATIC_LIB_UPDATE@
CXX_TEMPLATE_OBJECTS = @CXX_TEMPLATE_OBJECTS@
CXX_TEMPLATE_REPOSITORY_PATH = @CXX_TEMPLATE_REPOSITORY_PATH@
CXX_WARNINGS = @CXX_WARNINGS@
CYGPATH_W = @CYGPATH_W@
C_DEBUG = @C_DEBUG@
C_OPTIMIZE = @C_OPTIMIZE@
C_WARNINGS = @C_WARNINGS@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLIB_PREFIX = @DLIB_PREFIX@
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
DOXYGEN_ADDED_DIRECTORY_1 = @DOXYGEN_ADDED_DIRECTORY_1@
DOXYGEN_ADDED_DIRECTORY_2 = @DOXYGEN_ADDED_DIRECTORY_2@
DOXYGEN_ENABLED_SECTIONS = @DOXYGEN_ENABLED_SECTIONS@
DOXYGEN_EXTRACT_ALL = @DOXYGEN_EXTRACT_ALL@
DOXYGEN_EXTRACT_PRIVATE = @DOXYGEN_EXTRACT_PRIVATE@
DOXYGEN_EXTRACT_STATIC = @DOXYGEN_EXTRACT_STATIC@
DOXYGEN_HIDE_FRIEND_COMPOUNDS = @DOXYGEN_HIDE_FRIEND_COMPOUNDS@
DOXYGEN_HIDE_UNDOC_CLASSES = @DOXYGEN_HIDE_UNDOC_CLASSES@
DOXYGEN_HIDE_UNDOC_MEMBERS = @DOXYGEN_HIDE_UNDOC_MEMBERS@
DOXYGEN_INTERNAL_DOCS = @DOXYGEN_INTERNAL_DOCS@
DOXYGEN_USE_TAG_FILE = @DOXYGEN_USE_TAG_FILE@
DOXYINDEXER = @DOXYINDEXER@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ETHER_PREFIX = @ETHER_PREFIX@
EXE = @EXE@
EXEEXT = @EXEEXT@
F77 = @F77@
FC = @FC@
FCFLAGS = @FCFLAGS@
FFLAGS = @FFLAGS@
FGREP = @FGREP@
FLANG_INSTALL_PATH = @FLANG_INSTALL_PATH@
FLANG_SOURCE_PATH = @FLANG_SOURCE_PATH@
FLTK_include_path = @FLTK_include_path@
FLTK_libs_path = @FLTK_libs_path@
FRONTEND_CXX_VENDOR_AND_VERSION2 = @FRONTEND_CXX_VENDOR_AND_VERSION2@
FRONTEND_CXX_VENDOR_AND_VERSION3 = @FRONTEND_CXX_VENDOR_AND_VERSION3@
GCC_MINOR_VERSION = @GCC_MINOR_VERSION@
GCC_VERSION = @GCC_VERSION@
GENERATED_COMPILER_NAME_AND_VERSION_SUFFIX = @GENERATED_COMPILER_NAME_AND_VERSION_SUFFIX@
GEN_BE = @GEN_BE@
GFORTRAN_PATH = @GFORTRAN_PATH@
GHCBIN = @GHCBIN@
GLUT_CFLAGS = @GLUT_CFLAGS@
GLUT_LIBS = ${glut_path}
GLUT_include_path = @GLUT_include_path@
GLUT_libs_path = @GLUT_libs_path@
GL_CFLAGS = @GL_CFLAGS@
GL_LIBS = @GL_LIBS@
GMP_INCLUDE_PATH = @GMP_INCLUDE_PATH@
GMP_INSTALL_PATH = @GMP_INSTALL_PATH@
GMP_LIBRARY_PATH = @GMP_LIBRARY_PATH@
GNAT_INCLUDES = @GNAT_INCLUDES@
GREP = @GREP@
GraphViz_include_path = @GraphViz_include_path@
GraphViz_libs_path = @GraphViz_libs_path@
HAVE_CXX11 = @HAVE_CXX11@
HAVE_CXX14 = @HAVE_CXX14@
HS_CONFIG_OPTS = @HS_CONFIG_OPTS@
INCLTDL = @INCLTDL@
INCLUDE_COMPASS_MAKEFILE_INC = @INCLUDE_COMPASS_MAKEFILE_INC@
INDENT = @INDENT@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSURE_OPTIONS = @INSURE_OPTIONS@
INTEL_FPP_PATH = @INTEL_FPP_PATH@
ISL_INCLUDE_PATH = @ISL_INCLUDE_PATH@
ISL_INSTALL_PATH = @ISL_INSTALL_PATH@
ISL_LIBRARY_PATH = @ISL_LIBRARY_PATH@
IntelPin_path = @IntelPin_path@
JAR = @JAR@
JAVA = @JAVA@
JAVAC = @JAVAC@
JAVA_JVM_INCLUDE = @JAVA_JVM_INCLUDE@
JAVA_JVM_LINK = @JAVA_JVM_LINK@
JAVA_JVM_PATH = @JAVA_JVM_PATH@
JAVA_PATH = @JAVA_PATH@
LD = @LD@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBADD_DL = @LIBADD_DL@
LIBADD_DLD_LINK = @LIBADD_DLD_LINK@
LIBADD_DLOPEN = @LIBADD_DLOPEN@
LIBADD_SHL_LOAD = @LIBADD_SHL_LOAD@
LIBDWARF_CPPFLAGS = @LIBDWARF_CPPFLAGS@
LIBDWARF_LDFLAGS = @LIBDWARF_LDFLAGS@
LIBDWARF_PREFIX = @LIBDWARF_PREFIX@
LIBELF_CPPFLAGS = @LIBELF_CPPFLAGS@
LIBELF_LDFLAGS = @LIBELF_LDFLAGS@
LIBELF_PREFIX = @LIBELF_PREFIX@
LIBFFI_CFLAGS = @LIBFFI_CFLAGS@
LIBFFI_LIBS = @LIBFFI_LIBS@
LIBGCRYPT_CPPFLAGS = @LIBGCRYPT_CPPFLAGS@
LIBGCRYPT_LDFLAGS = @LIBGCRYPT_LDFLAGS@
LIBGCRYPT_PREFIX = @LIBGCRYPT_PREFIX@
LIBLTDL = @LIBLTDL@
LIBOBJS = @LIBOBJS@
LIBREADLINE_INCLUDE_PATH = @LIBREADLINE_INCLUDE_PATH@
LIBREADLINE_INSTALL_PATH = @LIBREADLINE_INSTALL_PATH@
LIBREADLINE_LIBRARY_PATH = @LIBREADLINE_LIBRARY_PATH@
LIBREADLINE_LIBS = @LIBREADLINE_LIBS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LLVM_CONFIG = @LLVM_CONFIG@
LLVM_CPPFLAGS = @LLVM_CPPFLAGS@
LLVM_LDFLAGS = @LLVM_LDFLAGS@
LLVM_LIBS = @LLVM_LIBS@
LN_S = @LN_S@
LTDLDEPS = @LTDLDEPS@
LTDLINCL = @LTDLINCL@
LTDLOPEN = @LTDLOPEN@
LTLIBOBJS = @LTLIBOBJS@
LT_ARGZ_H = @LT_ARGZ_H@
LT_CONFIG_H = @LT_CONFIG_H@
LT_DLLOADERS = @LT_DLLOADERS@
LT_DLPREOPEN = @LT_DLPREOPEN@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MAPLE_INCLUDES = @MAPLE_INCLUDES@
MAPLE_LIBDIR = @MAPLE_LIBDIR@
MAPLE_LIBS = @MAPLE_LIBS@
MD5 = @MD5@
MINT = @MINT@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MPICC = @MPICC@
MPICXX = @MPICXX@
MPIF77 = @MPIF77@
MPIFC = @MPIFC@
MYSQL_CFLAGS = @MYSQL_CFLAGS@
MYSQL_CONFIG = @MYSQL_CONFIG@
MYSQL_INCLUDE = @MYSQL_INCLUDE@
MYSQL_LDFLAGS = @MYSQL_LDFLAGS@
MYSQL_VERSION = @MYSQL_VERSION@
NM = @NM@
NMEDIT = @NMEDIT@
NVCCBIN = @NVCCBIN@
OBJ = @OBJ@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OCTAVE_PARSER_INSTALL_TARFILE = @OCTAVE_PARSER_INSTALL_TARFILE@
OPENCL_INC_DIR = @OPENCL_INC_DIR@
OPENCL_LIB_DIR = @OPENCL_LIB_DIR@
OPEN_FORTRAN_PARSER_PATH = @OPEN_FORTRAN_PARSER_PATH@
OPTIONAL_PROJECTS = @OPTIONAL_PROJECTS@
OS_major_release_number = @OS_major_release_number@
OS_minor_release_number = @OS_minor_release_number@
OS_release = @OS_release@
OS_vendor = @OS_vendor@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PACKAGE_VERSION_NUMERIC = @PACKAGE_VERSION_NUMERIC@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
POET_INCL = @POET_INCL@
POET_LIB = @POET_LIB@
PPL_PATH = @PPL_PATH@
PURIFY_OPTIONS = @PURIFY_OPTIONS@
PYTHON = @PYTHON@
PYTHON_CPPFLAGS = @PYTHON_CPPFLAGS@
PYTHON_EXTRA_LDFLAGS = @PYTHON_EXTRA_LDFLAGS@
PYTHON_EXTRA_LIBS = @PYTHON_EXTRA_LIBS@
PYTHON_LDFLAGS = @PYTHON_LDFLAGS@
PYTHON_ROOT = @PYTHON_ROOT@
PYTHON_SITE_PKG = @PYTHON_SITE_PKG@
PYTHON_VERSION_MM = @PYTHON_VERSION_MM@
Pxx_INCLUDES = @Pxx_INCLUDES@
Pxx_LIBS = @Pxx_LIBS@
QROSE_PREFIX = @QROSE_PREFIX@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
QT_VERSION = @QT_VERSION@
QT_VERSION_MAJOR = @QT_VERSION_MAJOR@
QT_VERSION_MINOR = @QT_VERSION_MINOR@
RANLIB = @RANLIB@
RCC = @RCC@
ROSEHPCT_DEP_INCLUDES = @ROSEHPCT_DEP_INCLUDES@
ROSEHPCT_DEP_LIBS = @ROSEHPCT_DEP_LIBS@
ROSE_BOOST_NORMAL_INCLUDE_PATH = @ROSE_BOOST_NORMAL_INCLUDE_PATH@

# DQ (12/22/2008): Specification of Boost path for use with "-isystem" option (may be GNU
# specific).  We use this option only if the configuration of ROSE has detected a
# previously installed version of Boost (which we do not want to use).
# Note that only one of these will be non-empty makefile variables.
ROSE_BOOST_PREINCLUDE_PATH = @ROSE_BOOST_PREINCLUDE_PATH@
ROSE_CAPSTONE_PREFIX = @ROSE_CAPSTONE_PREFIX@
ROSE_EDG_MAJOR_VERSION_NUMBER = @ROSE_EDG_MAJOR_VERSION_NUMBER@
ROSE_EDG_MINOR_VERSION_NUMBER = @ROSE_EDG_MINOR_VERSION_NUMBER@
ROSE_HOME = @ROSE_HOME@
ROSE_LIBMAGIC_PREFIX = @ROSE_LIBMAGIC_PREFIX@
ROSE_LIBPQXX_PREFIX = @ROSE_LIBPQXX_PREFIX@
ROSE_LSB_RELEASE = @ROSE_LSB_RELEASE@
ROSE_OBJDUMP_PATH = @ROSE_OBJDUMP_PATH@
ROSE_OFP_JAR_FILE = @ROSE_OFP_JAR_FILE@
ROSE_OFP_MAJOR_VERSION_NUMBER = @ROSE_OFP_MAJOR_VERSION_NUMBER@
ROSE_OFP_MINOR_VERSION_NUMBER = @ROSE_OFP_MINOR_VERSION_NUMBER@
ROSE_OFP_PATCH_VERSION_NUMBER = @ROSE_OFP_PATCH_VERSION_NUMBER@
ROSE_OFP_VERSION_NUMBER = @ROSE_OFP_VERSION_NUMBER@
ROSE_PS2PDF_PATH = @ROSE_PS2PDF_PATH@
ROSE_SUPPORT_GNU_EXTENSIONS = @ROSE_SUPPORT_GNU_EXTENSIONS@
ROSE_SUPPORT_MICROSOFT_EXTENSIONS = @ROSE_SUPPORT_MICROSOFT_EXTENSIONS@
ROSE_USE_CANDL = @ROSE_USE_CANDL@
ROSE_USE_CLOOG = @ROSE_USE_CLOOG@
ROSE_USE_EDG_QUAD_FLOAT = @ROSE_USE_EDG_QUAD_FLOAT@
ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT = @ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT@
ROSE_USE_PPL = @ROSE_USE_PPL@
ROSE_USE_SCOPLIB = @ROSE_USE_SCOPLIB@
ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT = @ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT@
ROSE_WGET_PATH = @ROSE_WGET_PATH@
ROSE_WITH_MPI_CFLAGS = @ROSE_WITH_MPI_CFLAGS@
ROSE_WITH_MPI_CLDFLAGS = @ROSE_WITH_MPI_CLDFLAGS@
ROSE_WITH_MPI_CXXFLAGS = @ROSE_WITH_MPI_CXXFLAGS@
ROSE_WITH_MPI_CXXLDFLAGS = @ROSE_WITH_MPI_CXXLDFLAGS@
ROSE_WITH_MPI_F77FLAGS = @ROSE_WITH_MPI_F77FLAGS@
ROSE_WITH_MPI_F77LDFLAGS = @ROSE_WITH_MPI_F77LDFLAGS@
ROSE_WITH_MPI_FFLAGS = @ROSE_WITH_MPI_FFLAGS@
ROSE_WITH_MPI_FLDFLAGS = @ROSE_WITH_MPI_FLDFLAGS@
ROSE_YAML_PREFIX = @ROSE_YAML_PREFIX@
ROSE_YICES = @ROSE_YICES@
ROSE_YICES_PREFIX = @ROSE_YICES_PREFIX@
ROSE_Z3_PREFIX = @ROSE_Z3_PREFIX@
RT_LIBS = @RT_LIBS@
SCOPLIB_PATH = @SCOPLIB_PATH@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SPOT_INCLUDE_PATH = @SPOT_INCLUDE_PATH@
SPOT_INSTALL_PATH = @SPOT_INSTALL_PATH@
SPOT_LIBRARY_PATH = @SPOT_LIBRARY_PATH@
SQLITE3_CFLAGS = @SQLITE3_CFLAGS@
SQLITE3_LDFLAGS = @SQLITE3_LDFLAGS@
SQLITE3_VERSION = @SQLITE3_VERSION@
STRATEGO_BIN_PATH = @STRATEGO_BIN_PATH@
STRATEGO_INSTALL_PATH = @STRATEGO_INSTALL_PATH@
STRATEGO_LIBRARY_PATH = @STRATEGO_LIBRARY_PATH@
STRIP = @STRIP@
SWIG = @SWIG@
SWIG_LIB = @SWIG_LIB@
SWIPLBIN = @SWIPLBIN@
TCLSH = @TCLSH@
TEST_SMT_SOLVER = @TEST_SMT_SOLVER@
UIC = @UIC@
UPC = @UPC@
UPCDEPMODE = @UPCDEPMODE@
UPCFLAGS = @UPCFLAGS@
USING_WINDOWS = @USING_WINDOWS@
VALGRIND_BINARY = @VALGRIND_BINARY@
VALGRIND_BIN_PATH = @VALGRIND_BIN_PATH@
VALGRIND_INCLUDE_PATH = @VALGRIND_INCLUDE_PATH@
VALGRIND_INSTALL_PATH = @VALGRIND_INSTALL_PATH@
VALGRIND_LIBRARY_PATH = @VALGRIND_LIBRARY_PATH@
VECTORIZATION = @VECTORIZATION@
VERSION = @VERSION@
WT_PREFIX = @WT_PREFIX@
X10_BIN_PATH = @X10_BIN_PATH@
X10_INSTALL_PATH = @X10_INSTALL_PATH@
X10_LIBRARY_PATH = @X10_LIBRARY_PATH@
X10_VERSION = @X10_VERSION@
XERCES_CPPFLAGS = @XERCES_CPPFLAGS@
XERCES_LDFLAGS = @XERCES_LDFLAGS@
XERCES_LIBS = @XERCES_LIBS@
XERCES_VERSION = @XERCES_VERSION@
XMKMF = @XMKMF@
XML2_CONFIG = @XML2_CONFIG@
XML_CPPFLAGS = @XML_CPPFLAGS@
XML_LIBS = @XML_LIBS@
YACC = @YACC@
YFLAGS = @YFLAGS@
Z3BIN = @Z3BIN@
Z3_INCLUDE_PATH = @Z3_INCLUDE_PATH@
Z3_LIBRARY_PATH = @Z3_LIBRARY_PATH@
Z3_PREFIX = @Z3_PREFIX@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
absolute_path_srcdir = @absolute_path_srcdir@
ac_boost_path = @ac_boost_path@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_F77 = @ac_ct_F77@
ac_ct_FC = @ac_ct_FC@
ac_ct_MPICXX = @ac_ct_MPICXX@
ac_ct_UPC = @ac_ct_UPC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bddbddb_path = @bddbddb_path@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_triplet_without_redhat = @build_triplet_without_redhat@
build_vendor = @build_vendor@
builddir = @builddir@
configure_date = @configure_date@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
edg_union_struct_debugging_value = @edg_union_struct_debugging_value@
exec_prefix = @exec_prefix@
glut_path = @glut_path@
gnat_home = @gnat_home@
gnat_path = @gnat_path@
gomp_omp_runtime_library_path = @gomp_omp_runtime_library_path@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
ida_path = @ida_path@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
insure_BIN = @insure_BIN@
insure_LIBS = @insure_LIBS@
insure_PREFIX = @insure_PREFIX@
libdir = @libdir@
libexecdir = @libexecdir@
llvm_path = @llvm_path@
localedir = @localedir@
localstatedir = @localstatedir@
ltdl_LIBOBJS = @ltdl_LIBOBJS@
ltdl_LTLIBOBJS = @ltdl_LTLIBOBJS@
mandir = @mandir@
maple_path = @maple_path@
mkdir_p = @mkdir_p@
mono_home = @mono_home@
oldincludedir = @oldincludedir@
omni_omp_runtime_support_path = @omni_omp_runtime_support_path@
optional_Visualization_subdirs = @optional_Visualization_subdirs@
parallel_ast_traversal_omp_path = @parallel_ast_traversal_omp_path@
pdfdir = @pdfdir@
php_path = @php_path@
poet_dir = @poet_dir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
purify_BIN = @purify_BIN@
purify_INCLUDES = @purify_INCLUDES@
purify_LIBS = @purify_LIBS@
purify_PREFIX = @purify_PREFIX@
res_top_src = @res_top_src@
rosyln_home = @rosyln_home@
rted_path = @rted_path@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sys_symbol_underscore = @sys_symbol_underscore@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_pwd = @top_pwd@
top_srcdir = @top_srcdir@
wine_path = @wine_path@

# SQLite is a simpler database to use than MySQL
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_INCLUDE = $(SQLITE3_CFLAGS)
@ROSE_USE_SQLITE_DATABASE_TRUE@SQLITE_DATABASE_INCLUDE = $(SQLITE3_CFLAGS) -I$(top_srcdir)/src/roseExtensions/sqlite3x
@ROSE_USE_SQLITE_DATABASE_TRUE@SQLITE_DATABASE_LIBS = $(SQLITE3_LDFLAGS)
#   ROSE_SQLITE_DATABASE_OBJS     = $(top_builddir)/src/roseExtensions/sqlite3x/*o
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_LIB_NAME = RoseSQLite3xDatabase
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_LIB_FILE = lib$(ROSE_SQLITE_DATABASE_LIB_NAME).la
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_LIBS = -l$(ROSE_SQLITE_DATABASE_LIB_NAME)
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SIDEEFFECT_INCLUDE = -I$(top_srcdir)/src/midend/programAnalysis/sideEffectAnalysis
@ROSE_HAVE_LIBZ3_TRUE@Z3_LIB_NAME = z3
@ROSE_HAVE_LIBZ3_TRUE@Z3_LIB_FILE = lib$(Z3_LIB_NAME).so
@ROSE_HAVE_LIBZ3_TRUE@Z3_LIBS = -l$(Z3_LIB_NAME)
@ROSE_HAVE_LIBZ3_TRUE@Z3_INCLUDES = -I$(Z3_PREFIX)/include
@ROSE_HAVE_LIBZ3_TRUE@Z3_LIB_INCLUDES = -L$(Z3_PREFIX)/lib
@ROSE_HAVE_LIBZ3_TRUE@ROSE_Z3_INCLUDES = -I@ROSE_Z3_PREFIX@/include
@ROSE_HAVE_LIBZ3_TRUE@ROSE_Z3_LIBS = -lz3
@ROSE_HAVE_LIBZ3_TRUE@ROSE_Z3_LIBS_WITH_PATH = -L@ROSE_Z3_PREFIX@/lib -lz3

# This is properly handled by automake even when specified in an include file
EDG_LIBS = @EDG_LIBS@

# Conditional support for Gabriel's QRose GUI Library
#  ROSE_GUI_INCLUDE =   -I${QROSE_PREFIX}/include
@ROSE_USE_QT_TRUE@ROSE_GUI_INCLUDE = -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Framework -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Widgets -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/Common -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/QueryBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/TreeBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/QueryBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/SourceBox

# ROSE_GUI_LIBS = -lqrose
#  ROSE_GUI_LIBS_WITH_PATH = -L${QROSE_PREFIX}/lib -lqrose
#  ROSE_GUI_LIBS_WITH_PATH =  -L${top_builddir}/src/3rdPartyLibraries/qrose/QRoseLib/  -lqrose
@ROSE_USE_QT_TRUE@ROSE_GUI_LIBS_WITH_PATH = ${top_builddir}/src/3rdPartyLibraries/qrose/QRoseLib/libqrose.la

# ROSE_GUI_LIB_FILE = libqrose.a
@ROSE_USE_QT_TRUE@ROSE_QT_INCLUDE = $(QT_INCLUDES)
# ROSE_QT_LIBS = -lqt
@ROSE_USE_QT_TRUE@ROSE_QT_LIBS_WITH_PATH = ${QT_LDFLAGS}
# ROSE_QT_LIB_FILE = libqt.a

# ROSE-HPCToolkit module
@ROSE_BUILD_ROSEHPCT_TRUE@ROSE_ROSEHPCT_INCLUDES = -I$(top_srcdir)/src/roseExtensions/roseHPCToolkit/include
@ROSE_BUILD_ROSEHPCT_TRUE@ROSE_ROSEHPCT_LIBS = -lrosehpct
@ROSE_BUILD_ROSEHPCT_TRUE@ROSE_ROSEHPCT_LIBS_WITH_PATH = $(top_builddir)/src/roseExtensions/roseHPCToolkit/src/librosehpct.la
# ROSE_ROSEHPCT_LIB_FILE = librosehpct.so

# ROSE-YICES Package (destributed by SRI as a static library)
@ROSE_HAVE_LIBYICES_TRUE@ROSE_YICES_INCLUDES = -I@ROSE_YICES_PREFIX@/include
@ROSE_HAVE_LIBYICES_TRUE@ROSE_YICES_LIBS = -lyices
@ROSE_HAVE_LIBYICES_TRUE@ROSE_YICES_LIBS_WITH_PATH = @ROSE_YICES_PREFIX@/lib/libyices.a

# YAML-CPP package for parsing YAML/JSON files
@ROSE_HAVE_LIBYAML_TRUE@ROSE_YAML_INCLUDES = -I@ROSE_YAML_PREFIX@/include
@ROSE_HAVE_LIBYAML_TRUE@ROSE_YAML_LIBS = -lyaml-cpp
@ROSE_HAVE_LIBYAML_TRUE@ROSE_YAML_LIBS_WITH_PATH = -L@ROSE_YAML_PREFIX@/lib -lyaml-cpp

# GNU readline
@ROSE_WITH_LIBREADLINE_TRUE@ROSE_READLINE_INCLUDES = -I@LIBREADLINE_INCLUDE_PATH@
@ROSE_WITH_LIBREADLINE_TRUE@ROSE_READLINE_LIBS = @LIBREADLINE_LIBS@
@ROSE_WITH_LIBREADLINE_TRUE@ROSE_READLINE_LIBS_WITH_PATH = -L@LIBREADLINE_LIBRARY_PATH@ $(ROSE_READLINE_LIBS)

# libmagic for identifying file types based on magic numbers
@ROSE_HAVE_LIBMAGIC_TRUE@ROSE_LIBMAGIC_INCLUDES = -I@ROSE_LIBMAGIC_PREFIX@/include
@ROSE_HAVE_LIBMAGIC_TRUE@ROSE_LIBMAGIC_LIBS = -lmagic
@ROSE_HAVE_LIBMAGIC_TRUE@ROSE_LIBMAGIC_LIBS_WITH_PATH = -L@ROSE_LIBMAGIC_PREFIX@/lib -lmagic

# PostgreSQL C++ API
@ROSE_HAVE_LIBPQXX_TRUE@ROSE_LIBPQXX_INCLUDES = -I@ROSE_LIBPQXX_PREFIX@/include
@ROSE_HAVE_LIBPQXX_TRUE@ROSE_LIBPQXX_LIBS = -lpqxx -lpq
@ROSE_HAVE_LIBPQXX_TRUE@ROSE_LIBPQXX_LIBS_WITH_PATH = -L@ROSE_LIBPQXX_PREFIX@/lib -lpqxx -lpq

# Capstone disassembler
@ROSE_HAVE_CAPSTONE_TRUE@ROSE_CAPSTONE_INCLUDES = -I@ROSE_CAPSTONE_PREFIX@/include
@ROSE_HAVE_CAPSTONE_TRUE@ROSE_CAPSTONE_LIBS = -lcapstone
@ROSE_HAVE_CAPSTONE_TRUE@ROSE_CAPSTONE_LIBS_WITH_PATH = -L@ROSE_CAPSTONE_PREFIX@/lib -lcapstone

# Math algorithms from http://dlib.net. This is a headers-only library neede by some binary analyses.
@ROSE_HAVE_DLIB_TRUE@ROSE_DLIB_INCLUDES = -I@DLIB_PREFIX@
@ROSE_HAVE_DLIB_TRUE@ROSE_DLIB_LIBS = 
@ROSE_HAVE_DLIB_TRUE@ROSE_DLIB_LIBS_WITH_PATH = 

# DQ (11/4/2016): Adding support for use of Address Sanitizer (for where the ROSE Test Handler (RTH) is used.
# Note the quotes and escapes that are required:
ADDRESS_SANITIZER_OPTIONS = "ASAN_OPTIONS=symbolize=1:detect_leaks=0 ASAN_SYMBOLIZER_PATH=\`which llvm-symbolizer\`"

# DQ(11/4/2016): Need a version when not using the ROSE Test Handler (RTH):
NON_RTH_ADDRESS_SANITIZER_OPTIONS = ASAN_OPTIONS=symbolize=1:detect_leaks=0 ASAN_SYMBOLIZER_PATH=`which llvm-symbolizer`
@ROSE_HAVE_LIBELF_TRUE@ROSE_ELF_INCLUDES = @LIBELF_CPPFLAGS@
@ROSE_HAVE_LIBELF_TRUE@ROSE_ELF_LIBS_WITH_PATH = @LIBELF_LDFLAGS@

# ROSE gcrypt support (for things like md5, sha1, etc)
@ROSE_HAVE_LIBGCRYPT_TRUE@ROSE_GCRYPT_INCLUDES = @LIBGCRYPT_CPPFLAGS@
@ROSE_HAVE_LIBGCRYPT_TRUE@ROSE_GCRYPT_LIBS_WITH_PATH = @LIBGCRYPT_LDFLAGS@

# ROSE-DWARF libdwarf support
@ROSE_HAVE_LIBDWARF_TRUE@ROSE_DWARF_INCLUDES = @LIBDWARF_CPPFLAGS@
@ROSE_HAVE_LIBDWARF_TRUE@@ROSE_USE_INTEL_PIN_FALSE@ROSE_DWARF_LIBS_WITH_PATH = @LIBDWARF_LDFLAGS@

# DQ (3/13/2009):
# If Dwarf is used with Intel Pin then reference the same copy of libdwarf.a (in the same
# directory).  However, it does NOT work to link both references to libdwarf into more
# than one dynamic (shared) library, so we need to link libdwarf dynamically.
# To avoid additional LD_LIBRARY_PATH requirements, we do so using rpath.
# To support this the libdwarf.so should be placed into $(INTEL_PIN_PATH)/intel64/lib-ext
# and the static libdwarf.a moved out (renamed) so that it will not be used.
# Note that this will also cause librose.so to use the shared library for
# dwarf when used with Intel Pin.
@ROSE_HAVE_LIBDWARF_TRUE@@ROSE_USE_INTEL_PIN_TRUE@ROSE_DWARF_LIBS_WITH_PATH = -L$(INTEL_PIN_PATH)/intel64/lib-ext -ldwarf -lelf
# DQ (3/14/2009): This factors the lib paths.
@ROSE_HAVE_LIBDWARF_TRUE@@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_WITH_DWARF_LIBS_PATH = $(INTEL_PIN_LIB_PATHS) -lpin -lxed -ldl $(ROSE_DWARF_LIBS_WITH_PATH)

# ROSE-WINE Package (Wine is a package to permit execution of Windows binaries under Linux)
@ROSE_USE_WINDOWS_ANALYSIS_SUPPORT_TRUE@ROSE_WINE_INCLUDES = -I$(wine_path)/include
@ROSE_USE_PHP_TRUE@ROSE_PHP_INCLUDES = -I$(php_path)/include/phc -I$(php_path)/include/php
@ROSE_USE_PHP_TRUE@ROSE_PHP_LIBS = -lphp5 -lphc -lltdl
@ROSE_USE_PHP_TRUE@ROSE_PHP_LIBS_WITH_PATH = $(php_path)/lib/libphc.so $(php_path)/lib/libphp5.so $(LIBLTDL)

# ASR (06/09/2010): adding llvm support variables
@ROSE_USE_LLVM_TRUE@ROSE_LLVM_INCLUDES = -I$(llvm_path)/include
@ROSE_USE_LLVM_TRUE@ROSE_LLVM_LIBS = -L$(llvm_path)/lib \
@ROSE_USE_LLVM_TRUE@	-lLLVMXCoreCodeGen -lLLVMXCoreAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMXCoreInfo -lLLVMSystemZCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMSystemZAsmPrinter -lLLVMSystemZInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMSparcCodeGen -lLLVMSparcAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMSparcInfo -lLLVMPowerPCCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMPowerPCAsmPrinter -lLLVMPowerPCInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMpic16passes -lLLVMPIC16AsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMPIC16CodeGen -lLLVMPIC16Info \
@ROSE_USE_LLVM_TRUE@	-lLLVMMSP430CodeGen -lLLVMMSP430AsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMMSP430Info -lLLVMMSIL -lLLVMMSILInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMMipsAsmPrinter -lLLVMMipsCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMMipsInfo -lLLVMMBlazeAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMMBlazeCodeGen -lLLVMMBlazeInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMLinker -lLLVMipo -lLLVMInterpreter \
@ROSE_USE_LLVM_TRUE@	-lLLVMInstrumentation -lLLVMJIT \
@ROSE_USE_LLVM_TRUE@	-lLLVMExecutionEngine -lLLVMCppBackend \
@ROSE_USE_LLVM_TRUE@	-lLLVMCppBackendInfo -lLLVMCellSPUCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMCellSPUAsmPrinter -lLLVMCellSPUInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMCBackend -lLLVMCBackendInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMBlackfinCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMBlackfinAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMBlackfinInfo -lLLVMBitWriter \
@ROSE_USE_LLVM_TRUE@	-lLLVMX86Disassembler -lLLVMX86AsmParser \
@ROSE_USE_LLVM_TRUE@	-lLLVMX86AsmPrinter -lLLVMX86CodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMX86Info -lLLVMAsmParser \
@ROSE_USE_LLVM_TRUE@	-lLLVMARMAsmParser -lLLVMMCParser \
@ROSE_USE_LLVM_TRUE@	-lLLVMARMAsmPrinter -lLLVMARMCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMARMInfo -lLLVMArchive \
@ROSE_USE_LLVM_TRUE@	-lLLVMBitReader -lLLVMAlphaCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMSelectionDAG -lLLVMAlphaAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMAsmPrinter -lLLVMCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMScalarOpts -lLLVMInstCombine \
@ROSE_USE_LLVM_TRUE@	-lLLVMTransformUtils -lLLVMipa \
@ROSE_USE_LLVM_TRUE@	-lLLVMAnalysis -lLLVMTarget -lLLVMMC \
@ROSE_USE_LLVM_TRUE@	-lLLVMCore -lLLVMAlphaInfo -lLLVMSupport \
@ROSE_USE_LLVM_TRUE@	-lLLVMSystem

# adding all libraries for now

# Python API support
@ROSE_USE_PYTHON_DEV_TRUE@ROSE_PYTHON_INCLUDES = @PYTHON_CPPFLAGS@
@ROSE_USE_PYTHON_DEV_TRUE@ROSE_PYTHON_LIBS_WITH_PATH = @PYTHON_LDFLAGS@

# SSL support permits use of MD5 checksums internally for binary library identification.
@ROSE_USE_SSL_SUPPORT_TRUE@ROSE_SSL_LIBS = -lssl -lcrypto

# support for precompiled headers
@ROSE_PCH_TRUE@ROSE_PCH_INCLUDE = -Winvalid-pch -fPIC -DPIC
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_PATH = @IntelPin_path@
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_INCLUDE_PATHS = -I$(INTEL_PIN_PATH)/source/include -I$(INTEL_PIN_PATH)/source/include/gen -I$(INTEL_PIN_PATH)/extras/xed2-intel64/include -I$(INTEL_PIN_PATH)/source/tools/InstLib

# DQ (3/8/2009): These cause rose/src/testSharedRoseLib to fail, I don't know why (fails in system call to map()).
# INTEL_PIN_LIB_PATHS     = -L$(INTEL_PIN_PATH)/intel64/lib -L$(INTEL_PIN_PATH)/extras/xed2-intel64/lib -L$(INTEL_PIN_PATH)/intel64/lib-ext
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_LIB_PATHS = -L$(INTEL_PIN_PATH)/intel64/lib -L$(INTEL_PIN_PATH)/extras/xed2-intel64/lib

# Do we want to handle this differently when Dwarf is used optionally with ROSE.
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_LIBS = -lpin -lxed -ldwarf -lelf -ldl
#if ROSE_HAVE_LIBDWARF
#  INTEL_PIN_LIBS          = -lpin -lxed -lelf -ldl
#else
#  INTEL_PIN_LIBS          = -lpin -lxed -ldwarf -lelf -ldl
#endif
@ROSE_USE_ETHER_TRUE@ROSE_ETHER_INCLUDE = -I$(ETHER_PREFIX)/include
@ROSE_USE_ETHER_TRUE@ROSE_ETHER_LIBS = -L$(ETHER_PREFIX)/lib -lxenctrl
@ROSE_WITH_ATERM_TRUE@ROSE_ATERM_INCLUDE = -I$(ATERM_LIBRARY_PATH)/../include
@ROSE_WITH_ATERM_TRUE@ROSE_ATERM_LIBS = -L$(ATERM_LIBRARY_PATH) -lATerm

# Added support for Fortran front-end development using the flang (F18) compiler [Rasmussen 8/12/2019]
@ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION_TRUE@ROSE_FLANG_INCLUDES = -I$(FLANG_INSTALL_PATH)/include
@ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION_TRUE@ROSE_FLANG_LIBS = -L$(FLANG_INSTALL_PATH)/lib -lLLVMDemangle -lLLVMSupport -lLLVMFrontendOpenMP -lFortranParser -lFortranSemantics -lFortranEvaluate -lFortranCommon -lFortranDecimal -lFortranLower -lncurses

# DQ (5/9/2017): Adding Ada library support.
# ROSE_ADA_INCLUDES = -I$(ada_path)/include_xxx
@ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION_TRUE@ROSE_ADA_INCLUDES = -I$(ada_path)/include_xxx
@ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION_TRUE@ROSE_ADA_LIBS = -ldot_asis
@ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION_TRUE@ROSE_ADA_LIBS_WITH_PATH = $(DOT_ASIS_LIB_DIR_)/libdot_asis.so

# RASMUSSEN (10/24/2017): Adding the GnuCOBOL parse-tree library support.
@ROSE_EXPERIMENTAL_COBOL_ROSE_CONNECTION_TRUE@ROSE_COBOL_PT_LIBS_WITH_PATH = -L$(COBPT_LIBRARY_PATH) -lcob -lcobpt
@ROSE_USE_EDG_QUAD_FLOAT_TRUE@ROSE_QUAD_FLOAT_MATH = -lquadmath

# DQ (1/9/2010): Added use of libimf with libm (the two go together when using Intel icc and icpc)
#  ROSE_INTEL_COMPILER_MATH_LIBS = -limf -lm
# DQ (11/16/2017): We need to link in these Intel specific required libraries to avoid: error hidden symbol `__intel_cpu_features_init_x'
# ROSE_INTEL_COMPILER_MATH_LIBS =
#    ROSE_INTEL_COMPILER_MATH_LIBS += -limf
@USING_INTEL_COMPILER_TRUE@ROSE_INTEL_COMPILER_MATH_LIBS = -limf \
@USING_INTEL_COMPILER_TRUE@	-lirng -lintlc -lsvml -lm
# ROSE_INCLUDES =
#     $(ROSE_BOOST_PREINCLUDE_PATH)
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@ROSE_INCLUDES_WITHOUT_BOOST_ISYSTEM_PATH = \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_builddir)/src/roseSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_builddir)/src/frontend/SageIII \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astFixup \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astPostProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astMerge \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astVisualization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astFileIO \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/sageInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/virtualCFG \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astTokenStream \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astHiddenTypeAndDeclarationLists \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_builddir)/src/frontend/SageIII/astFileIO \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astFromString \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/includeDirectivesProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/sage_support \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/OpenFortranParser_SAGE_Connection \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/ECJ_ROSE_Connection \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I"$(JAVA_HOME)/include" \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/PHPFrontend \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_CLANG_FRONTEND_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/PythonFrontend \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/BinaryFormats \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/BinaryLoader \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/Disassemblers \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_CLANG_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/formatSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/languageIndependenceSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/CxxCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/JavaCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/FortranCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/PHPCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/PythonCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/X10CodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/AdaCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/JovialCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/asmUnparser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/support \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/graphs  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/stringSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/commandlineProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/abstractHandle \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/abstractMemoryObject \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/abstractLayer \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astDiagnostics \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/astInlining \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/astOutlining  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/transformationTracking \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astMatching \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astQuery \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astRewriteMechanism \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/annotation \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/astInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/astSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/symbolicVal \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/BinaryAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/BinaryAnalysis/dataflowanalyses \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/BinaryAnalysis/instructionSemantics \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/computation \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/depGraph \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/depInfo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/driver \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/outsideInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/prepostTransformation \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/ompLowering \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/extractFunctionArgumentsNormalization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/singleStatementToBlockNormalization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/arithmeticIntensity \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/annotationLanguageParser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/CFG \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/staticSingleAssignment \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/ssaUnfilteredCfg \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/systemDependenceGraph \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/systemDependenceGraph \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/CallGraphAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/OAWrap \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/bitvectorDataflow \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/VirtualFunctionAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/defUseAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/distributedMemoryAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/dominanceAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/pointerAnal \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/staticInterproceduralSlicing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/valuePropagation \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/variableRenaming \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_SIDEEFFECTS_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_DATABASE_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_GUI_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_QT_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_SQLITE_DATABASE_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@			$(ROSE_SIDEEFFECT_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(SQLITE_DATABASE_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/partialRedundancyElimination \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/finiteDifferencing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/functionCallNormalization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/constantFolding \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/implicitCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/roseSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/3rdPartyLibraries/MSTL \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/3rdPartyLibraries/libharu-2.1.0/include \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_builddir)/src/3rdPartyLibraries/libharu-2.1.0/include \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Framework \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Widgets  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/graphs \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/astInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/libltdl \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/roseExtensions/failSafe \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_PHP_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_PYTHON_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_YICES_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_Z3_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_YAML_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_LIBPQXX_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_CAPSTONE_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_READLINE_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_LIBMAGIC_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_DLIB_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_GCRYPT_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_ELF_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_DWARF_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_WINE_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(VALGRIND_CFLAGS) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(SQLITE3_CFLAGS) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_BOOST_NORMAL_INCLUDE_PATH) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_PCH_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(INTEL_PIN_INCLUDE_PATHS) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_ETHER_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_ATERM_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_FLANG_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_CSHARP_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_ADA_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_JOVIAL_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_COBOL_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(BOOST_CPPFLAGS)


# DQ (4/13/2016): Is there were we put the support to include -lstdc++.so on the link line directly?

# DQ (3/6/2013): We need to build a SWIG path that can't include the isystem option.
# Note use of "-isystem" option in ROSE_BOOST_PREINCLUDE_PATH to have the
# boost specified on the configure
# command-line be used instead of the OS version of boost that is sometimes
# installed with Linux (it is always a version too old to be used with ROSE).
# This is used only when the ROSE configuration detects a previously installed
# version of Boost (e.g /usr/include/boost) that we don't want to use.
# ROSE_INCLUDES =
#    $(ROSE_BOOST_PREINCLUDE_PATH)
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@ROSE_INCLUDES_WITHOUT_BOOST_ISYSTEM_PATH = \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_builddir)/src/roseSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_builddir)/src/frontend/SageIII \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/astFixup \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/astPostProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/astVisualization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/sageInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/includeDirectivesProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/sage_support \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/OpenFortranParser_SAGE_Connection \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/ECJ_ROSE_Connection \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I"$(JAVA_HOME)/include" \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/BinaryFormats \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/BinaryLoader \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/Disassemblers \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/formatSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/languageIndependenceSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/CxxCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/JavaCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/FortranCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/PHPCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/PythonCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/X10CodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/AdaCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/JovialCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/asmUnparser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/support \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/graphs  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/stringSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/commandlineProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/astDiagnostics \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/astProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/astMatching \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/astQuery \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/BinaryAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/programAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/roseSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/3rdPartyLibraries/MSTL \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/graphs \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/roseExtensions/failSafe \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     $(ROSE_ATERM_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     $(ROSE_FLANG_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     $(ROSE_BOOST_NORMAL_INCLUDE_PATH)


# DQ (10/23/2015): These paths have been replaces with the following variables.
# These variable are empty for now (reflecting the default usage, and need to
# be set properly where ever Clang support is processed as a configure option.
#    -I$(top_srcdir)/src/frontend/CxxFrontend/ClangFrontend
#    -I$(top_srcdir)/src/frontend/CxxFrontend/Clang
#    $(ROSE_CLANG_FRONTEND_INCLUDE)
#    $(ROSE_CLANG_INCLUDE)
SWIG_ROSE_INCLUDES = $(ROSE_INCLUDES_WITHOUT_BOOST_ISYSTEM_PATH)
ROSE_INCLUDES = $(ROSE_BOOST_PREINCLUDE_PATH) $(ROSE_INCLUDES_WITHOUT_BOOST_ISYSTEM_PATH)

# DQ (8/15/2010): I have removed these directories from the include paths since it no longer exists.
# I expect that the directories were removed and the include list not properly cleaned up.
# -I$(top_srcdir)/src/midend/binaryAnalyses/graph
# -I$(top_srcdir)/src/midend/programTransformation/runtimeTransformation
# -I$(top_srcdir)/projects/dataBase

# DQ (12/22/2008): Move Boost directory to front and used "-isystem" option so
# that a system with a previous (older) installation of boost does not interfer
# with the use of ROSE (and the version of boost specified using "--with-boost").
# $(BOOST_CPPFLAGS)

# DQ (10/28/2008): I think these should be included, I don't know why they
# were removed (used with Microsoft Windows tests, and Yices tests).
# DQ: Not used currently
#     $(ROSE_WINE_INCLUDES)

# DQ (5/3/2007): Removed from ROSE
#     -I$(top_srcdir)/src/midend/programAnalysis/dominatorTreesAndDominanceFrontiers
#     -I$(top_srcdir)/src/midend/programAnalysis/staticProgramSlicing

# DQ (10/22/2004): Removed when I could not get annotation work to compile properly with make distcheck rule
#     -I$(top_srcdir)/src/midend/programAnalysis/annotationLanguageParser

# New way using two libraries
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.a $(top_builddir)/src/libedg.a
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.so $(top_builddir)/src/libedg.so
# ROSE_LIBS_WITH_PATH = $(libdir)/librose.so $(libdir)/libedg.so
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.la
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.la $(JAVA_JVM_LIB)
# JJW 7/25/2008: This should probably just be the same as ROSE_LIBS
ROSE_LIBS_WITH_PATH = $(ROSE_LIBS)

# ROSE_LIBS = $(top_builddir)/src/librose.la -lm $(LEXLIB) $(SQLITE_DATABASE_LIBS) $(LIB_QT) $(WAVE_LDFLAGS) $(WAVE_LIBRARIES) $(WAVE_LIBS) $(JAVA_JVM_LIB) $(RT_LIBS)

# MS 10/19/2015: added ROSE_BOOST_LIBS variable to share exact same
# boost libs list in ROSE an in the ROSTTA Makefiles.
ROSE_BOOST_LIBS = $(BOOST_LDFLAGS) $(BOOST_DATE_TIME_LIB) $(BOOST_CHRONO_LIB) \
  $(BOOST_THREAD_LIB) $(BOOST_FILESYSTEM_LIB) $(BOOST_PROGRAM_OPTIONS_LIB) \
  $(BOOST_RANDOM_LIB) $(BOOST_REGEX_LIB)  $(BOOST_SYSTEM_LIB) $(BOOST_SERIALIZATION_LIB)  \
  $(BOOST_WAVE_LIB) $(BOOST_IOSTREAMS_LIB) $(BOOST_PYTHON_LIB)

ROSE_LIBS = $(abspath $(top_builddir)/src/librose.la) -lm \
	$(JAVA_JVM_LINK) $(SQLITE_DATABASE_LIBS) $(QT_LIBS) \
	$(ROSE_BOOST_LIBS) $(SQLITE3_LDFLAGS) $(RT_LIBS) \
	$(ROSE_YICES_LIBS_WITH_PATH) $(ROSE_Z3_LIBS_WITH_PATH) \
	$(ROSE_PHP_LIBS_WITH_PATH) $(ROSE_DWARF_LIBS_WITH_PATH) \
	$(ROSE_ELF_LIBS_WITH_PATH) $(ROSE_GUI_LIBS_WITH_PATH) \
	$(ROSE_QT_LIBS_WITH_PATH) $(ROSE_SSL_LIBS) $(ROSE_ETHER_LIBS) \
	$(ROSE_INTEL_COMPILER_MATH_LIBS) $(ROSE_ATERM_LIBS) \
	$(ROSE_FLANG_LIBS) $(ROSE_YAML_LIBS_WITH_PATH) \
	$(ROSE_LIBMAGIC_LIBS_WITH_PATH) \
	$(ROSE_READLINE_LIBS_WITH_PATH) $(ROSE_DLIB_LIBS_WITH_PATH) \
	$(ROSE_GCRYPT_LIBS_WITH_PATH) $(ROSE_LIBPQXX_LIBS_WITH_PATH) \
	$(ROSE_ADA_LIBS_WITH_PATH) $(ROSE_COBOL_PT_LIBS_WITH_PATH) \
	$(ROSE_PYTHON_LIBS_WITH_PATH) $(ROSE_QUAD_FLOAT_MATH) \
	$(ROSE_CAPSTONE_LIBS_WITH_PATH) $(am__append_1)

#========================================================================================================================
# These are the "-R directory" switches that need to be passed to libtool running in link mode to make sure that ROSE
# executables have rpath properties that point to the directories containing the libraries we're using. Do not add
# system directories (or at least not at the front of this list) because that will cause the system-installed version of
# a library to be used rather than some user-specific version.
#
# Here's the motivation for using rpath instead of LD_LIBRARY_PATH: Consider what happens if some ROSE tool, call it
# myTranslator, is compiled and linked against a custom, user-installed version of libz.so (perhaps because myTranslator
# is using a custom version of some graphics library, like libgraphicsmagick.so, that needs a newer libz.so than what's
# installed on the system).  If I then set LD_LIBRARY_PATH to point to the directory with my libz.so I'll be able to run
# myTranslator, however I probably won't be able any system installed tool that uses libz.so. This includes not being
# able to run /usr/bin/as, which might be called indirectly when myTranslator invokes the backend compiler (because
# LD_LIBRARY_PATH overrides the rpath built into /usr/bin/as).  Run-time linking with the wrong dynamic library at best
# produces an error message from the linker, but more often just results in a fault of some sort.
#
# How does rpath fix this problem? It encodes into each executable the list of directories that should be searched when
# the executable is run, similar to LD_LIBRARY_PATH but on a per-executable basis.
#
# The filter-out is removing specific libraries (-lwhatever), the GCC's POSIX thread switch (-pthread), static libraries
# (whatever.a), and various system directories that might have the wrong library versions and which are searched
# automatically anyway. The outer patsubst is changing "-Ldirectory" to just "directory", and the addprefix is changing
# each directory to "-R directory" which is libtool's switch for adding an rpath to an executable.
#
# The inner-most patsubst needs more explanation: Although most low-level libraries like libz, libpng, etc. are normally
# installed in well-known system-wide locations (like /usr/lib), when testing ROSE in matrix testing using RMC, these
# libraries are often compiled and installed locally in such ways that they're not binary compatible with the
# system-installed versions. However, ROSE doesn't have configuration or cmake options for all these libraries because
# there could eventually be far too many. Therefore, we use the fact that RMC has already chosen the correct library
# directories and added their names to various environment variables. The lines of the form
#     $(subst :, ,# $(whatever_LIBDIRS))
# split the named environment variable into individual directory names.  If there's a ROSE configure option to specify
# the library location, then DO NOT list an environment variable here--use the directory from configure instead (which
# goes into ROSE_LIBS above).
ROSE_RPATHS = \
          $(patsubst -L%,-R %,                                                          \
            $(filter-out -L/lib% -L/usr/lib% -L/usr/local/lib% -L/var/lib%,             \
              $(filter -L%,                                                             \
                $(ROSE_LIBS)                                                            \
                $(subst :, , $(GNU_COMPILERS_LIBDIRS))                                  \
                $(subst :, , $(LIBBZ2_LIBDIRS))                                         \
                $(subst :, , $(LIBGRAPHICSMAGICK_LIBDIRS))                              \
                $(subst :, , $(LIBJPEG_LIBDIRS))                                        \
                $(subst :, , $(LIBLCMS_LIBDIRS))                                        \
                $(subst :, , $(LIBLZMA_LIBDIRS))                                        \
                $(subst :, , $(LIBPNG_LIBDIRS))                                         \
                $(subst :, , $(LIBTIFF_LIBDIRS))                                        \
                $(subst :, , $(PYTHON_LIBDIRS))                                         \
                $(subst :, , $(SPOT_LIBDIRS))                                           \
                $(subst :, , $(ZLIB_LIBDIRS))                                           \
                $(subst :, , $(INTEL_COMPILER_RPATHS))                                  \
              )                                                                         \
            )                                                                           \
          )

@OS_MACOSX_FALSE@ROSE_LINK_RPATHS = $(addprefix -Wl$(comma)-rpath , $(filter-out -R , $(ROSE_RPATHS)))

# Rasmussen (3/23/2018): Added ROSE_LINK_RPATHS to enable linking on Mac OSX with ROSE installation
@OS_MACOSX_TRUE@ROSE_LINK_RPATHS = $(addprefix -Xlinker -rpath -Xlinker , $(filter-out -R , $(ROSE_RPATHS)))
@OS_MACOSX_FALSE@comma = ,
INTEL_COMPILER_RPATHS = $(shell $(top_srcdir)/scripts/intel-compiler-rpaths.sh)

# DQ (3/8/2009): This fails when I try to include it (fails in rose/src/testSharedRoseLib).
#  $(INTEL_PIN_LIB_PATHS) $(INTEL_PIN_LIBS)

# DQ (3/14/2009): It is cleaner to just required that Intel Pin support require setting
# the LD_LIBRARYPATH to include: $(INTEL_PIN_PATH)/intel64/lib-ext

# This ROSE_SEPARATE_LIBS is used for the linking of preprocessor.C used within
# development. The use of the seperate libraries make the linking faster where the
# main librose library is not built.  Libtool may have changed this so that we could
# just link to librose now just as easily, but one has to rebuild librose each time
# instead of just the individual shared library.
# JJW 7/25/2008: This should probably just be the same as ROSE_LIBS
ROSE_SEPARATE_LIBS = $(ROSE_LIBS)

# QY (11/2/04): removed -lastoutlining from ROSE_SEPARATE_LIBS

# DQ (10/22/2004): Removed when I could not get annotation work to compile properly
# with make distcheck rule
# -lannotationLanguageParser(appears after -lvaluePropagation)

# Test harness variables. See "rth_run.pl --help" for more info.  The RTH_RUN_FLAGS is meant to be set on the
# "make" command-line, but the default depends on the value of the verbosity $(V) flag.
RTH_RUN_FLAGS_V_ = 
RTH_RUN_FLAGS_V_0 = 
RTH_RUN_FLAGS_V_1 = --immediate-output
RTH_RUN_FLAGS = $(RTH_RUN_FLAGS_V_$(V))

# Default timeout that you can override on the "make" commandline. Valid values
# are integers followed by "s" (seconds), "m" (minutes), "h" (hours), or the
# word "never".  See scripts/rth_run.pl for detailed documentation.
RTH_TIMEOUT = 15m
RTH_RUN = $(top_srcdir)/scripts/rth_run.pl $(RTH_RUN_FLAGS) \
	srcdir=$(abspath $(srcdir)) top_srcdir=$(abspath $(top_srcdir)) \
	blddir=$$(pwd) top_blddir=$(abspath $(top_builddir)) \
	VALGRIND=$(VALGRIND) TIMEOUT=$(RTH_TIMEOUT)

RTH_STATS = $(top_srcdir)/scripts/rth_stats.pl

# Add Projects that are associated with capabilities that belong to ROSE here
SUBDIRS = outliner intelPin $(am__append_2) $(am__append_5)
AM_CPPFLAGS = $(ROSE_INCLUDES)
AM_LDFLAGS = $(ROSE_RPATHS)

# all: exampleMakefile
ROSE_FLAGS = --edg:no_warnings -w
noinst_HEADERS = \
   coverage_funcsC.h \
   inputCode_collectComments.h


#varSubstCopy , disabled this one Liao, and sorted the list
# tutorial examples which will not be installed to ROSE_INS/bin
NOINST_TUTORIAL_EXAMPLES = \
   abstractHandle1 \
   abstractHandle2 \
   accumulatorAttributeTraversal \
   addAssignmentStmt \
   addComments \
   addArbitraryTextForUnparser \
   addExpression \
   addFunctionCalls \
   addFunctionDeclaration \
   addFunctionDeclaration2 \
   addFunctionDeclaration3 \
   addStruct \
   addVariableDeclaration \
   addVariableDeclaration2 \
   AST_PDF_Generator \
   astFileIO_GenerateBinaryFile \
   astFileIO_ReadMultipleASTs \
   ASTGraphGenerator \
   ASTGraphGeneratorCustomized \
   bin_example \
   binaryFileRead \
   binaryFileWrite \
   buildFile \
   buildCFG \
   buildVFA \
   changeFunction \
   charmSupport \
   classHierarchyGraph \
   classicObjectOrientedVisitorPatternMemoryPoolTraversal \
   classicObjectOrientedVisitorPatternTraversal \
   codeCoverage \
   codeGenerationFormatControl \
   collectComments \
   collectDefineDirectives \
   combinedTraversals \
   commandlineProcessing \
   constantFoldingTransformation \
   constantUnFoldingTransformation \
   customGraphGeneration \
   customGraphGenerationWithColors \
   customGraphGenerationWithFiltering \
   dataBaseUsage \
   dataFlowGraph \
   debuggingIRnodeToString \
   debuggingSourceCodePositionInformation \
   dwarfAnalysis \
   dwarfInstructionAddressToSourceLineAnalysis \
   findVariableDeclarations \
   generatingUniqueNamesFromDeclaration \
   graphGenerationOfSubtree \
   graphTraversal \
   identityTranslator \
   inheritedAndSynthesizedAttributeTraversal \
   inheritedAttributeTraversal \
   inlineTransformations \
   instrumentEndOfFunction \
   interveneAtVariables \
   lineReplacement \
   loopNestingInfoProcessing \
   loopOptimization \
   loopRecognition \
   nestedQueryExample \
   nestedTraversal \
   partialRedundancyElimination \
   persistantAttributes \
   prePostTraversal \
   queryLibraryExample \
   reductionRecognition \
   resolveOverloadedFunction \
   seedBugsExample_arrayIndexing \
   scopeInformation \
   selectedFileTranslation \
   sprintf_to_snprintf  \
   switchWithoutDefault \
   symbolTableHandling \
   synthesizedAttributeTraversal \
   tauInstrumenter \
   templateParameter \
   traversalShortCircuit \
   traverseIRnodeTypes \
   typeInfoFromFunctionParameters \
   typeTransformation \
   virtualFunctionIdentification \
   visitorMemoryPoolTraversal \
   visitorTraversal \
   volatileTypeModifier \
   wholeASTGraphGenerator \
   wholeGraphAST \
   wholeGraphFilterOnPersistantAttributes

@ROSE_BUILD_OS_IS_CYGWIN_FALSE@sharedMemoryTraversals_SOURCES = sharedMemoryTraversals.C

#traverseSourceCFG_SOURCES = traverseSourceCFG.C

#traverseBinCFG_SOURCES = traverseBinCFG.C
binaryFileRead_SOURCES = binaryFileRead.C
binaryFileWrite_SOURCES = binaryFileWrite.C
binaryCallGraph_SOURCES = binaryCallGraph.C
binaryFunctionCfg_SOURCES = binaryFunctionCfg.C
binaryHelloWorld_SOURCES = binaryHelloWorld.C
binaryStrings_SOURCES = binaryStrings.C
binaryAttribute_SOURCES = binaryAttribute.C
binaryDominance_SOURCES = binaryDominance.C
ASTGraphGenerator_SOURCES = ASTGraphGenerator.C
ASTGraphGeneratorCustomized_SOURCES = ASTGraphGeneratorCustomized.C
AST_PDF_Generator_SOURCES = AST_PDF_Generator.C
wholeASTGraphGenerator_SOURCES = wholeASTGraphGenerator.C
identityTranslator_SOURCES = identityTranslator.C
@ROSE_HAVE_YICES_TRUE@yicesTutorialExample_SOURCES = yicesTutorialExample.C
lineReplacement_SOURCES = lineReplacement.C
queryLibraryExample_SOURCES = queryLibraryExample.C
nestedQueryExample_SOURCES = nestedQueryExample.C

# need to call this something different since it is likely
# to be easily confused with the visitorPatternTraversal.C
visitorTraversal_SOURCES = visitorTraversal.C
prePostTraversal_SOURCES = prePostTraversal.C
combinedTraversals_SOURCES = combinedTraversals.C
traverseIRnodeTypes_SOURCES = traverseIRnodeTypes.C
classicObjectOrientedVisitorPatternTraversal_SOURCES = classicObjectOrientedVisitorPatternTraversal.C
inheritedAttributeTraversal_SOURCES = inheritedAttributeTraversal.C
synthesizedAttributeTraversal_SOURCES = synthesizedAttributeTraversal.C
inheritedAndSynthesizedAttributeTraversal_SOURCES = inheritedAndSynthesizedAttributeTraversal.C
accumulatorAttributeTraversal_SOURCES = accumulatorAttributeTraversal.C
persistantAttributes_SOURCES = persistantAttributes.C
nestedTraversal_SOURCES = nestedTraversal.C
visitorMemoryPoolTraversal_SOURCES = visitorMemoryPoolTraversal.C
classicObjectOrientedVisitorPatternMemoryPoolTraversal_SOURCES = classicObjectOrientedVisitorPatternMemoryPoolTraversal.C
loopRecognition_SOURCES = loopRecognition.C
typeInfoFromFunctionParameters_SOURCES = typeInfoFromFunctionParameters.C
resolveOverloadedFunction_SOURCES = resolveOverloadedFunction.C
templateParameter_SOURCES = templateParameter.C
instrumentEndOfFunction_SOURCES = instrumentEndOfFunction.C
reductionRecognition_SOURCES = reductionRecognition.C

#instrumentationExample_SOURCES = instrumentationExample.C
abstractHandle1_SOURCES = abstractHandle1.cpp
abstractHandle2_SOURCES = abstractHandle2.cpp
addVariableDeclaration_SOURCES = addVariableDeclaration.C
addVariableDeclaration2_SOURCES = addVariableDeclaration2.C
addAssignmentStmt_SOURCES = addAssignmentStmt.C
addExpression_SOURCES = addExpression.C
addFunctionCalls_SOURCES = addFunctionCalls.C
addFunctionDeclaration_SOURCES = addFunctionDeclaration.C
addFunctionDeclaration2_SOURCES = addFunctionDeclaration2.C
addFunctionDeclaration3_SOURCES = addFunctionDeclaration3.C
loopOptimization_SOURCES = loopOptimization.C
loopProcessor_SOURCES = LoopProcessor.C
buildCFG_SOURCES = buildCFG.C
buildFile_SOURCES = buildFile.C
defuseAnalysis_SOURCES = defuseAnalysis.C
binaryAnalysis_symbolTable_SOURCES = binaryAnalysis_symbolTable.C
bin_example_SOURCES = bin_example.C
buildCallGraph_SOURCES = buildCallGraph.C
buildVFA_SOURCES = buildVFA.C
livenessAnalysis_SOURCES = livenessAnalysis.C
charmSupport_SOURCES = CharmSupport.C
debuggingIRnodeToString_SOURCES = debuggingIRnodeToString.C
debuggingSourceCodePositionInformation_SOURCES = debuggingSourceCodePositionInformation.C
commandlineProcessing_SOURCES = commandlineProcessing.C
codeCoverage_SOURCES = codeCoverage.C coverageCodeFromShmuel.c
interveneAtVariables_SOURCES = interveneAtVariables.C
changeFunction_SOURCES = changeFunction.C
classHierarchyGraph_SOURCES = classHierarchyGraph.C
dataBaseUsage_SOURCES = dataBaseUsage.C
dwarfAnalysis_SOURCES = dwarfAnalysis.C
dwarfInstructionAddressToSourceLineAnalysis_SOURCES = dwarfInstructionAddressToSourceLineAnalysis.C
loopNestingInfoProcessing_SOURCES = loopNestingInfoProcessing.C
tauInstrumenter_SOURCES = tauInstrumenter.C
typeTransformation_SOURCES = typeTransformation.C
astFileIO_GenerateBinaryFile_SOURCES = astFileIO_GenerateBinaryFile.C
generatingUniqueNamesFromDeclaration_SOURCES = generatingUniqueNamesFromDeclaration.C
symbolTableHandling_SOURCES = symbolTableHandling.C
scopeInformation_SOURCES = scopeInformation.C
customGraphGeneration_SOURCES = customGraphGeneration.C
inlineTransformations_SOURCES = inlineTransformations.C
addComments_SOURCES = addComments.C
addArbitraryTextForUnparser_SOURCES = addArbitraryTextForUnparser.C
collectComments_SOURCES = collectComments.C
collectDefineDirectives_SOURCES = collectDefineDirectives.C
partialRedundancyElimination_SOURCES = partialRedundancyElimination.C
codeGenerationFormatControl_SOURCES = codeGenerationFormatControl.C
dataFlowGraph_SOURCES = dataFlowGraph.C
customGraphGenerationWithFiltering_SOURCES = customGraphGenerationWithFiltering.C
graphTraversal_SOURCES = graphTraversal.C
wholeGraphAST_SOURCES = wholeGraphAST.C
traversalShortCircuit_SOURCES = traversalShortCircuit.C
customGraphGenerationWithColors_SOURCES = customGraphGenerationWithColors.C
astFileIO_ReadMultipleASTs_SOURCES = astFileIO_ReadMultipleASTs.C
constantFoldingTransformation_SOURCES = constantFoldingTransformation.C
constantUnFoldingTransformation_SOURCES = constantUnFoldingTransformation.C
selectedFileTranslation_SOURCES = selectedFileTranslation.C
wholeGraphFilterOnPersistantAttributes_SOURCES = wholeGraphFilterOnPersistantAttributes.C
graphGenerationOfSubtree_SOURCES = graphGenerationOfSubtree.C
virtualCFG_SOURCES = virtualCFG.C
interproceduralCFG_SOURCES = interproceduralCFG.C
virtualFunctionIdentification_SOURCES = virtualFunctionIdentification.C

#varSubstCopy_SOURCES = varSubstCopy.C
switchWithoutDefault_SOURCES = switchWithoutDefault.C
addStruct_SOURCES = addStruct.C
sprintf_to_snprintf_SOURCES = sprintf_to_snprintf.C
seedBugsExample_arrayIndexing_SOURCES = seedBugsExample_arrayIndexing.C
volatileTypeModifier_SOURCES = volatileTypeModifier.C
findVariableDeclarations_SOURCES = findVariableDeclarations.C

# Use this to control use of -lrose -ledg vs. the very long list 
# of separate libraries which is faster to use in development.
LDADD = $(WAVE_LDFLAGS) $(ROSE_SEPARATE_LIBS) 

# #####################################
# Tests for debugging tutorial examples
# #####################################
VALGRIND_OPTIONS = --tool=memcheck -v --num-callers=80 --leak-check=no --error-limit=no --show-reachable=yes
# VALGRIND = /usr/apps/valgrind/new/bin/valgrind $(VALGRIND_OPTIONS)
VALGRIND = 
loopOptimizationOutputFiles = \
   rose_inputCode_LoopOptimization_blocking.C \
   rose_inputCode_LoopOptimization_fusion.C \
   rose_inputCode_LoopOptimization_mm.C \
   rose_inputCode_LoopOptimization_dgemm.C \
   rose_inputCode_LoopOptimization_lufac.C \
   rose_inputCode_LoopOptimization_tridvpk.C

@ROSE_HAVE_YICES_TRUE@yicesTutorialExampleOutputFiles = \
@ROSE_HAVE_YICES_TRUE@    yicesInputExample.C


# TAU_INCLUDES = -I/home/dquinlan/TAU/tau-2.14.8/include
TAU_INCLUDES = -I$(srcdir)/TAU_INCLUDE_DIR

# #####################################
# Output files use in tutorial
# #####################################
traversalOutput = \
   visitorTraversal.out \
   prePostTraversal.out \
   combinedTraversals.out \
   sharedMemoryTraversals.out \
   classicObjectOrientedVisitorPatternTraversal.out \
   inheritedAttributeTraversal.out \
   synthesizedAttributeTraversal.out \
   inheritedAndSynthesizedAttributeTraversal.out \
   accumulatorAttributeTraversal.out \
   persistantAttributes.out \
   visitorMemoryPoolTraversal.out \
   classicObjectOrientedVisitorPatternMemoryPoolTraversal.out \
   traverseIRnodeTypes.out \
   nestedTraversal.out

# .out suffix may cause conflicts with a temporary file used by makefile/libtool
# using a different name is highly recommended!! Liao, 10/15/2008
generatedCodeExamples = rose_inputCode_inlineTransformations.C \
	rose_inputCode_partialRedundancyElimination.C \
	rose_inputCode_tauInstrumenter.C \
	inputCode_ASTGraphGenerator.pdf \
	inputCode_ASTGraphGeneratorCustomized.pdf \
	inputCode_AST_PDF_Generator.pdf \
	inputCode_ASTWholeGraphGenerator_small.pdf \
	inputCode_ASTWholeGraphGenerator_large.pdf \
	rose_inputCode_IdentityTranslator.C queryLibrary.out \
	nestedQuery.out $(traversalOutput) \
	rose_inputCode_AddFunctionDeclaration.C \
	rose_inputCode_AddFunctionDeclaration2.C \
	rose_inputCode_AddFunctionDeclaration3.C \
	rose_inputCode_AddVariableDeclaration.C \
	rose_inputCode_AddAssignmentStmt.C abstractHandle1.outx \
	abstractHandle2.outx rose_inputCode_AddExpression.C \
	rose_inputCode_AddFunctionCalls.C \
	rose_inputCode_instrumentEndOfFunction.C loopRecognition.out \
	reductionRecognition.out typeInfoFromFunctionParameters.out \
	resolveOverloadedFunction.out templateParameter.out \
	rose_inputCode_LoopOptimization_blocking.C \
	rose_inputCode_LoopOptimization_fusion.C \
	rose_inputCode_LoopOptimization_mm.C \
	rose_inputCode_LoopOptimization_dgemm.C \
	rose_inputCode_LoopOptimization_lufac.C \
	rose_inputCode_LoopOptimization_tridvpk.C controlFlowGraph.pdf \
	vcfg_testIf_debug.pdf debuggingIRnodeToString.out \
	debuggingSourceCodePositionInformation.out \
	commandlineProcessing.out charmSupport.out callGraph.pdf \
	vfa.pdf vfa_orig.pdf liveness.pdf classHierarchyGraph.pdf \
	rose_inputCode_templateExample1.C \
	rose_inputCode_templateExample2.C dataBaseExample1.out \
	loopNestingInfoProcessing.out loopProcessor.C.aa \
	loopProcessor.C.ab generatingUniqueNamesFromDeclaration.out \
	generatingUniqueNamesFromDeclaration2.out \
	symbolTableHandling.out scopeInformation.out \
	rose_inputCode_typeTransformation.C \
	astFileIO_GenerateBinaryFile.out customGraph.pdf \
	customGraphWithFiltering.pdf graphTraversal.pdf \
	rose_inputCode_addComments.C \
	rose_inputCode_addArbitraryTextForUnparser.C \
	rose_inputCode_codeGenerationFormatControl.C \
	rose_inputCode_addStruct.C traversalShortCircuit.out \
	wholeGraphAST.pdf collectCommentsSkipHeaderFiles.out \
	collectCommentsAcrossHeaderFiles.out \
	collectDefineDirectives.out defuseAnalysis_pic1.pdf \
	binaryAnalysis_pic3.pdf \
	rose_inputCode_seedBugsExample_arrayIndexing.C \
	rose_inputCode_VolatileTypeModifier.C \
	inputCode_dwarfAnalysis.pdf inputCode_dwarfAnalysis.out \
	rose_inputCode_buildFile.C \
	wholeGraphFilterOnPersistantAttributes.dot $(am__append_8)
#	./wholeGraphFilterOnPersistantAttributes input_wholeGraphFilterOnPersistantAttributes.C

# Note that we have made multiple copies of "inputCode_ExampleTraversals.C"
# so that the processing could be done in parallel with out collisions.
EXTRA_DIST = CMakeLists.txt inputCode_1.C inputCode_BuildCFG.C \
	inputCode_InstrumentationTranslator.C \
	inputCode_instrumentEndOfFunction.C inputCode_buildFile.C \
	inputCode_wholeAST_1.C inputCode_wholeAST_2.C \
	inputCode_QueryLibrary.C inputCode_AddFunctionDeclaration.C \
	inputCode_AddFunctionDeclaration2.C \
	inputCode_AddFunctionDeclaration3.C inputCode_AddExpression.C \
	inputCode_AddAssignmentStmt.C inputCode_AbstractHandle1.cpp \
	inputCode_AbstractHandle2.cpp inputCode_AddFunctionCalls.C \
	inputCode_ExampleDebugging.C inputCode_LoopOptimization.C \
	inputCode_ResolvingOverloadedFunctions.C \
	inputCode_AddVariableDeclaration.C \
	inputCode_ExampleTraversals.C inputCode_ExampleTraversals_1.C \
	inputCode_ExampleTraversals_2.C \
	inputCode_ExampleTraversals_3.C \
	inputCode_ExampleTraversals_4.C \
	inputCode_ExampleTraversals_5.C \
	inputCode_ExampleTraversals_6.C \
	inputCode_ExampleTraversals_7.C \
	inputCode_ExampleTraversals_8.C \
	inputCode_ExampleTraversals_9.C \
	inputCode_ExampleTraversals_10.C \
	inputCode_ExampleTraversals_11.C \
	inputCode_ExampleTraversals_12.C \
	inputCode_ExampleTraversals_13.C \
	inputCode_ExampleTraversals_14.C \
	inputCode_ExampleTraversals_15.C \
	inputCode_ExampleTraversals_16.C \
	inputCode_ExampleTraversals_17.C \
	inputCode_ExampleTraversals_18.C \
	inputCode_LoopOptimization_blocking.C \
	inputCode_LoopOptimization_fusion.C \
	inputCode_LoopOptimization_mm.C \
	inputCode_LoopOptimization_dgemm.C \
	inputCode_LoopOptimization_lufac.C \
	inputCode_LoopOptimization_tridvpk.C \
	inputCode_TemplateParameterExtration.C \
	inputCode_ASTGraphGenerator.C \
	inputCode_ASTGraphGeneratorCustomized.C \
	inputCode_IdentityTranslator.C inputCode_LoopRecognition.C \
	inputCode_TypeInfoFromFunctionParameters.C \
	inputCode_ExampleCodeCoverage.C exampleMakefile.in \
	slicingExample.C inputCode_ExampleCharmSupport.C \
	inputCode_templateExample1.C inputCode_templateExample2.C \
	inputCode_dataBaseExample1.C \
	inputCode_loopNestingInfoProcessing.C \
	inputCode_ChangeFunctionExample.C \
	inputCode_interveneAtVariables.C inputCode_tauInstrumenter.C \
	inputCode_typeTransformation.C \
	inputCode_astFileIO_GenerateBinaryFile.C \
	inputCode_generatingUniqueNamesFromDeclaration.C \
	inputCode_generatingUniqueNamesFromDeclaration2.C \
	inputCode_scopeInformation.C inputCode_BuildCG.C \
	inputCode_VFA.C inputCode_inlineTransformations.C \
	inputCode_livenessAnalysis.c inputCode_NestedQuery.C \
	inputCode_ControlFlowGraphAnalysis.C inputCode_addComments.C \
	inputCode_addArbitraryTextForUnparser.C \
	inputCode_partialRedundancyElimination.C \
	inputCode_codeGenerationFormatControl.C \
	inputCode_dataFlowGraphAnalysis.C inputCode_wholeGraphAST.C \
	inputCode_testsymbolTableHandling.C \
	inputCode_traversalShortCircuit.C inputCode_collectComments.C \
	inputCode_ClassHierarchyGraph.C \
	inputCode_VolatileTypeModifier.C input_defuseAnalysis.C \
	input_runtimeErrorCheck.C input_runtimeErrorCheck2.C \
	attributeCopyExamples.C TAU_INCLUDE_DIR inputCode_addStruct.C \
	rose_bin_example_backup.s buffer2.bin \
	inputCode_seedBugsExample_arrayIndexing.C \
	inputCode_dwarfAnalysis.C inputCode_reductionRecognition.C \
	livenessAnalysis-2.C bt_onefile.c dfa_cpa.pdf dfa_ex.pdf \
	transformation_cfg.pdf transformation_srcode.pdf \
	lattice_cpa.pdf code_replacement_transformation.pdf \
	$(am__append_9)

# disabled this one due to problem with copy mechanism, Liao
#   inputCode_varSubstCopy.C 
CLEANFILES = rose_bin_example.s rose_bin_example.s.* callgraph.gml
all: all-recursive

.SUFFIXES:
.SUFFIXES: .C .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign --ignore-deps tutorial/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign --ignore-deps tutorial/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
exampleMakefile: $(top_builddir)/config.status $(srcdir)/exampleMakefile.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

ASTGraphGenerator$(EXEEXT): $(ASTGraphGenerator_OBJECTS) $(ASTGraphGenerator_DEPENDENCIES) $(EXTRA_ASTGraphGenerator_DEPENDENCIES) 
	@rm -f ASTGraphGenerator$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(ASTGraphGenerator_OBJECTS) $(ASTGraphGenerator_LDADD) $(LIBS)

ASTGraphGeneratorCustomized$(EXEEXT): $(ASTGraphGeneratorCustomized_OBJECTS) $(ASTGraphGeneratorCustomized_DEPENDENCIES) $(EXTRA_ASTGraphGeneratorCustomized_DEPENDENCIES) 
	@rm -f ASTGraphGeneratorCustomized$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(ASTGraphGeneratorCustomized_OBJECTS) $(ASTGraphGeneratorCustomized_LDADD) $(LIBS)

AST_PDF_Generator$(EXEEXT): $(AST_PDF_Generator_OBJECTS) $(AST_PDF_Generator_DEPENDENCIES) $(EXTRA_AST_PDF_Generator_DEPENDENCIES) 
	@rm -f AST_PDF_Generator$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(AST_PDF_Generator_OBJECTS) $(AST_PDF_Generator_LDADD) $(LIBS)

abstractHandle1$(EXEEXT): $(abstractHandle1_OBJECTS) $(abstractHandle1_DEPENDENCIES) $(EXTRA_abstractHandle1_DEPENDENCIES) 
	@rm -f abstractHandle1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(abstractHandle1_OBJECTS) $(abstractHandle1_LDADD) $(LIBS)

abstractHandle2$(EXEEXT): $(abstractHandle2_OBJECTS) $(abstractHandle2_DEPENDENCIES) $(EXTRA_abstractHandle2_DEPENDENCIES) 
	@rm -f abstractHandle2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(abstractHandle2_OBJECTS) $(abstractHandle2_LDADD) $(LIBS)

accumulatorAttributeTraversal$(EXEEXT): $(accumulatorAttributeTraversal_OBJECTS) $(accumulatorAttributeTraversal_DEPENDENCIES) $(EXTRA_accumulatorAttributeTraversal_DEPENDENCIES) 
	@rm -f accumulatorAttributeTraversal$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(accumulatorAttributeTraversal_OBJECTS) $(accumulatorAttributeTraversal_LDADD) $(LIBS)

addArbitraryTextForUnparser$(EXEEXT): $(addArbitraryTextForUnparser_OBJECTS) $(addArbitraryTextForUnparser_DEPENDENCIES) $(EXTRA_addArbitraryTextForUnparser_DEPENDENCIES) 
	@rm -f addArbitraryTextForUnparser$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(addArbitraryTextForUnparser_OBJECTS) $(addArbitraryTextForUnparser_LDADD) $(LIBS)

addAssignmentStmt$(EXEEXT): $(addAssignmentStmt_OBJECTS) $(addAssignmentStmt_DEPENDENCIES) $(EXTRA_addAssignmentStmt_DEPENDENCIES) 
	@rm -f addAssignmentStmt$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(addAssignmentStmt_OBJECTS) $(addAssignmentStmt_LDADD) $(LIBS)

addComments$(EXEEXT): $(addComments_OBJECTS) $(addComments_DEPENDENCIES) $(EXTRA_addComments_DEPENDENCIES) 
	@rm -f addComments$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(addComments_OBJECTS) $(addComments_LDADD) $(LIBS)

addExpression$(EXEEXT): $(addExpression_OBJECTS) $(addExpression_DEPENDENCIES) $(EXTRA_addExpression_DEPENDENCIES) 
	@rm -f addExpression$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(addExpression_OBJECTS) $(addExpression_LDADD) $(LIBS)

addFunctionCalls$(EXEEXT): $(addFunctionCalls_OBJECTS) $(addFunctionCalls_DEPENDENCIES) $(EXTRA_addFunctionCalls_DEPENDENCIES) 
	@rm -f addFunctionCalls$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(addFunctionCalls_OBJECTS) $(addFunctionCalls_LDADD) $(LIBS)

addFunctionDeclaration$(EXEEXT): $(addFunctionDeclaration_OBJECTS) $(addFunctionDeclaration_DEPENDENCIES) $(EXTRA_addFunctionDeclaration_DEPENDENCIES) 
	@rm -f addFunctionDeclaration$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(addFunctionDeclaration_OBJECTS) $(addFunctionDeclaration_LDADD) $(LIBS)

addFunctionDeclaration2$(EXEEXT): $(addFunctionDeclaration2_OBJECTS) $(addFunctionDeclaration2_DEPENDENCIES) $(EXTRA_addFunctionDeclaration2_DEPENDENCIES) 
	@rm -f addFunctionDeclaration2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(addFunctionDeclaration2_OBJECTS) $(addFunctionDeclaration2_LDADD) $(LIBS)

addFunctionDeclaration3$(EXEEXT): $(addFunctionDeclaration3_OBJECTS) $(addFunctionDeclaration3_DEPENDENCIES) $(EXTRA_addFunctionDeclaration3_DEPENDENCIES) 
	@rm -f addFunctionDeclaration3$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(addFunctionDeclaration3_OBJECTS) $(addFunctionDeclaration3_LDADD) $(LIBS)

addStruct$(EXEEXT): $(addStruct_OBJECTS) $(addStruct_DEPENDENCIES) $(EXTRA_addStruct_DEPENDENCIES) 
	@rm -f addStruct$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(addStruct_OBJECTS) $(addStruct_LDADD) $(LIBS)

addVariableDeclaration$(EXEEXT): $(addVariableDeclaration_OBJECTS) $(addVariableDeclaration_DEPENDENCIES) $(EXTRA_addVariableDeclaration_DEPENDENCIES) 
	@rm -f addVariableDeclaration$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(addVariableDeclaration_OBJECTS) $(addVariableDeclaration_LDADD) $(LIBS)

addVariableDeclaration2$(EXEEXT): $(addVariableDeclaration2_OBJECTS) $(addVariableDeclaration2_DEPENDENCIES) $(EXTRA_addVariableDeclaration2_DEPENDENCIES) 
	@rm -f addVariableDeclaration2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(addVariableDeclaration2_OBJECTS) $(addVariableDeclaration2_LDADD) $(LIBS)

astFileIO_GenerateBinaryFile$(EXEEXT): $(astFileIO_GenerateBinaryFile_OBJECTS) $(astFileIO_GenerateBinaryFile_DEPENDENCIES) $(EXTRA_astFileIO_GenerateBinaryFile_DEPENDENCIES) 
	@rm -f astFileIO_GenerateBinaryFile$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(astFileIO_GenerateBinaryFile_OBJECTS) $(astFileIO_GenerateBinaryFile_LDADD) $(LIBS)

astFileIO_ReadMultipleASTs$(EXEEXT): $(astFileIO_ReadMultipleASTs_OBJECTS) $(astFileIO_ReadMultipleASTs_DEPENDENCIES) $(EXTRA_astFileIO_ReadMultipleASTs_DEPENDENCIES) 
	@rm -f astFileIO_ReadMultipleASTs$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(astFileIO_ReadMultipleASTs_OBJECTS) $(astFileIO_ReadMultipleASTs_LDADD) $(LIBS)

bin_example$(EXEEXT): $(bin_example_OBJECTS) $(bin_example_DEPENDENCIES) $(EXTRA_bin_example_DEPENDENCIES) 
	@rm -f bin_example$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bin_example_OBJECTS) $(bin_example_LDADD) $(LIBS)

binaryAnalysis_symbolTable$(EXEEXT): $(binaryAnalysis_symbolTable_OBJECTS) $(binaryAnalysis_symbolTable_DEPENDENCIES) $(EXTRA_binaryAnalysis_symbolTable_DEPENDENCIES) 
	@rm -f binaryAnalysis_symbolTable$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(binaryAnalysis_symbolTable_OBJECTS) $(binaryAnalysis_symbolTable_LDADD) $(LIBS)

binaryAttribute$(EXEEXT): $(binaryAttribute_OBJECTS) $(binaryAttribute_DEPENDENCIES) $(EXTRA_binaryAttribute_DEPENDENCIES) 
	@rm -f binaryAttribute$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(binaryAttribute_OBJECTS) $(binaryAttribute_LDADD) $(LIBS)

binaryCallGraph$(EXEEXT): $(binaryCallGraph_OBJECTS) $(binaryCallGraph_DEPENDENCIES) $(EXTRA_binaryCallGraph_DEPENDENCIES) 
	@rm -f binaryCallGraph$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(binaryCallGraph_OBJECTS) $(binaryCallGraph_LDADD) $(LIBS)

binaryDominance$(EXEEXT): $(binaryDominance_OBJECTS) $(binaryDominance_DEPENDENCIES) $(EXTRA_binaryDominance_DEPENDENCIES) 
	@rm -f binaryDominance$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(binaryDominance_OBJECTS) $(binaryDominance_LDADD) $(LIBS)

binaryFileRead$(EXEEXT): $(binaryFileRead_OBJECTS) $(binaryFileRead_DEPENDENCIES) $(EXTRA_binaryFileRead_DEPENDENCIES) 
	@rm -f binaryFileRead$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(binaryFileRead_OBJECTS) $(binaryFileRead_LDADD) $(LIBS)

binaryFileWrite$(EXEEXT): $(binaryFileWrite_OBJECTS) $(binaryFileWrite_DEPENDENCIES) $(EXTRA_binaryFileWrite_DEPENDENCIES) 
	@rm -f binaryFileWrite$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(binaryFileWrite_OBJECTS) $(binaryFileWrite_LDADD) $(LIBS)

binaryFunctionCfg$(EXEEXT): $(binaryFunctionCfg_OBJECTS) $(binaryFunctionCfg_DEPENDENCIES) $(EXTRA_binaryFunctionCfg_DEPENDENCIES) 
	@rm -f binaryFunctionCfg$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(binaryFunctionCfg_OBJECTS) $(binaryFunctionCfg_LDADD) $(LIBS)

binaryHelloWorld$(EXEEXT): $(binaryHelloWorld_OBJECTS) $(binaryHelloWorld_DEPENDENCIES) $(EXTRA_binaryHelloWorld_DEPENDENCIES) 
	@rm -f binaryHelloWorld$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(binaryHelloWorld_OBJECTS) $(binaryHelloWorld_LDADD) $(LIBS)

binaryStrings$(EXEEXT): $(binaryStrings_OBJECTS) $(binaryStrings_DEPENDENCIES) $(EXTRA_binaryStrings_DEPENDENCIES) 
	@rm -f binaryStrings$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(binaryStrings_OBJECTS) $(binaryStrings_LDADD) $(LIBS)

buildCFG$(EXEEXT): $(buildCFG_OBJECTS) $(buildCFG_DEPENDENCIES) $(EXTRA_buildCFG_DEPENDENCIES) 
	@rm -f buildCFG$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(buildCFG_OBJECTS) $(buildCFG_LDADD) $(LIBS)

buildCallGraph$(EXEEXT): $(buildCallGraph_OBJECTS) $(buildCallGraph_DEPENDENCIES) $(EXTRA_buildCallGraph_DEPENDENCIES) 
	@rm -f buildCallGraph$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(buildCallGraph_OBJECTS) $(buildCallGraph_LDADD) $(LIBS)

buildFile$(EXEEXT): $(buildFile_OBJECTS) $(buildFile_DEPENDENCIES) $(EXTRA_buildFile_DEPENDENCIES) 
	@rm -f buildFile$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(buildFile_OBJECTS) $(buildFile_LDADD) $(LIBS)

buildVFA$(EXEEXT): $(buildVFA_OBJECTS) $(buildVFA_DEPENDENCIES) $(EXTRA_buildVFA_DEPENDENCIES) 
	@rm -f buildVFA$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(buildVFA_OBJECTS) $(buildVFA_LDADD) $(LIBS)

changeFunction$(EXEEXT): $(changeFunction_OBJECTS) $(changeFunction_DEPENDENCIES) $(EXTRA_changeFunction_DEPENDENCIES) 
	@rm -f changeFunction$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(changeFunction_OBJECTS) $(changeFunction_LDADD) $(LIBS)

charmSupport$(EXEEXT): $(charmSupport_OBJECTS) $(charmSupport_DEPENDENCIES) $(EXTRA_charmSupport_DEPENDENCIES) 
	@rm -f charmSupport$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(charmSupport_OBJECTS) $(charmSupport_LDADD) $(LIBS)

classHierarchyGraph$(EXEEXT): $(classHierarchyGraph_OBJECTS) $(classHierarchyGraph_DEPENDENCIES) $(EXTRA_classHierarchyGraph_DEPENDENCIES) 
	@rm -f classHierarchyGraph$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(classHierarchyGraph_OBJECTS) $(classHierarchyGraph_LDADD) $(LIBS)

classicObjectOrientedVisitorPatternMemoryPoolTraversal$(EXEEXT): $(classicObjectOrientedVisitorPatternMemoryPoolTraversal_OBJECTS) $(classicObjectOrientedVisitorPatternMemoryPoolTraversal_DEPENDENCIES) $(EXTRA_classicObjectOrientedVisitorPatternMemoryPoolTraversal_DEPENDENCIES) 
	@rm -f classicObjectOrientedVisitorPatternMemoryPoolTraversal$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(classicObjectOrientedVisitorPatternMemoryPoolTraversal_OBJECTS) $(classicObjectOrientedVisitorPatternMemoryPoolTraversal_LDADD) $(LIBS)

classicObjectOrientedVisitorPatternTraversal$(EXEEXT): $(classicObjectOrientedVisitorPatternTraversal_OBJECTS) $(classicObjectOrientedVisitorPatternTraversal_DEPENDENCIES) $(EXTRA_classicObjectOrientedVisitorPatternTraversal_DEPENDENCIES) 
	@rm -f classicObjectOrientedVisitorPatternTraversal$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(classicObjectOrientedVisitorPatternTraversal_OBJECTS) $(classicObjectOrientedVisitorPatternTraversal_LDADD) $(LIBS)

codeCoverage$(EXEEXT): $(codeCoverage_OBJECTS) $(codeCoverage_DEPENDENCIES) $(EXTRA_codeCoverage_DEPENDENCIES) 
	@rm -f codeCoverage$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(codeCoverage_OBJECTS) $(codeCoverage_LDADD) $(LIBS)

codeGenerationFormatControl$(EXEEXT): $(codeGenerationFormatControl_OBJECTS) $(codeGenerationFormatControl_DEPENDENCIES) $(EXTRA_codeGenerationFormatControl_DEPENDENCIES) 
	@rm -f codeGenerationFormatControl$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(codeGenerationFormatControl_OBJECTS) $(codeGenerationFormatControl_LDADD) $(LIBS)

collectComments$(EXEEXT): $(collectComments_OBJECTS) $(collectComments_DEPENDENCIES) $(EXTRA_collectComments_DEPENDENCIES) 
	@rm -f collectComments$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(collectComments_OBJECTS) $(collectComments_LDADD) $(LIBS)

collectDefineDirectives$(EXEEXT): $(collectDefineDirectives_OBJECTS) $(collectDefineDirectives_DEPENDENCIES) $(EXTRA_collectDefineDirectives_DEPENDENCIES) 
	@rm -f collectDefineDirectives$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(collectDefineDirectives_OBJECTS) $(collectDefineDirectives_LDADD) $(LIBS)

combinedTraversals$(EXEEXT): $(combinedTraversals_OBJECTS) $(combinedTraversals_DEPENDENCIES) $(EXTRA_combinedTraversals_DEPENDENCIES) 
	@rm -f combinedTraversals$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(combinedTraversals_OBJECTS) $(combinedTraversals_LDADD) $(LIBS)

commandlineProcessing$(EXEEXT): $(commandlineProcessing_OBJECTS) $(commandlineProcessing_DEPENDENCIES) $(EXTRA_commandlineProcessing_DEPENDENCIES) 
	@rm -f commandlineProcessing$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(commandlineProcessing_OBJECTS) $(commandlineProcessing_LDADD) $(LIBS)

constantFoldingTransformation$(EXEEXT): $(constantFoldingTransformation_OBJECTS) $(constantFoldingTransformation_DEPENDENCIES) $(EXTRA_constantFoldingTransformation_DEPENDENCIES) 
	@rm -f constantFoldingTransformation$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(constantFoldingTransformation_OBJECTS) $(constantFoldingTransformation_LDADD) $(LIBS)

constantUnFoldingTransformation$(EXEEXT): $(constantUnFoldingTransformation_OBJECTS) $(constantUnFoldingTransformation_DEPENDENCIES) $(EXTRA_constantUnFoldingTransformation_DEPENDENCIES) 
	@rm -f constantUnFoldingTransformation$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(constantUnFoldingTransformation_OBJECTS) $(constantUnFoldingTransformation_LDADD) $(LIBS)

customGraphGeneration$(EXEEXT): $(customGraphGeneration_OBJECTS) $(customGraphGeneration_DEPENDENCIES) $(EXTRA_customGraphGeneration_DEPENDENCIES) 
	@rm -f customGraphGeneration$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(customGraphGeneration_OBJECTS) $(customGraphGeneration_LDADD) $(LIBS)

customGraphGenerationWithColors$(EXEEXT): $(customGraphGenerationWithColors_OBJECTS) $(customGraphGenerationWithColors_DEPENDENCIES) $(EXTRA_customGraphGenerationWithColors_DEPENDENCIES) 
	@rm -f customGraphGenerationWithColors$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(customGraphGenerationWithColors_OBJECTS) $(customGraphGenerationWithColors_LDADD) $(LIBS)

customGraphGenerationWithFiltering$(EXEEXT): $(customGraphGenerationWithFiltering_OBJECTS) $(customGraphGenerationWithFiltering_DEPENDENCIES) $(EXTRA_customGraphGenerationWithFiltering_DEPENDENCIES) 
	@rm -f customGraphGenerationWithFiltering$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(customGraphGenerationWithFiltering_OBJECTS) $(customGraphGenerationWithFiltering_LDADD) $(LIBS)

dataBaseUsage$(EXEEXT): $(dataBaseUsage_OBJECTS) $(dataBaseUsage_DEPENDENCIES) $(EXTRA_dataBaseUsage_DEPENDENCIES) 
	@rm -f dataBaseUsage$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dataBaseUsage_OBJECTS) $(dataBaseUsage_LDADD) $(LIBS)

dataFlowGraph$(EXEEXT): $(dataFlowGraph_OBJECTS) $(dataFlowGraph_DEPENDENCIES) $(EXTRA_dataFlowGraph_DEPENDENCIES) 
	@rm -f dataFlowGraph$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dataFlowGraph_OBJECTS) $(dataFlowGraph_LDADD) $(LIBS)

debuggingIRnodeToString$(EXEEXT): $(debuggingIRnodeToString_OBJECTS) $(debuggingIRnodeToString_DEPENDENCIES) $(EXTRA_debuggingIRnodeToString_DEPENDENCIES) 
	@rm -f debuggingIRnodeToString$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(debuggingIRnodeToString_OBJECTS) $(debuggingIRnodeToString_LDADD) $(LIBS)

debuggingSourceCodePositionInformation$(EXEEXT): $(debuggingSourceCodePositionInformation_OBJECTS) $(debuggingSourceCodePositionInformation_DEPENDENCIES) $(EXTRA_debuggingSourceCodePositionInformation_DEPENDENCIES) 
	@rm -f debuggingSourceCodePositionInformation$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(debuggingSourceCodePositionInformation_OBJECTS) $(debuggingSourceCodePositionInformation_LDADD) $(LIBS)

defuseAnalysis$(EXEEXT): $(defuseAnalysis_OBJECTS) $(defuseAnalysis_DEPENDENCIES) $(EXTRA_defuseAnalysis_DEPENDENCIES) 
	@rm -f defuseAnalysis$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(defuseAnalysis_OBJECTS) $(defuseAnalysis_LDADD) $(LIBS)

dwarfAnalysis$(EXEEXT): $(dwarfAnalysis_OBJECTS) $(dwarfAnalysis_DEPENDENCIES) $(EXTRA_dwarfAnalysis_DEPENDENCIES) 
	@rm -f dwarfAnalysis$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dwarfAnalysis_OBJECTS) $(dwarfAnalysis_LDADD) $(LIBS)

dwarfInstructionAddressToSourceLineAnalysis$(EXEEXT): $(dwarfInstructionAddressToSourceLineAnalysis_OBJECTS) $(dwarfInstructionAddressToSourceLineAnalysis_DEPENDENCIES) $(EXTRA_dwarfInstructionAddressToSourceLineAnalysis_DEPENDENCIES) 
	@rm -f dwarfInstructionAddressToSourceLineAnalysis$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dwarfInstructionAddressToSourceLineAnalysis_OBJECTS) $(dwarfInstructionAddressToSourceLineAnalysis_LDADD) $(LIBS)

findVariableDeclarations$(EXEEXT): $(findVariableDeclarations_OBJECTS) $(findVariableDeclarations_DEPENDENCIES) $(EXTRA_findVariableDeclarations_DEPENDENCIES) 
	@rm -f findVariableDeclarations$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(findVariableDeclarations_OBJECTS) $(findVariableDeclarations_LDADD) $(LIBS)

generatingUniqueNamesFromDeclaration$(EXEEXT): $(generatingUniqueNamesFromDeclaration_OBJECTS) $(generatingUniqueNamesFromDeclaration_DEPENDENCIES) $(EXTRA_generatingUniqueNamesFromDeclaration_DEPENDENCIES) 
	@rm -f generatingUniqueNamesFromDeclaration$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(generatingUniqueNamesFromDeclaration_OBJECTS) $(generatingUniqueNamesFromDeclaration_LDADD) $(LIBS)

graphGenerationOfSubtree$(EXEEXT): $(graphGenerationOfSubtree_OBJECTS) $(graphGenerationOfSubtree_DEPENDENCIES) $(EXTRA_graphGenerationOfSubtree_DEPENDENCIES) 
	@rm -f graphGenerationOfSubtree$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(graphGenerationOfSubtree_OBJECTS) $(graphGenerationOfSubtree_LDADD) $(LIBS)

graphTraversal$(EXEEXT): $(graphTraversal_OBJECTS) $(graphTraversal_DEPENDENCIES) $(EXTRA_graphTraversal_DEPENDENCIES) 
	@rm -f graphTraversal$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(graphTraversal_OBJECTS) $(graphTraversal_LDADD) $(LIBS)

identityTranslator$(EXEEXT): $(identityTranslator_OBJECTS) $(identityTranslator_DEPENDENCIES) $(EXTRA_identityTranslator_DEPENDENCIES) 
	@rm -f identityTranslator$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(identityTranslator_OBJECTS) $(identityTranslator_LDADD) $(LIBS)

inheritedAndSynthesizedAttributeTraversal$(EXEEXT): $(inheritedAndSynthesizedAttributeTraversal_OBJECTS) $(inheritedAndSynthesizedAttributeTraversal_DEPENDENCIES) $(EXTRA_inheritedAndSynthesizedAttributeTraversal_DEPENDENCIES) 
	@rm -f inheritedAndSynthesizedAttributeTraversal$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(inheritedAndSynthesizedAttributeTraversal_OBJECTS) $(inheritedAndSynthesizedAttributeTraversal_LDADD) $(LIBS)

inheritedAttributeTraversal$(EXEEXT): $(inheritedAttributeTraversal_OBJECTS) $(inheritedAttributeTraversal_DEPENDENCIES) $(EXTRA_inheritedAttributeTraversal_DEPENDENCIES) 
	@rm -f inheritedAttributeTraversal$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(inheritedAttributeTraversal_OBJECTS) $(inheritedAttributeTraversal_LDADD) $(LIBS)

inlineTransformations$(EXEEXT): $(inlineTransformations_OBJECTS) $(inlineTransformations_DEPENDENCIES) $(EXTRA_inlineTransformations_DEPENDENCIES) 
	@rm -f inlineTransformations$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(inlineTransformations_OBJECTS) $(inlineTransformations_LDADD) $(LIBS)

instrumentEndOfFunction$(EXEEXT): $(instrumentEndOfFunction_OBJECTS) $(instrumentEndOfFunction_DEPENDENCIES) $(EXTRA_instrumentEndOfFunction_DEPENDENCIES) 
	@rm -f instrumentEndOfFunction$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(instrumentEndOfFunction_OBJECTS) $(instrumentEndOfFunction_LDADD) $(LIBS)

interproceduralCFG$(EXEEXT): $(interproceduralCFG_OBJECTS) $(interproceduralCFG_DEPENDENCIES) $(EXTRA_interproceduralCFG_DEPENDENCIES) 
	@rm -f interproceduralCFG$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(interproceduralCFG_OBJECTS) $(interproceduralCFG_LDADD) $(LIBS)

interveneAtVariables$(EXEEXT): $(interveneAtVariables_OBJECTS) $(interveneAtVariables_DEPENDENCIES) $(EXTRA_interveneAtVariables_DEPENDENCIES) 
	@rm -f interveneAtVariables$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(interveneAtVariables_OBJECTS) $(interveneAtVariables_LDADD) $(LIBS)

lineReplacement$(EXEEXT): $(lineReplacement_OBJECTS) $(lineReplacement_DEPENDENCIES) $(EXTRA_lineReplacement_DEPENDENCIES) 
	@rm -f lineReplacement$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(lineReplacement_OBJECTS) $(lineReplacement_LDADD) $(LIBS)

livenessAnalysis$(EXEEXT): $(livenessAnalysis_OBJECTS) $(livenessAnalysis_DEPENDENCIES) $(EXTRA_livenessAnalysis_DEPENDENCIES) 
	@rm -f livenessAnalysis$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(livenessAnalysis_OBJECTS) $(livenessAnalysis_LDADD) $(LIBS)

loopNestingInfoProcessing$(EXEEXT): $(loopNestingInfoProcessing_OBJECTS) $(loopNestingInfoProcessing_DEPENDENCIES) $(EXTRA_loopNestingInfoProcessing_DEPENDENCIES) 
	@rm -f loopNestingInfoProcessing$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(loopNestingInfoProcessing_OBJECTS) $(loopNestingInfoProcessing_LDADD) $(LIBS)

loopOptimization$(EXEEXT): $(loopOptimization_OBJECTS) $(loopOptimization_DEPENDENCIES) $(EXTRA_loopOptimization_DEPENDENCIES) 
	@rm -f loopOptimization$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(loopOptimization_OBJECTS) $(loopOptimization_LDADD) $(LIBS)

loopProcessor$(EXEEXT): $(loopProcessor_OBJECTS) $(loopProcessor_DEPENDENCIES) $(EXTRA_loopProcessor_DEPENDENCIES) 
	@rm -f loopProcessor$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(loopProcessor_OBJECTS) $(loopProcessor_LDADD) $(LIBS)

loopRecognition$(EXEEXT): $(loopRecognition_OBJECTS) $(loopRecognition_DEPENDENCIES) $(EXTRA_loopRecognition_DEPENDENCIES) 
	@rm -f loopRecognition$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(loopRecognition_OBJECTS) $(loopRecognition_LDADD) $(LIBS)

nestedQueryExample$(EXEEXT): $(nestedQueryExample_OBJECTS) $(nestedQueryExample_DEPENDENCIES) $(EXTRA_nestedQueryExample_DEPENDENCIES) 
	@rm -f nestedQueryExample$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(nestedQueryExample_OBJECTS) $(nestedQueryExample_LDADD) $(LIBS)

nestedTraversal$(EXEEXT): $(nestedTraversal_OBJECTS) $(nestedTraversal_DEPENDENCIES) $(EXTRA_nestedTraversal_DEPENDENCIES) 
	@rm -f nestedTraversal$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(nestedTraversal_OBJECTS) $(nestedTraversal_LDADD) $(LIBS)

partialRedundancyElimination$(EXEEXT): $(partialRedundancyElimination_OBJECTS) $(partialRedundancyElimination_DEPENDENCIES) $(EXTRA_partialRedundancyElimination_DEPENDENCIES) 
	@rm -f partialRedundancyElimination$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(partialRedundancyElimination_OBJECTS) $(partialRedundancyElimination_LDADD) $(LIBS)

persistantAttributes$(EXEEXT): $(persistantAttributes_OBJECTS) $(persistantAttributes_DEPENDENCIES) $(EXTRA_persistantAttributes_DEPENDENCIES) 
	@rm -f persistantAttributes$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(persistantAttributes_OBJECTS) $(persistantAttributes_LDADD) $(LIBS)

prePostTraversal$(EXEEXT): $(prePostTraversal_OBJECTS) $(prePostTraversal_DEPENDENCIES) $(EXTRA_prePostTraversal_DEPENDENCIES) 
	@rm -f prePostTraversal$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(prePostTraversal_OBJECTS) $(prePostTraversal_LDADD) $(LIBS)

queryLibraryExample$(EXEEXT): $(queryLibraryExample_OBJECTS) $(queryLibraryExample_DEPENDENCIES) $(EXTRA_queryLibraryExample_DEPENDENCIES) 
	@rm -f queryLibraryExample$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(queryLibraryExample_OBJECTS) $(queryLibraryExample_LDADD) $(LIBS)

reductionRecognition$(EXEEXT): $(reductionRecognition_OBJECTS) $(reductionRecognition_DEPENDENCIES) $(EXTRA_reductionRecognition_DEPENDENCIES) 
	@rm -f reductionRecognition$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(reductionRecognition_OBJECTS) $(reductionRecognition_LDADD) $(LIBS)

resolveOverloadedFunction$(EXEEXT): $(resolveOverloadedFunction_OBJECTS) $(resolveOverloadedFunction_DEPENDENCIES) $(EXTRA_resolveOverloadedFunction_DEPENDENCIES) 
	@rm -f resolveOverloadedFunction$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(resolveOverloadedFunction_OBJECTS) $(resolveOverloadedFunction_LDADD) $(LIBS)

scopeInformation$(EXEEXT): $(scopeInformation_OBJECTS) $(scopeInformation_DEPENDENCIES) $(EXTRA_scopeInformation_DEPENDENCIES) 
	@rm -f scopeInformation$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(scopeInformation_OBJECTS) $(scopeInformation_LDADD) $(LIBS)

seedBugsExample_arrayIndexing$(EXEEXT): $(seedBugsExample_arrayIndexing_OBJECTS) $(seedBugsExample_arrayIndexing_DEPENDENCIES) $(EXTRA_seedBugsExample_arrayIndexing_DEPENDENCIES) 
	@rm -f seedBugsExample_arrayIndexing$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(seedBugsExample_arrayIndexing_OBJECTS) $(seedBugsExample_arrayIndexing_LDADD) $(LIBS)

selectedFileTranslation$(EXEEXT): $(selectedFileTranslation_OBJECTS) $(selectedFileTranslation_DEPENDENCIES) $(EXTRA_selectedFileTranslation_DEPENDENCIES) 
	@rm -f selectedFileTranslation$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(selectedFileTranslation_OBJECTS) $(selectedFileTranslation_LDADD) $(LIBS)

sharedMemoryTraversals$(EXEEXT): $(sharedMemoryTraversals_OBJECTS) $(sharedMemoryTraversals_DEPENDENCIES) $(EXTRA_sharedMemoryTraversals_DEPENDENCIES) 
	@rm -f sharedMemoryTraversals$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sharedMemoryTraversals_OBJECTS) $(sharedMemoryTraversals_LDADD) $(LIBS)

sprintf_to_snprintf$(EXEEXT): $(sprintf_to_snprintf_OBJECTS) $(sprintf_to_snprintf_DEPENDENCIES) $(EXTRA_sprintf_to_snprintf_DEPENDENCIES) 
	@rm -f sprintf_to_snprintf$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sprintf_to_snprintf_OBJECTS) $(sprintf_to_snprintf_LDADD) $(LIBS)

switchWithoutDefault$(EXEEXT): $(switchWithoutDefault_OBJECTS) $(switchWithoutDefault_DEPENDENCIES) $(EXTRA_switchWithoutDefault_DEPENDENCIES) 
	@rm -f switchWithoutDefault$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(switchWithoutDefault_OBJECTS) $(switchWithoutDefault_LDADD) $(LIBS)

symbolTableHandling$(EXEEXT): $(symbolTableHandling_OBJECTS) $(symbolTableHandling_DEPENDENCIES) $(EXTRA_symbolTableHandling_DEPENDENCIES) 
	@rm -f symbolTableHandling$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(symbolTableHandling_OBJECTS) $(symbolTableHandling_LDADD) $(LIBS)

synthesizedAttributeTraversal$(EXEEXT): $(synthesizedAttributeTraversal_OBJECTS) $(synthesizedAttributeTraversal_DEPENDENCIES) $(EXTRA_synthesizedAttributeTraversal_DEPENDENCIES) 
	@rm -f synthesizedAttributeTraversal$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(synthesizedAttributeTraversal_OBJECTS) $(synthesizedAttributeTraversal_LDADD) $(LIBS)

tauInstrumenter$(EXEEXT): $(tauInstrumenter_OBJECTS) $(tauInstrumenter_DEPENDENCIES) $(EXTRA_tauInstrumenter_DEPENDENCIES) 
	@rm -f tauInstrumenter$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(tauInstrumenter_OBJECTS) $(tauInstrumenter_LDADD) $(LIBS)

templateParameter$(EXEEXT): $(templateParameter_OBJECTS) $(templateParameter_DEPENDENCIES) $(EXTRA_templateParameter_DEPENDENCIES) 
	@rm -f templateParameter$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(templateParameter_OBJECTS) $(templateParameter_LDADD) $(LIBS)

traversalShortCircuit$(EXEEXT): $(traversalShortCircuit_OBJECTS) $(traversalShortCircuit_DEPENDENCIES) $(EXTRA_traversalShortCircuit_DEPENDENCIES) 
	@rm -f traversalShortCircuit$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(traversalShortCircuit_OBJECTS) $(traversalShortCircuit_LDADD) $(LIBS)

traverseIRnodeTypes$(EXEEXT): $(traverseIRnodeTypes_OBJECTS) $(traverseIRnodeTypes_DEPENDENCIES) $(EXTRA_traverseIRnodeTypes_DEPENDENCIES) 
	@rm -f traverseIRnodeTypes$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(traverseIRnodeTypes_OBJECTS) $(traverseIRnodeTypes_LDADD) $(LIBS)

typeInfoFromFunctionParameters$(EXEEXT): $(typeInfoFromFunctionParameters_OBJECTS) $(typeInfoFromFunctionParameters_DEPENDENCIES) $(EXTRA_typeInfoFromFunctionParameters_DEPENDENCIES) 
	@rm -f typeInfoFromFunctionParameters$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(typeInfoFromFunctionParameters_OBJECTS) $(typeInfoFromFunctionParameters_LDADD) $(LIBS)

typeTransformation$(EXEEXT): $(typeTransformation_OBJECTS) $(typeTransformation_DEPENDENCIES) $(EXTRA_typeTransformation_DEPENDENCIES) 
	@rm -f typeTransformation$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(typeTransformation_OBJECTS) $(typeTransformation_LDADD) $(LIBS)

virtualCFG$(EXEEXT): $(virtualCFG_OBJECTS) $(virtualCFG_DEPENDENCIES) $(EXTRA_virtualCFG_DEPENDENCIES) 
	@rm -f virtualCFG$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(virtualCFG_OBJECTS) $(virtualCFG_LDADD) $(LIBS)

virtualFunctionIdentification$(EXEEXT): $(virtualFunctionIdentification_OBJECTS) $(virtualFunctionIdentification_DEPENDENCIES) $(EXTRA_virtualFunctionIdentification_DEPENDENCIES) 
	@rm -f virtualFunctionIdentification$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(virtualFunctionIdentification_OBJECTS) $(virtualFunctionIdentification_LDADD) $(LIBS)

visitorMemoryPoolTraversal$(EXEEXT): $(visitorMemoryPoolTraversal_OBJECTS) $(visitorMemoryPoolTraversal_DEPENDENCIES) $(EXTRA_visitorMemoryPoolTraversal_DEPENDENCIES) 
	@rm -f visitorMemoryPoolTraversal$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(visitorMemoryPoolTraversal_OBJECTS) $(visitorMemoryPoolTraversal_LDADD) $(LIBS)

visitorTraversal$(EXEEXT): $(visitorTraversal_OBJECTS) $(visitorTraversal_DEPENDENCIES) $(EXTRA_visitorTraversal_DEPENDENCIES) 
	@rm -f visitorTraversal$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(visitorTraversal_OBJECTS) $(visitorTraversal_LDADD) $(LIBS)

volatileTypeModifier$(EXEEXT): $(volatileTypeModifier_OBJECTS) $(volatileTypeModifier_DEPENDENCIES) $(EXTRA_volatileTypeModifier_DEPENDENCIES) 
	@rm -f volatileTypeModifier$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(volatileTypeModifier_OBJECTS) $(volatileTypeModifier_LDADD) $(LIBS)

wholeASTGraphGenerator$(EXEEXT): $(wholeASTGraphGenerator_OBJECTS) $(wholeASTGraphGenerator_DEPENDENCIES) $(EXTRA_wholeASTGraphGenerator_DEPENDENCIES) 
	@rm -f wholeASTGraphGenerator$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wholeASTGraphGenerator_OBJECTS) $(wholeASTGraphGenerator_LDADD) $(LIBS)

wholeGraphAST$(EXEEXT): $(wholeGraphAST_OBJECTS) $(wholeGraphAST_DEPENDENCIES) $(EXTRA_wholeGraphAST_DEPENDENCIES) 
	@rm -f wholeGraphAST$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wholeGraphAST_OBJECTS) $(wholeGraphAST_LDADD) $(LIBS)

wholeGraphFilterOnPersistantAttributes$(EXEEXT): $(wholeGraphFilterOnPersistantAttributes_OBJECTS) $(wholeGraphFilterOnPersistantAttributes_DEPENDENCIES) $(EXTRA_wholeGraphFilterOnPersistantAttributes_DEPENDENCIES) 
	@rm -f wholeGraphFilterOnPersistantAttributes$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wholeGraphFilterOnPersistantAttributes_OBJECTS) $(wholeGraphFilterOnPersistantAttributes_LDADD) $(LIBS)

yicesTutorialExample$(EXEEXT): $(yicesTutorialExample_OBJECTS) $(yicesTutorialExample_DEPENDENCIES) $(EXTRA_yicesTutorialExample_DEPENDENCIES) 
	@rm -f yicesTutorialExample$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(yicesTutorialExample_OBJECTS) $(yicesTutorialExample_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.C.o:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ $<

.C.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.C.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -c -o $@ $<

.c.o:
	$(AM_V_CC)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-recursive
all-am: Makefile $(PROGRAMS) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool clean-local \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am check-local clean clean-binPROGRAMS clean-generic \
	clean-libtool clean-local clean-noinstPROGRAMS cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS

.PRECIOUS: Makefile


# JJW (2/25/2008): set a flag (only used when running ROSE applications) to
# have them run using the build tree rather than the install tree -- this is
# important for "make check" in an uninstalled copy of ROSE.
@USE_ROSE_IN_BUILD_TREE_VAR_TRUE@export ROSE_IN_BUILD_TREE=$(top_builddir)

@ROSE_HAVE_LIBZ3_TRUE@  # The previous "Z3_*" variables should have been named "ROSE_Z3_*" following the pattern in the rest of this
@ROSE_HAVE_LIBZ3_TRUE@  # makefile. I don't want to break code that uses the wrong names, so I'll just add the correct ones. [Matzke 2017-10-17]
@ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION_TRUE@  DOT_ASIS_LIB_DIR_ ?= /home/quinlan1/ROSE/ADA/dot_asis/dot_asis_library/lib

show-rpaths:
	@echo "ROSE_LIBS = $(ROSE_LIBS)"
	@echo "ROSE_RPATHS = $(ROSE_RPATHS)"
	@echo "ROSE_LINK_RPATHS = $(ROSE_LINK_RPATHS)"

clean-test-targets:
	rm -f $(TEST_TARGETS)
	rm -f $(TEST_TARGETS:.passed=.failed)
	rm -f $(TEST_TARGETS:.passed=.out)
	rm -f $(TEST_TARGETS:.passed=.err)

clean-local: clean-test-targets

.PHONY: clean-test-targets
   #yices_c.h
   #traverseBinCFG \
   #traverseSourceCFG 

testASTGraphGenerator: ASTGraphGenerator
	@echo "Generating dot file ..."
	./ASTGraphGenerator $(srcdir)/inputCode_2.C
	@echo "Generate pdf file (default name: test.pdf) from dot file ..."
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_2.C.dot inputCode_2.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_2.pdf; then exit 1; fi

testASTGraphGeneratorCustomized: ASTGraphGeneratorCustomized
	@echo "Generating dot file ..."
	./ASTGraphGeneratorCustomized $(srcdir)/inputCode_2.C
	@echo "Generate pdf file (default name: test.pdf) from dot file ..."
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_2.C.dot inputCode_2.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_2.pdf; then exit 1; fi

testAST_PDF_Generator: AST_PDF_Generator
	@echo "Generating PDF file ..."
	./AST_PDF_Generator $(srcdir)/inputCode_2.C

testWholeASTGraphGenerator_small: wholeASTGraphGenerator
	@echo "Generating dot file of whole AST ..."
	./wholeASTGraphGenerator $(srcdir)/inputCode_wholeAST_1.C
	@echo "Generate pdf file (default name: test.pdf) from dot file ..."
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_wholeAST_1_WholeAST.dot inputCode_WholeAST_small.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_WholeAST_small.pdf; then exit 1; fi

testWholeASTGraphGenerator_large: wholeASTGraphGenerator
	@echo "Generating dot file of whole AST ..."
	./wholeASTGraphGenerator $(srcdir)/inputCode_wholeAST_2.C
	@echo "Generate pdf file (default name: test.pdf) from dot file ..."
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_wholeAST_2_WholeAST.dot inputCode_WholeAST_large.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_WholeAST_large.pdf; then exit 1; fi

# DQ (9/6/2008): Added test to generate a graph of the binary for the tiny program example (with debugging data).
testBinaryASTGraphGenerator: wholeASTGraphGenerator
	gcc -g $(srcdir)/inputCode_binaryAST_1.c -o inputCode_binaryAST_1
	./wholeASTGraphGenerator inputCode_binaryAST_1
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_binaryAST_1_WholeAST.dot inputCode_binaryAST_1_WholeAST.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_binaryAST_1_WholeAST.pdf; then exit 1; fi

testLoopRecognition: loopRecognition
	./loopRecognition $(srcdir)/inputCode_1.C

testResolveOverloadedFunction: resolveOverloadedFunction
	./resolveOverloadedFunction $(srcdir)/inputCode_1.C

testInstantiatedTemplate: templateParameter
	./templateParameter $(srcdir)/inputCode_1.C

#testInstrumentationExample: instrumentationExample
#	./instrumentationExample -rose:verbose 0 -c $(srcdir)/inputCode_InstrumentationTranslator.C

testInstrumentEndOfFunction: instrumentEndOfFunction
	./instrumentEndOfFunction -rose:verbose 0 -c $(srcdir)/inputCode_instrumentEndOfFunction.C

testReductionRecognition: reductionRecognition
	./reductionRecognition -rose:verbose 0 -c $(srcdir)/inputCode_reductionRecognition.C

# turn off the warning for input code with unused variable declarations
testAddVariableDeclaration: addVariableDeclaration
	./addVariableDeclaration --edg:no_warnings -c $(srcdir)/inputCode_AddVariableDeclaration.C

testAddVariableDeclaration2: addVariableDeclaration2
	./addVariableDeclaration2 --edg:no_warnings -c $(srcdir)/inputCode_AddVariableDeclaration2.C

testAddFunctionDeclaration: addFunctionDeclaration
	./addFunctionDeclaration --edg:no_warnings -c $(srcdir)/inputCode_AddFunctionDeclaration.C

testAddFunctionDeclaration2: addFunctionDeclaration2
	./addFunctionDeclaration2 --edg:no_warnings -c $(srcdir)/inputCode_AddFunctionDeclaration2.C
testAddFunctionDeclaration3: addFunctionDeclaration3
	./addFunctionDeclaration3 --edg:no_warnings -c $(srcdir)/inputCode_AddFunctionDeclaration3.C

testAddAssignmentStmt: addAssignmentStmt
	./addAssignmentStmt --edg:no_warnings -c $(srcdir)/inputCode_AddAssignmentStmt.C

testAbstractHandle1:abstractHandle1
	./abstractHandle1  --edg:no_warnings -c $(srcdir)/inputCode_AbstractHandle1.cpp 

testAbstractHandle2:abstractHandle2
	./abstractHandle2  --edg:no_warnings -c $(srcdir)/inputCode_AbstractHandle2.cpp 

testAddExpression: addExpression
	./addExpression --edg:no_warnings -c $(srcdir)/inputCode_AddExpression.C

testAddFunctionCalls: addFunctionCalls
	./addFunctionCalls --edg:no_warnings -c $(srcdir)/inputCode_AddFunctionCalls.C

testLoopOptimization: loopOptimization
	$(VALGRIND) ./loopOptimization -c $(srcdir)/inputCode_LoopOptimization.C

testIdentityTranslator: identityTranslator
	./identityTranslator -c $(srcdir)/inputCode_IdentityTranslator.C

testCharmSupport: charmSupport
	./charmSupport -c $(srcdir)/inputCode_ExampleCharmSupport.C

testBuildCFG: buildCFG
#	./buildCFG $(srcdir)/inputCode_1.C
	./buildCFG $(srcdir)/inputCode_ControlFlowGraphAnalysis.C
	@echo "Building postscript file from foo.dot ..."
#	$(top_srcdir)/scripts/dotgenLetterPDF controlFlowGraph.dot controlFlowGraph.ps
#	$(top_srcdir)/scripts/dotgenLetterPDF foo.dot controlFlowGraph.ps
	$(top_srcdir)/scripts/dotgenLetterPDF main.dot controlFlowGraph.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e controlFlowGraph.pdf; then exit 1; fi

testBuildCFG_testfile1: buildCFG
	./buildCFG $(srcdir)/inputCode_ControlFlowGraphAnalysis_testfile1.c
	@echo "Building postscript file from foo.dot ..."
	$(top_srcdir)/scripts/dotgenLetterPDF testCFG.dot controlFlowGraph_testfile1.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e controlFlowGraph_testfile1.pdf; then exit 1; fi

testVirtualCFG: vcfg_testIf_debug.pdf

testBuildCG: callGraph.pdf

testVFA: vfa.pdf vfa_orig.pdf

testBuildFile: buildFile
	./buildFile -rose:verbose 0 -c $(srcdir)/inputCode_buildFile.C
	@echo "***** new_source_file.h *****"
	@cat new_source_file.h
	@rm new_source_file.h
	@echo ""
	@echo "***** temp_dummy_file_new_source_file.C *****"
	@cat temp_dummy_file_new_source_file.C
	@rm temp_dummy_file_new_source_file.C
	@echo ""
	@echo "***** new_source_file.C *****"
	@cat new_source_file.C
	@rm new_source_file.C
	@echo ""

testClassHierarchyGraph: classHierarchyGraph
	./classHierarchyGraph $(srcdir)/inputCode_ClassHierarchyGraph.C
	@echo "Building postscript file from DATABASE.dot ..."
#	$(top_srcdir)/scripts/dotgenLetterPDF controlFlowGraph.dot controlFlowGraph.ps
	$(top_srcdir)/scripts/dotgenLetterPDF classHier.dot classHierarchyGraph.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e classHierarchyGraph.pdf; then exit 1; fi

testCodeCoverage: codeCoverage
	./codeCoverage -c $(srcdir)/inputCode_ExampleCodeCoverage.C

testCodeCoverageIBMExample: codeCoverage
	./codeCoverage -c $(srcdir)/inputCode_ExampleCodeCoverageIBMExample.C

testChangeFunction: changeFunction
	./changeFunction -rose:verbose 0 -c $(srcdir)/inputCode_ChangeFunctionExample.C

testInterveneAtVariables: interveneAtVariables
	./interveneAtVariables -rose:verbose 0 -c $(srcdir)/inputCode_interveneAtVariables.C

testTemplateExample1: identityTranslator
	./identityTranslator -c $(srcdir)/inputCode_templateExample1.C

testTemplateExample2: identityTranslator
	./identityTranslator -c $(srcdir)/inputCode_templateExample2.C

testDataBaseExample1: dataBaseUsage
	./dataBaseUsage -c $(srcdir)/inputCode_dataBaseExample1.C

testLoopNestingInfoProcessing: loopNestingInfoProcessing
	./loopInfoProcessing -c $(srcdir)/inputCode_loopNestingInfoProcessing.C

testLoopOptimization: loopProcessor $(loopOptimizationOutputFiles)
testInheritedAttributeTraversal: inheritedAttributeTraversal
	$(VALGRIND) ./inheritedAttributeTraversal -c $(srcdir)/inputCode_ExampleTraversals_1.C

testPersistantAttributes: persistantAttributes
	./persistantAttributes -c $(srcdir)/inputCode_ExampleTraversals_2.C
testTauInstrumenter: tauInstrumenter
	./tauInstrumenter $(TAU_INCLUDES) -c $(srcdir)/inputCode_tauInstrumenter.C

testTypeTransformation: typeTransformation
	./typeTransformation -c $(srcdir)/inputCode_typeTransformation.C

testAstFileIO_GenerateBinaryFile: astFileIO_GenerateBinaryFile
	./astFileIO_GenerateBinaryFile -c $(srcdir)/inputCode_astFileIO_GenerateBinaryFile.C

testAstFileIO_ReadMultipleASTs: astFileIO_ReadMultipleASTs
	./astFileIO_GenerateBinaryFile -c $(srcdir)/inputCode_astFileIO_GenerateBinaryFile_1.C
	./astFileIO_GenerateBinaryFile -c $(srcdir)/inputCode_astFileIO_GenerateBinaryFile_2.C
	./astFileIO_GenerateBinaryFile -c $(srcdir)/inputCode_astFileIO_GenerateBinaryFile_3.C
	./astFileIO_ReadMultipleASTs inputCode_astFileIO_GenerateBinaryFile_1 inputCode_astFileIO_GenerateBinaryFile_2 inputCode_astFileIO_GenerateBinaryFile_3

testTraverseIRnodeTypes: traverseIRnodeTypes
	$(VALGRIND) ./traverseIRnodeTypes -c $(srcdir)/inputCode_ExampleTraversals_3.C

testGeneratingUniqueNamesFromDeclaration: generatingUniqueNamesFromDeclaration
	./generatingUniqueNamesFromDeclaration -c $(srcdir)/inputCode_generatingUniqueNamesFromDeclaration.C

testGeneratingUniqueNamesFromDeclaration2: generatingUniqueNamesFromDeclaration
	./generatingUniqueNamesFromDeclaration -c $(srcdir)/inputCode_generatingUniqueNamesFromDeclaration2.C

testSymbolTableHandling: symbolTableHandling
	./symbolTableHandling -c $(srcdir)/inputCode_testsymbolTableHandling.C

testScopeInformation: scopeInformation
	./scopeInformation -c $(srcdir)/inputCode_scopeInformation.C

testCustomGraphGeneration: customGraphGeneration customGraphGenerationWithFiltering
	./customGraphGeneration
	@echo "Building postscript file from foo.dot ..."
	$(top_srcdir)/scripts/dotgenLetterPDF customGraph.dot customGraph.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e customGraph.pdf; then exit 1; fi
	./customGraphGenerationWithFiltering
	$(top_srcdir)/scripts/dotgenLetterPDF customGraphWithFiltering.dot customGraphWithFiltering_test.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e customGraphWithFiltering_test.pdf; then exit 1; fi

testInlineTransformations: inlineTransformations
	./inlineTransformations -c $(srcdir)/inputCode_inlineTransformations.C

testAddComments: addComments
	./addComments -c $(srcdir)/inputCode_addComments.C

testAddArbitraryTextForUnparser:
	./addArbitraryTextForUnparser -c $(srcdir)/inputCode_addArbitraryTextForUnparser.C

testCollectComments: collectComments
	./collectComments -rose:collectAllCommentsAndDirectives -I$(srcdir) -c $(srcdir)/inputCode_collectComments.C

@ROSE_HAVE_YICES_TRUE@testYicesTutorialExample: yicesTutorialExample
@ROSE_HAVE_YICES_TRUE@	./yicesTutorialExample -I$(srcdir) -c $(srcdir)/yicesInputExample.C
testCollectCommentsSkipHeaders: collectComments
	./collectComments -I$(srcdir) -c $(srcdir)/inputCode_collectComments.C

testCollectDefineDirectives: collectDefineDirectives
	./collectDefineDirectives -rose:collectAllCommentsAndDirectives -I$(srcdir) -c $(srcdir)/inputCode_collectComments.C

testPartialRedundancyElimination: partialRedundancyElimination
	./partialRedundancyElimination -c $(srcdir)/inputCode_partialRedundancyElimination.C

testCodeGenerationFormatControl: codeGenerationFormatControl
	./codeGenerationFormatControl -c $(srcdir)/inputCode_codeGenerationFormatControl.C

testDataFlowGraph: dataFlowGraph
	./dataFlowGraph -c $(srcdir)/inputCode_dataFlowGraphAnalysis.C
	@echo "Building postscript file from inputCode_dataFlowGraphAnalysis.C.dot ..."
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_dataFlowGraphAnalysis.C.dot inputCode_dataFlowGraphAnalysis.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_dataFlowGraphAnalysis.pdf; then exit 1; fi

testDataFlowGraph_testfile1: dataFlowGraph
	./dataFlowGraph -c $(srcdir)/inputCode_dataFlowGraphAnalysis_testfile1.C
	@echo "Building postscript file from inputCode_dataFlowGraphAnalysis.C.dot ..."
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_dataFlowGraphAnalysis_testfile1.C.dot inputCode_dataFlowGraphAnalysis_testfile1.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_dataFlowGraphAnalysis_testfile1.pdf; then exit 1; fi

testGraphTraversal: graphTraversal
	./graphTraversal

testWholeGraphAST: wholeGraphAST
	./wholeGraphAST $(srcdir)/inputCode_wholeGraphAST.C
	@echo "Building postscript file from wholeGraphAST.dot and wholeGraphASTPool.dot ..."
#	$(top_srcdir)/scripts/dotgenLetterPDF wholeGraphAST.dot wholeGraphAST.ps
	$(top_srcdir)/scripts/dotgenLetterPDF wholeGraphAST1.dot wholeGraphAST.pdf
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e wholeGraphAST.pdf; then exit 1; fi
#	$(top_srcdir)/scripts/dotgenLetterPDF wholeGraphASTPool.dot wholeGraphASTPool.ps
	$(top_srcdir)/scripts/dotgenLetterPDF wholeGraphASTPool1.dot wholeGraphASTPool.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e wholeGraphASTPool.pdf; then exit 1; fi

testCustomGraphGenerationWithColors: customGraphGenerationWithColors
	./customGraphGenerationWithColors $(srcdir)/inputCode_customGraphGenerationWithColors.C
	@echo "Building postscript file from customGraphGenerationWithColors.dot and customGraphGenerationWithColors.dot ..."
	$(top_srcdir)/scripts/dotgenLetterPDF customGraphGenerationWithColors.dot customGraphGenerationWithColors.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e customGraphGenerationWithColors.pdf; then exit 1; fi

testConstantFoldingTransformation: constantFoldingTransformation
#	./customGraphGenerationWithColors $(srcdir)/inputCode_constantFoldingTransformation.C
#	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_constantFoldingTransformation.C.dot constantFoldingTransformation.ps
	./constantFoldingTransformation -c $(srcdir)/inputCode_constantFoldingTransformation.C

# This tests the generation f an intrmediate example in the tutorial
testConstantUnFoldingTransformation: constantUnFoldingTransformation
	./constantUnFoldingTransformation -c $(srcdir)/inputCode_constantUnFoldingTransformation.C

testSelectedFileTranslationFilterPath: selectedFileTranslation
	./selectedFileTranslation -rose:verbose 0 -skipFile:path /home/dquinlan/ROSE -c $(srcdir)/inputCode_addComments.C

testSelectedFileTranslation: selectedFileTranslation
	./selectedFileTranslation -rose:verbose 0 -skipFile:path /nonDirectory -c $(srcdir)/inputCode_addComments.C

testMultipleFiles: selectedFileTranslation
	$(VALGRIND) ./selectedFileTranslation -rose:verbose 0 -c $(srcdir)/inputCode_addComments.C $(srcdir)/inputCode_wholeGraphAST.C $(srcdir)/inputCode_constantFoldingTransformation.C $(srcdir)/inputCode_dataFlowGraphAnalysis.C $(srcdir)/inputCode_partialRedundancyElimination.C $(srcdir)/inputCode_scopeInformation.C $(srcdir)/inputCode_ExampleTraversals_4.C

testVirtualFunctionIdentification: virtualFunctionIdentification
	./virtualFunctionIdentification -c $(srcdir)/inputCode_virtualFunctionIdentification.C

testGraphGenerationOfSubtree: graphGenerationOfSubtree
	@echo "Generating dot file ..."
	./graphGenerationOfSubtree $(srcdir)/inputCode_graphGenerationOfSubtree.C
	@echo "Generate postscript file (default name: test.pdf) from dot file ..."
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_graphGenerationOfSubtree.subtree.dot inputCode_2.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_2.pdf; then exit 1; fi

testSwitchWithoutDefault: switchWithoutDefault
	./switchWithoutDefault -rose:verbose 0 -I$(srcdir) -c $(srcdir)/inputCode_switchWithoutDefault.C

testRoseSwitchWithoutDefault: switchWithoutDefault
	./switchWithoutDefault -rose:verbose 0 -I.. $(AM_CPPFLAGS) -c ../src/frontend/SageIII/Cxx_Grammar.C

testAddStruct: addStruct
	./addStruct -rose:verbose 0 -I.. $(AM_CPPFLAGS) -c $(srcdir)/inputCode_addStruct.C

testsnprintf: sprintf_to_snprintf
#	./sprintf_to_snprintf -rose:verbose 0 -I.. $(AM_CPPFLAGS) -c $(srcdir)/inputCode_sprintf_to_snprintf.C
	./sprintf_to_snprintf -rose:verbose 0 -c $(srcdir)/inputCode_sprintf_to_snprintf.C

testSeedBugsExample_arrayIndexing: seedBugsExample_arrayIndexing
	./seedBugsExample_arrayIndexing -rose:verbose 0 -c $(srcdir)/inputCode_seedBugsExample_arrayIndexing.C

testVolatileTypeModifier: volatileTypeModifier
	./volatileTypeModifier -rose:verbose 0 -c $(srcdir)/inputCode_volatileTypeModifier.C

# This should only be tested if Dwarf is in use, and it should not 
# be used on the Mac OSX system because we build the executable and
# ROSE does not yet handle the Mach-O executable i386 binary file format.
@ROSE_HAVE_LIBDWARF_TRUE@inputCode_dwarfAnalysis:
@ROSE_HAVE_LIBDWARF_TRUE@	g++ -g3 -o inputCode_dwarfAnalysis $(srcdir)/inputCode_dwarfAnalysis.C
@ROSE_HAVE_LIBDWARF_FALSE@inputCode_dwarfAnalysis:
#	DQ (2/12/2009): This fails when make check is run and the file ($(top_srcdir)/developersScratchSpace/Dan/Disassembler_tests/i386-nologin)
#	is not available (e.g. external distributions).
#	cp $(top_srcdir)/developersScratchSpace/Dan/Disassembler_tests/i386-nologin inputCode_dwarfAnalysis
@ROSE_HAVE_LIBDWARF_FALSE@	cp $(srcdir)/buffer2.bin inputCode_dwarfAnalysis

testDwarfAnalysis: dwarfAnalysis inputCode_dwarfAnalysis 
# Note: different stages of AST representation and visualization.
#	./dwarfAnalysis -c $(srcdir)/inputCode_dwarfAnalysis.C
#	./dwarfAnalysis -rose:visualize_dwarf_only inputCode_dwarfAnalysis
#	./dwarfAnalysis -rose:visualize_executable_file_format_skip_symbols inputCode_dwarfAnalysis
#	./dwarfAnalysis -rose:read_executable_file_format_only inputCode_dwarfAnalysis
#	./dwarfAnalysis -rose:read_executable_file_format_only -rose:visualize_executable_file_format_skip_symbols inputCode_dwarfAnalysis
	./dwarfAnalysis -rose:visualize_dwarf_only -rose:read_executable_file_format_only inputCode_dwarfAnalysis

testDwarfInstructionAddressToSourceLineAnalysis: dwarfInstructionAddressToSourceLineAnalysis inputCode_dwarfAnalysis
#	./dwarfAnalysis -rose:verbose 0 -c $(srcdir)/inputCode_dwarfAnalysis.C
#	./dwarfInstructionAddressToSourceLineAnalysis -rose:visualize_dwarf_only inputCode_dwarfAnalysis
	./dwarfInstructionAddressToSourceLineAnalysis inputCode_dwarfAnalysis

# DQ (3/20/2017): Added test to include DOTGraphEdges and DOTGraphNodes from src/frontend/SageIII/astVisualization/AstAttributeDOT.* files.
testWholeGraphFilterOnPersistantAttributes: wholeGraphFilterOnPersistantAttributes
	@echo "Generating dot file ..."
	@cp $(srcdir)/inputCode_2.C input_wholeGraphFilterOnPersistantAttributes.C
	./wholeGraphFilterOnPersistantAttributes input_wholeGraphFilterOnPersistantAttributes.C

   #rose_inputCode_varSubstCopy.C , temporary disabled this test, don't go into patch!,Liao

# #####################################
# Output file generation rules
# #####################################

inputCode_ASTGraphGenerator.pdf: ASTGraphGenerator
	@echo "Generating required documentation for tutorial (inputCode_ASTGraphGenerator.pdf) ..."
# Build smaller versions of these files (so that they fit onto two separate pages (within the tutorial))
	split -80 $(srcdir)/addFunctionDeclaration.C addFunctionDeclaration.
	split -80 $(srcdir)/inheritedAndSynthesizedAttributeTraversal.C inheritedAndSynthesizedAttributeTraversal.
	split -64 $(srcdir)/loopRecognition.C loopRecognition.
	./ASTGraphGenerator $(ROSE_FLAGS) $(srcdir)/inputCode_ASTGraphGenerator.C
	@echo "Generate postscript file (default name: test.pdf) from dot file ..."
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_ASTGraphGenerator.C.dot inputCode_ASTGraphGenerator.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
#	rm inputCode_ASTGraphGenerator.pdf
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_ASTGraphGenerator.pdf; then exit 1; fi

inputCode_ASTGraphGeneratorCustomized.pdf: ASTGraphGeneratorCustomized
	@echo "Generating required documentation for tutorial (inputCode_ASTGraphGeneratorCustomized.pdf) ..."
# Build smaller versions of these files (so that they fit onto two separate pages (within the tutorial))
	split -80 $(srcdir)/addFunctionDeclaration.C addFunctionDeclaration.
	split -80 $(srcdir)/inheritedAndSynthesizedAttributeTraversal.C inheritedAndSynthesizedAttributeTraversal.
	split -64 $(srcdir)/loopRecognition.C loopRecognition.
	./ASTGraphGeneratorCustomized $(ROSE_FLAGS) $(srcdir)/inputCode_ASTGraphGeneratorCustomized.C
	@echo "Generate postscript file (default name: test.pdf) from dot file ..."
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_ASTGraphGeneratorCustomized.C.dot inputCode_ASTGraphGeneratorCustomized.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
#	rm inputCode_ASTGraphGeneratorCustomized.pdf
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_ASTGraphGeneratorCustomized.pdf; then exit 1; fi

inputCode_AST_PDF_Generator.pdf: AST_PDF_Generator
	@echo "Generating required documentation for tutorial (inputCode_AST_PDF_Generator.pdf) ..."
	@echo "Reusing the same inputCode_ASTGraphGenerator.C as for the DOT graph (but copy to new name) ..."
	cp $(srcdir)/inputCode_ASTGraphGenerator.C inputCode_AST_PDF_Generator.C
	./AST_PDF_Generator $(ROSE_FLAGS) inputCode_AST_PDF_Generator.C
	cp -f inputCode_AST_PDF_Generator.C.pdf inputCode_AST_PDF_Generator.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_AST_PDF_Generator.pdf; then exit 1; fi

inputCode_ASTWholeGraphGenerator_small.pdf: wholeASTGraphGenerator
	@echo "Generating dot file of whole AST ..."
	./wholeASTGraphGenerator $(srcdir)/inputCode_wholeAST_1.C
	@echo "Generate pdf file (default name: test.pdf) from dot file ..."
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_wholeAST_1_WholeAST.dot inputCode_ASTWholeGraphGenerator_small.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_ASTWholeGraphGenerator_small.pdf; then exit 1; fi

inputCode_ASTWholeGraphGenerator_large.pdf: wholeASTGraphGenerator
	@echo "Generating dot file of whole AST ..."
	./wholeASTGraphGenerator $(srcdir)/inputCode_wholeAST_2.C
	@echo "Generate pdf file (default name: test.pdf) from dot file ..."
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_wholeAST_2_WholeAST.dot inputCode_ASTWholeGraphGenerator_large.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_ASTWholeGraphGenerator_large.pdf; then exit 1; fi

rose_inputCode_IdentityTranslator.C: identityTranslator
	@echo "Generate executable from compilation of input code (identityTranslator) ..."
	./identityTranslator $(ROSE_FLAGS) -c $(srcdir)/inputCode_IdentityTranslator.C

queryLibrary.out: queryLibraryExample
	@echo "Generate executable from compilation of input code (queryLibraryExample) ..."
	./queryLibraryExample $(ROSE_FLAGS) -c $(srcdir)/inputCode_QueryLibrary.C > queryLibrary.out

nestedQuery.out: nestedQueryExample
	@echo "Generate executable from compilation of input code (nestedQueryExample) ..."
	./nestedQueryExample $(ROSE_FLAGS) -c $(srcdir)/inputCode_NestedQuery.C > nestedQuery.out

# DQ (9/7/2006): These need separate rules so that when using "make -j" each is run by at most only one process.
# traversalExecutables = \
#   visitorTraversal \
#   classicObjectOrientedVisitorPatternTraversal \
#   inheritedAttributeTraversal \
#   synthesizedAttributeTraversal \
#   inheritedAndSynthesizedAttributeTraversal \
#   accumulatorAttributeTraversal \
#   persistantAttributes \
#   visitorMemoryPoolTraversal \
#   classicObjectOrientedVisitorPatternMemoryPoolTraversal \
#   nestedTraversal
# $(traversalOutput): $(traversalExecutables)
#	@echo "Generate executable from compilation of input code (visitorTraversal) ..."
#	./visitorTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_5.C > visitorTraversal.out
#	@echo "Generate executable from compilation of input code (classicObjectOrientedVisitorPatternTraversal) ..."
#	./classicObjectOrientedVisitorPatternTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_6.C > classicObjectOrientedVisitorPatternTraversal.out
#	@echo "Generate executable from compilation of input code (inheritedAttributeTraversal) ..."
#	./inheritedAttributeTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_7.C > inheritedAttributeTraversal.out
#	@echo "Generate executable from compilation of input code (synthesizedAttributeTraversal) ..."
#	./synthesizedAttributeTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_8.C > synthesizedAttributeTraversal.out
#	@echo "Generate executable from compilation of input code (inheritedAndSynthesizedAttributeTraversal) ..."
#	./inheritedAndSynthesizedAttributeTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_9.C > inheritedAndSynthesizedAttributeTraversal.out
#	@echo "Generate executable from compilation of input code (accumulatorAttributeTraversal) ..."
#	./accumulatorAttributeTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_10.C > accumulatorAttributeTraversal.out
#	@echo "Generate executable from compilation of input code (nestedTraversal) ..."
#	./nestedTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_11.C > nestedTraversal.out
#	@echo "Generate executable from compilation of input code (persistantAttributes) ..."
#	./persistantAttributes $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_12.C > persistantAttributes.out
#	@echo "Generate executable from compilation of input code (visitorMemoryPoolTraversal) ..."
#	./visitorMemoryPoolTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_13.C > visitorMemoryPoolTraversal.out
#	@echo "Generate executable from compilation of input code (classicObjectOrientedVisitorPatternMemoryPoolTraversal) ..."
#	./classicObjectOrientedVisitorPatternMemoryPoolTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_14.C > classicObjectOrientedVisitorPatternMemoryPoolTraversal.out
#	@echo "Generate executable from compilation of input code (traverseIRnodeTypes) ..."
#	./traverseIRnodeTypes $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_15.C > traverseIRnodeTypes.out

# DQ (9/7/2006): These need separate rules so that when using "make -j" each is run by at most only one process.
visitorTraversal.out: visitorTraversal
	@echo "Generate executable from compilation of input code (visitorTraversal) ..."
	./visitorTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_5.C > visitorTraversal.out

prePostTraversal.out: prePostTraversal
	@echo "Generate executable from compilation of input code (prePostTraversal) ..."
	./prePostTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_16.C > prePostTraversal.out

combinedTraversals.out: combinedTraversals
	@echo "Generate executable from compilation of input code (combinedTraversals) ..."
	./combinedTraversals $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_17.C > combinedTraversals.out

# DQ (3/21/2009): sharedMemoryTraversals fails to compile under Cygwin.
@ROSE_BUILD_OS_IS_CYGWIN_TRUE@sharedMemoryTraversals.out:
@ROSE_BUILD_OS_IS_CYGWIN_TRUE@	@echo "Commented out shared memory tests for Cygwin (sharedMemoryTraversals fails to compile) ..."
@ROSE_BUILD_OS_IS_CYGWIN_TRUE@	touch sharedMemoryTraversals.out
@ROSE_BUILD_OS_IS_CYGWIN_FALSE@sharedMemoryTraversals.out: sharedMemoryTraversals
@ROSE_BUILD_OS_IS_CYGWIN_FALSE@	@echo "Generate executable from compilation of input code (sharedMemoryTraversals) ..."
@ROSE_BUILD_OS_IS_CYGWIN_FALSE@	./sharedMemoryTraversals $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_18.C > sharedMemoryTraversals.out

classicObjectOrientedVisitorPatternTraversal.out: classicObjectOrientedVisitorPatternTraversal
	@echo "Generate executable from compilation of input code (classicObjectOrientedVisitorPatternTraversal) ..."
	./classicObjectOrientedVisitorPatternTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_6.C > classicObjectOrientedVisitorPatternTraversal.out

inheritedAttributeTraversal.out: inheritedAttributeTraversal
	@echo "Generate executable from compilation of input code (inheritedAttributeTraversal) ..."
	./inheritedAttributeTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_7.C > inheritedAttributeTraversal.out

synthesizedAttributeTraversal.out: synthesizedAttributeTraversal
	@echo "Generate executable from compilation of input code (synthesizedAttributeTraversal) ..."
	./synthesizedAttributeTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_8.C > synthesizedAttributeTraversal.out

inheritedAndSynthesizedAttributeTraversal.out: inheritedAndSynthesizedAttributeTraversal
	@echo "Generate executable from compilation of input code (inheritedAndSynthesizedAttributeTraversal) ..."
	./inheritedAndSynthesizedAttributeTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_9.C > inheritedAndSynthesizedAttributeTraversal.out

accumulatorAttributeTraversal.out: accumulatorAttributeTraversal
	@echo "Generate executable from compilation of input code (accumulatorAttributeTraversal) ..."
	./accumulatorAttributeTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_10.C > accumulatorAttributeTraversal.out

nestedTraversal.out: nestedTraversal
	@echo "Generate executable from compilation of input code (nestedTraversal) ..."
	./nestedTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_11.C > nestedTraversal.out

persistantAttributes.out: persistantAttributes
	@echo "Generate executable from compilation of input code (persistantAttributes) ..."
	./persistantAttributes $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_12.C > persistantAttributes.out

visitorMemoryPoolTraversal.out: visitorMemoryPoolTraversal
	@echo "Generate executable from compilation of input code (visitorMemoryPoolTraversal) ..."
	./visitorMemoryPoolTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_13.C > visitorMemoryPoolTraversal.out

classicObjectOrientedVisitorPatternMemoryPoolTraversal.out: classicObjectOrientedVisitorPatternMemoryPoolTraversal
	@echo "Generate executable from compilation of input code (classicObjectOrientedVisitorPatternMemoryPoolTraversal) ..."
	./classicObjectOrientedVisitorPatternMemoryPoolTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_14.C > classicObjectOrientedVisitorPatternMemoryPoolTraversal.out

traverseIRnodeTypes.out: traverseIRnodeTypes
	@echo "Generate executable from compilation of input code (traverseIRnodeTypes) ..."
	./traverseIRnodeTypes $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_15.C > traverseIRnodeTypes.out

rose_inputCode_AddFunctionDeclaration.C: addFunctionDeclaration
	@echo "Generate executable from compilation of input code (addFunctionDeclaration) ..."
	./addFunctionDeclaration $(ROSE_FLAGS) -c $(srcdir)/inputCode_AddFunctionDeclaration.C

rose_inputCode_AddFunctionDeclaration2.C: addFunctionDeclaration2
	@echo "Generate executable from compilation of input code (addFunctionDeclaration2) ..."
	./addFunctionDeclaration2 $(ROSE_FLAGS) -c $(srcdir)/inputCode_AddFunctionDeclaration2.C

rose_inputCode_AddFunctionDeclaration3.C: addFunctionDeclaration3
	@echo "Generate executable from compilation of input code (addFunctionDeclaration3) ..."
	./addFunctionDeclaration3 $(ROSE_FLAGS) -c $(srcdir)/inputCode_AddFunctionDeclaration3.C

rose_inputCode_AddVariableDeclaration.C: addVariableDeclaration
	@echo "Generate executable from compilation of input code (addVariableDeclaration) ..."
	./addVariableDeclaration $(ROSE_FLAGS) -c $(srcdir)/inputCode_AddVariableDeclaration.C

rose_inputCode_AddVariableDeclaration2.C: addVariableDeclaration2
	@echo "Generate executable from compilation of input code (addVariableDeclaration2) ..."
	./addVariableDeclaration2 $(ROSE_FLAGS) -c $(srcdir)/inputCode_AddVariableDeclaration2.C

abstractHandle1.outx: abstractHandle1
	@echo "Generate executable from compilation of input code (abstractHandle1) ..."
	./abstractHandle1 $(ROSE_FLAGS) -c $(srcdir)/inputCode_AbstractHandle1.cpp | fold > abstractHandle1.outx

abstractHandle2.outx: abstractHandle2
	@echo "Generate executable from compilation of input code (abstractHandle2) ..."
	./abstractHandle2 $(ROSE_FLAGS) -c $(srcdir)/inputCode_AbstractHandle2.cpp | fold > abstractHandle2.outx

rose_inputCode_AddAssignmentStmt.C: addAssignmentStmt
	@echo "Generate executable from compilation of input code (addAssignmentStmt) ..."
	./addAssignmentStmt $(ROSE_FLAGS) -c $(srcdir)/inputCode_AddAssignmentStmt.C

rose_inputCode_AddExpression.C: addExpression
	@echo "Generate executable from compilation of input code (addExpression) ..."
	./addExpression $(ROSE_FLAGS) -c $(srcdir)/inputCode_AddExpression.C

rose_inputCode_AddFunctionCalls.C: addFunctionCalls
	@echo "Generate executable from compilation of input code (addFunctionCalls) ..."
	./addFunctionCalls $(ROSE_FLAGS) -c $(srcdir)/inputCode_AddFunctionCalls.C

#rose_inputCode_InstrumentationTranslator.C: instrumentationExample
#	@echo "Generate executable from compilation of input code ..."
#	./instrumentationExample $(ROSE_FLAGS) -c $(srcdir)/inputCode_InstrumentationTranslator.C

rose_inputCode_instrumentEndOfFunction.C: instrumentEndOfFunction
	@echo "Generate executable from compilation of input code ..."
	./instrumentEndOfFunction $(ROSE_FLAGS) -c $(srcdir)/inputCode_instrumentEndOfFunction.C

rose_inputCode_buildFile.C: buildFile
	@echo "Generate executable from compilation of input code ..."
	./buildFile $(ROSE_FLAGS) -c $(srcdir)/inputCode_buildFile.C

reductionRecognition.out: reductionRecognition
	@echo "Generate executable from compilation of input code ..."
	./reductionRecognition $(ROSE_FLAGS) -c $(srcdir)/inputCode_reductionRecognition.C >reductionRecognition.out

loopRecognition.out: loopRecognition
	@echo "Generate executable from compilation of input code (loopRecognition) ..."
	./loopRecognition $(ROSE_FLAGS) -c $(srcdir)/inputCode_LoopRecognition.C > loopRecognition.out

typeInfoFromFunctionParameters.out: typeInfoFromFunctionParameters
	@echo "Generate executable from compilation of input code (typeInfoFromFunctionParameters) ..."
	./typeInfoFromFunctionParameters $(ROSE_FLAGS) -c $(srcdir)/inputCode_TypeInfoFromFunctionParameters.C > typeInfoFromFunctionParameters.out

resolveOverloadedFunction.out: resolveOverloadedFunction
	@echo "Generate executable from compilation of input code (resolveOverloadedFunction) ..."
	./resolveOverloadedFunction $(ROSE_FLAGS) -c $(srcdir)/inputCode_ResolvingOverloadedFunctions.C > resolveOverloadedFunction.out

templateParameter.out: templateParameter $(srcdir)/inputCode_TemplateParameterExtration.C
	@echo "Generate executable from compilation of input code (templateParameter) ..."
	./templateParameter $(ROSE_FLAGS) -c $(srcdir)/inputCode_TemplateParameterExtration.C > templateParameter.out

rose_inputCode_LoopOptimization_blocking.C: loopOptimization
	@echo "Generate executable from compilation of input code (loopOptimization) ..."
	$(VALGRIND) ./loopOptimization $(ROSE_FLAGS) -bk1 -fs0 -c $(srcdir)/inputCode_LoopOptimization_blocking.C

loopProcessor.C.aa loopProcessor.C.ab: $(srcdir)/LoopProcessor.C
	split -42 $(srcdir)/LoopProcessor.C loopProcessor.C.

rose_inputCode_LoopOptimization_fusion.C: loopOptimization
	@echo "Generate executable from compilation of input code (loopOptimization) ..."
	./loopOptimization $(ROSE_FLAGS) -fs2 -c $(srcdir)/inputCode_LoopOptimization_fusion.C

rose_inputCode_LoopOptimization_mm.C: loopProcessor
	@echo "Generate executable from compilation of input code (loopOptimization) ..."
#	./loopOptimization -bk1 -fs0 -c $(srcdir)/inputCode_LoopOptimization_mm.C
# DQ (1/2/2008): This used to work, but it is part of what Qing is fixing.
	$(VALGRIND) ./loopProcessor $(ROSE_FLAGS) -bk1 -fs0 -c $(srcdir)/inputCode_LoopOptimization_mm.C

#FR (6/8/2011) Bug fixed
rose_inputCode_LoopOptimization_dgemm.C: loopProcessor
	@echo "Generate executable from compilation of input code (loopOptimization) ..."
	./loopProcessor $(ROSE_FLAGS) -bk1 -unroll 16 -c $(srcdir)/inputCode_LoopOptimization_dgemm.C

rose_inputCode_LoopOptimization_lufac.C: loopProcessor
	@echo "Generate executable from compilation of input code (loopOptimization) ..."
	./loopProcessor $(ROSE_FLAGS) -bk1 -fs0  -splitloop -annotation -c $(srcdir)/inputCode_LoopOptimization_lufac.C

rose_inputCode_LoopOptimization_tridvpk.C: loopProcessor
	@echo "Generate executable from compilation of input code (loopOptimization) ..."
	./loopProcessor $(ROSE_FLAGS) -fs2 -ic1 -opt 1 -c $(srcdir)/inputCode_LoopOptimization_tridvpk.C

controlFlowGraph.pdf: buildCFG
	@echo "Building an example Control Flow Graph (buildCFG) ..."
	./buildCFG $(ROSE_FLAGS) $(srcdir)/inputCode_ControlFlowGraphAnalysis.C
	@echo "Building postscript file from main.dot ..."
	$(top_srcdir)/scripts/dotgenLetterPDF main.dot controlFlowGraph.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e controlFlowGraph.pdf; then exit 1; fi

vcfg_testIf_debug.pdf: virtualCFG
	@echo "Building an example virtual Control Flow Graph (virtualCFG) ..."
	./virtualCFG $(ROSE_FLAGS) $(srcdir)/inputCode_ControlFlowGraphAnalysis.C 
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_ControlFlowGraphAnalysis.C.testIf.debug.dot vcfg_testIf_debug.pdf
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_ControlFlowGraphAnalysis.C.testIf.interesting.dot vcfg_testIf_interesting.pdf
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_ControlFlowGraphAnalysis.C.main.debug.dot vcfg_main_debug.pdf
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_ControlFlowGraphAnalysis.C.main.interesting.dot vcfg_main_interesting.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e vcfg_testIf_debug.pdf; then exit 1; fi

defuseAnalysis_pic1.pdf: defuseAnalysis
	@echo "Building an example DefUse ..."
	./defuseAnalysis $(ROSE_FLAGS) $(srcdir)/input_defuseAnalysis.C &>defuseAnalysis.out
	@echo "DefUseAnalysis: Building postscript file from foo.dot ..."
	$(top_srcdir)/scripts/dotgenLetterPDF dfa.dot defuseAnalysis_pic1.pdf &>defuseAnalysis_pic1.out
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e defuseAnalysis_pic1.pdf; then exit 1; fi

# DQ (8/17/2008): Added example to show how to use traversal on AST for binary executable format.
binaryAnalysis_pic3.pdf: binaryAnalysis_symbolTable
	@echo "Building an example BinaryAnalysis ..."
	cp -f $(srcdir)/buffer2.bin ./bin_example_2
	./binaryAnalysis_symbolTable -rose:read_executable_file_format_only bin_example_2
#	DQ (9/6/2008): We are not ready for these yet, so don't generate them.
#	@echo "BinaryAnalysis: Building postscript file from AST and whole graph dot files..."
	$(top_srcdir)/scripts/dotgenLetterPDF bin_example_2_WholeAST.dot binaryAnalysis_pic3.pdf
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e binaryAnalysis_pic3.pdf; then exit 1; fi
	$(top_srcdir)/scripts/dotgenLetterPDF bin_example_2.dot binaryAnalysis_pic4.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e binaryAnalysis_pic4.pdf; then exit 1; fi

# rose_bin_example.s.aa: binaryAnalysis_pic1.pdf

debuggingIRnodeToString.out: debuggingIRnodeToString
	@echo "Generate executable from compilation of input code (debuggingIRnodeToString) ..."
	./debuggingIRnodeToString $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleDebugging.C > debuggingIRnodeToString.out

debuggingSourceCodePositionInformation.out: debuggingSourceCodePositionInformation
	@echo "Generate executable from compilation of input code (debuggingSourceCodePositionInformation) ..."
	./debuggingSourceCodePositionInformation $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleDebugging.C > debuggingSourceCodePositionInformation.out

commandlineProcessing.out: commandlineProcessing
	@echo "Generate executable from compilation of input code (commandlineProcessing) ..."
	./commandlineProcessing $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleDebugging.C -edg:restrict -myTranslator:verbose 42 > commandlineProcessing.out

charmSupport.out: charmSupport
	@echo "Generate executable from compilation of input code (charmSupport) ..."
	./charmSupport $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleCharmSupport.C > charmSupport.out
	split -80 $(srcdir)/CharmSupport.C CharmSupport.

codeCoverage.out: codeCoverage $(srcdir)/inputCode_ExampleCodeCoverage.C
	@echo "Generate executable from compilation of input code (codeCoverage) ..."
#	While in development just run without building codeCoverage.out (and touch codeCoverage.out to allow makefile to work)
	./codeCoverage $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleCodeCoverage.C
# TOO (2/18/2011): error with Tensilica's Xtensa compilers:
# "/usr/bin/ld: inputCode_ExampleCodeCoverage.o: Relocations in generic ELF (EM: 8)"
#	link the input file with the coverageCodeFromShmuel.o file (written by Shmuel, tool specific)
@ALTERNATE_BACKEND_C_CROSS_COMPILER_FALSE@	$(CXX) $(CXXFLAGS) -o ExampleCodeCoverage_GeneratedBinary inputCode_ExampleCodeCoverage.o coverageCodeFromShmuel.o
#	Run the input code (collect any output in codeCoverage.out)
@ALTERNATE_BACKEND_C_CROSS_COMPILER_FALSE@	./ExampleCodeCoverage_GeneratedBinary > codeCoverage.out
@ALTERNATE_BACKEND_C_CROSS_COMPILER_TRUE@    @echo "Warning: skipping linking and execution of cross-compiled inputCode_ExampleCodeCoverage.o"
	split -80 $(srcdir)/codeCoverage.C codeCoverage.

callGraph.pdf: buildCallGraph
	@echo "Generate call graph from processing of input code (callGraph) ..."
	./buildCallGraph $(ROSE_FLAGS) -c $(srcdir)/inputCode_BuildCG.C
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_BuildCG.C_callGraph.dot callGraph.pdf
# Liao, add a non-trival test input 
	./buildCallGraph $(ROSE_FLAGS) -c $(srcdir)/bt_onefile.c
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e callGraph.pdf; then exit 1; fi

vfa.pdf: buildVFA
	@echo "Generate Virtual Function Analysis CallGraph of input code ..."
	./buildVFA $(ROSE_FLAGS) -c $(srcdir)/inputCode_VFA.C
	$(top_srcdir)/scripts/dotgenLetterPDF pruned_call_graph.dot vfa.pdf
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e vfa.pdf; then exit 1; fi
vfa_orig.pdf: buildVFA
	@echo "Generate Virtual Function Analysis CallGraph of input code ..."
	./buildVFA $(ROSE_FLAGS) -c $(srcdir)/inputCode_VFA.C
	$(top_srcdir)/scripts/dotgenLetterPDF original_call_graph.dot vfa_orig.pdf
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e vfa_orig.pdf; then exit 1; fi

liveness.pdf: livenessAnalysis
	@echo "Generate liveness information from processing of input code ..."
	./livenessAnalysis $(ROSE_FLAGS) -c $(srcdir)/inputCode_livenessAnalysis.c
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_livenessAnalysis.c_liveness.dot liveness.pdf
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e liveness.pdf; then exit 1; fi

classHierarchyGraph.pdf: classHierarchyGraph
	./classHierarchyGraph $(srcdir)/inputCode_ClassHierarchyGraph.C
	@echo "Building postscript file from classHier.dot ..."
	$(top_srcdir)/scripts/dotgenLetterPDF classHier.dot classHierarchyGraph.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e classHierarchyGraph.pdf; then exit 1; fi

rose_inputCode_templateExample1.C: identityTranslator $(srcdir)/inputCode_templateExample1.C
	@echo "Generate executable from compilation of input code (template example #1) ..."
	./identityTranslator $(ROSE_FLAGS) -c $(srcdir)/inputCode_templateExample1.C

rose_inputCode_templateExample2.C: identityTranslator $(srcdir)/inputCode_templateExample2.C
	@echo "Generate executable from compilation of input code (template example #2) ..."
	./identityTranslator $(ROSE_FLAGS) -c $(srcdir)/inputCode_templateExample2.C

dataBaseExample1.out: dataBaseUsage
	@echo "Generate data base from compilation of input code (data base example #1) ..."
# Build smaller versions of these files (so that they fit onto two separate pages (within the tutorial))
	split -64 $(srcdir)/dataBaseUsage.C dataBaseUsage.
	./dataBaseUsage $(ROSE_FLAGS) -c $(srcdir)/inputCode_dataBaseExample1.C > dataBaseExample1.out

loopNestingInfoProcessing.out: loopNestingInfoProcessing $(srcdir)/inputCode_loopNestingInfoProcessing.C
	@echo "Generate executable from compilation of input code (loopNestingInfoProcessing) ..."
	split -l80 $(srcdir)/loopNestingInfoProcessing.C loopNestingInfoProcessing.
	./loopNestingInfoProcessing $(ROSE_FLAGS) -c $(srcdir)/inputCode_loopNestingInfoProcessing.C > loopNestingInfoProcessing.out

rose_inputCode_typeTransformation.C: typeTransformation
	./typeTransformation $(ROSE_FLAGS) -c $(srcdir)/inputCode_typeTransformation.C

astFileIO_GenerateBinaryFile.out: astFileIO_GenerateBinaryFile
	./astFileIO_GenerateBinaryFile $(ROSE_FLAGS) -c $(srcdir)/inputCode_astFileIO_GenerateBinaryFile.C > astFileIO_temp.out
	head -n 20 astFileIO_temp.out > astFileIO_GenerateBinaryFile.out
#	echo "File I/O temporarily disabled!" > astFileIO_GenerateBinaryFile.out

generatingUniqueNamesFromDeclaration.out: generatingUniqueNamesFromDeclaration
	./generatingUniqueNamesFromDeclaration $(ROSE_FLAGS) -c $(srcdir)/inputCode_generatingUniqueNamesFromDeclaration.C | grep -v rose_edg_macros_and_functions_required_for_gnu > generatingUniqueNamesFromDeclaration.out

generatingUniqueNamesFromDeclaration2.out: generatingUniqueNamesFromDeclaration
	./generatingUniqueNamesFromDeclaration $(ROSE_FLAGS) -c $(srcdir)/inputCode_generatingUniqueNamesFromDeclaration2.C | grep -v rose_edg_macros_and_functions_required_for_gnu > generatingUniqueNamesFromDeclaration2.out
#	echo "Test Failed!" > generatingUniqueNamesFromDeclaration2.out

symbolTableHandling.out: symbolTableHandling
	./symbolTableHandling $(ROSE_FLAGS) -c $(srcdir)/inputCode_testsymbolTableHandling.C > symbolTableHandling.out

scopeInformation.out: scopeInformation
	./scopeInformation $(ROSE_FLAGS) -c $(srcdir)/inputCode_scopeInformation.C > scopeInformation.out

rose_inputCode_tauInstrumenter.C: tauInstrumenter
#	./tauInstrumenter $(ROSE_FLAGS) $(TAU_INCLUDES) -c $(srcdir)/inputCode_tauInstrumenter.C
	echo "Test Failed!" > rose_inputCode_tauInstrumenter.C

rose_inputCode_inlineTransformations.C: inlineTransformations
	./inlineTransformations $(ROSE_FLAGS) -c $(srcdir)/inputCode_inlineTransformations.C

customGraph.pdf: customGraphGeneration
	./customGraphGeneration 
	@echo "Building postscript file from foo.dot ..."
	$(top_srcdir)/scripts/dotgenLetterPDF customGraph.dot customGraph.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e customGraph.pdf; then exit 1; fi

customGraphWithFiltering.pdf: customGraphGenerationWithFiltering
	./customGraphGenerationWithFiltering
	$(top_srcdir)/scripts/dotgenLetterPDF customGraphWithFiltering.dot customGraphWithFiltering.pdf
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e customGraphWithFiltering.pdf; then exit 1; fi

graphTraversal.pdf: graphTraversal
	./graphTraversal
	$(top_srcdir)/scripts/dotgenLetterPDF graphTraversal.dot graphTraversal.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e graphTraversal.pdf; then exit 1; fi

# Liao, 2/13/2008 , added this
rose_inputCode_addStruct.C:addStruct
	./addStruct $(ROSE_FLAGS) -c $(srcdir)/inputCode_addStruct.C

rose_inputCode_addComments.C: addComments
	./addComments $(ROSE_FLAGS) -c $(srcdir)/inputCode_addComments.C

rose_inputCode_addArbitraryTextForUnparser.C: addArbitraryTextForUnparser
#	DQ (3/21/2009): These tests don't appear to run under Cygwin.
@ROSE_BUILD_OS_IS_CYGWIN_TRUE@	@echo "Cygwin test of addArbitraryTextForUnparser fails ..."
@ROSE_BUILD_OS_IS_CYGWIN_TRUE@	touch rose_inputCode_addArbitraryTextForUnparser.C
@ROSE_BUILD_OS_IS_CYGWIN_FALSE@	./addArbitraryTextForUnparser $(ROSE_FLAGS) -c $(srcdir)/inputCode_addArbitraryTextForUnparser.C

collectCommentsSkipHeaderFiles.out: collectComments
	./collectComments $(ROSE_FLAGS) -I$(srcdir) -c $(srcdir)/inputCode_collectComments.C > collectCommentsSkipHeaderFiles.out

collectCommentsAcrossHeaderFiles.out: collectComments
	./collectComments $(ROSE_FLAGS) -rose:collectAllCommentsAndDirectives -I$(srcdir) -c $(srcdir)/inputCode_collectComments.C > collectCommentsAcrossHeaderFiles.out

collectDefineDirectives.out: collectDefineDirectives
	./collectDefineDirectives $(ROSE_FLAGS) -rose:collectAllCommentsAndDirectives -I$(srcdir) -c $(srcdir)/inputCode_collectComments.C > collectDefineDirectives.out

rose_inputCode_partialRedundancyElimination.C: partialRedundancyElimination
	./partialRedundancyElimination $(ROSE_FLAGS) -c $(srcdir)/inputCode_partialRedundancyElimination.C

rose_inputCode_codeGenerationFormatControl.C: codeGenerationFormatControl
	./codeGenerationFormatControl $(ROSE_FLAGS) -c $(srcdir)/inputCode_codeGenerationFormatControl.C

#rose_inputCode_varSubstCopy.C: varSubstCopy
#	./varSubstCopy $(ROSE_FLAGS) -c $(srcdir)/inputCode_varSubstCopy.C

dataFlowGraph.pdf: dataFlowGraph
	@echo "Generate the data flow graph from processing of input code (dataFlowGraph) ..."
	./dataFlowGraph $(ROSE_FLAGS) -c $(srcdir)/inputCode_dataFlowGraphAnalysis.C
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_dataFlowGraphAnalysis.C.dot dataFlowGraph.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e dataFlowGraph.pdf; then exit 1; fi

traversalShortCircuit.out: traversalShortCircuit
	./traversalShortCircuit $(ROSE_FLAGS) -c $(srcdir)/inputCode_traversalShortCircuit.C > traversalShortCircuit.out

wholeGraphAST.pdf: wholeGraphAST
	./wholeGraphAST $(ROSE_FLAGS) $(srcdir)/inputCode_wholeGraphAST.C
	@echo "Building postscript file from wholeGraphAST.dot and wholeGraphASTPool.dot ..."
	$(top_srcdir)/scripts/dotgenLetterPDF wholeGraphAST1.dot wholeGraphAST.pdf
# DQ (3/20/2017): This takes a very long time, is it worth it?
#	$(top_srcdir)/scripts/dotgenLetterPDF wholeGraphASTPool1.dot wholeGraphASTPool.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e wholeGraphAST.pdf; then exit 1; fi

rose_inputCode_seedBugsExample_arrayIndexing.C: seedBugsExample_arrayIndexing
	./seedBugsExample_arrayIndexing $(ROSE_FLAGS) -c $(srcdir)/inputCode_seedBugsExample_arrayIndexing.C

rose_inputCode_VolatileTypeModifier.C: volatileTypeModifier
	./volatileTypeModifier $(ROSE_FLAGS) -c $(srcdir)/inputCode_VolatileTypeModifier.C

inputCode_dwarfAnalysis.pdf: dwarfAnalysis inputCode_dwarfAnalysis
	./dwarfAnalysis -rose:visualize_dwarf_only -rose:read_executable_file_format_only inputCode_dwarfAnalysis
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_dwarfAnalysis.dot inputCode_dwarfAnalysis.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_dwarfAnalysis.pdf; then exit 1; fi

inputCode_dwarfAnalysis.out: dwarfInstructionAddressToSourceLineAnalysis inputCode_dwarfAnalysis
	./dwarfInstructionAddressToSourceLineAnalysis inputCode_dwarfAnalysis > inputCode_dwarfAnalysis.out

# DQ (3/20/2017): Added test to include DOTGraphEdges and DOTGraphNodes from src/frontend/SageIII/astVisualization/AstAttributeDOT.* files.
wholeGraphFilterOnPersistantAttributes.dot: wholeGraphFilterOnPersistantAttributes
	@echo "Generating dot file ..."
	@cp $(srcdir)/inputCode_2.C input_wholeGraphFilterOnPersistantAttributes.C

docs: $(noinst_PROGRAMS) $(bin_PROGRAMS) $(generatedCodeExamples)
	@echo ""
#	DQ (5/20/2007): Added to support Rich's work with outlining and the HPC Toolkit
	cd outliner; $(MAKE) docs
# TOO (2/16/2011): Errors with Tensilica's Xtensa compilers as alternative backend compilers. We can
# gradually enable these tests at a later stage if necessary.
@USING_XTENSA_BACKEND_COMPILER_FALSE@	cd roseHPCT; $(MAKE) docs
	cd intelPin; $(MAKE) docs
	@echo "******************************************************************"
	@echo "Generated required documentation for tutorial (make docs rule) ..."
	@echo "******************************************************************"

# Note that the *.trace files come from the execution of the codeCoverage.C test,
# and the *.binary files are generated from the astFileIO_GenerateBinaryFile.C test.
# The *.binary are the binary form of the ASTs.
cleanDocs:
#	This can not be called after make distclean (by make distcheck)
#	cd outliner; $(MAKE) cleanDocs
	rm -f rose_*.C rose_*.c rose_*.cpp *.out *.a[a-l] *.dot *.ps *.pdf *.trace *.binaryAST 
	rm -f ExampleCodeCoverage_GeneratedBinary 
	rm -f inputCode_AST_PDF_Generator.C 
	rm -f rose_inputCode_dwarfAnalysis.s inputCode_dwarfAnalysis rose_inputCode_dwarfAnalysis

clean-local: cleanDocs
	rm -rf Templates.DB ii_files ti_files *.ti *.svg  *.new rose_bin_example.s rose_bin_example_2.s bin_example_2 *.dump
	find . -depth -name \*.dSYM -exec rm -rf {} \; # OS X object file debug info
	rm -rf $(generatedCodeExamples) *.out *.pdf *.dot

# Compile everything with -g (compiler's debug flag)
# AM_CPPFLAGS = -g

# DQ (1/4/2006): Added check rule (remove all generated code and rerun "make docs").
check-local:
#	DQ (3/27/2006): Note that these should not have to already exist, so use "rm -rf"
#	rm -rf $(generatedCodeExamples)
	$(MAKE) docs
	@echo "***************************************************************************"
	@echo "****** ROSE/tutorial: make check rule complete (terminated normally) ******"
	@echo "***************************************************************************"

installcheck: exampleMakefile
	@echo "Remove existing binaries so that they can be rebuilt using the installed libraries."
	rm -f $(noinst_PROGRAMS) *.o
	@echo "Call exampleMakefile to show how to build ROSE tutorial examples using installed libraries."
@USE_ROSE_IN_BUILD_TREE_VAR_TRUE@	unset ROSE_IN_BUILD_TREE; $(MAKE) -f exampleMakefile
@USE_ROSE_IN_BUILD_TREE_VAR_FALSE@	$(MAKE) -f exampleMakefile

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
