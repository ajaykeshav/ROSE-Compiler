#!/bin/bash

# This script does a fresh checkout of ROSE and conducts series tests
# Please modify the following before using it:
# 1. The path to the source and build directories of ROSE
# 2. the configuration options
# usage: 
#	put this script at the same directory as where your working copy of ROSE resides
#	then ./roseFreshTest
# Liao, 2/7/2008
#------------------------------------------------------

set -e
set -o pipefail

# the right version of subversion is essential!!
SVN=/nfs/apps/subversion/1.4.5/bin/svn
ROSE_SVNROOT=file:///usr/casc/overture/ROSE/svn/ROSE/trunk/ROSE
MAILADDRS="willcock2@llnl.gov liaoch@llnl.gov"

ROSE_TOP="${HOME}/svn-test-rose/$$/"

set -e
rm -rf ${ROSE_TOP}
mkdir -p ${ROSE_TOP}
cd ${ROSE_TOP}

set +e

source /usr/apps/graphviz/2.6/setup.sh
source /usr/apps/python/2.5/setup.sh
export PATH="/usr/apps/java/jdk1.5.0_11/bin:$PATH"
export LD_LIBRARY_PATH="/usr/apps/java/jdk1.5.0_11/lib:/usr/apps/java/jdk1.5.0_11/jre/lib/i386/client:$LD_LIBRARY_PATH"
export JAVA_HOME=/usr/apps/java/jdk1.5.0_11
export CLASSPATH="/home/willcock2/antlr-3.0.1/lib/antlr-2.7.7.jar:/home/willcock2/antlr-3.0.1/lib/antlr-3.0.1.jar:/home/willcock2/antlr-3.0.1/lib/antlr-runtime-3.0.1.jar:/home/willcock2/antlr-3.0.1/lib/stringtemplate-3.1b1.jar:/home/dquinlan/ROSE/OpenFortranParser/ofp_install/lib/OpenFortranParser.jar:."
export LD_LIBRARY_PATH="/home/dquinlan/ROSE/OpenFortranParser/ofp_install/lib/:$LD_LIBRARY_PATH"
source /usr/apps/gcc/4.2.2/setup.sh
export PATH="/usr/apps/automake/1.9.6/bin:$PATH"
export PATH="/home/willcock2/swig-install/bin:$PATH"
# export PATH="/home/willcock2/tcl8.5-install/bin:$PATH"
# export LD_LIBRARY_PATH="/home/willcock2/tcl8.5-install/lib:$LD_LIBRARY_PATH"
# export PATH="/home/willcock2/binutils-install/bin/:$PATH"
# export LD_LIBRARY_PATH="/home/willcock2/binutils-install/lib/:$LD_LIBRARY_PATH"

set -e

(
echo "Subject: Starting ROSE test $$" > mailtext1
echo "" >> mailtext1
echo "See build log in ${ROSE_TOP}/buildlog for status" >> mailtext1
echo "Configure flags = $@" >> mailtext1
echo "" >> mailtext1
echo "> Command versions" >> mailtext1
automake --version | head -1 >> mailtext1
autoconf --version | head -1 >> mailtext1
make --version | head -1 >> mailtext1
g++ --version | head -1 >> mailtext1
gcc --version | head -1 >> mailtext1
bison --version | head -1 >> mailtext1
echo -n "doxygen " >> mailtext1
doxygen --version >> mailtext1
dot -V >> mailtext1 2>&1
libtool --version | sed '2,$d' >> mailtext1 # head -1 crashes
latex --version | head -1 >> mailtext1
latex2html -v | grep -w LaTeX2HTML >> mailtext1
swig -version | grep -w SWIG >> mailtext1
) || echo "Command version check failed"

/usr/sbin/sendmail -i $MAILADDRS < mailtext1

buildstatus=0
(
  set -e
  set -x
#------------------------------------------------------
# check out a fresh copy for testing
  $SVN export -q ${ROSE_SVNROOT} sourcetree

#------------------------------------------------------
# rebuild the Makefile in the source tree
  echo "Build configuration and Makefile.in in the source tree...."
  cd sourcetree
  ./build
  cd ..

#------------------------------------------------------
# prepare a fresh build tree
  echo "Making a temporary build directory:... "
  mkdir build

#------------------------------------------------------
# configure ROSE
  cd build
# ROSE_CONFIG_FLAGS="--without-binary_analysis --enable-rosehpct --with-openFortranParser=/home/liao6/download/fortran-parser --with-Java=/usr/apps/java/jdk1.5.0_11 --with-JavaJVM=/usr/apps/java/jdk1.5.0_11/jre/lib/i386/server"
  ../sourcetree/configure --with-edg_source_code=true --enable-dq-developer-tests --with-ROSE_LONG_MAKE_CHECK_RULE=yes --with-CXX_DEBUG=-g --with-C_DEBUG=-g --with-CXX_WARNINGS=-Wall --with-CXXFLAGS=-fPIC -with-CFLAGS=-fPIC --prefix="`pwd`/../install" "$@"

#------------------------------------------------------
# make and check
  make && \
  make docs && \
  make check && \
  make install && \
  make installcheck && \
  make dist && \
  make distcheck
) >buildlog 2>&1 || buildstatus=1

if [ $buildstatus == 0 ]; then
  echo "Subject: ROSE test $$ results (pass)" > mailtext
  echo "" >> mailtext
else
  echo "Subject: ROSE test $$ results (fail)" > mailtext
  echo "" >> mailtext
  echo "-------------------- Error summary --------------------" >> mailtext
  tail -100 buildlog >> mailtext
  echo "" >> mailtext
fi
# echo "-------------------- Full log      --------------------" >> mailtext
# cat buildlog >> mailtext (too big)
/usr/sbin/sendmail -i $MAILADDRS < mailtext
# rm -rf "${ROSE_TOP}"
