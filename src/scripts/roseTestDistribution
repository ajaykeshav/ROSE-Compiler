#!/bin/tcsh -e
echo "This tests a distribution to make sure it can be used with different configure options."
echo "Testing: $1"


# mv ROSE ROSE.old


# This test only checks out a new version of ROSE and prepares it for the subsequent steps.
if (1) then
   # rm -rf ROSE.old &
   # Calling this causes acmacros directory to be checked out and conflicts with the script
   # when "cd ../../.." is called causing the script to stall.
   # cvs -d /usr/casc/overture/ROSE/ROSE2_Repository checkout ROSE
   tar -zxf $1.tar.gz
   echo "Build is not present and not required for a rose distribution"
endif

# This is the test using the a lot of configure options of the configure script
if (1) then
   echo "cd into CompileTreeAllConfigureOptions/<all files>"
   mkdir -p CompileTreeAllConfigureOptions
   chmod -R +w CompileTreeAllConfigureOptions
   touch CompileTreeAllConfigureOptions/tmp_file
   rm -rf CompileTreeAllConfigureOptions/*
   cd CompileTreeAllConfigureOptions
#  ../$1/configure --with-edg_source_code=true --enable-dq-developer-tests --with-ROSE_LONG_MAKE_CHECK_RULE=yes --with-binary_analysis --enable-rosehpct --with-Java=/usr/apps/java/jdk1.5.0_11 --with-JavaJVM=/usr/apps/java/jdk1.5.0_11/jre/lib/amd64/server --with-openFortranParser=/home/dquinlan/ROSE/OpenFortranParser/fortran-parser --with-CXX_DEBUG=-g --with-C_DEBUG=-g --with-CXX_WARNINGS=-Wall --with-CXXFLAGS=-fPIC -with-CFLAGS=-fPIC --prefix=`pwd` |& tee configure.out
   ../$1/configure --with-edg_source_code=true --enable-dq-developer-tests --with-ROSE_LONG_MAKE_CHECK_RULE=yes --enable-rosehpct --with-Java=/usr/apps/java/jdk1.5.0_11 --with-JavaJVM=/usr/apps/java/jdk1.5.0_11/jre/lib/amd64/server --with-openFortranParser=/home/dquinlan/ROSE/OpenFortranParser/fortran-parser --with-CXX_DEBUG=-g --with-C_DEBUG=-g --with-CXX_WARNINGS=-Wall --with-CXXFLAGS=-fPIC -with-CFLAGS=-fPIC --prefix=`pwd` |& tee configure.out
   echo "*****************************************************"
   echo "**************   DONE with configure  ***************"
   echo "*****************************************************"
   make -j16 |& tee make.out
   echo "*******************************************************"
   echo "**************   DONE with Compilation  ***************"
   echo "*******************************************************"
   make -j16 check |& tee make_check.out
   echo "******************************************************"
   echo "**************   DONE with make check  ***************"
   echo "******************************************************"
   echo "We can't run make distcheck from a distribution!"
 # make -j16 distcheck |& tee make_distcheck.out
   cd ..
   echo "*****************************************************"
   echo "**************   DONE with all tests  ***************"
   echo "*****************************************************"
endif

# This is an old test when we used the 2.96 version of g++ and the 3.x version 
# of g++ was new.  Now the 3.x compiler is the default.  Though perhaps we should 
# test with the 3.4 version of g++ :-).
if (0) then
   echo "cd into CompileTreeDefaultConfigureOptions_GNU_3x/<all files>"
   chmod -R +w CompileTreeDefaultConfigureOptions_GNU_3x
   rm -rf CompileTreeDefaultConfigureOptions_GNU_3x/*
   cd CompileTreeDefaultConfigureOptions_GNU_3x
   ../ROSE/configure --with-edg_source_code=true --prefix=`pwd` |& tee configure.out
   make -j4 |& tee make.out
 # Can't use -j is "make check" for AST_RewriteMechanism directory
   make check |& tee make_check.out
   make distcheck |& tee make_distcheck.out
   cd ..
endif

# This is the test using the default setting of the configure script
if (0) then
   echo "cd into CompileTreeDefaultConfigureOptions/<all files>"
   chmod -R +w CompileTreeDefaultConfigureOptions
   rm -rf CompileTreeDefaultConfigureOptions/*
   cd CompileTreeDefaultConfigureOptions
   ../ROSE/configure --with-edg_source_code=true --prefix=`pwd` |& tee configure.out
   make -j16 |& tee make.out
   make -j16 check |& tee make_check.out
   make -j16 distcheck |& tee make_distcheck.out
   cd ..
endif

# This is the test of the most common development options used by Dan Quinlan
if (0) then
   echo "cd into CompileTreeDevelopmentOptions/<all files>"
   chmod -R +w CompileTreeDevelopmentOptions
   rm -rf CompileTreeDevelopmentOptions/*
   cd CompileTreeDevelopmentOptions
   ../ROSE/configure --with-edg_source_code=true --enable-dq-developer-tests --with-AxxPxx=/home/dquinlan/ROSE/A++P++Install --prefix=`pwd` |& tee configure.out
   make -j4 |& tee make.out
   make -j4 check |& tee make_check.out
   make -j4 distcheck |& tee make_distcheck.out
   cd ..
endif

# DQ (10/23/2004): Skip this test until we know that the simpler test passes!
# This is the test of the database option within ROSE
if (0) then
   echo "cd into CompileTreeDataBaseOption/<all files>"
   chmod -R +w CompileTreeDataBaseOption
   rm -rf CompileTreeDataBaseOption/*
   cd CompileTreeDataBaseOption
   ../ROSE/configure --with-edg_source_code=true --with-MySQL=/usr/casc/overture/MySQL/MySQL_Install \
      --with-MySQL_username=dquinlan --with-MySQL_server=tux49 --with-MySQL_password=rosepwd \
      --with-MySQL_database_name=databasedq --with-CXX_DEBUG=-g --with-C_DEBUG=-g \
      --with-CXX_WARNINGS=-Wall --enable-dq-developer-tests \
      --prefix=/home/dquinlan2/ROSE/LINUX-3.2.3 --enable-doxygen-developer-docs |& tee configure.out
   make -j4 |& tee make.out
   make -j4 check |& tee make_check.out
   make -j4 distcheck |& tee make_distcheck.out
   cd ..
endif

# This is a test of the database and vizualization options within ROSE
if (0) then
   echo "cd into CompileTreeDataBaseAndVisualizationOptions/<all files>"
   chmod -R +w CompileTreeDataBaseAndVisualizationOptions
   rm -rf CompileTreeDataBaseAndVisualizationOptions/*
   cd CompileTreeDataBaseAndVisualizationOptions
   ../ROSE/configure --with-edg_source_code=true --with-FLTK_include=/home/thuerey1/local/include --with-FLTK_libs=/home/thuerey1/local/lib --with-GraphViz_include=/home/thuerey1/local/include/graphviz --with-GraphViz_libs=/home/thuerey1/local/lib/graphviz --with-MySQL=/home/thuerey1/local --with-MySQL_server=tux32.llnl.gov --with-CXX_DEBUG=-g --with-C_DEBUG=-g --with-CXX_WARNINGS=-Wall --enable-dq-developer-tests --with-AxxPxx=/home/dquinlan/ROSE/A++P++Install --prefix=`pwd` |& tee configure.out
   make -j4 |& tee make.out
   make -j4 check |& tee make_check.out
   make -j4 distcheck |& tee make_distcheck.out
   cd ..
endif

# DQ (9/3/2005): Added to test QRose implementation
# This is a test of the QRose GUI and datastructure visualization and the new installation
# of Nil's dotGL options within ROSE.
if (0) then
   echo "cd into CompileTreeQRoseAndVisualizationOptions/<all files>"
   chmod -R +w CompileTreeQRoseAndVisualizationOptions
   rm -rf CompileTreeQRoseAndVisualizationOptions/*
   cd CompileTreeQRoseAndVisualizationOptions
   ../ROSE/configure --enable-dq-developer-tests --with-CXX_DEBUG=-g --with-C_DEBUG=-g --with-CXX_WARNINGS=-Wall --with-AxxPxx=/home/dquinlan/ROSE/A++P++Install --prefix=/home/dquinlan2/ROSE/AndreasWork/CompilerTree --with-GraphViz_include=/usr/apps/graphviz/1.10/include/graphviz --with-GraphViz_libs=/usr/apps/graphviz/1.10/lib/graphviz --with-FLTK_include=/home/dquinlan/FLTK/fltk_install/include --with-GLUT_include=/home/dquinlan/FreeGlut/freeglut_install/include --with-FLTK_libs=/home/dquinlan/FLTK/fltk_install/lib --with-GLUT_libs=/home/dquinlan/FreeGlut/freeglut_install/lib --with-qt-includes=/home/jose/local/qt/include --with-qt-libraries=/home/jose/local/qt/lib --with-edg_source_code=true --prefix=`pwd` --with-QRose |& tee configure.out
   make -j4 |& tee make.out
   make -j4 check |& tee make_check.out
   make -j4 distcheck |& tee make_distcheck.out
   cd ..
endif

