#!/bin/bash -x 
#
# A script to do tests on a local working copy of ROSE
#  used before committing local changes to the SVN repository.
#
# Set up the following before using:
#
# 1. The path to the source and build directories of ROSE
# 2. The configuration options
# 3. The log file name and path
# 4. Others in the following configuration part
#
# Dan Quinlan, 5/13/2008 (copied form Liao's roseLocalTest script)
#------------------------------------------------------
# Configuration Section
#------------------------------------------------------
MAILADDRS="dquinlan@llnl.gov"
#MAILADDRS="willcock2@llnl.gov liaoch@llnl.gov dquinlan@llnl.gov"

ROSE_TOP=/home/dquinlan/ROSE
ROSE_SRC=${ROSE_TOP}/svn-rose
# $$ is the current process Id
# ROSE_BUILD="${ROSE_TOP}/rose-local-test/rosetest_build"
ROSE_BUILD="${ROSE_TOP}/ROSE_CompileTree/svn-LINUX-64bit-3.4.6-fortran"
# ROSE_INSTALL="${ROSE_TOP}/rose-local-test/rosetest_install"
ROSE_INSTALL="${ROSE_BUILD}"
BUILD_LOG="${ROSE_BUILD}/../buildlog"
BOOST_INSTALL=/home/dquinlan/local/boost_1_35_0_install

# store configuration options into an array ()
# $@ means the optional parameters provided with the command line running current script 
CONFIGURE_FLAGS=(--without-binary_analysis --with-edg_source_code=true --enable-dq-developer-tests --with-ROSE_LONG_MAKE_CHECK_RULE=yes --enable-rosehpct --with-Java=/usr/apps/java/jdk1.5.0_11 --with-JavaJVM=/usr/apps/java/jdk1.5.0_11/jre/lib/amd64/server --with-openFortranParser=/home/dquinlan/ROSE/OpenFortranParser/ofp_install --with-CXX_DEBUG=-g --with-C_DEBUG=-g --with-CXX_WARNINGS=-Wall --with-CXXFLAGS=-fPIC -with-CFLAGS=-fPIC --with-boost=${BOOST_INSTALL} --prefix="${ROSE_INSTALL}" "$@")

# make using multiple processes
MAKEFLAGS="-j16"

#------------------------------------------------------
# Preparation Section 
#------------------------------------------------------
# the return value of a pipeline is the value of the last (rightmost) command 
# to exit with a non-zero status, or zero if all commands in the pipeline exit successfully
set -o pipefail
# turn off termination-on-error since some scripts to be sourced are not perfect
set +e

# set environment for making/using ROSE
source /usr/apps/graphviz/2.6/setup.sh
#source /usr/apps/python/2.5/setup.sh
source /usr/apps/gcc/4.2.2/setup.sh

export PATH="/usr/apps/java/jdk1.5.0_11/bin:$PATH"
export PATH="/usr/apps/automake/1.9.6/bin:$PATH"
export BOOST_ROOT=${BOOST_INSTALL}

export LD_LIBRARY_PATH="${BOOST_ROOT}/lib:/usr/apps/java/jdk1.5.0_11/lib:/usr/apps/java/jdk1.5.0_11/jre/lib/amd64/client:$LD_LIBRARY_PATH"
export LD_LIBRARY_PATH="/home/dquinlan/ROSE/OpenFortranParser/ofp_install/lib/:$LD_LIBRARY_PATH"

export JAVA_HOME=/usr/apps/java/jdk1.5.0_11
# export CLASSPATH="/home/liao6/opt/antlr-3.0.1/lib/antlr-2.7.7.jar:/home/liao6/opt/antlr-3.0.1/lib/antlr-3.0.1.jar:/home/liao6/opt/antlr-3.0.1/lib/antlr-runtime-3.0.1.jar:/home/liao6/opt/antlr-3.0.1/lib/stringtemplate-3.1b1.jar:/home/dquinlan/ROSE/OpenFortranParser/ofp_install/lib/OpenFortranParser.jar:."
export CLASSPATH="/home/dquinlan/ANTLR/antlr-3.0/lib/antlr-3.0.jar:/home/dquinlan/ANTLR/antlr-3.0/lib/antlr-2.7.7.jar:/home/dquinlan/ANTLR/antlr-3.0/lib/stringtemplate-3.0.jar:/home/dquinlan/ROSE/OpenFortranParser/ofp_install/lib/OpenFortranParser.jar"

#------------------------------------------------------
# Starting Section
#------------------------------------------------------
#Exit immediately if a command fails
set -e
(
echo "Subject: Local ROSE test $$ starting " > mailtext1
echo "" >> mailtext1
echo "See build log in ${BUILD_LOG} for status" >> mailtext1
echo "" >> mailtext1
# array[@] means expand each element of the array
echo "Configure flags = ${CONFIGURE_FLAGS[@]}" >> mailtext1
echo "Make flags = ${MAKEFLAGS}" >> mailtext
echo "" >> mailtext1
echo "> Command versions" >> mailtext1
automake --version | head -1 >> mailtext1
autoconf --version | head -1 >> mailtext1
make --version | head -1 >> mailtext1
g++ --version | head -1 >> mailtext1
gcc --version | head -1 >> mailtext1
bison --version | head -1 >> mailtext1
echo -n "doxygen " >> mailtext1
doxygen --version >> mailtext1
dot -V >> mailtext1 2>&1
libtool --version | sed '2,$d' >> mailtext1 # head -1 crashes
latex --version | head -1 >> mailtext1
latex2html -v | grep -w LaTeX2HTML >> mailtext1
) || echo "Command version check failed"

/usr/sbin/sendmail -i $MAILADDRS < mailtext1

#------------------------------------------------------
#  Building and Making Section
#------------------------------------------------------
touch ${BUILD_LOG}
ls -l ${BUILD_LOG}
buildstatus=0
(
  set -e
#print a trace of shell commands such as for, case, select, for debugging purpose
  set -x
# rebuild the Makefile in the source tree (this will cause configure to be rerun, which is annoying)
  echo "Build configuration and Makefile.in in the source tree...."
  cd ${ROSE_SRC}
#  ./build
  cd ..

# prepare a fresh build tree
 echo "Making a fresh build directory:... "
# rm -rf ${ROSE_BUILD}
# mkdir -p ${ROSE_BUILD}

#touch ${BUILD_LOG}
#ls -l ${BUILD_LOG}

# configure ROSE
  cd ${ROSE_BUILD}
  echo "Running configure:... "
#  ${ROSE_SRC}/configure "${CONFIGURE_FLAGS[@]}"
  echo "DONE: Running configure:... "

#  echo "Skipping testing of ROSE."

# make and check
  make $MAKEFLAGS && \ 
  make $MAKEFLAGS docs &&\
  make $MAKEFLAGS check &&\
  make $MAKEFLAGS install &&\
  make $MAKEFLAGS installcheck &&\
  make $MAKEFLAGS dist  &&\
  make $MAKEFLAGS distcheck

) >${BUILD_LOG} 2>&1 || buildstatus=1

#------------------------------------------------------
# Reporting Section
#------------------------------------------------------

ls -l ${BUILD_LOG}
echo "Ending Rose tests: buildstatus = $buildstatus"

if [ $buildstatus == 0 ]; then
  echo "Subject: Local ROSE test $$ results (pass)" > mailtext
  echo "" >> mailtext
  echo "Configure flags = ${CONFIGURE_FLAGS[@]}" >> mailtext
  echo "Make flags = ${MAKEFLAGS}" >> mailtext
else
  echo "Subject: Local ROSE test $$ results (fail)" > mailtext
  echo "" >> mailtext
  echo "-------------------- Error summary --------------------" >> mailtext
  echo "Configure flags = ${CONFIGURE_FLAGS[@]}" >> mailtext
  echo "Make flags = ${MAKEFLAGS}" >> mailtext
  echo "" >> mailtext
  tail -100 ${BUILD_LOG} >> mailtext
  echo "" >> mailtext
fi
/usr/sbin/sendmail -i $MAILADDRS < mailtext
# rm -rf "${ROSE_BUILD}"
