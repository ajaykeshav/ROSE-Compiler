m4trace:aclocal.m4:736: -1- AC_SUBST([am__quote])
m4trace:aclocal.m4:736: -1- AC_SUBST_TRACE([am__quote])
m4trace:aclocal.m4:736: -1- m4_pattern_allow([^am__quote$])
m4trace:aclocal.m4:1222: -1- m4_include([acmacros/canonicalize-symlink.m4])
m4trace:aclocal.m4:1223: -1- m4_include([acmacros/compiler-ar.m4])
m4trace:aclocal.m4:1224: -1- m4_include([acmacros/compiler-id.m4])
m4trace:aclocal.m4:1225: -1- m4_include([acmacros/configure-log.m4])
m4trace:aclocal.m4:1226: -1- m4_include([acmacros/pkg.m4])
m4trace:aclocal.m4:1227: -1- m4_include([acmacros/upc.m4])
m4trace:aclocal.m4:1228: -1- m4_include([config/EDG.m4])
m4trace:aclocal.m4:1229: -1- m4_include([config/ROSE.m4])
m4trace:aclocal.m4:1230: -1- m4_include([config/ac_pkg_swig.m4])
m4trace:aclocal.m4:1231: -1- m4_include([config/acinclude.m4])
m4trace:aclocal.m4:1232: -1- m4_include([config/ax_boost_base.m4])
m4trace:aclocal.m4:1233: -1- m4_include([config/ax_boost_chrono.m4])
m4trace:aclocal.m4:1234: -1- m4_include([config/ax_boost_date_time.m4])
m4trace:aclocal.m4:1235: -1- m4_include([config/ax_boost_filesystem.m4])
m4trace:aclocal.m4:1236: -1- m4_include([config/ax_boost_iostreams.m4])
m4trace:aclocal.m4:1237: -1- m4_include([config/ax_boost_program_options.m4])
m4trace:aclocal.m4:1238: -1- m4_include([config/ax_boost_random.m4])
m4trace:aclocal.m4:1239: -1- m4_include([config/ax_boost_regex.m4])
m4trace:aclocal.m4:1240: -1- m4_include([config/ax_boost_serialization.m4])
m4trace:aclocal.m4:1241: -1- m4_include([config/ax_boost_system.m4])
m4trace:aclocal.m4:1242: -1- m4_include([config/ax_boost_thread.m4])
m4trace:aclocal.m4:1243: -1- m4_include([config/ax_boost_wave.m4])
m4trace:aclocal.m4:1244: -1- m4_include([config/ax_compare_version.m4])
m4trace:aclocal.m4:1245: -1- m4_include([config/ax_compiler_vendor.m4])
m4trace:aclocal.m4:1246: -1- m4_include([config/ax_cxx_compile_stdcxx.m4])
m4trace:aclocal.m4:1247: -1- m4_include([config/ax_cxx_compile_stdcxx_11.m4])
m4trace:aclocal.m4:1248: -1- m4_include([config/ax_cxx_compile_stdcxx_14.m4])
m4trace:aclocal.m4:1249: -1- m4_include([config/ax_lib_mysql.m4])
m4trace:aclocal.m4:1250: -1- m4_include([config/ax_lib_sqlite3.m4])
m4trace:aclocal.m4:1251: -1- m4_include([config/ax_lib_xerces.m4])
m4trace:aclocal.m4:1252: -1- m4_include([config/ax_prog_bison_version.m4])
m4trace:aclocal.m4:1253: -1- m4_include([config/ax_python_devel.m4])
m4trace:aclocal.m4:1254: -1- m4_include([config/ax_with_prog.m4])
m4trace:aclocal.m4:1255: -1- m4_include([config/choose-backend-compiler.m4])
m4trace:aclocal.m4:1256: -1- m4_include([config/compiler-defs.m4])
m4trace:aclocal.m4:1257: -1- m4_include([config/determine-os.m4])
m4trace:aclocal.m4:1258: -1- m4_include([config/enable-rosehpct.m4])
m4trace:aclocal.m4:1259: -1- m4_include([config/generate-backend-compiler-specific-headers.m4])
m4trace:aclocal.m4:1260: -1- m4_include([config/libtool.m4])
m4trace:aclocal.m4:1261: -1- m4_include([config/libxml.m4])
m4trace:aclocal.m4:1262: -1- m4_include([config/ltargz.m4])
m4trace:aclocal.m4:1263: -1- m4_include([config/ltdl.m4])
m4trace:aclocal.m4:1264: -1- m4_include([config/ltoptions.m4])
m4trace:aclocal.m4:1265: -1- m4_include([config/ltsugar.m4])
m4trace:aclocal.m4:1266: -1- m4_include([config/ltversion.m4])
m4trace:aclocal.m4:1267: -1- m4_include([config/lt~obsolete.m4])
m4trace:aclocal.m4:1268: -1- m4_include([config/mdl_have_opengl_2014.m4])
m4trace:aclocal.m4:1269: -1- m4_include([config/qrose_indigo_1.m4])
m4trace:aclocal.m4:1270: -1- m4_include([config/qrose_indigo_1_windows.m4])
m4trace:aclocal.m4:1271: -1- m4_include([config/support-GraphViz.m4])
m4trace:aclocal.m4:1272: -1- m4_include([config/support-IntelPin.m4])
m4trace:aclocal.m4:1273: -1- m4_include([config/support-accelerator.m4])
m4trace:aclocal.m4:1274: -1- m4_include([config/support-aterm.m4])
m4trace:aclocal.m4:1275: -1- m4_include([config/support-backend-x10.m4])
m4trace:aclocal.m4:1276: -1- m4_include([config/support-bddbddb.m4])
m4trace:aclocal.m4:1277: -1- m4_include([config/support-binary.m4])
m4trace:aclocal.m4:1278: -1- m4_include([config/support-bison.m4])
m4trace:aclocal.m4:1279: -1- m4_include([config/support-blacklist.m4])
m4trace:aclocal.m4:1280: -1- m4_include([config/support-boost.m4])
m4trace:aclocal.m4:1281: -1- m4_include([config/support-capstone.m4])
m4trace:aclocal.m4:1282: -1- m4_include([config/support-clang.m4])
m4trace:aclocal.m4:1283: -1- m4_include([config/support-cobol.m4])
m4trace:aclocal.m4:1284: -1- m4_include([config/support-compass2.m4])
m4trace:aclocal.m4:1285: -1- m4_include([config/support-compiler-features.m4])
m4trace:aclocal.m4:1286: -1- m4_include([config/support-cuda.m4])
m4trace:aclocal.m4:1287: -1- m4_include([config/support-doxygen.m4])
m4trace:aclocal.m4:1288: -1- m4_include([config/support-dwarf.m4])
m4trace:aclocal.m4:1289: -1- m4_include([config/support-edg-debugging.m4])
m4trace:aclocal.m4:1290: -1- m4_include([config/support-edg.m4])
m4trace:aclocal.m4:1291: -1- m4_include([config/support-elf.m4])
m4trace:aclocal.m4:1292: -1- m4_include([config/support-fatal-rose-warnings.m4])
m4trace:aclocal.m4:1293: -1- m4_include([config/support-flang.m4])
m4trace:aclocal.m4:1294: -1- m4_include([config/support-gcc-omp.m4])
m4trace:aclocal.m4:1295: -1- m4_include([config/support-gcrypt.m4])
m4trace:aclocal.m4:1296: -1- m4_include([config/support-gmp.m4])
m4trace:aclocal.m4:1297: -1- m4_include([config/support-gnat.m4])
m4trace:aclocal.m4:1298: -1- m4_include([config/support-gomp-omp.m4])
m4trace:aclocal.m4:1299: -1- m4_include([config/support-haskell.m4])
m4trace:aclocal.m4:1300: -1- m4_include([config/support-i386.m4])
m4trace:aclocal.m4:1301: -1- m4_include([config/support-ida.m4])
m4trace:aclocal.m4:1302: -1- m4_include([config/support-insure.m4])
m4trace:aclocal.m4:1303: -1- m4_include([config/support-isl.m4])
m4trace:aclocal.m4:1304: -1- m4_include([config/support-java.m4])
m4trace:aclocal.m4:1305: -1- m4_include([config/support-languages.m4])
m4trace:aclocal.m4:1306: -1- m4_include([config/support-lcov.m4])
m4trace:aclocal.m4:1307: -1- m4_include([config/support-libffi.m4])
m4trace:aclocal.m4:1308: -1- m4_include([config/support-libharu.m4])
m4trace:aclocal.m4:1309: -1- m4_include([config/support-libpqxx.m4])
m4trace:aclocal.m4:1310: -1- m4_include([config/support-llvm.m4])
m4trace:aclocal.m4:1311: -1- m4_include([config/support-magic.m4])
m4trace:aclocal.m4:1312: -1- m4_include([config/support-maple.m4])
m4trace:aclocal.m4:1313: -1- m4_include([config/support-mint.m4])
m4trace:aclocal.m4:1314: -1- m4_include([config/support-mpi.m4])
m4trace:aclocal.m4:1315: -1- m4_include([config/support-octave.m4])
m4trace:aclocal.m4:1316: -1- m4_include([config/support-ofp.m4])
m4trace:aclocal.m4:1317: -1- m4_include([config/support-omp.m4])
m4trace:aclocal.m4:1318: -1- m4_include([config/support-php.m4])
m4trace:aclocal.m4:1319: -1- m4_include([config/support-pocc.m4])
m4trace:aclocal.m4:1320: -1- m4_include([config/support-projects.m4])
m4trace:aclocal.m4:1321: -1- m4_include([config/support-purify.m4])
m4trace:aclocal.m4:1322: -1- m4_include([config/support-python-api.m4])
m4trace:aclocal.m4:1323: -1- m4_include([config/support-python.m4])
m4trace:aclocal.m4:1324: -1- m4_include([config/support-readline.m4])
m4trace:aclocal.m4:1325: -1- m4_include([config/support-rose.m4])
m4trace:aclocal.m4:1326: -1- m4_include([config/support-rted.m4])
m4trace:aclocal.m4:1327: -1- m4_include([config/support-rtedupc.m4])
m4trace:aclocal.m4:1328: -1- m4_include([config/support-sanitizer.m4])
m4trace:aclocal.m4:1329: -1- m4_include([config/support-sat.m4])
m4trace:aclocal.m4:1330: -1- m4_include([config/support-spot.m4])
m4trace:aclocal.m4:1331: -1- m4_include([config/support-ssl.m4])
m4trace:aclocal.m4:1332: -1- m4_include([config/support-stratego.m4])
m4trace:aclocal.m4:1333: -1- m4_include([config/support-summary.m4])
m4trace:aclocal.m4:1334: -1- m4_include([config/support-swipl.m4])
m4trace:aclocal.m4:1335: -1- m4_include([config/support-valgrind.m4])
m4trace:aclocal.m4:1336: -1- m4_include([config/support-vectorization.m4])
m4trace:aclocal.m4:1337: -1- m4_include([config/support-visualization.m4])
m4trace:aclocal.m4:1338: -1- m4_include([config/support-windows.m4])
m4trace:aclocal.m4:1339: -1- m4_include([config/support-x10.m4])
m4trace:aclocal.m4:1340: -1- m4_include([config/support-yaml.m4])
m4trace:aclocal.m4:1341: -1- m4_include([config/support-yices.m4])
m4trace:aclocal.m4:1342: -1- m4_include([config/support-z3.m4])
m4trace:aclocal.m4:1343: -1- m4_include([config/support_POET.m4])
m4trace:aclocal.m4:1344: -1- m4_include([config/swig_enable_cxx.m4])
m4trace:configure.ac:7: -1- AC_INIT([ROSE], [0.11.0.0])
m4trace:configure.ac:7: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:7: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:7: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:7: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:7: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:7: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:7: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:7: -1- AC_SUBST([SHELL])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([SHELL])
m4trace:configure.ac:7: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:7: -1- AC_SUBST([PATH_SEPARATOR])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([PATH_SEPARATOR])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:7: -1- AC_SUBST([PACKAGE_NAME], [m4_ifdef([AC_PACKAGE_NAME],      ['AC_PACKAGE_NAME'])])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([PACKAGE_NAME])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:7: -1- AC_SUBST([PACKAGE_TARNAME], [m4_ifdef([AC_PACKAGE_TARNAME],   ['AC_PACKAGE_TARNAME'])])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([PACKAGE_TARNAME])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:7: -1- AC_SUBST([PACKAGE_VERSION], [m4_ifdef([AC_PACKAGE_VERSION],   ['AC_PACKAGE_VERSION'])])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([PACKAGE_VERSION])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:7: -1- AC_SUBST([PACKAGE_STRING], [m4_ifdef([AC_PACKAGE_STRING],    ['AC_PACKAGE_STRING'])])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([PACKAGE_STRING])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:7: -1- AC_SUBST([PACKAGE_BUGREPORT], [m4_ifdef([AC_PACKAGE_BUGREPORT], ['AC_PACKAGE_BUGREPORT'])])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([PACKAGE_BUGREPORT])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:7: -1- AC_SUBST([PACKAGE_URL], [m4_ifdef([AC_PACKAGE_URL],       ['AC_PACKAGE_URL'])])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([PACKAGE_URL])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:7: -1- AC_SUBST([exec_prefix], [NONE])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([exec_prefix])
m4trace:configure.ac:7: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:7: -1- AC_SUBST([prefix], [NONE])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([prefix])
m4trace:configure.ac:7: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:7: -1- AC_SUBST([program_transform_name], [s,x,x,])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([program_transform_name])
m4trace:configure.ac:7: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:7: -1- AC_SUBST([bindir], ['${exec_prefix}/bin'])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([bindir])
m4trace:configure.ac:7: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:7: -1- AC_SUBST([sbindir], ['${exec_prefix}/sbin'])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([sbindir])
m4trace:configure.ac:7: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:7: -1- AC_SUBST([libexecdir], ['${exec_prefix}/libexec'])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([libexecdir])
m4trace:configure.ac:7: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:7: -1- AC_SUBST([datarootdir], ['${prefix}/share'])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([datarootdir])
m4trace:configure.ac:7: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:7: -1- AC_SUBST([datadir], ['${datarootdir}'])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([datadir])
m4trace:configure.ac:7: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:7: -1- AC_SUBST([sysconfdir], ['${prefix}/etc'])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([sysconfdir])
m4trace:configure.ac:7: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:7: -1- AC_SUBST([sharedstatedir], ['${prefix}/com'])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([sharedstatedir])
m4trace:configure.ac:7: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:7: -1- AC_SUBST([localstatedir], ['${prefix}/var'])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([localstatedir])
m4trace:configure.ac:7: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:7: -1- AC_SUBST([runstatedir], ['${localstatedir}/run'])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([runstatedir])
m4trace:configure.ac:7: -1- m4_pattern_allow([^runstatedir$])
m4trace:configure.ac:7: -1- AC_SUBST([includedir], ['${prefix}/include'])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([includedir])
m4trace:configure.ac:7: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:7: -1- AC_SUBST([oldincludedir], ['/usr/include'])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([oldincludedir])
m4trace:configure.ac:7: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:7: -1- AC_SUBST([docdir], [m4_ifset([AC_PACKAGE_TARNAME],
				     ['${datarootdir}/doc/${PACKAGE_TARNAME}'],
				     ['${datarootdir}/doc/${PACKAGE}'])])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([docdir])
m4trace:configure.ac:7: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:7: -1- AC_SUBST([infodir], ['${datarootdir}/info'])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([infodir])
m4trace:configure.ac:7: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:7: -1- AC_SUBST([htmldir], ['${docdir}'])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([htmldir])
m4trace:configure.ac:7: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:7: -1- AC_SUBST([dvidir], ['${docdir}'])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([dvidir])
m4trace:configure.ac:7: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:7: -1- AC_SUBST([pdfdir], ['${docdir}'])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([pdfdir])
m4trace:configure.ac:7: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:7: -1- AC_SUBST([psdir], ['${docdir}'])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([psdir])
m4trace:configure.ac:7: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:7: -1- AC_SUBST([libdir], ['${exec_prefix}/lib'])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([libdir])
m4trace:configure.ac:7: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:7: -1- AC_SUBST([localedir], ['${datarootdir}/locale'])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([localedir])
m4trace:configure.ac:7: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:7: -1- AC_SUBST([mandir], ['${datarootdir}/man'])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([mandir])
m4trace:configure.ac:7: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:7: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_NAME])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:7: -1- AH_OUTPUT([PACKAGE_NAME], [/* Define to the full name of this package. */
@%:@undef PACKAGE_NAME])
m4trace:configure.ac:7: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_TARNAME])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:7: -1- AH_OUTPUT([PACKAGE_TARNAME], [/* Define to the one symbol short name of this package. */
@%:@undef PACKAGE_TARNAME])
m4trace:configure.ac:7: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_VERSION])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:7: -1- AH_OUTPUT([PACKAGE_VERSION], [/* Define to the version of this package. */
@%:@undef PACKAGE_VERSION])
m4trace:configure.ac:7: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_STRING])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:7: -1- AH_OUTPUT([PACKAGE_STRING], [/* Define to the full name and version of this package. */
@%:@undef PACKAGE_STRING])
m4trace:configure.ac:7: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_BUGREPORT])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:7: -1- AH_OUTPUT([PACKAGE_BUGREPORT], [/* Define to the address where bug reports for this package should be sent. */
@%:@undef PACKAGE_BUGREPORT])
m4trace:configure.ac:7: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_URL])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:7: -1- AH_OUTPUT([PACKAGE_URL], [/* Define to the home page for this package. */
@%:@undef PACKAGE_URL])
m4trace:configure.ac:7: -1- AC_SUBST([DEFS])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([DEFS])
m4trace:configure.ac:7: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:7: -1- AC_SUBST([ECHO_C])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([ECHO_C])
m4trace:configure.ac:7: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:7: -1- AC_SUBST([ECHO_N])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([ECHO_N])
m4trace:configure.ac:7: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:7: -1- AC_SUBST([ECHO_T])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([ECHO_T])
m4trace:configure.ac:7: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:7: -1- AC_SUBST([LIBS])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([LIBS])
m4trace:configure.ac:7: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:7: -1- AC_SUBST([build_alias])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([build_alias])
m4trace:configure.ac:7: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:7: -1- AC_SUBST([host_alias])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([host_alias])
m4trace:configure.ac:7: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:7: -1- AC_SUBST([target_alias])
m4trace:configure.ac:7: -1- AC_SUBST_TRACE([target_alias])
m4trace:configure.ac:7: -1- m4_pattern_allow([^target_alias$])
m4trace:configure.ac:12: -1- AC_DEFINE_TRACE_LITERAL([ROSE_SCM_VERSION_ID])
m4trace:configure.ac:12: -1- m4_pattern_allow([^ROSE_SCM_VERSION_ID$])
m4trace:configure.ac:12: -1- AH_OUTPUT([ROSE_SCM_VERSION_ID], [/* Set SCM version information to ROSE version. */
@%:@undef ROSE_SCM_VERSION_ID])
m4trace:configure.ac:19: -1- AC_DEFINE_TRACE_LITERAL([ROSE_VERSION])
m4trace:configure.ac:19: -1- m4_pattern_allow([^ROSE_VERSION$])
m4trace:configure.ac:19: -1- AH_OUTPUT([ROSE_VERSION], [/* Integer encoded ROSE version A.B.C.D as ABBCCCDDD. */
@%:@undef ROSE_VERSION])
m4trace:configure.ac:51: -1- AC_CONFIG_AUX_DIR([config])
m4trace:configure.ac:60: -1- AM_INIT_AUTOMAKE([foreign tar-pax 1.11])
m4trace:configure.ac:60: -1- m4_pattern_allow([^AM_[A-Z]+FLAGS$])
m4trace:configure.ac:60: -1- AM_AUTOMAKE_VERSION([1.16.2])
m4trace:configure.ac:60: -1- AC_REQUIRE_AUX_FILE([install-sh])
m4trace:configure.ac:60: -1- AC_SUBST([INSTALL_PROGRAM])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([INSTALL_PROGRAM])
m4trace:configure.ac:60: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
m4trace:configure.ac:60: -1- AC_SUBST([INSTALL_SCRIPT])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([INSTALL_SCRIPT])
m4trace:configure.ac:60: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
m4trace:configure.ac:60: -1- AC_SUBST([INSTALL_DATA])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([INSTALL_DATA])
m4trace:configure.ac:60: -1- m4_pattern_allow([^INSTALL_DATA$])
m4trace:configure.ac:60: -1- AC_SUBST([am__isrc], [' -I$(srcdir)'])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([am__isrc])
m4trace:configure.ac:60: -1- m4_pattern_allow([^am__isrc$])
m4trace:configure.ac:60: -1- _AM_SUBST_NOTMAKE([am__isrc])
m4trace:configure.ac:60: -1- AC_SUBST([CYGPATH_W])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([CYGPATH_W])
m4trace:configure.ac:60: -1- m4_pattern_allow([^CYGPATH_W$])
m4trace:configure.ac:60: -1- AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([PACKAGE])
m4trace:configure.ac:60: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:60: -1- AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([VERSION])
m4trace:configure.ac:60: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:60: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE])
m4trace:configure.ac:60: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:60: -1- AH_OUTPUT([PACKAGE], [/* Name of package */
@%:@undef PACKAGE])
m4trace:configure.ac:60: -1- AC_DEFINE_TRACE_LITERAL([VERSION])
m4trace:configure.ac:60: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:60: -1- AH_OUTPUT([VERSION], [/* Version number of package */
@%:@undef VERSION])
m4trace:configure.ac:60: -1- AC_REQUIRE_AUX_FILE([missing])
m4trace:configure.ac:60: -1- AC_SUBST([ACLOCAL])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([ACLOCAL])
m4trace:configure.ac:60: -1- m4_pattern_allow([^ACLOCAL$])
m4trace:configure.ac:60: -1- AC_SUBST([AUTOCONF])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([AUTOCONF])
m4trace:configure.ac:60: -1- m4_pattern_allow([^AUTOCONF$])
m4trace:configure.ac:60: -1- AC_SUBST([AUTOMAKE])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([AUTOMAKE])
m4trace:configure.ac:60: -1- m4_pattern_allow([^AUTOMAKE$])
m4trace:configure.ac:60: -1- AC_SUBST([AUTOHEADER])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([AUTOHEADER])
m4trace:configure.ac:60: -1- m4_pattern_allow([^AUTOHEADER$])
m4trace:configure.ac:60: -1- AC_SUBST([MAKEINFO])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([MAKEINFO])
m4trace:configure.ac:60: -1- m4_pattern_allow([^MAKEINFO$])
m4trace:configure.ac:60: -1- AC_SUBST([install_sh])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([install_sh])
m4trace:configure.ac:60: -1- m4_pattern_allow([^install_sh$])
m4trace:configure.ac:60: -1- AC_SUBST([STRIP])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([STRIP])
m4trace:configure.ac:60: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:60: -1- AC_SUBST([INSTALL_STRIP_PROGRAM])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([INSTALL_STRIP_PROGRAM])
m4trace:configure.ac:60: -1- m4_pattern_allow([^INSTALL_STRIP_PROGRAM$])
m4trace:configure.ac:60: -1- AC_REQUIRE_AUX_FILE([install-sh])
m4trace:configure.ac:60: -1- AC_SUBST([MKDIR_P])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([MKDIR_P])
m4trace:configure.ac:60: -1- m4_pattern_allow([^MKDIR_P$])
m4trace:configure.ac:60: -1- AC_SUBST([mkdir_p], ['$(MKDIR_P)'])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([mkdir_p])
m4trace:configure.ac:60: -1- m4_pattern_allow([^mkdir_p$])
m4trace:configure.ac:60: -1- AC_SUBST([AWK])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([AWK])
m4trace:configure.ac:60: -1- m4_pattern_allow([^AWK$])
m4trace:configure.ac:60: -1- AC_SUBST([SET_MAKE])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([SET_MAKE])
m4trace:configure.ac:60: -1- m4_pattern_allow([^SET_MAKE$])
m4trace:configure.ac:60: -1- AC_SUBST([am__leading_dot])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([am__leading_dot])
m4trace:configure.ac:60: -1- m4_pattern_allow([^am__leading_dot$])
m4trace:configure.ac:60: -1- AC_SUBST([AMTAR], ['$${TAR-tar}'])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([AMTAR])
m4trace:configure.ac:60: -1- m4_pattern_allow([^AMTAR$])
m4trace:configure.ac:60: -1- AC_SUBST([am__tar])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([am__tar])
m4trace:configure.ac:60: -1- m4_pattern_allow([^am__tar$])
m4trace:configure.ac:60: -1- AC_SUBST([am__untar])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([am__untar])
m4trace:configure.ac:60: -1- m4_pattern_allow([^am__untar$])
m4trace:configure.ac:60: -1- AM_SILENT_RULES
m4trace:configure.ac:60: -1- AC_SUBST([AM_V])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([AM_V])
m4trace:configure.ac:60: -1- m4_pattern_allow([^AM_V$])
m4trace:configure.ac:60: -1- _AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:60: -1- AC_SUBST([AM_DEFAULT_V])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([AM_DEFAULT_V])
m4trace:configure.ac:60: -1- m4_pattern_allow([^AM_DEFAULT_V$])
m4trace:configure.ac:60: -1- _AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:60: -1- AC_SUBST([AM_DEFAULT_VERBOSITY])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([AM_DEFAULT_VERBOSITY])
m4trace:configure.ac:60: -1- m4_pattern_allow([^AM_DEFAULT_VERBOSITY$])
m4trace:configure.ac:60: -1- AC_SUBST([AM_BACKSLASH])
m4trace:configure.ac:60: -1- AC_SUBST_TRACE([AM_BACKSLASH])
m4trace:configure.ac:60: -1- m4_pattern_allow([^AM_BACKSLASH$])
m4trace:configure.ac:60: -1- _AM_SUBST_NOTMAKE([AM_BACKSLASH])
m4trace:configure.ac:62: -1- _m4_warn([obsolete], ['AM_CONFIG_HEADER': this macro is obsolete.
You should use the 'AC_CONFIG_HEADERS' macro instead.], [aclocal.m4:787: AM_CONFIG_HEADER is expanded from...
configure.ac:62: the top level])
m4trace:configure.ac:62: -1- AC_CONFIG_HEADERS([rose_config.h])
m4trace:configure.ac:74: -1- AM_SILENT_RULES([yes])
m4trace:configure.ac:74: -1- AC_SUBST([AM_V])
m4trace:configure.ac:74: -1- AC_SUBST_TRACE([AM_V])
m4trace:configure.ac:74: -1- m4_pattern_allow([^AM_V$])
m4trace:configure.ac:74: -1- _AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:74: -1- AC_SUBST([AM_DEFAULT_V])
m4trace:configure.ac:74: -1- AC_SUBST_TRACE([AM_DEFAULT_V])
m4trace:configure.ac:74: -1- m4_pattern_allow([^AM_DEFAULT_V$])
m4trace:configure.ac:74: -1- _AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:74: -1- AC_SUBST([AM_DEFAULT_VERBOSITY])
m4trace:configure.ac:74: -1- AC_SUBST_TRACE([AM_DEFAULT_VERBOSITY])
m4trace:configure.ac:74: -1- m4_pattern_allow([^AM_DEFAULT_VERBOSITY$])
m4trace:configure.ac:74: -1- AC_SUBST([AM_BACKSLASH])
m4trace:configure.ac:74: -1- AC_SUBST_TRACE([AM_BACKSLASH])
m4trace:configure.ac:74: -1- m4_pattern_allow([^AM_BACKSLASH$])
m4trace:configure.ac:74: -1- _AM_SUBST_NOTMAKE([AM_BACKSLASH])
m4trace:configure.ac:100: -1- AM_PROG_CC_C_O
m4trace:configure.ac:100: -1- AC_SUBST([CC])
m4trace:configure.ac:100: -1- AC_SUBST_TRACE([CC])
m4trace:configure.ac:100: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:100: -1- AC_SUBST([CFLAGS])
m4trace:configure.ac:100: -1- AC_SUBST_TRACE([CFLAGS])
m4trace:configure.ac:100: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:100: -1- AC_SUBST([LDFLAGS])
m4trace:configure.ac:100: -1- AC_SUBST_TRACE([LDFLAGS])
m4trace:configure.ac:100: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:100: -1- AC_SUBST([LIBS])
m4trace:configure.ac:100: -1- AC_SUBST_TRACE([LIBS])
m4trace:configure.ac:100: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:100: -1- AC_SUBST([CPPFLAGS])
m4trace:configure.ac:100: -1- AC_SUBST_TRACE([CPPFLAGS])
m4trace:configure.ac:100: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:100: -1- AC_SUBST([CC])
m4trace:configure.ac:100: -1- AC_SUBST_TRACE([CC])
m4trace:configure.ac:100: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:100: -1- AC_SUBST([CC])
m4trace:configure.ac:100: -1- AC_SUBST_TRACE([CC])
m4trace:configure.ac:100: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:100: -1- AC_SUBST([CC])
m4trace:configure.ac:100: -1- AC_SUBST_TRACE([CC])
m4trace:configure.ac:100: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:100: -1- AC_SUBST([CC])
m4trace:configure.ac:100: -1- AC_SUBST_TRACE([CC])
m4trace:configure.ac:100: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:100: -1- AC_SUBST([ac_ct_CC])
m4trace:configure.ac:100: -1- AC_SUBST_TRACE([ac_ct_CC])
m4trace:configure.ac:100: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:100: -1- AC_SUBST([EXEEXT], [$ac_cv_exeext])
m4trace:configure.ac:100: -1- AC_SUBST_TRACE([EXEEXT])
m4trace:configure.ac:100: -1- m4_pattern_allow([^EXEEXT$])
m4trace:configure.ac:100: -1- AC_SUBST([OBJEXT], [$ac_cv_objext])
m4trace:configure.ac:100: -1- AC_SUBST_TRACE([OBJEXT])
m4trace:configure.ac:100: -1- m4_pattern_allow([^OBJEXT$])
m4trace:configure.ac:100: -1- AC_REQUIRE_AUX_FILE([compile])
m4trace:configure.ac:100: -1- AC_SUBST([DEPDIR], ["${am__leading_dot}deps"])
m4trace:configure.ac:100: -1- AC_SUBST_TRACE([DEPDIR])
m4trace:configure.ac:100: -1- m4_pattern_allow([^DEPDIR$])
m4trace:configure.ac:100: -1- AC_SUBST([am__include])
m4trace:configure.ac:100: -1- AC_SUBST_TRACE([am__include])
m4trace:configure.ac:100: -1- m4_pattern_allow([^am__include$])
m4trace:configure.ac:100: -1- AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
m4trace:configure.ac:100: -1- AC_SUBST([AMDEP_TRUE])
m4trace:configure.ac:100: -1- AC_SUBST_TRACE([AMDEP_TRUE])
m4trace:configure.ac:100: -1- m4_pattern_allow([^AMDEP_TRUE$])
m4trace:configure.ac:100: -1- AC_SUBST([AMDEP_FALSE])
m4trace:configure.ac:100: -1- AC_SUBST_TRACE([AMDEP_FALSE])
m4trace:configure.ac:100: -1- m4_pattern_allow([^AMDEP_FALSE$])
m4trace:configure.ac:100: -1- _AM_SUBST_NOTMAKE([AMDEP_TRUE])
m4trace:configure.ac:100: -1- _AM_SUBST_NOTMAKE([AMDEP_FALSE])
m4trace:configure.ac:100: -1- AC_SUBST([AMDEPBACKSLASH])
m4trace:configure.ac:100: -1- AC_SUBST_TRACE([AMDEPBACKSLASH])
m4trace:configure.ac:100: -1- m4_pattern_allow([^AMDEPBACKSLASH$])
m4trace:configure.ac:100: -1- _AM_SUBST_NOTMAKE([AMDEPBACKSLASH])
m4trace:configure.ac:100: -1- AC_SUBST([am__nodep])
m4trace:configure.ac:100: -1- AC_SUBST_TRACE([am__nodep])
m4trace:configure.ac:100: -1- m4_pattern_allow([^am__nodep$])
m4trace:configure.ac:100: -1- _AM_SUBST_NOTMAKE([am__nodep])
m4trace:configure.ac:100: -1- AC_SUBST([CCDEPMODE], [depmode=$am_cv_CC_dependencies_compiler_type])
m4trace:configure.ac:100: -1- AC_SUBST_TRACE([CCDEPMODE])
m4trace:configure.ac:100: -1- m4_pattern_allow([^CCDEPMODE$])
m4trace:configure.ac:100: -1- AM_CONDITIONAL([am__fastdepCC], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CC_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:100: -1- AC_SUBST([am__fastdepCC_TRUE])
m4trace:configure.ac:100: -1- AC_SUBST_TRACE([am__fastdepCC_TRUE])
m4trace:configure.ac:100: -1- m4_pattern_allow([^am__fastdepCC_TRUE$])
m4trace:configure.ac:100: -1- AC_SUBST([am__fastdepCC_FALSE])
m4trace:configure.ac:100: -1- AC_SUBST_TRACE([am__fastdepCC_FALSE])
m4trace:configure.ac:100: -1- m4_pattern_allow([^am__fastdepCC_FALSE$])
m4trace:configure.ac:100: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_TRUE])
m4trace:configure.ac:100: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_FALSE])
m4trace:configure.ac:121: -1- AC_CANONICAL_BUILD
m4trace:configure.ac:121: -1- AC_REQUIRE_AUX_FILE([config.sub])
m4trace:configure.ac:121: -1- AC_REQUIRE_AUX_FILE([config.guess])
m4trace:configure.ac:121: -1- AC_SUBST([build], [$ac_cv_build])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([build])
m4trace:configure.ac:121: -1- m4_pattern_allow([^build$])
m4trace:configure.ac:121: -1- AC_SUBST([build_cpu], [$[1]])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([build_cpu])
m4trace:configure.ac:121: -1- m4_pattern_allow([^build_cpu$])
m4trace:configure.ac:121: -1- AC_SUBST([build_vendor], [$[2]])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([build_vendor])
m4trace:configure.ac:121: -1- m4_pattern_allow([^build_vendor$])
m4trace:configure.ac:121: -1- AC_SUBST([build_os])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([build_os])
m4trace:configure.ac:121: -1- m4_pattern_allow([^build_os$])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([OS_MACOSX], [ test "x$MACOSX"  = xyes  ])
m4trace:configure.ac:121: -1- AC_SUBST([OS_MACOSX_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_MACOSX_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_MACOSX_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([OS_MACOSX_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_MACOSX_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_MACOSX_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_MACOSX_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_MACOSX_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([OS_LINUX], [ test "x$LINUX"   = xyes  ])
m4trace:configure.ac:121: -1- AC_SUBST([OS_LINUX_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_LINUX_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_LINUX_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([OS_LINUX_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_LINUX_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_LINUX_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_LINUX_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_LINUX_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([OS_MINGW], [ test "x$MINGW"   = xyes  ])
m4trace:configure.ac:121: -1- AC_SUBST([OS_MINGW_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_MINGW_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_MINGW_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([OS_MINGW_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_MINGW_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_MINGW_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_MINGW_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_MINGW_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([OS_MSDOS], [ test "x$MSDOS"   = xyes  ])
m4trace:configure.ac:121: -1- AC_SUBST([OS_MSDOS_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_MSDOS_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_MSDOS_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([OS_MSDOS_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_MSDOS_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_MSDOS_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_MSDOS_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_MSDOS_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([OS_SOLARIS], [ test "x$SOLARIS" = xyes  ])
m4trace:configure.ac:121: -1- AC_SUBST([OS_SOLARIS_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_SOLARIS_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_SOLARIS_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([OS_SOLARIS_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_SOLARIS_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_SOLARIS_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_SOLARIS_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_SOLARIS_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_BUILD_OS_IS_OSX], [test "x$build_vendor" = xapple])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_OS_IS_OSX_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_OS_IS_OSX_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_OS_IS_OSX_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_OS_IS_OSX_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_OS_IS_OSX_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_OS_IS_OSX_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_OS_IS_OSX_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_OS_IS_OSX_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_BUILD_OS_IS_CYGWIN], [test "x$build_os" = xcygwin])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_OS_IS_CYGWIN_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_OS_IS_CYGWIN_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_OS_IS_CYGWIN_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_OS_IS_CYGWIN_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_OS_IS_CYGWIN_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_OS_IS_CYGWIN_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_OS_IS_CYGWIN_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_OS_IS_CYGWIN_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_LSB_RELEASE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_LSB_RELEASE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_LSB_RELEASE$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_DEBIAN_OS_VENDOR])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_DEBIAN_OS_VENDOR$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_DEBIAN_OS_VENDOR], [/* Debian Operating System (OS) being used to build ROSE */
@%:@undef ROSE_DEBIAN_OS_VENDOR])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_REDHAT_OS_VENDOR])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_REDHAT_OS_VENDOR$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_REDHAT_OS_VENDOR], [/* RedHat Operating System (OS) being used to build ROSE */
@%:@undef ROSE_REDHAT_OS_VENDOR])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_UBUNTU_OS_VENDOR])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_UBUNTU_OS_VENDOR$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_UBUNTU_OS_VENDOR], [/* Ubuntu Operating System (OS) being used to build ROSE */
@%:@undef ROSE_UBUNTU_OS_VENDOR])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_CENTOS_OS_VENDOR])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_CENTOS_OS_VENDOR$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_CENTOS_OS_VENDOR], [/* CentOS Operating System (OS) being used to build ROSE */
@%:@undef ROSE_CENTOS_OS_VENDOR])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_APPLE_OS_VENDOR])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_APPLE_OS_VENDOR$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_APPLE_OS_VENDOR], [/* apple Operating System (OS) being used to build ROSE */
@%:@undef ROSE_APPLE_OS_VENDOR])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([OS_VENDOR_DEBIAN], [ test "x$DEBIAN" = xyes ])
m4trace:configure.ac:121: -1- AC_SUBST([OS_VENDOR_DEBIAN_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_VENDOR_DEBIAN_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_VENDOR_DEBIAN_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([OS_VENDOR_DEBIAN_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_VENDOR_DEBIAN_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_VENDOR_DEBIAN_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_VENDOR_DEBIAN_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_VENDOR_DEBIAN_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([OS_VENDOR_REDHAT], [ test "x$REDHAT" = xyes ])
m4trace:configure.ac:121: -1- AC_SUBST([OS_VENDOR_REDHAT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_VENDOR_REDHAT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_VENDOR_REDHAT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([OS_VENDOR_REDHAT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_VENDOR_REDHAT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_VENDOR_REDHAT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_VENDOR_REDHAT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_VENDOR_REDHAT_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([OS_VENDOR_UBUNTU], [ test "x$UBUNTU" = xyes ])
m4trace:configure.ac:121: -1- AC_SUBST([OS_VENDOR_UBUNTU_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_VENDOR_UBUNTU_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_VENDOR_UBUNTU_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([OS_VENDOR_UBUNTU_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_VENDOR_UBUNTU_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_VENDOR_UBUNTU_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_VENDOR_UBUNTU_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_VENDOR_UBUNTU_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([OS_VENDOR_CENTOS], [ test "x$CENTOS" = xyes ])
m4trace:configure.ac:121: -1- AC_SUBST([OS_VENDOR_CENTOS_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_VENDOR_CENTOS_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_VENDOR_CENTOS_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([OS_VENDOR_CENTOS_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_VENDOR_CENTOS_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_VENDOR_CENTOS_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_VENDOR_CENTOS_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_VENDOR_CENTOS_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([OS_VENDOR_APPLE], [ test "x$APPLE"  = xyes ])
m4trace:configure.ac:121: -1- AC_SUBST([OS_VENDOR_APPLE_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_VENDOR_APPLE_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_VENDOR_APPLE_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([OS_VENDOR_APPLE_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_VENDOR_APPLE_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_VENDOR_APPLE_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_VENDOR_APPLE_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_VENDOR_APPLE_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([OS_32BIT], [ test "x$build_cpu" = xi686 ])
m4trace:configure.ac:121: -1- AC_SUBST([OS_32BIT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_32BIT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_32BIT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([OS_32BIT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_32BIT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_32BIT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_32BIT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_32BIT_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([OS_64BIT], [ test "x$build_cpu" = xx86_64 ])
m4trace:configure.ac:121: -1- AC_SUBST([OS_64BIT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_64BIT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_64BIT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([OS_64BIT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_64BIT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_64BIT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_64BIT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_64BIT_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([OS_VENDOR_REDHAT_32BIT], [ test "x$REDHAT" = xyes -a "x$build_cpu" = xi686 ])
m4trace:configure.ac:121: -1- AC_SUBST([OS_VENDOR_REDHAT_32BIT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_VENDOR_REDHAT_32BIT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_VENDOR_REDHAT_32BIT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([OS_VENDOR_REDHAT_32BIT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_VENDOR_REDHAT_32BIT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_VENDOR_REDHAT_32BIT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_VENDOR_REDHAT_32BIT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_VENDOR_REDHAT_32BIT_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([OS_VENDOR_REDHAT_REL5], [ test "x$REDHAT" = xyes -a "x$OS_major_release_number" = x5])
m4trace:configure.ac:121: -1- AC_SUBST([OS_VENDOR_REDHAT_REL5_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_VENDOR_REDHAT_REL5_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_VENDOR_REDHAT_REL5_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([OS_VENDOR_REDHAT_REL5_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_VENDOR_REDHAT_REL5_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_VENDOR_REDHAT_REL5_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_VENDOR_REDHAT_REL5_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_VENDOR_REDHAT_REL5_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([OS_VENDOR_REDHAT_REL6], [ test "x$REDHAT" = xyes -a "x$OS_major_release_number" = x6])
m4trace:configure.ac:121: -1- AC_SUBST([OS_VENDOR_REDHAT_REL6_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_VENDOR_REDHAT_REL6_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_VENDOR_REDHAT_REL6_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([OS_VENDOR_REDHAT_REL6_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_VENDOR_REDHAT_REL6_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_VENDOR_REDHAT_REL6_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_VENDOR_REDHAT_REL6_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([OS_VENDOR_REDHAT_REL6_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST([OS_vendor])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_vendor])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_vendor$])
m4trace:configure.ac:121: -1- AC_SUBST([OS_release])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_release])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_release$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_OS_MAJOR_RELEASE_NUMBER])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_OS_MAJOR_RELEASE_NUMBER$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_OS_MAJOR_RELEASE_NUMBER], [/* RedHat Operating System (OS) major release number being used to build ROSE
   */
@%:@undef ROSE_OS_MAJOR_RELEASE_NUMBER])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_OS_MINOR_RELEASE_NUMBER])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_OS_MINOR_RELEASE_NUMBER$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_OS_MINOR_RELEASE_NUMBER], [/* RedHat Operating System (OS) minor release number being used to build ROSE
   */
@%:@undef ROSE_OS_MINOR_RELEASE_NUMBER])
m4trace:configure.ac:121: -1- AC_SUBST([OS_major_release_number])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_major_release_number])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_major_release_number$])
m4trace:configure.ac:121: -1- AC_SUBST([OS_minor_release_number])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OS_minor_release_number])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OS_minor_release_number$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([USE_ROSE_SSL_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^USE_ROSE_SSL_SUPPORT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([USE_ROSE_SSL_SUPPORT], [/* Controls use of ROSE support for SSL (libssl -- MD5) library (incompatable
   with Java, so disables Fortran support). */
@%:@undef USE_ROSE_SSL_SUPPORT])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USE_SSL_SUPPORT], [test "x$enable_ssl" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_SSL_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_SSL_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_SSL_SUPPORT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_SSL_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_SSL_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_SSL_SUPPORT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_SSL_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_SSL_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST([configure_date])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([configure_date])
m4trace:configure.ac:121: -1- m4_pattern_allow([^configure_date$])
m4trace:configure.ac:121: -1- _AM_COND_IF([OS_MACOSX])
m4trace:configure.ac:121: -1- _AM_COND_ELSE([OS_MACOSX])
m4trace:configure.ac:121: -1- _AM_COND_ENDIF([OS_MACOSX])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([USE_ROSE_JAVA_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^USE_ROSE_JAVA_SUPPORT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([USE_ROSE_JAVA_SUPPORT], [/* Controls use of ROSE support for Java. */
@%:@undef USE_ROSE_JAVA_SUPPORT])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([USE_ROSE_INTERNAL_JAVA_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^USE_ROSE_INTERNAL_JAVA_SUPPORT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([USE_ROSE_INTERNAL_JAVA_SUPPORT], [/* Controls use of ROSE support for Java. */
@%:@undef USE_ROSE_INTERNAL_JAVA_SUPPORT])
m4trace:configure.ac:121: -1- _AM_COND_IF([OS_MACOSX])
m4trace:configure.ac:121: -1- _AM_COND_ENDIF([OS_MACOSX])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_JNI_H], [/* Define to 1 if you have the <jni.h> header file. */
@%:@undef HAVE_JNI_H])
m4trace:configure.ac:121: -1- AC_SUBST([CPP])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([CPP])
m4trace:configure.ac:121: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:121: -1- AC_SUBST([CPPFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([CPPFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:121: -1- AC_SUBST([CPP])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([CPP])
m4trace:configure.ac:121: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:121: -1- AC_SUBST([GREP])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([GREP])
m4trace:configure.ac:121: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:121: -1- AC_SUBST([EGREP])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([EGREP])
m4trace:configure.ac:121: -1- m4_pattern_allow([^EGREP$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([STDC_HEADERS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^STDC_HEADERS$])
m4trace:configure.ac:121: -1- AH_OUTPUT([STDC_HEADERS], [/* Define to 1 if you have the ANSI C header files. */
@%:@undef STDC_HEADERS])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_SYS_TYPES_H], [/* Define to 1 if you have the <sys/types.h> header file. */
@%:@undef HAVE_SYS_TYPES_H])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_SYS_STAT_H], [/* Define to 1 if you have the <sys/stat.h> header file. */
@%:@undef HAVE_SYS_STAT_H])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_STDLIB_H], [/* Define to 1 if you have the <stdlib.h> header file. */
@%:@undef HAVE_STDLIB_H])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_STRING_H], [/* Define to 1 if you have the <string.h> header file. */
@%:@undef HAVE_STRING_H])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_MEMORY_H], [/* Define to 1 if you have the <memory.h> header file. */
@%:@undef HAVE_MEMORY_H])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_STRINGS_H], [/* Define to 1 if you have the <strings.h> header file. */
@%:@undef HAVE_STRINGS_H])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_INTTYPES_H], [/* Define to 1 if you have the <inttypes.h> header file. */
@%:@undef HAVE_INTTYPES_H])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_STDINT_H], [/* Define to 1 if you have the <stdint.h> header file. */
@%:@undef HAVE_STDINT_H])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_UNISTD_H], [/* Define to 1 if you have the <unistd.h> header file. */
@%:@undef HAVE_UNISTD_H])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([HAVE_JNI_H])
m4trace:configure.ac:121: -1- m4_pattern_allow([^HAVE_JNI_H$])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USE_INTERNAL_JAVA_SUPPORT_AM_CONDITIONAL], [test "x$USE_JAVA" = x1])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_INTERNAL_JAVA_SUPPORT_AM_CONDITIONAL_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_INTERNAL_JAVA_SUPPORT_AM_CONDITIONAL_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_INTERNAL_JAVA_SUPPORT_AM_CONDITIONAL_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_INTERNAL_JAVA_SUPPORT_AM_CONDITIONAL_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_INTERNAL_JAVA_SUPPORT_AM_CONDITIONAL_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_INTERNAL_JAVA_SUPPORT_AM_CONDITIONAL_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_INTERNAL_JAVA_SUPPORT_AM_CONDITIONAL_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_INTERNAL_JAVA_SUPPORT_AM_CONDITIONAL_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USE_INTERNAL_JAVA_SUPPORT], [test "x$USE_JAVA" = x1])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_INTERNAL_JAVA_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_INTERNAL_JAVA_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_INTERNAL_JAVA_SUPPORT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_INTERNAL_JAVA_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_INTERNAL_JAVA_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_INTERNAL_JAVA_SUPPORT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_INTERNAL_JAVA_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_INTERNAL_JAVA_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([JAVA_JVM_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^JAVA_JVM_PATH$])
m4trace:configure.ac:121: -1- AH_OUTPUT([JAVA_JVM_PATH], [/* Path to JVM executable */
@%:@undef JAVA_JVM_PATH])
m4trace:configure.ac:121: -1- AC_SUBST([JAVA_PATH])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([JAVA_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^JAVA_PATH$])
m4trace:configure.ac:121: -1- AC_SUBST([JAVA_JVM_LINK])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([JAVA_JVM_LINK])
m4trace:configure.ac:121: -1- m4_pattern_allow([^JAVA_JVM_LINK$])
m4trace:configure.ac:121: -1- AC_SUBST([JAVA_JVM_PATH])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([JAVA_JVM_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^JAVA_JVM_PATH$])
m4trace:configure.ac:121: -1- AC_SUBST([JAVA_JVM_INCLUDE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([JAVA_JVM_INCLUDE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^JAVA_JVM_INCLUDE$])
m4trace:configure.ac:121: -1- AC_SUBST([JAVA])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([JAVA])
m4trace:configure.ac:121: -1- m4_pattern_allow([^JAVA$])
m4trace:configure.ac:121: -1- AC_SUBST([JAVAC])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([JAVAC])
m4trace:configure.ac:121: -1- m4_pattern_allow([^JAVAC$])
m4trace:configure.ac:121: -1- AC_SUBST([JAR])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([JAR])
m4trace:configure.ac:121: -1- m4_pattern_allow([^JAR$])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_WITH_JAVA_6], [test "x${JAVA_VERSION_MINOR}" != "x6"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_JAVA_6_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_JAVA_6_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_JAVA_6_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_JAVA_6_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_JAVA_6_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_JAVA_6_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_JAVA_6_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_JAVA_6_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_WITH_JAVA_7], [test "x${JAVA_VERSION_MINOR}" != "x7"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_JAVA_7_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_JAVA_7_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_JAVA_7_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_JAVA_7_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_JAVA_7_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_JAVA_7_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_JAVA_7_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_JAVA_7_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_WITH_JAVA_8], [test "x${JAVA_VERSION_MINOR}" != "x8"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_JAVA_8_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_JAVA_8_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_JAVA_8_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_JAVA_8_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_JAVA_8_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_JAVA_8_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_JAVA_8_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_JAVA_8_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([JAVA_VERSION_MAJOR])
m4trace:configure.ac:121: -1- m4_pattern_allow([^JAVA_VERSION_MAJOR$])
m4trace:configure.ac:121: -1- AH_OUTPUT([JAVA_VERSION_MAJOR], [/* Major version number of the Java JDK */
@%:@undef JAVA_VERSION_MAJOR])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([JAVA_VERSION_MINOR])
m4trace:configure.ac:121: -1- m4_pattern_allow([^JAVA_VERSION_MINOR$])
m4trace:configure.ac:121: -1- AH_OUTPUT([JAVA_VERSION_MINOR], [/* Minor version number of the Java JDK */
@%:@undef JAVA_VERSION_MINOR])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([JAVA_VERSION_PATCH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^JAVA_VERSION_PATCH$])
m4trace:configure.ac:121: -1- AH_OUTPUT([JAVA_VERSION_PATCH], [/* Patch version number of the Java JDK */
@%:@undef JAVA_VERSION_PATCH])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([JAVA_VERSION_RELEASE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^JAVA_VERSION_RELEASE$])
m4trace:configure.ac:121: -1- AH_OUTPUT([JAVA_VERSION_RELEASE], [/* Release version number of the Java JDK */
@%:@undef JAVA_VERSION_RELEASE])
m4trace:configure.ac:121: -1- AC_SUBST([GFORTRAN_PATH])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([GFORTRAN_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^GFORTRAN_PATH$])
m4trace:configure.ac:121: -1- AC_SUBST([GFORTRAN_PATH])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([GFORTRAN_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^GFORTRAN_PATH$])
m4trace:configure.ac:121: -1- AC_SUBST([GFORTRAN_PATH])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([GFORTRAN_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^GFORTRAN_PATH$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([USE_GFORTRAN_IN_ROSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^USE_GFORTRAN_IN_ROSE$])
m4trace:configure.ac:121: -1- AH_OUTPUT([USE_GFORTRAN_IN_ROSE], [/* Mark that GFORTRAN is available */
@%:@undef USE_GFORTRAN_IN_ROSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([USE_GFORTRAN_IN_ROSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^USE_GFORTRAN_IN_ROSE$])
m4trace:configure.ac:121: -1- AH_OUTPUT([USE_GFORTRAN_IN_ROSE], [/* Mark that GFORTRAN is not available */
@%:@undef USE_GFORTRAN_IN_ROSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_WITH_X10], [false])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_X10_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_X10_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_X10_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_X10_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_X10_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_X10_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_X10_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_X10_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_WITH_X10_BIN], [false])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_X10_BIN_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_X10_BIN_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_X10_BIN_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_X10_BIN_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_X10_BIN_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_X10_BIN_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_X10_BIN_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_X10_BIN_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_WITH_X10_LIB], [false])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_X10_LIB_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_X10_LIB_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_X10_LIB_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_X10_LIB_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_X10_LIB_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_X10_LIB_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_X10_LIB_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_X10_LIB_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST([X10_INSTALL_PATH])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([X10_INSTALL_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^X10_INSTALL_PATH$])
m4trace:configure.ac:121: -1- AC_SUBST([X10_BIN_PATH])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([X10_BIN_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^X10_BIN_PATH$])
m4trace:configure.ac:121: -1- AC_SUBST([X10_LIBRARY_PATH])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([X10_LIBRARY_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^X10_LIBRARY_PATH$])
m4trace:configure.ac:121: -1- AC_SUBST([X10_VERSION])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([X10_VERSION])
m4trace:configure.ac:121: -1- m4_pattern_allow([^X10_VERSION$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([X10_INSTALL_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^X10_INSTALL_PATH$])
m4trace:configure.ac:121: -1- AH_OUTPUT([X10_INSTALL_PATH], [/* Absolute path of the X10 installation */
@%:@undef X10_INSTALL_PATH])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([X10_BIN_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^X10_BIN_PATH$])
m4trace:configure.ac:121: -1- AH_OUTPUT([X10_BIN_PATH], [/* Absolute path of the X10 installation bin directory */
@%:@undef X10_BIN_PATH])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([X10_LIBRARY_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^X10_LIBRARY_PATH$])
m4trace:configure.ac:121: -1- AH_OUTPUT([X10_LIBRARY_PATH], [/* Absolute path of the X10 installation lib directory */
@%:@undef X10_LIBRARY_PATH])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([X10_VERSION])
m4trace:configure.ac:121: -1- m4_pattern_allow([^X10_VERSION$])
m4trace:configure.ac:121: -1- AH_OUTPUT([X10_VERSION], [/* Version number of the user-specified X10 compiler */
@%:@undef X10_VERSION])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_BUILD_BINARY_ANALYSIS_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_BINARY_ANALYSIS_SUPPORT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_BUILD_BINARY_ANALYSIS_SUPPORT], [/* Build ROSE to support the Binary Analysis */
@%:@undef ROSE_BUILD_BINARY_ANALYSIS_SUPPORT])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_BUILD_C_LANGUAGE_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_C_LANGUAGE_SUPPORT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_BUILD_C_LANGUAGE_SUPPORT], [/* Build ROSE to support the C langauge */
@%:@undef ROSE_BUILD_C_LANGUAGE_SUPPORT])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_BUILD_CXX_LANGUAGE_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_CXX_LANGUAGE_SUPPORT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_BUILD_CXX_LANGUAGE_SUPPORT], [/* Build ROSE to support the C++ langauge */
@%:@undef ROSE_BUILD_CXX_LANGUAGE_SUPPORT])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_BUILD_CUDA_LANGUAGE_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_CUDA_LANGUAGE_SUPPORT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_BUILD_CUDA_LANGUAGE_SUPPORT], [/* Build ROSE to support the CUDA langauge */
@%:@undef ROSE_BUILD_CUDA_LANGUAGE_SUPPORT])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_BUILD_FORTRAN_LANGUAGE_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_FORTRAN_LANGUAGE_SUPPORT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_BUILD_FORTRAN_LANGUAGE_SUPPORT], [/* Build ROSE to support the Fortran langauge */
@%:@undef ROSE_BUILD_FORTRAN_LANGUAGE_SUPPORT])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_BUILD_JAVA_LANGUAGE_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_JAVA_LANGUAGE_SUPPORT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_BUILD_JAVA_LANGUAGE_SUPPORT], [/* Build ROSE to support the Java langauge */
@%:@undef ROSE_BUILD_JAVA_LANGUAGE_SUPPORT])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_BUILD_PHP_LANGUAGE_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_PHP_LANGUAGE_SUPPORT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_BUILD_PHP_LANGUAGE_SUPPORT], [/* Build ROSE to support the PHP langauge */
@%:@undef ROSE_BUILD_PHP_LANGUAGE_SUPPORT])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_BUILD_PYTHON_LANGUAGE_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_PYTHON_LANGUAGE_SUPPORT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_BUILD_PYTHON_LANGUAGE_SUPPORT], [/* Build ROSE to support the Python langauge */
@%:@undef ROSE_BUILD_PYTHON_LANGUAGE_SUPPORT])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_BUILD_OPENCL_LANGUAGE_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_OPENCL_LANGUAGE_SUPPORT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_BUILD_OPENCL_LANGUAGE_SUPPORT], [/* Build ROSE to support the OpenCL langauge */
@%:@undef ROSE_BUILD_OPENCL_LANGUAGE_SUPPORT])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_BUILD_C_LANGUAGE_SUPPORT], [test "x$support_c_frontend" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_C_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_C_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_C_LANGUAGE_SUPPORT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_C_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_C_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_C_LANGUAGE_SUPPORT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_C_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_C_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_BUILD_CXX_LANGUAGE_SUPPORT], [test "x$support_cxx_frontend" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_CXX_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_CXX_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_CXX_LANGUAGE_SUPPORT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_CXX_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_CXX_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_CXX_LANGUAGE_SUPPORT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_CXX_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_CXX_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_BUILD_FORTRAN_LANGUAGE_SUPPORT], [test "x$support_fortran_frontend" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_FORTRAN_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_FORTRAN_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_FORTRAN_LANGUAGE_SUPPORT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_FORTRAN_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_FORTRAN_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_FORTRAN_LANGUAGE_SUPPORT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_FORTRAN_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_FORTRAN_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_BUILD_JAVA_LANGUAGE_SUPPORT], [test "x$support_java_frontend" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_JAVA_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_JAVA_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_JAVA_LANGUAGE_SUPPORT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_JAVA_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_JAVA_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_JAVA_LANGUAGE_SUPPORT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_JAVA_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_JAVA_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_BUILD_X10_LANGUAGE_SUPPORT], [false])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_X10_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_X10_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_X10_LANGUAGE_SUPPORT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_X10_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_X10_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_X10_LANGUAGE_SUPPORT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_X10_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_X10_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_BUILD_PHP_LANGUAGE_SUPPORT], [test "x$support_php_frontend" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_PHP_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_PHP_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_PHP_LANGUAGE_SUPPORT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_PHP_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_PHP_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_PHP_LANGUAGE_SUPPORT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_PHP_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_PHP_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_BUILD_PYTHON_LANGUAGE_SUPPORT], [test "x$support_python_frontend" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_PYTHON_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_PYTHON_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_PYTHON_LANGUAGE_SUPPORT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_PYTHON_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_PYTHON_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_PYTHON_LANGUAGE_SUPPORT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_PYTHON_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_PYTHON_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_BUILD_BINARY_ANALYSIS_SUPPORT], [test "x$support_binaries_frontend" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_BUILD_CUDA_LANGUAGE_SUPPORT], [test "x$support_cuda_frontend" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_CUDA_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_CUDA_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_CUDA_LANGUAGE_SUPPORT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_CUDA_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_CUDA_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_CUDA_LANGUAGE_SUPPORT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_CUDA_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_CUDA_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_BUILD_OPENCL_LANGUAGE_SUPPORT], [test "x$support_opencl_frontend" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_OPENCL_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_OPENCL_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_OPENCL_LANGUAGE_SUPPORT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_OPENCL_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_OPENCL_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_OPENCL_LANGUAGE_SUPPORT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_OPENCL_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_OPENCL_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_BUILD_CPP_LANGUAGE_SUPPORT], [test "$support_cpp_frontend" = yes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_CPP_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_CPP_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_CPP_LANGUAGE_SUPPORT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_CPP_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_CPP_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_CPP_LANGUAGE_SUPPORT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_CPP_LANGUAGE_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_CPP_LANGUAGE_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_BUILD_CPP_LANGUAGE_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_CPP_LANGUAGE_SUPPORT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_BUILD_CPP_LANGUAGE_SUPPORT], [/* Build ROSE to support the C preprocessor language */
@%:@undef ROSE_BUILD_CPP_LANGUAGE_SUPPORT])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([HAS_LIBRARY_CURL], [test "x$HAVE_CURL" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([HAS_LIBRARY_CURL_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([HAS_LIBRARY_CURL_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^HAS_LIBRARY_CURL_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([HAS_LIBRARY_CURL_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([HAS_LIBRARY_CURL_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^HAS_LIBRARY_CURL_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([HAS_LIBRARY_CURL_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([HAS_LIBRARY_CURL_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_WITH_UPC], [test "x$enableval" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_UPC_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_UPC_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_UPC_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_UPC_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_UPC_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_UPC_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_UPC_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_UPC_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST([UPC])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([UPC])
m4trace:configure.ac:121: -1- m4_pattern_allow([^UPC$])
m4trace:configure.ac:121: -1- AC_SUBST([UPCFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([UPCFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^UPCFLAGS$])
m4trace:configure.ac:121: -1- AC_SUBST([UPC])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([UPC])
m4trace:configure.ac:121: -1- m4_pattern_allow([^UPC$])
m4trace:configure.ac:121: -1- AC_SUBST([ac_ct_UPC])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ac_ct_UPC])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ac_ct_UPC$])
m4trace:configure.ac:121: -1- AC_SUBST([UPCDEPMODE], [depmode=$am_cv_UPC_dependencies_compiler_type])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([UPCDEPMODE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^UPCDEPMODE$])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([am__fastdepUPC], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_UPC_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:121: -1- AC_SUBST([am__fastdepUPC_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([am__fastdepUPC_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^am__fastdepUPC_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([am__fastdepUPC_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([am__fastdepUPC_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^am__fastdepUPC_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([am__fastdepUPC_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([am__fastdepUPC_FALSE])
m4trace:configure.ac:121: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:207: AC_HELP_STRING is expanded from...
config/support-compass2.m4:25: ROSE_SUPPORT_COMPASS2 is expanded from...
config/support-rose.m4:3: ROSE_SUPPORT_ROSE_PART_1 is expanded from...
configure.ac:121: the top level])
m4trace:configure.ac:121: -1- AC_SUBST([CXX])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([CXX])
m4trace:configure.ac:121: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:121: -1- AC_SUBST([CXXFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([CXXFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^CXXFLAGS$])
m4trace:configure.ac:121: -1- AC_SUBST([LDFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([LDFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:121: -1- AC_SUBST([LIBS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([LIBS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:121: -1- AC_SUBST([CPPFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([CPPFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:121: -1- AC_SUBST([CXX])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([CXX])
m4trace:configure.ac:121: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:121: -1- AC_SUBST([ac_ct_CXX])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ac_ct_CXX])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ac_ct_CXX$])
m4trace:configure.ac:121: -1- AC_SUBST([CXXDEPMODE], [depmode=$am_cv_CXX_dependencies_compiler_type])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([CXXDEPMODE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^CXXDEPMODE$])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([am__fastdepCXX], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CXX_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:121: -1- AC_SUBST([am__fastdepCXX_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([am__fastdepCXX_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^am__fastdepCXX_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([am__fastdepCXX_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([am__fastdepCXX_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^am__fastdepCXX_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([am__fastdepCXX_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([am__fastdepCXX_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST([XERCES_CPPFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([XERCES_CPPFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^XERCES_CPPFLAGS$])
m4trace:configure.ac:121: -1- AC_SUBST([XERCES_LDFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([XERCES_LDFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^XERCES_LDFLAGS$])
m4trace:configure.ac:121: -1- AC_SUBST([XERCES_LIBS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([XERCES_LIBS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^XERCES_LIBS$])
m4trace:configure.ac:121: -1- AC_SUBST([XERCES_VERSION])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([XERCES_VERSION])
m4trace:configure.ac:121: -1- m4_pattern_allow([^XERCES_VERSION$])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_BUILD_COMPASS2], [test "x$HAVE_XERCES" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_COMPASS2_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_COMPASS2_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_COMPASS2_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_COMPASS2_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_COMPASS2_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_COMPASS2_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_COMPASS2_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_COMPASS2_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST([ABS_COMPASS2_XML_SRCDIR])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ABS_COMPASS2_XML_SRCDIR])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ABS_COMPASS2_XML_SRCDIR$])
m4trace:configure.ac:121: -1- _m4_warn([cross], [cannot check for file existence when cross compiling], [../../lib/autoconf/general.m4:2788: AC_CHECK_FILE is expanded from...
config/support-gmp.m4:19: ROSE_SUPPORT_GMP is expanded from...
config/support-rose.m4:3: ROSE_SUPPORT_ROSE_PART_1 is expanded from...
configure.ac:121: the top level])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_WITH_GMP], [test "x$GMP_INCLUDE_PATH" != "x" && test "x$GMP_LIBRARY_PATH" != "x"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_GMP_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_GMP_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_GMP_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_GMP_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_GMP_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_GMP_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_GMP_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_GMP_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_WITH_GMP_INCLUDE], [test "x$GMP_INCLUDE_PATH" != "x"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_GMP_INCLUDE_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_GMP_INCLUDE_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_GMP_INCLUDE_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_GMP_INCLUDE_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_GMP_INCLUDE_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_GMP_INCLUDE_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_GMP_INCLUDE_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_GMP_INCLUDE_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST([GMP_INSTALL_PATH])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([GMP_INSTALL_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^GMP_INSTALL_PATH$])
m4trace:configure.ac:121: -1- AC_SUBST([GMP_INCLUDE_PATH])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([GMP_INCLUDE_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^GMP_INCLUDE_PATH$])
m4trace:configure.ac:121: -1- AC_SUBST([GMP_LIBRARY_PATH])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([GMP_LIBRARY_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^GMP_LIBRARY_PATH$])
m4trace:configure.ac:121: -1- _m4_warn([cross], [cannot check for file existence when cross compiling], [../../lib/autoconf/general.m4:2788: AC_CHECK_FILE is expanded from...
config/support-isl.m4:19: ROSE_SUPPORT_ISL is expanded from...
config/support-rose.m4:3: ROSE_SUPPORT_ROSE_PART_1 is expanded from...
configure.ac:121: the top level])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_WITH_ISL], [test "x$ISL_INCLUDE_PATH" != "x" && test "x$ISL_LIBRARY_PATH" != "x"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_ISL_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_ISL_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_ISL_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_ISL_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_ISL_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_ISL_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_ISL_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_ISL_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_WITH_ISL_INCLUDE], [test "x$ISL_INCLUDE_PATH" != "x"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_ISL_INCLUDE_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_ISL_INCLUDE_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_ISL_INCLUDE_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_ISL_INCLUDE_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_ISL_INCLUDE_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_ISL_INCLUDE_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_ISL_INCLUDE_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_ISL_INCLUDE_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST([ISL_INSTALL_PATH])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ISL_INSTALL_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ISL_INSTALL_PATH$])
m4trace:configure.ac:121: -1- AC_SUBST([ISL_INCLUDE_PATH])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ISL_INCLUDE_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ISL_INCLUDE_PATH$])
m4trace:configure.ac:121: -1- AC_SUBST([ISL_LIBRARY_PATH])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ISL_LIBRARY_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ISL_LIBRARY_PATH$])
m4trace:configure.ac:121: -1- AC_SUBST([MPICC])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([MPICC])
m4trace:configure.ac:121: -1- m4_pattern_allow([^MPICC$])
m4trace:configure.ac:121: -1- _m4_warn([obsolete], [The macro `AC_TRY_LINK' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:2698: AC_TRY_LINK is expanded from...
config/support-mpi.m4:96: LX_QUERY_MPI_COMPILER is expanded from...
config/support-mpi.m4:19: ROSE_SUPPORT_MPI is expanded from...
config/support-rose.m4:3: ROSE_SUPPORT_ROSE_PART_1 is expanded from...
configure.ac:121: the top level])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([HAVE_MPI])
m4trace:configure.ac:121: -1- m4_pattern_allow([^HAVE_MPI$])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_MPI], [/* Define to 1 if you have MPI libs and headers. */
@%:@undef HAVE_MPI])
m4trace:configure.ac:121: -1- AC_SUBST([MPICC])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([MPICC])
m4trace:configure.ac:121: -1- m4_pattern_allow([^MPICC$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_MPI_CFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_MPI_CFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_MPI_CFLAGS$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_MPI_CLDFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_MPI_CLDFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_MPI_CLDFLAGS$])
m4trace:configure.ac:121: -1- AC_SUBST([MPICXX])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([MPICXX])
m4trace:configure.ac:121: -1- m4_pattern_allow([^MPICXX$])
m4trace:configure.ac:121: -1- _m4_warn([obsolete], [The macro `AC_TRY_LINK' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:2698: AC_TRY_LINK is expanded from...
config/support-mpi.m4:96: LX_QUERY_MPI_COMPILER is expanded from...
config/support-mpi.m4:19: ROSE_SUPPORT_MPI is expanded from...
config/support-rose.m4:3: ROSE_SUPPORT_ROSE_PART_1 is expanded from...
configure.ac:121: the top level])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([HAVE_MPI])
m4trace:configure.ac:121: -1- m4_pattern_allow([^HAVE_MPI$])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_MPI], [/* Define to 1 if you have MPI libs and headers. */
@%:@undef HAVE_MPI])
m4trace:configure.ac:121: -1- AC_SUBST([MPICXX])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([MPICXX])
m4trace:configure.ac:121: -1- m4_pattern_allow([^MPICXX$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_MPI_CXXFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_MPI_CXXFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_MPI_CXXFLAGS$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_MPI_CXXLDFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_MPI_CXXLDFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_MPI_CXXLDFLAGS$])
m4trace:configure.ac:121: -1- AC_SUBST([F77])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([F77])
m4trace:configure.ac:121: -1- m4_pattern_allow([^F77$])
m4trace:configure.ac:121: -1- AC_SUBST([FFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([FFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^FFLAGS$])
m4trace:configure.ac:121: -1- AC_SUBST([LDFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([LDFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:121: -1- AC_SUBST([LIBS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([LIBS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:121: -1- AC_SUBST([F77])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([F77])
m4trace:configure.ac:121: -1- m4_pattern_allow([^F77$])
m4trace:configure.ac:121: -1- AC_SUBST([ac_ct_F77])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ac_ct_F77])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ac_ct_F77$])
m4trace:configure.ac:121: -1- AC_SUBST([MPIF77])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([MPIF77])
m4trace:configure.ac:121: -1- m4_pattern_allow([^MPIF77$])
m4trace:configure.ac:121: -1- _m4_warn([obsolete], [The macro `AC_TRY_LINK' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:2698: AC_TRY_LINK is expanded from...
config/support-mpi.m4:96: LX_QUERY_MPI_COMPILER is expanded from...
config/support-mpi.m4:19: ROSE_SUPPORT_MPI is expanded from...
config/support-rose.m4:3: ROSE_SUPPORT_ROSE_PART_1 is expanded from...
configure.ac:121: the top level])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([HAVE_MPI])
m4trace:configure.ac:121: -1- m4_pattern_allow([^HAVE_MPI$])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_MPI], [/* Define to 1 if you have MPI libs and headers. */
@%:@undef HAVE_MPI])
m4trace:configure.ac:121: -1- AC_SUBST([MPIF77])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([MPIF77])
m4trace:configure.ac:121: -1- m4_pattern_allow([^MPIF77$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_MPI_F77FLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_MPI_F77FLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_MPI_F77FLAGS$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_MPI_F77LDFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_MPI_F77LDFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_MPI_F77LDFLAGS$])
m4trace:configure.ac:121: -1- AC_SUBST([FC])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([FC])
m4trace:configure.ac:121: -1- m4_pattern_allow([^FC$])
m4trace:configure.ac:121: -1- AC_SUBST([FCFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([FCFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^FCFLAGS$])
m4trace:configure.ac:121: -1- AC_SUBST([LDFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([LDFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:121: -1- AC_SUBST([LIBS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([LIBS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:121: -1- AC_SUBST([FC])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([FC])
m4trace:configure.ac:121: -1- m4_pattern_allow([^FC$])
m4trace:configure.ac:121: -1- AC_SUBST([ac_ct_FC])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ac_ct_FC])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ac_ct_FC$])
m4trace:configure.ac:121: -1- AC_SUBST([MPIFC])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([MPIFC])
m4trace:configure.ac:121: -1- m4_pattern_allow([^MPIFC$])
m4trace:configure.ac:121: -1- _m4_warn([obsolete], [The macro `AC_TRY_LINK' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:2698: AC_TRY_LINK is expanded from...
config/support-mpi.m4:96: LX_QUERY_MPI_COMPILER is expanded from...
config/support-mpi.m4:19: ROSE_SUPPORT_MPI is expanded from...
config/support-rose.m4:3: ROSE_SUPPORT_ROSE_PART_1 is expanded from...
configure.ac:121: the top level])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([HAVE_MPI])
m4trace:configure.ac:121: -1- m4_pattern_allow([^HAVE_MPI$])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_MPI], [/* Define to 1 if you have MPI libs and headers. */
@%:@undef HAVE_MPI])
m4trace:configure.ac:121: -1- AC_SUBST([MPIFC])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([MPIFC])
m4trace:configure.ac:121: -1- m4_pattern_allow([^MPIFC$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_MPI_FFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_MPI_FFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_MPI_FFLAGS$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_MPI_FLDFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_MPI_FLDFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_MPI_FLDFLAGS$])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_WITH_MPI_C], [test "x$MPICC" != "xnot-found" || test "x$MPICXX" != "xnot-found"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_MPI_C_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_MPI_C_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_MPI_C_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_MPI_C_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_MPI_C_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_MPI_C_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_MPI_C_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_MPI_C_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_WITH_MPI_FORTRAN], [test "x$MPIFC" != "xnot-found" || test "x$MPIF77" != "xnot-found"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_MPI_FORTRAN_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_MPI_FORTRAN_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_MPI_FORTRAN_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_MPI_FORTRAN_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_MPI_FORTRAN_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_MPI_FORTRAN_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_MPI_FORTRAN_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_MPI_FORTRAN_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([HAVE_SPOT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^HAVE_SPOT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_SPOT], [/* Define to 1 if you have SPOT libs and headers. */
@%:@undef HAVE_SPOT])
m4trace:configure.ac:121: -1- _m4_warn([cross], [cannot check for file existence when cross compiling], [../../lib/autoconf/general.m4:2788: AC_CHECK_FILE is expanded from...
config/support-spot.m4:13: ROSE_SUPPORT_SPOT is expanded from...
config/support-rose.m4:3: ROSE_SUPPORT_ROSE_PART_1 is expanded from...
configure.ac:121: the top level])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_WITH_SPOT], [test "x$SPOT_INCLUDE_PATH" != "x" && test "x$SPOT_LIBRARY_PATH" != "x"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_SPOT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_SPOT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_SPOT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_SPOT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_SPOT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_SPOT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_SPOT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_SPOT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST([SPOT_INSTALL_PATH])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([SPOT_INSTALL_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^SPOT_INSTALL_PATH$])
m4trace:configure.ac:121: -1- AC_SUBST([SPOT_INCLUDE_PATH])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([SPOT_INCLUDE_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^SPOT_INCLUDE_PATH$])
m4trace:configure.ac:121: -1- AC_SUBST([SPOT_LIBRARY_PATH])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([SPOT_LIBRARY_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^SPOT_LIBRARY_PATH$])
m4trace:configure.ac:121: -1- _m4_warn([cross], [cannot check for file existence when cross compiling], [../../lib/autoconf/general.m4:2788: AC_CHECK_FILE is expanded from...
config/support-cobol.m4:29: ROSE_SUPPORT_COBOL is expanded from...
config/support-rose.m4:3: ROSE_SUPPORT_ROSE_PART_1 is expanded from...
configure.ac:121: the top level])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_WITH_GNU_COBOL_PT_LIB], [test "x$COBPT_INSTALL_PATH" != "x" && test "x$COBPT_LIBRARY_PATH" != "x"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_GNU_COBOL_PT_LIB_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_GNU_COBOL_PT_LIB_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_GNU_COBOL_PT_LIB_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_GNU_COBOL_PT_LIB_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_GNU_COBOL_PT_LIB_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_GNU_COBOL_PT_LIB_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_GNU_COBOL_PT_LIB_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_GNU_COBOL_PT_LIB_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST([COBPT_INSTALL_PATH])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([COBPT_INSTALL_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^COBPT_INSTALL_PATH$])
m4trace:configure.ac:121: -1- AC_SUBST([COBPT_LIBRARY_PATH])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([COBPT_LIBRARY_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^COBPT_LIBRARY_PATH$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([COBPT_INSTALL_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^COBPT_INSTALL_PATH$])
m4trace:configure.ac:121: -1- AH_OUTPUT([COBPT_INSTALL_PATH], [/* Absolute path of the COBPT installation */
@%:@undef COBPT_INSTALL_PATH])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([COBPT_LIBRARY_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^COBPT_LIBRARY_PATH$])
m4trace:configure.ac:121: -1- AH_OUTPUT([COBPT_LIBRARY_PATH], [/* Absolute path of the COBPT installation lib directory */
@%:@undef COBPT_LIBRARY_PATH])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([USE_ROSE_GNU_COBOL_PT_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^USE_ROSE_GNU_COBOL_PT_SUPPORT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([USE_ROSE_GNU_COBOL_PT_SUPPORT], [/* Controls use of ROSE support for GnuCOBOL parse-tree library. */
@%:@undef USE_ROSE_GNU_COBOL_PT_SUPPORT])
m4trace:configure.ac:121: -1- _m4_warn([cross], [cannot check for file existence when cross compiling], [../../lib/autoconf/general.m4:2788: AC_CHECK_FILE is expanded from...
config/support-octave.m4:27: ROSE_SUPPORT_OCTAVE is expanded from...
config/support-rose.m4:3: ROSE_SUPPORT_ROSE_PART_1 is expanded from...
configure.ac:121: the top level])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_WITH_GNU_OCTAVE_PARSER], [test "x$OCTAVE_PARSER_INSTALL_TARFILE" != "x"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_GNU_OCTAVE_PARSER_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_GNU_OCTAVE_PARSER_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_GNU_OCTAVE_PARSER_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_GNU_OCTAVE_PARSER_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_GNU_OCTAVE_PARSER_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_GNU_OCTAVE_PARSER_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_GNU_OCTAVE_PARSER_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_GNU_OCTAVE_PARSER_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST([OCTAVE_PARSER_INSTALL_TARFILE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([OCTAVE_PARSER_INSTALL_TARFILE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OCTAVE_PARSER_INSTALL_TARFILE$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([OCTAVE_PARSER_INSTALL_TARFILE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^OCTAVE_PARSER_INSTALL_TARFILE$])
m4trace:configure.ac:121: -1- AH_OUTPUT([OCTAVE_PARSER_INSTALL_TARFILE], [/* Absolute path of the modified GNU Octave installation */
@%:@undef OCTAVE_PARSER_INSTALL_TARFILE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([USE_ROSE_GNU_OCTAVE_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^USE_ROSE_GNU_OCTAVE_SUPPORT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([USE_ROSE_GNU_OCTAVE_SUPPORT], [/* Controls use of ROSE support for the modified GNU Octave parser. */
@%:@undef USE_ROSE_GNU_OCTAVE_SUPPORT])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_BUILD_PROJECTS_DIRECTORY_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_PROJECTS_DIRECTORY_SUPPORT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_BUILD_PROJECTS_DIRECTORY_SUPPORT], [/* Build ROSE projects directory */
@%:@undef ROSE_BUILD_PROJECTS_DIRECTORY_SUPPORT])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_BUILD_PROJECTS_DIRECTORY_SUPPORT], [test "x$ROSE_ENABLE_PROJECTS_DIRECTORY" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_PROJECTS_DIRECTORY_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_PROJECTS_DIRECTORY_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_PROJECTS_DIRECTORY_SUPPORT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_PROJECTS_DIRECTORY_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_PROJECTS_DIRECTORY_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_PROJECTS_DIRECTORY_SUPPORT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_PROJECTS_DIRECTORY_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_PROJECTS_DIRECTORY_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_BUILD_TESTS_DIRECTORY_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_TESTS_DIRECTORY_SUPPORT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_BUILD_TESTS_DIRECTORY_SUPPORT], [/* Build ROSE tests directory */
@%:@undef ROSE_BUILD_TESTS_DIRECTORY_SUPPORT])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_BUILD_TESTS_DIRECTORY_SUPPORT], [test "x$support_tests_directory" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_TESTS_DIRECTORY_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_TESTS_DIRECTORY_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_TESTS_DIRECTORY_SUPPORT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_TESTS_DIRECTORY_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_TESTS_DIRECTORY_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_TESTS_DIRECTORY_SUPPORT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_TESTS_DIRECTORY_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_TESTS_DIRECTORY_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_BUILD_TUTORIAL_DIRECTORY_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_TUTORIAL_DIRECTORY_SUPPORT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_BUILD_TUTORIAL_DIRECTORY_SUPPORT], [/* Build ROSE tutorial directory */
@%:@undef ROSE_BUILD_TUTORIAL_DIRECTORY_SUPPORT])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_BUILD_TUTORIAL_DIRECTORY_SUPPORT], [test "x$support_tutorial_directory" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_TUTORIAL_DIRECTORY_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_TUTORIAL_DIRECTORY_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_TUTORIAL_DIRECTORY_SUPPORT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BUILD_TUTORIAL_DIRECTORY_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BUILD_TUTORIAL_DIRECTORY_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BUILD_TUTORIAL_DIRECTORY_SUPPORT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_TUTORIAL_DIRECTORY_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_TUTORIAL_DIRECTORY_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USE_MEMORY_POOL_NO_REUSE], [test "x$enable_memory_pool_no_reuse" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_MEMORY_POOL_NO_REUSE_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_MEMORY_POOL_NO_REUSE_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_MEMORY_POOL_NO_REUSE_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_MEMORY_POOL_NO_REUSE_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_MEMORY_POOL_NO_REUSE_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_MEMORY_POOL_NO_REUSE_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_MEMORY_POOL_NO_REUSE_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_MEMORY_POOL_NO_REUSE_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_USE_MEMORY_POOL_NO_REUSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_MEMORY_POOL_NO_REUSE$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_USE_MEMORY_POOL_NO_REUSE], [/* Whether to use a special no-reuse mode of memory pools */
@%:@undef ROSE_USE_MEMORY_POOL_NO_REUSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USE_SMALLER_GENERATED_FILES], [test "x$enable_smaller_generated_files" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_SMALLER_GENERATED_FILES_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_SMALLER_GENERATED_FILES_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_SMALLER_GENERATED_FILES_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_SMALLER_GENERATED_FILES_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_SMALLER_GENERATED_FILES_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_SMALLER_GENERATED_FILES_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_SMALLER_GENERATED_FILES_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_SMALLER_GENERATED_FILES_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_USE_SMALLER_GENERATED_FILES])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_SMALLER_GENERATED_FILES$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_USE_SMALLER_GENERATED_FILES], [/* Whether to use smaller (but more numerous) generated files for the ROSE IR
   */
@%:@undef ROSE_USE_SMALLER_GENERATED_FILES])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT], [test "x$enable_internalFrontendDevelopment" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE])
m4trace:configure.ac:121: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:207: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1473: AC_ARG_ENABLE is expanded from...
config/support-edg.m4:1: ROSE_SUPPORT_EDG is expanded from...
config/support-rose.m4:3: ROSE_SUPPORT_ROSE_PART_1 is expanded from...
configure.ac:121: the top level])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_USE_EDG_VERSION_4_12])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_EDG_VERSION_4_12$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_USE_EDG_VERSION_4_12], [/* Whether to use the new EDG version 4.12 */
@%:@undef ROSE_USE_EDG_VERSION_4_12])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_USE_EDG_VERSION_5_0])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_EDG_VERSION_5_0$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_USE_EDG_VERSION_5_0], [/* Whether to use the new EDG version 5.0 */
@%:@undef ROSE_USE_EDG_VERSION_5_0])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_USE_EDG_VERSION_6_0])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_EDG_VERSION_6_0$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_USE_EDG_VERSION_6_0], [/* Whether to use the new EDG version 6.0 */
@%:@undef ROSE_USE_EDG_VERSION_6_0])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_USE_EDG_VERSION_6_1])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_EDG_VERSION_6_1$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_USE_EDG_VERSION_6_1], [/* Whether to use the new EDG version 6.1 */
@%:@undef ROSE_USE_EDG_VERSION_6_1])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_EDG_MAJOR_VERSION_NUMBER])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EDG_MAJOR_VERSION_NUMBER$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_EDG_MAJOR_VERSION_NUMBER], [/* EDG major version number */
@%:@undef ROSE_EDG_MAJOR_VERSION_NUMBER])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_EDG_MINOR_VERSION_NUMBER])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EDG_MINOR_VERSION_NUMBER$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_EDG_MINOR_VERSION_NUMBER], [/* EDG minor version number */
@%:@undef ROSE_EDG_MINOR_VERSION_NUMBER])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_EDG_MAJOR_VERSION_NUMBER])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_EDG_MAJOR_VERSION_NUMBER])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EDG_MAJOR_VERSION_NUMBER$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_EDG_MINOR_VERSION_NUMBER])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_EDG_MINOR_VERSION_NUMBER])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EDG_MINOR_VERSION_NUMBER$])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USE_EDG_VERSION_4_12], [test "x$enable_edg_version412" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_EDG_VERSION_4_12_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_EDG_VERSION_4_12_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_EDG_VERSION_4_12_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_EDG_VERSION_4_12_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_EDG_VERSION_4_12_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_EDG_VERSION_4_12_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_EDG_VERSION_4_12_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_EDG_VERSION_4_12_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USE_EDG_VERSION_5_0], [test "x$enable_edg_version50" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_EDG_VERSION_5_0_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_EDG_VERSION_5_0_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_EDG_VERSION_5_0_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_EDG_VERSION_5_0_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_EDG_VERSION_5_0_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_EDG_VERSION_5_0_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_EDG_VERSION_5_0_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_EDG_VERSION_5_0_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USE_EDG_VERSION_6_0], [test "x$enable_edg_version60" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_EDG_VERSION_6_0_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_EDG_VERSION_6_0_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_EDG_VERSION_6_0_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_EDG_VERSION_6_0_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_EDG_VERSION_6_0_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_EDG_VERSION_6_0_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_EDG_VERSION_6_0_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_EDG_VERSION_6_0_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USE_EDG_VERSION_6_1], [test "x$enable_edg_version61" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_EDG_VERSION_6_1_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_EDG_VERSION_6_1_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_EDG_VERSION_6_1_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_EDG_VERSION_6_1_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_EDG_VERSION_6_1_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_EDG_VERSION_6_1_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_EDG_VERSION_6_1_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_EDG_VERSION_6_1_FALSE])
m4trace:configure.ac:121: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:207: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1473: AC_ARG_ENABLE is expanded from...
config/support-edg.m4:1: ROSE_SUPPORT_EDG is expanded from...
config/support-rose.m4:3: ROSE_SUPPORT_ROSE_PART_1 is expanded from...
configure.ac:121: the top level])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_HAS_EDG_SOURCE], [test "$has_edg_source" = "yes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_HAS_EDG_SOURCE_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_HAS_EDG_SOURCE_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_HAS_EDG_SOURCE_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_HAS_EDG_SOURCE_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_HAS_EDG_SOURCE_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_HAS_EDG_SOURCE_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_HAS_EDG_SOURCE_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_HAS_EDG_SOURCE_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST([MD5])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([MD5])
m4trace:configure.ac:121: -1- m4_pattern_allow([^MD5$])
m4trace:configure.ac:121: -1- AC_SUBST([MD5])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([MD5])
m4trace:configure.ac:121: -1- m4_pattern_allow([^MD5$])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([BINARY_EDG_TARBALL_ENABLED], [test "$binary_edg_tarball_enabled" = "yes"])
m4trace:configure.ac:121: -1- AC_SUBST([BINARY_EDG_TARBALL_ENABLED_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BINARY_EDG_TARBALL_ENABLED_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BINARY_EDG_TARBALL_ENABLED_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([BINARY_EDG_TARBALL_ENABLED_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BINARY_EDG_TARBALL_ENABLED_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BINARY_EDG_TARBALL_ENABLED_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([BINARY_EDG_TARBALL_ENABLED_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([BINARY_EDG_TARBALL_ENABLED_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USE_CLANG_FRONTEND], [test "x$enable_clang_frontend" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_CLANG_FRONTEND_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_CLANG_FRONTEND_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_CLANG_FRONTEND_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_CLANG_FRONTEND_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_CLANG_FRONTEND_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_CLANG_FRONTEND_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_CLANG_FRONTEND_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_CLANG_FRONTEND_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST([LLVM_CONFIG])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([LLVM_CONFIG])
m4trace:configure.ac:121: -1- m4_pattern_allow([^LLVM_CONFIG$])
m4trace:configure.ac:121: -1- AC_SUBST([CLANG_CXXFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([CLANG_CXXFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^CLANG_CXXFLAGS$])
m4trace:configure.ac:121: -1- AC_SUBST([CLANG_LDFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([CLANG_LDFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^CLANG_LDFLAGS$])
m4trace:configure.ac:121: -1- AC_SUBST([CLANG_LIBDIR])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([CLANG_LIBDIR])
m4trace:configure.ac:121: -1- m4_pattern_allow([^CLANG_LIBDIR$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_USE_CLANG_FRONTEND])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_CLANG_FRONTEND$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_USE_CLANG_FRONTEND], [/* Use Clang for parsing C/C++-like languages */
@%:@undef ROSE_USE_CLANG_FRONTEND])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USE_CLANG_FRONTEND], [test "x$CONFIG_HAS_ROSE_ENABLE_CLANG_FRONTEND" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_CLANG_FRONTEND_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_CLANG_FRONTEND_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_CLANG_FRONTEND_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_CLANG_FRONTEND_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_CLANG_FRONTEND_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_CLANG_FRONTEND_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_CLANG_FRONTEND_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_CLANG_FRONTEND_FALSE])
m4trace:configure.ac:121: -1- _m4_warn([cross], [cannot check for file existence when cross compiling], [../../lib/autoconf/general.m4:2788: AC_CHECK_FILE is expanded from...
config/support-flang.m4:35: ROSE_SUPPORT_FLANG is expanded from...
config/support-rose.m4:3: ROSE_SUPPORT_ROSE_PART_1 is expanded from...
configure.ac:121: the top level])
m4trace:configure.ac:121: -1- _m4_warn([cross], [cannot check for file existence when cross compiling], [../../lib/autoconf/general.m4:2788: AC_CHECK_FILE is expanded from...
config/support-flang.m4:35: ROSE_SUPPORT_FLANG is expanded from...
config/support-rose.m4:3: ROSE_SUPPORT_ROSE_PART_1 is expanded from...
configure.ac:121: the top level])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_WITH_FLANG], [test "x$FLANG_INSTALL_PATH" != "x"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_FLANG_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_FLANG_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_FLANG_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_FLANG_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_FLANG_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_FLANG_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_FLANG_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_FLANG_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_WITH_FLANG_SRC], [test "x$FLANG_SOURCE_PATH" != "x"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_FLANG_SRC_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_FLANG_SRC_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_FLANG_SRC_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_WITH_FLANG_SRC_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_WITH_FLANG_SRC_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WITH_FLANG_SRC_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_FLANG_SRC_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_FLANG_SRC_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION], [test "x$FLANG_INSTALL_PATH" != "x" && test "x$FLANG_SOURCE_PATH" != "x"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST([FLANG_INSTALL_PATH])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([FLANG_INSTALL_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^FLANG_INSTALL_PATH$])
m4trace:configure.ac:121: -1- AC_SUBST([FLANG_SOURCE_PATH])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([FLANG_SOURCE_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^FLANG_SOURCE_PATH$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([FLANG_INSTALL_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^FLANG_INSTALL_PATH$])
m4trace:configure.ac:121: -1- AH_OUTPUT([FLANG_INSTALL_PATH], [/* Absolute path of the FLANG installation */
@%:@undef FLANG_INSTALL_PATH])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([FLANG_SOURCE_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^FLANG_SOURCE_PATH$])
m4trace:configure.ac:121: -1- AH_OUTPUT([FLANG_SOURCE_PATH], [/* Absolute path of the FLANG compilersource files */
@%:@undef FLANG_SOURCE_PATH])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_SUPPORT_GNU_EXTENSIONS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_SUPPORT_GNU_EXTENSIONS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_SUPPORT_GNU_EXTENSIONS$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_USE_MICROSOFT_EXTENSIONS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_MICROSOFT_EXTENSIONS$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_USE_MICROSOFT_EXTENSIONS], [/* Controls use of Microsoft MSVC features */
@%:@undef ROSE_USE_MICROSOFT_EXTENSIONS])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_SUPPORT_MICROSOFT_EXTENSIONS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_SUPPORT_MICROSOFT_EXTENSIONS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_SUPPORT_MICROSOFT_EXTENSIONS$])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USE_MICROSOFT_EXTENSIONS], [test "x$enable_microsoft_extensions" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_MICROSOFT_EXTENSIONS_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_MICROSOFT_EXTENSIONS_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_MICROSOFT_EXTENSIONS_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_MICROSOFT_EXTENSIONS_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_MICROSOFT_EXTENSIONS_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_MICROSOFT_EXTENSIONS_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_MICROSOFT_EXTENSIONS_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_MICROSOFT_EXTENSIONS_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_USE_EDG_QUAD_FLOAT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_EDG_QUAD_FLOAT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_USE_EDG_QUAD_FLOAT], [/* Enables support for __float80 and __float128 in EDG. */
@%:@undef ROSE_USE_EDG_QUAD_FLOAT])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_EDG_QUAD_FLOAT])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_EDG_QUAD_FLOAT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_EDG_QUAD_FLOAT$])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USE_EDG_QUAD_FLOAT], [ test $rose_use_edg_quad_float == yes ])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_EDG_QUAD_FLOAT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_EDG_QUAD_FLOAT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_EDG_QUAD_FLOAT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_EDG_QUAD_FLOAT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_EDG_QUAD_FLOAT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_EDG_QUAD_FLOAT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_EDG_QUAD_FLOAT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_EDG_QUAD_FLOAT_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_DEBUG_NEW_EDG_ROSE_CONNECTION], [test "x$enable_debug_output_for_new_edg_interface" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_DEBUG_NEW_EDG_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_DEBUG_NEW_EDG_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_DEBUG_NEW_EDG_ROSE_CONNECTION_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_DEBUG_NEW_EDG_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_DEBUG_NEW_EDG_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_DEBUG_NEW_EDG_ROSE_CONNECTION_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_DEBUG_NEW_EDG_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_DEBUG_NEW_EDG_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_DEBUG_NEW_EDG_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_DEBUG_NEW_EDG_ROSE_CONNECTION$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_DEBUG_NEW_EDG_ROSE_CONNECTION], [/* Controls large volumes of output spew useful for debugging new EDG/ROSE
   connection code */
@%:@undef ROSE_DEBUG_NEW_EDG_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_EXPERIMENTAL_OFP_ROSE_CONNECTION], [test "x$enable_experimental_fortran_frontend" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_EXPERIMENTAL_OFP_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_EXPERIMENTAL_OFP_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EXPERIMENTAL_OFP_ROSE_CONNECTION_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_EXPERIMENTAL_OFP_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_EXPERIMENTAL_OFP_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EXPERIMENTAL_OFP_ROSE_CONNECTION_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_EXPERIMENTAL_OFP_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_EXPERIMENTAL_OFP_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_EXPERIMENTAL_OFP_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EXPERIMENTAL_OFP_ROSE_CONNECTION$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_EXPERIMENTAL_OFP_ROSE_CONNECTION], [/* Enables development of experimental fortran frontend */
@%:@undef ROSE_EXPERIMENTAL_OFP_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_DEBUG_EXPERIMENTAL_OFP_ROSE_CONNECTION], [test "x$enable_debug_output_for_experimental_fortran_frontend" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_DEBUG_EXPERIMENTAL_OFP_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_DEBUG_EXPERIMENTAL_OFP_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_DEBUG_EXPERIMENTAL_OFP_ROSE_CONNECTION_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_DEBUG_EXPERIMENTAL_OFP_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_DEBUG_EXPERIMENTAL_OFP_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_DEBUG_EXPERIMENTAL_OFP_ROSE_CONNECTION_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_DEBUG_EXPERIMENTAL_OFP_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_DEBUG_EXPERIMENTAL_OFP_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_DEBUG_EXPERIMENTAL_OFP_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_DEBUG_EXPERIMENTAL_OFP_ROSE_CONNECTION$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_DEBUG_EXPERIMENTAL_OFP_ROSE_CONNECTION], [/* Controls large volumes of output spew useful for debugging new OFP/ROSE
   connection code */
@%:@undef ROSE_DEBUG_EXPERIMENTAL_OFP_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION], [test "x$enable_experimental_flang_frontend" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION], [/* Enables development of experimental fortran flang frontend */
@%:@undef ROSE_EXPERIMENTAL_FLANG_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_EXPERIMENTAL_CSHARP_ROSE_CONNECTION], [test "x$enable_experimental_csharp_frontend" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_EXPERIMENTAL_CSHARP_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_EXPERIMENTAL_CSHARP_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EXPERIMENTAL_CSHARP_ROSE_CONNECTION_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_EXPERIMENTAL_CSHARP_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_EXPERIMENTAL_CSHARP_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EXPERIMENTAL_CSHARP_ROSE_CONNECTION_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_EXPERIMENTAL_CSHARP_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_EXPERIMENTAL_CSHARP_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_EXPERIMENTAL_CSHARP_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EXPERIMENTAL_CSHARP_ROSE_CONNECTION$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_EXPERIMENTAL_CSHARP_ROSE_CONNECTION], [/* Enables development of experimental csharp frontend */
@%:@undef ROSE_EXPERIMENTAL_CSHARP_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_EXPERIMENTAL_CSHARP_ROSE_CONNECTION_MONO_HOME])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EXPERIMENTAL_CSHARP_ROSE_CONNECTION_MONO_HOME$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_EXPERIMENTAL_CSHARP_ROSE_CONNECTION_MONO_HOME], [/* Path to Mono Csharp compiler used in development of experimental csharp
   frontend */
@%:@undef ROSE_EXPERIMENTAL_CSHARP_ROSE_CONNECTION_MONO_HOME])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_EXPERIMENTAL_CSHARP_ROSE_CONNECTION_ROSLYN_HOME])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EXPERIMENTAL_CSHARP_ROSE_CONNECTION_ROSLYN_HOME$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_EXPERIMENTAL_CSHARP_ROSE_CONNECTION_ROSLYN_HOME], [/* Path to Roslyn Csharp library used in development of experimental csharp
   frontend */
@%:@undef ROSE_EXPERIMENTAL_CSHARP_ROSE_CONNECTION_ROSLYN_HOME])
m4trace:configure.ac:121: -1- AC_SUBST([mono_home])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([mono_home])
m4trace:configure.ac:121: -1- m4_pattern_allow([^mono_home$])
m4trace:configure.ac:121: -1- AC_SUBST([rosyln_home])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([rosyln_home])
m4trace:configure.ac:121: -1- m4_pattern_allow([^rosyln_home$])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_DEBUG_EXPERIMENTAL_CSHARP_ROSE_CONNECTION], [test "x$enable_debug_output_for_experimental_csharp_frontend" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_DEBUG_EXPERIMENTAL_CSHARP_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_DEBUG_EXPERIMENTAL_CSHARP_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_DEBUG_EXPERIMENTAL_CSHARP_ROSE_CONNECTION_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_DEBUG_EXPERIMENTAL_CSHARP_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_DEBUG_EXPERIMENTAL_CSHARP_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_DEBUG_EXPERIMENTAL_CSHARP_ROSE_CONNECTION_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_DEBUG_EXPERIMENTAL_CSHARP_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_DEBUG_EXPERIMENTAL_CSHARP_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_DEBUG_EXPERIMENTAL_CSHARP_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_DEBUG_EXPERIMENTAL_CSHARP_ROSE_CONNECTION$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_DEBUG_EXPERIMENTAL_CSHARP_ROSE_CONNECTION], [/* Controls large volumes of output spew useful for debugging new CSHARP/ROSE
   connection code */
@%:@undef ROSE_DEBUG_EXPERIMENTAL_CSHARP_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION], [test "x$enable_experimental_ada_frontend" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION], [/* Enables development of experimental ada frontend */
@%:@undef ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_DEBUG_EXPERIMENTAL_ADA_ROSE_CONNECTION], [test "x$enable_debug_output_for_experimental_ada_frontend" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_DEBUG_EXPERIMENTAL_ADA_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_DEBUG_EXPERIMENTAL_ADA_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_DEBUG_EXPERIMENTAL_ADA_ROSE_CONNECTION_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_DEBUG_EXPERIMENTAL_ADA_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_DEBUG_EXPERIMENTAL_ADA_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_DEBUG_EXPERIMENTAL_ADA_ROSE_CONNECTION_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_DEBUG_EXPERIMENTAL_ADA_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_DEBUG_EXPERIMENTAL_ADA_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_DEBUG_EXPERIMENTAL_ADA_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_DEBUG_EXPERIMENTAL_ADA_ROSE_CONNECTION$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_DEBUG_EXPERIMENTAL_ADA_ROSE_CONNECTION], [/* Controls large volumes of output spew useful for debugging new ADA/ROSE
   connection code */
@%:@undef ROSE_DEBUG_EXPERIMENTAL_ADA_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- AC_SUBST([GNAT_INCLUDES])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([GNAT_INCLUDES])
m4trace:configure.ac:121: -1- m4_pattern_allow([^GNAT_INCLUDES$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([USE_ROSE_GNAT_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^USE_ROSE_GNAT_SUPPORT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([USE_ROSE_GNAT_SUPPORT], [/* Controls use of ROSE support for GNAT ADA frontend Support. */
@%:@undef USE_ROSE_GNAT_SUPPORT])
m4trace:configure.ac:121: -1- AC_SUBST([gnat_path])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([gnat_path])
m4trace:configure.ac:121: -1- m4_pattern_allow([^gnat_path$])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USE_GNAT], [test ! "$with_gnat" = no])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_GNAT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_GNAT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_GNAT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_GNAT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_GNAT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_GNAT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_GNAT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_GNAT_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION_GNAT_HOME])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION_GNAT_HOME$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION_GNAT_HOME], [/* Path to GNAT Ada compiler used in development of experimental ada frontend
   */
@%:@undef ROSE_EXPERIMENTAL_ADA_ROSE_CONNECTION_GNAT_HOME])
m4trace:configure.ac:121: -1- AC_SUBST([gnat_home])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([gnat_home])
m4trace:configure.ac:121: -1- m4_pattern_allow([^gnat_home$])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION], [test "x$enable_experimental_jovial_frontend" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION], [/* Enables development of experimental jovial frontend */
@%:@undef ROSE_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_DEBUG_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION], [test "x$enable_debug_output_for_experimental_jovial_frontend" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_DEBUG_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_DEBUG_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_DEBUG_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_DEBUG_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_DEBUG_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_DEBUG_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_DEBUG_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_DEBUG_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_DEBUG_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_DEBUG_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_DEBUG_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION], [/* Controls large volumes of output spew useful for debugging new JOVIAL/ROSE
   connection code */
@%:@undef ROSE_DEBUG_EXPERIMENTAL_JOVIAL_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_EXPERIMENTAL_COBOL_ROSE_CONNECTION], [test "x$enable_experimental_cobol_frontend" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_EXPERIMENTAL_COBOL_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_EXPERIMENTAL_COBOL_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EXPERIMENTAL_COBOL_ROSE_CONNECTION_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_EXPERIMENTAL_COBOL_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_EXPERIMENTAL_COBOL_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EXPERIMENTAL_COBOL_ROSE_CONNECTION_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_EXPERIMENTAL_COBOL_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_EXPERIMENTAL_COBOL_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_EXPERIMENTAL_COBOL_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EXPERIMENTAL_COBOL_ROSE_CONNECTION$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_EXPERIMENTAL_COBOL_ROSE_CONNECTION], [/* Enables development of experimental cobol frontend */
@%:@undef ROSE_EXPERIMENTAL_COBOL_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_DEBUG_EXPERIMENTAL_COBOL_ROSE_CONNECTION], [test "x$enable_debug_output_for_experimental_cobol_frontend" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_DEBUG_EXPERIMENTAL_COBOL_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_DEBUG_EXPERIMENTAL_COBOL_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_DEBUG_EXPERIMENTAL_COBOL_ROSE_CONNECTION_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_DEBUG_EXPERIMENTAL_COBOL_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_DEBUG_EXPERIMENTAL_COBOL_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_DEBUG_EXPERIMENTAL_COBOL_ROSE_CONNECTION_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_DEBUG_EXPERIMENTAL_COBOL_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_DEBUG_EXPERIMENTAL_COBOL_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_DEBUG_EXPERIMENTAL_COBOL_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_DEBUG_EXPERIMENTAL_COBOL_ROSE_CONNECTION$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_DEBUG_EXPERIMENTAL_COBOL_ROSE_CONNECTION], [/* Controls large volumes of output spew useful for debugging new COBOL/ROSE
   connection code */
@%:@undef ROSE_DEBUG_EXPERIMENTAL_COBOL_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_EXPERIMENTAL_MATLAB_ROSE_CONNECTION], [test "x$enable_experimental_matlab_frontend" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_EXPERIMENTAL_MATLAB_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_EXPERIMENTAL_MATLAB_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EXPERIMENTAL_MATLAB_ROSE_CONNECTION_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_EXPERIMENTAL_MATLAB_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_EXPERIMENTAL_MATLAB_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EXPERIMENTAL_MATLAB_ROSE_CONNECTION_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_EXPERIMENTAL_MATLAB_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_EXPERIMENTAL_MATLAB_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_EXPERIMENTAL_MATLAB_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_EXPERIMENTAL_MATLAB_ROSE_CONNECTION$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_EXPERIMENTAL_MATLAB_ROSE_CONNECTION], [/* Enables development of experimental Octave/Matlab frontend */
@%:@undef ROSE_EXPERIMENTAL_MATLAB_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_DEBUG_EXPERIMENTAL_MATLAB_ROSE_CONNECTION], [test "x$enable_debug_output_for_experimental_matlab_frontend" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_DEBUG_EXPERIMENTAL_MATLAB_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_DEBUG_EXPERIMENTAL_MATLAB_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_DEBUG_EXPERIMENTAL_MATLAB_ROSE_CONNECTION_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_DEBUG_EXPERIMENTAL_MATLAB_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_DEBUG_EXPERIMENTAL_MATLAB_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_DEBUG_EXPERIMENTAL_MATLAB_ROSE_CONNECTION_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_DEBUG_EXPERIMENTAL_MATLAB_ROSE_CONNECTION_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_DEBUG_EXPERIMENTAL_MATLAB_ROSE_CONNECTION_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_DEBUG_EXPERIMENTAL_MATLAB_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_DEBUG_EXPERIMENTAL_MATLAB_ROSE_CONNECTION$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_DEBUG_EXPERIMENTAL_MATLAB_ROSE_CONNECTION], [/* Controls large volumes of output spew useful for debugging new
   Octave/Matlab ROSE connection code */
@%:@undef ROSE_DEBUG_EXPERIMENTAL_MATLAB_ROSE_CONNECTION])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GRAPH_IR_NODES_FOR_BACKWARD_COMPATABILITY], [test "x$enable_use_new_graph_node_backward_compatability" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GRAPH_IR_NODES_FOR_BACKWARD_COMPATABILITY_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GRAPH_IR_NODES_FOR_BACKWARD_COMPATABILITY_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GRAPH_IR_NODES_FOR_BACKWARD_COMPATABILITY_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GRAPH_IR_NODES_FOR_BACKWARD_COMPATABILITY_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GRAPH_IR_NODES_FOR_BACKWARD_COMPATABILITY_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GRAPH_IR_NODES_FOR_BACKWARD_COMPATABILITY_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GRAPH_IR_NODES_FOR_BACKWARD_COMPATABILITY_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GRAPH_IR_NODES_FOR_BACKWARD_COMPATABILITY_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_USING_GRAPH_IR_NODES_FOR_BACKWARD_COMPATABILITY])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GRAPH_IR_NODES_FOR_BACKWARD_COMPATABILITY$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_USING_GRAPH_IR_NODES_FOR_BACKWARD_COMPATABILITY], [/* Whether to use the new graph IR nodes compatability option with older API
   */
@%:@undef ROSE_USING_GRAPH_IR_NODES_FOR_BACKWARD_COMPATABILITY])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([DOT_TO_GML_TRANSLATOR], [test "$enable_dot2gml_translator" = yes])
m4trace:configure.ac:121: -1- AC_SUBST([DOT_TO_GML_TRANSLATOR_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([DOT_TO_GML_TRANSLATOR_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^DOT_TO_GML_TRANSLATOR_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([DOT_TO_GML_TRANSLATOR_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([DOT_TO_GML_TRANSLATOR_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^DOT_TO_GML_TRANSLATOR_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([DOT_TO_GML_TRANSLATOR_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([DOT_TO_GML_TRANSLATOR_FALSE])
m4trace:configure.ac:121: -1- AC_CANONICAL_HOST
m4trace:configure.ac:121: -1- AC_SUBST([host], [$ac_cv_host])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([host])
m4trace:configure.ac:121: -1- m4_pattern_allow([^host$])
m4trace:configure.ac:121: -1- AC_SUBST([host_cpu], [$[1]])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([host_cpu])
m4trace:configure.ac:121: -1- m4_pattern_allow([^host_cpu$])
m4trace:configure.ac:121: -1- AC_SUBST([host_vendor], [$[2]])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([host_vendor])
m4trace:configure.ac:121: -1- m4_pattern_allow([^host_vendor$])
m4trace:configure.ac:121: -1- AC_SUBST([host_os])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([host_os])
m4trace:configure.ac:121: -1- m4_pattern_allow([^host_os$])
m4trace:configure.ac:121: -1- AC_SUBST([C_DEBUG])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([C_DEBUG])
m4trace:configure.ac:121: -1- m4_pattern_allow([^C_DEBUG$])
m4trace:configure.ac:121: -1- AC_SUBST([C_OPTIMIZE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([C_OPTIMIZE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^C_OPTIMIZE$])
m4trace:configure.ac:121: -1- AC_SUBST([C_WARNINGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([C_WARNINGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^C_WARNINGS$])
m4trace:configure.ac:121: -1- AC_SUBST([CXX_DEBUG])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([CXX_DEBUG])
m4trace:configure.ac:121: -1- m4_pattern_allow([^CXX_DEBUG$])
m4trace:configure.ac:121: -1- AC_SUBST([CXX_OPTIMIZE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([CXX_OPTIMIZE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^CXX_OPTIMIZE$])
m4trace:configure.ac:121: -1- AC_SUBST([CXX_WARNINGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([CXX_WARNINGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^CXX_WARNINGS$])
m4trace:configure.ac:121: -1- AC_SUBST([CXX_TEMPLATE_REPOSITORY_PATH])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([CXX_TEMPLATE_REPOSITORY_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^CXX_TEMPLATE_REPOSITORY_PATH$])
m4trace:configure.ac:121: -1- AC_SUBST([CXX_TEMPLATE_OBJECTS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([CXX_TEMPLATE_OBJECTS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^CXX_TEMPLATE_OBJECTS$])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT], [test "x$enable_advanced_warnings" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT], [/* Support for an advanced uniform warning level for ROSE development */
@%:@undef ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_ASSERTION_BEHAVIOR])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_ASSERTION_BEHAVIOR$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_ASSERTION_BEHAVIOR], [/* Determines how failed assertions should behave. */
@%:@undef ROSE_ASSERTION_BEHAVIOR])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USE_SANITIZER], [test "$enable_sanitizer" = yes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_SANITIZER_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_SANITIZER_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_SANITIZER_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_SANITIZER_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_SANITIZER_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_SANITIZER_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_SANITIZER_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_SANITIZER_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USE_LCOV], [test "$enable_lcov" = yes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_LCOV_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_LCOV_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_LCOV_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_LCOV_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_LCOV_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_LCOV_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_LCOV_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_LCOV_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_HOME])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_HOME])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_HOME$])
m4trace:configure.ac:121: -1- AC_SUBST([PYTHON])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([PYTHON])
m4trace:configure.ac:121: -1- m4_pattern_allow([^PYTHON$])
m4trace:configure.ac:121: -1- AC_SUBST([PYTHON])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([PYTHON])
m4trace:configure.ac:121: -1- m4_pattern_allow([^PYTHON$])
m4trace:configure.ac:121: -1- AC_SUBST([PYTHON], [$PYTHON])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([PYTHON])
m4trace:configure.ac:121: -1- m4_pattern_allow([^PYTHON$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([PYTHON_VERSION])
m4trace:configure.ac:121: -1- m4_pattern_allow([^PYTHON_VERSION$])
m4trace:configure.ac:121: -1- AH_OUTPUT([PYTHON_VERSION], [/* "Version of Python selected when building ROSE." */
@%:@undef PYTHON_VERSION])
m4trace:configure.ac:121: -1- AC_SUBST([PYTHON_ROOT])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([PYTHON_ROOT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^PYTHON_ROOT$])
m4trace:configure.ac:121: -1- AC_SUBST([PYTHON_VERSION_MM])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([PYTHON_VERSION_MM])
m4trace:configure.ac:121: -1- m4_pattern_allow([^PYTHON_VERSION_MM$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([HAVE_PYTHON])
m4trace:configure.ac:121: -1- m4_pattern_allow([^HAVE_PYTHON$])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_PYTHON], [/* If available, contains the Python version number currently in use. */
@%:@undef HAVE_PYTHON])
m4trace:configure.ac:121: -1- AC_SUBST([PYTHON_SITE_PKG])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([PYTHON_SITE_PKG])
m4trace:configure.ac:121: -1- m4_pattern_allow([^PYTHON_SITE_PKG$])
m4trace:configure.ac:121: -1- AC_SUBST([PYTHON_CPPFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([PYTHON_CPPFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^PYTHON_CPPFLAGS$])
m4trace:configure.ac:121: -1- AC_SUBST([PYTHON_LDFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([PYTHON_LDFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^PYTHON_LDFLAGS$])
m4trace:configure.ac:121: -1- AC_SUBST([PYTHON_EXTRA_LIBS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([PYTHON_EXTRA_LIBS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^PYTHON_EXTRA_LIBS$])
m4trace:configure.ac:121: -1- AC_SUBST([PYTHON_EXTRA_LDFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([PYTHON_EXTRA_LDFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^PYTHON_EXTRA_LDFLAGS$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([USE_ROSE_PYTHON_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^USE_ROSE_PYTHON_SUPPORT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([USE_ROSE_PYTHON_SUPPORT], [/* Controls use of ROSE support for Python. */
@%:@undef USE_ROSE_PYTHON_SUPPORT])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_PYTHON_INTERPRETER_NAME_WITH_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_PYTHON_INTERPRETER_NAME_WITH_PATH$])
m4trace:configure.ac:121: -1- AH_OUTPUT([BACKEND_PYTHON_INTERPRETER_NAME_WITH_PATH], [/* Path to the backend python interpreter */
@%:@undef BACKEND_PYTHON_INTERPRETER_NAME_WITH_PATH])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USE_PYTHON], [test "$ROSE_USE_PYTHON" = yes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_PYTHON_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_PYTHON_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_PYTHON_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_PYTHON_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_PYTHON_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_PYTHON_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_PYTHON_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_PYTHON_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USE_PYTHON_DEV], [test "$ROSE_USE_PYTHON_DEV" = yes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_PYTHON_DEV_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_PYTHON_DEV_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_PYTHON_DEV_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_PYTHON_DEV_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_PYTHON_DEV_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_PYTHON_DEV_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_PYTHON_DEV_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_PYTHON_DEV_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_APPROVED_PYTHON_VERSION], [true])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_APPROVED_PYTHON_VERSION_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_APPROVED_PYTHON_VERSION_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_APPROVED_PYTHON_VERSION_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_APPROVED_PYTHON_VERSION_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_APPROVED_PYTHON_VERSION_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_APPROVED_PYTHON_VERSION_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_APPROVED_PYTHON_VERSION_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_APPROVED_PYTHON_VERSION_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_CPPFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_CPPFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_CPPFLAGS$])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_LDFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_LDFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_LDFLAGS$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([HAVE_BOOST])
m4trace:configure.ac:121: -1- m4_pattern_allow([^HAVE_BOOST$])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_BOOST], [/* define if the Boost library is available */
@%:@undef HAVE_BOOST])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BOOST_PREINCLUDE_PATH])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BOOST_PREINCLUDE_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BOOST_PREINCLUDE_PATH$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_BOOST_NORMAL_INCLUDE_PATH])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_BOOST_NORMAL_INCLUDE_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BOOST_NORMAL_INCLUDE_PATH$])
m4trace:configure.ac:121: -1- AC_SUBST([ac_boost_path])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ac_boost_path])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ac_boost_path$])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_35], [test "$rose_boost_version" = "103500" -o "$_version" = "1.35"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_35_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_35_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_35_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_35_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_35_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_35_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_35_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_35_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_36], [test "$rose_boost_version" = "103600" -o "$_version" = "1.36"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_36_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_36_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_36_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_36_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_36_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_36_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_36_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_36_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_37], [test "$rose_boost_version" = "103700" -o "$_version" = "1.37"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_37_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_37_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_37_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_37_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_37_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_37_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_37_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_37_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_38], [test "$rose_boost_version" = "103800" -o "$_version" = "1.38"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_38_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_38_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_38_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_38_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_38_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_38_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_38_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_38_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_39], [test "$rose_boost_version" = "103900" -o "$_version" = "1.39"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_39_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_39_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_39_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_39_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_39_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_39_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_39_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_39_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_40], [test "$rose_boost_version" = "104000" -o "$_version" = "1.40"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_40_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_40_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_40_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_40_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_40_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_40_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_40_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_40_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_41], [test "$rose_boost_version" = "104100" -o "$_version" = "1.41"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_41_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_41_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_41_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_41_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_41_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_41_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_41_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_41_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_42], [test "$rose_boost_version" = "104200" -o "$_version" = "1.42"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_42_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_42_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_42_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_42_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_42_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_42_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_42_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_42_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_43], [test "$rose_boost_version" = "104300" -o "$_version" = "1.43"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_43_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_43_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_43_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_43_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_43_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_43_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_43_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_43_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_44], [test "$rose_boost_version" = "104400" -o "$_version" = "1.44"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_44_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_44_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_44_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_44_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_44_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_44_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_44_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_44_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_45], [test "$rose_boost_version" = "104500" -o "$_version" = "1.45"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_45_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_45_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_45_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_45_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_45_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_45_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_45_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_45_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_46], [test "$rose_boost_version" = "104600" -o "$_version" = "1.46"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_46_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_46_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_46_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_46_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_46_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_46_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_46_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_46_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_46], [test "$rose_boost_version" = "104601" -o "$_version" = "1.46"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_46_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_46_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_46_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_46_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_46_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_46_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_46_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_46_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_47], [test "$rose_boost_version" = "104700" -o "$_version" = "1.47"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_47_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_47_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_47_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_47_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_47_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_47_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_47_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_47_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_48], [test "$rose_boost_version" = "104800" -o "$_version" = "1.48"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_48_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_48_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_48_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_48_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_48_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_48_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_48_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_48_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_49], [test "$rose_boost_version" = "104900" -o "$_version" = "1.49"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_49_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_49_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_49_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_49_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_49_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_49_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_49_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_49_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_50], [test "$rose_boost_version" = "105000" -o "$_version" = "1.50"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_50_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_50_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_50_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_50_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_50_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_50_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_50_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_50_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_51], [test "$rose_boost_version" = "105100" -o "$_version" = "1.51"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_51_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_51_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_51_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_51_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_51_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_51_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_51_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_51_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_52], [test "$rose_boost_version" = "105200" -o "$_version" = "1.52"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_52_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_52_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_52_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_52_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_52_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_52_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_52_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_52_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_53], [test "$rose_boost_version" = "105300" -o "$_version" = "1.53"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_53_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_53_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_53_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_53_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_53_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_53_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_53_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_53_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_54], [test "$rose_boost_version" = "105400" -o "$_version" = "1.54"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_54_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_54_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_54_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_54_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_54_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_54_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_54_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_54_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_55], [test "$rose_boost_version" = "105500" -o "$_version" = "1.55"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_55_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_55_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_55_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_55_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_55_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_55_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_55_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_55_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_56], [test "$rose_boost_version" = "105600" -o "$_version" = "1.56"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_56_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_56_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_56_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_56_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_56_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_56_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_56_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_56_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_57], [test "$rose_boost_version" = "105700" -o "$_version" = "1.57"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_57_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_57_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_57_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_57_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_57_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_57_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_57_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_57_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_58], [test "$rose_boost_version" = "105800" -o "$_version" = "1.58"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_58_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_58_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_58_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_58_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_58_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_58_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_58_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_58_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_59], [test "$rose_boost_version" = "105900" -o "$_version" = "1.59"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_59_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_59_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_59_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_59_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_59_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_59_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_59_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_59_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_60], [test "$rose_boost_version" = "106000" -o "$_version" = "1.60"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_60_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_60_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_60_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_60_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_60_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_60_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_60_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_60_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_61], [test "$rose_boost_version" = "106100" -o "$_version" = "1.61"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_61_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_61_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_61_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_61_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_61_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_61_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_61_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_61_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_62], [test "$rose_boost_version" = "106200" -o "$_version" = "1.62"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_62_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_62_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_62_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_62_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_62_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_62_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_62_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_62_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_63], [test "$rose_boost_version" = "106300" -o "$_version" = "1.63"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_63_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_63_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_63_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_63_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_63_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_63_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_63_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_63_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_64], [test "$rose_boost_version" = "106400" -o "$_version" = "1.64"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_64_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_64_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_64_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_64_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_64_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_64_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_64_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_64_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_65], [test "$rose_boost_version" = "106500" -o "$_version" = "1.65"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_65_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_65_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_65_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_65_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_65_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_65_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_65_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_65_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_66], [test "$rose_boost_version" = "106600" -o "$_version" = "1.66"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_66_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_66_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_66_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_66_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_66_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_66_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_66_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_66_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_67], [test "$rose_boost_version" = "106700" -o "$_version" = "1.67"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_67_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_67_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_67_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_67_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_67_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_67_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_67_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_67_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_68], [test "$rose_boost_version" = "106800" -o "$_version" = "1.68"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_68_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_68_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_68_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_68_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_68_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_68_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_68_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_68_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_1_69], [test "$rose_boost_version" = "106900" -o "$_version" = "1.69"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_69_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_69_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_69_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_1_69_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_1_69_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_1_69_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_69_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_1_69_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_35], [test $rose_boost_version -ge 103500])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_35_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_35_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_35_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_35_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_35_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_35_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_35_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_35_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_36], [test $rose_boost_version -ge 103600])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_36_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_36_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_36_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_36_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_36_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_36_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_36_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_36_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_37], [test $rose_boost_version -ge 103700])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_37_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_37_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_37_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_37_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_37_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_37_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_37_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_37_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_38], [test $rose_boost_version -ge 103800])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_38_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_38_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_38_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_38_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_38_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_38_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_38_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_38_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_39], [test $rose_boost_version -ge 103900])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_39_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_39_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_39_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_39_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_39_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_39_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_39_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_39_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_40], [test $rose_boost_version -ge 104000])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_40_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_40_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_40_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_40_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_40_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_40_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_40_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_40_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_41], [test $rose_boost_version -ge 104100])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_41_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_41_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_41_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_41_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_41_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_41_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_41_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_41_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_42], [test $rose_boost_version -ge 104200])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_42_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_42_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_42_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_42_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_42_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_42_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_42_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_42_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_43], [test $rose_boost_version -ge 104300])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_43_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_43_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_43_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_43_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_43_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_43_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_43_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_43_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_44], [test $rose_boost_version -ge 104400])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_44_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_44_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_44_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_44_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_44_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_44_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_44_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_44_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_45], [test $rose_boost_version -ge 104500])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_45_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_45_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_45_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_45_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_45_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_45_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_45_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_45_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_46], [test $rose_boost_version -ge 104600])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_46_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_46_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_46_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_46_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_46_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_46_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_46_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_46_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_46], [test $rose_boost_version -ge 104601])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_46_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_46_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_46_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_46_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_46_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_46_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_46_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_46_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_47], [test $rose_boost_version -ge 104700])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_47_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_47_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_47_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_47_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_47_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_47_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_47_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_47_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_48], [test $rose_boost_version -ge 104800])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_48_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_48_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_48_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_48_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_48_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_48_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_48_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_48_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_49], [test $rose_boost_version -ge 104900])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_49_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_49_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_49_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_49_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_49_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_49_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_49_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_49_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_50], [test $rose_boost_version -ge 105000])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_50_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_50_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_50_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_50_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_50_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_50_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_50_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_50_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_51], [test $rose_boost_version -ge 105100])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_51_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_51_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_51_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_51_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_51_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_51_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_51_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_51_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_52], [test $rose_boost_version -ge 105200])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_52_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_52_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_52_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_52_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_52_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_52_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_52_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_52_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_53], [test $rose_boost_version -ge 105300])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_53_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_53_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_53_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_53_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_53_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_53_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_53_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_53_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_54], [test $rose_boost_version -ge 105400])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_54_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_54_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_54_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_54_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_54_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_54_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_54_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_54_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_55], [test $rose_boost_version -ge 105500])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_55_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_55_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_55_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_55_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_55_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_55_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_55_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_55_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_56], [test $rose_boost_version -ge 105600])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_56_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_56_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_56_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_56_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_56_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_56_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_56_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_56_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_57], [test $rose_boost_version -ge 105700])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_57_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_57_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_57_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_57_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_57_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_57_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_57_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_57_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_58], [test $rose_boost_version -ge 105800])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_58_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_58_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_58_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_58_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_58_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_58_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_58_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_58_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_59], [test $rose_boost_version -ge 105900])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_59_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_59_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_59_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_59_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_59_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_59_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_59_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_59_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_60], [test $rose_boost_version -ge 106000])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_60_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_60_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_60_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_60_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_60_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_60_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_60_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_60_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_61], [test $rose_boost_version -ge 106100])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_61_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_61_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_61_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_61_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_61_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_61_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_61_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_61_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_62], [test $rose_boost_version -ge 106200])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_62_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_62_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_62_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_62_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_62_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_62_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_62_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_62_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_63], [test $rose_boost_version -ge 106300])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_63_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_63_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_63_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_63_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_63_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_63_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_63_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_63_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_64], [test $rose_boost_version -ge 106400])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_64_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_64_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_64_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_64_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_64_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_64_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_64_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_64_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_65], [test $rose_boost_version -ge 106500])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_65_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_65_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_65_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_65_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_65_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_65_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_65_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_65_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_66], [test $rose_boost_version -ge 106600])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_66_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_66_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_66_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_66_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_66_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_66_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_66_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_66_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_67], [test $rose_boost_version -ge 106700])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_67_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_67_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_67_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_67_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_67_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_67_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_67_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_67_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_68], [test $rose_boost_version -ge 106800])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_68_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_68_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_68_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_68_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_68_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_68_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_68_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_68_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_BOOST_VERSION_GE_1_69], [test $rose_boost_version -ge 106900])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_69_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_69_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_69_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_BOOST_VERSION_GE_1_69_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_BOOST_VERSION_GE_1_69_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_BOOST_VERSION_GE_1_69_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_69_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_BOOST_VERSION_GE_1_69_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_BOOST_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BOOST_PATH$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_BOOST_PATH], [/* Location (unquoted) of Boost specified on configure line. */
@%:@undef ROSE_BOOST_PATH])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_WAVE_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_WAVE_PATH$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_WAVE_PATH], [/* Location (unquoted) of Wave specified on configure line. */
@%:@undef ROSE_WAVE_PATH])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_BOOST_VERSION])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_BOOST_VERSION$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_BOOST_VERSION], [/* Version of Boost specified on configure line. */
@%:@undef ROSE_BOOST_VERSION])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_CPPFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_CPPFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_CPPFLAGS$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([HAVE_BOOST_SYSTEM])
m4trace:configure.ac:121: -1- m4_pattern_allow([^HAVE_BOOST_SYSTEM$])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_BOOST_SYSTEM], [/* define if the Boost::System library is available */
@%:@undef HAVE_BOOST_SYSTEM])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_SYSTEM_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_SYSTEM_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_SYSTEM_LIB$])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_SYSTEM_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_SYSTEM_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_SYSTEM_LIB$])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_SYSTEM_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_SYSTEM_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_SYSTEM_LIB$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([USE_ROSE_BOOST_WAVE_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^USE_ROSE_BOOST_WAVE_SUPPORT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([USE_ROSE_BOOST_WAVE_SUPPORT], [/* Controls use of BOOST WAVE support in ROSE. */
@%:@undef USE_ROSE_BOOST_WAVE_SUPPORT])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_CPPFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_CPPFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_CPPFLAGS$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([HAVE_BOOST_THREAD])
m4trace:configure.ac:121: -1- m4_pattern_allow([^HAVE_BOOST_THREAD$])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_BOOST_THREAD], [/* define if the Boost::Thread library is available */
@%:@undef HAVE_BOOST_THREAD])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_THREAD_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_THREAD_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_THREAD_LIB$])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_THREAD_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_THREAD_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_THREAD_LIB$])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_THREAD_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_THREAD_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_THREAD_LIB$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([HAVE_BOOST_DATE_TIME])
m4trace:configure.ac:121: -1- m4_pattern_allow([^HAVE_BOOST_DATE_TIME$])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_BOOST_DATE_TIME], [/* define if the Boost::Date_Time library is available */
@%:@undef HAVE_BOOST_DATE_TIME])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_DATE_TIME_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_DATE_TIME_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_DATE_TIME_LIB$])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_DATE_TIME_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_DATE_TIME_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_DATE_TIME_LIB$])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_DATE_TIME_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_DATE_TIME_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_DATE_TIME_LIB$])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_CPPFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_CPPFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_CPPFLAGS$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([HAVE_BOOST_CHRONO])
m4trace:configure.ac:121: -1- m4_pattern_allow([^HAVE_BOOST_CHRONO$])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_BOOST_CHRONO], [/* define if the Boost::Chrono library is available */
@%:@undef HAVE_BOOST_CHRONO])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_CHRONO_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_CHRONO_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_CHRONO_LIB$])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_CHRONO_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_CHRONO_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_CHRONO_LIB$])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_CHRONO_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_CHRONO_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_CHRONO_LIB$])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_CPPFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_CPPFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_CPPFLAGS$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([HAVE_BOOST_RANDOM])
m4trace:configure.ac:121: -1- m4_pattern_allow([^HAVE_BOOST_RANDOM$])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_BOOST_RANDOM], [/* define if the Boost::Random library is available */
@%:@undef HAVE_BOOST_RANDOM])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_RANDOM_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_RANDOM_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_RANDOM_LIB$])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_RANDOM_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_RANDOM_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_RANDOM_LIB$])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_RANDOM_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_RANDOM_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_RANDOM_LIB$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([HAVE_BOOST_REGEX])
m4trace:configure.ac:121: -1- m4_pattern_allow([^HAVE_BOOST_REGEX$])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_BOOST_REGEX], [/* define if the Boost::Regex library is available */
@%:@undef HAVE_BOOST_REGEX])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_REGEX_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_REGEX_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_REGEX_LIB$])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_REGEX_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_REGEX_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_REGEX_LIB$])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_REGEX_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_REGEX_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_REGEX_LIB$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([HAVE_BOOST_PROGRAM_OPTIONS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^HAVE_BOOST_PROGRAM_OPTIONS$])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_BOOST_PROGRAM_OPTIONS], [/* define if the Boost::PROGRAM_OPTIONS library is available */
@%:@undef HAVE_BOOST_PROGRAM_OPTIONS])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_PROGRAM_OPTIONS_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_PROGRAM_OPTIONS_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_PROGRAM_OPTIONS_LIB$])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_PROGRAM_OPTIONS_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_PROGRAM_OPTIONS_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_PROGRAM_OPTIONS_LIB$])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_PROGRAM_OPTIONS_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_PROGRAM_OPTIONS_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_PROGRAM_OPTIONS_LIB$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([HAVE_BOOST_FILESYSTEM])
m4trace:configure.ac:121: -1- m4_pattern_allow([^HAVE_BOOST_FILESYSTEM$])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_BOOST_FILESYSTEM], [/* define if the Boost::Filesystem library is available */
@%:@undef HAVE_BOOST_FILESYSTEM])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_FILESYSTEM_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_FILESYSTEM_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_FILESYSTEM_LIB$])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_FILESYSTEM_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_FILESYSTEM_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_FILESYSTEM_LIB$])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_FILESYSTEM_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_FILESYSTEM_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_FILESYSTEM_LIB$])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USE_BOOST_WAVE], [test "x$want_boost" = "xyes"  ])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_BOOST_WAVE_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_BOOST_WAVE_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_BOOST_WAVE_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_BOOST_WAVE_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_BOOST_WAVE_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_BOOST_WAVE_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_BOOST_WAVE_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_BOOST_WAVE_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([HAVE_BOOST_WAVE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^HAVE_BOOST_WAVE$])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_BOOST_WAVE], [/* define if the Boost::Wave library is available */
@%:@undef HAVE_BOOST_WAVE])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_WAVE_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_WAVE_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_WAVE_LIB$])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_WAVE_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_WAVE_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_WAVE_LIB$])
m4trace:configure.ac:121: -1- AC_SUBST([BOOST_WAVE_LIB])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BOOST_WAVE_LIB])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BOOST_WAVE_LIB$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([USE_ROSE_BOOST_WAVE_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^USE_ROSE_BOOST_WAVE_SUPPORT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([USE_ROSE_BOOST_WAVE_SUPPORT], [/* Controls use of BOOST WAVE support in ROSE. */
@%:@undef USE_ROSE_BOOST_WAVE_SUPPORT])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([USE_ROSE_BOOST_WAVE_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^USE_ROSE_BOOST_WAVE_SUPPORT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([USE_ROSE_BOOST_WAVE_SUPPORT], [/* Controls use of BOOST WAVE support in ROSE. */
@%:@undef USE_ROSE_BOOST_WAVE_SUPPORT])
m4trace:configure.ac:121: -1- AC_SUBST([BISON])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BISON])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BISON$])
m4trace:configure.ac:121: -1- AC_SUBST([BISON])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BISON])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BISON$])
m4trace:configure.ac:121: -1- AC_SUBST([SED])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([SED])
m4trace:configure.ac:121: -1- m4_pattern_allow([^SED$])
m4trace:configure.ac:121: -1- AC_SUBST([BISON_VERSION], [$bison_version])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BISON_VERSION])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BISON_VERSION$])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USE_GRAPHVIZ_DOT], [ test "x$DOT_AVAILABLE" = xyes  ])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_GRAPHVIZ_DOT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_GRAPHVIZ_DOT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_GRAPHVIZ_DOT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_GRAPHVIZ_DOT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_GRAPHVIZ_DOT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_GRAPHVIZ_DOT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_GRAPHVIZ_DOT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_GRAPHVIZ_DOT_FALSE])
m4trace:configure.ac:121: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:207: AC_HELP_STRING is expanded from...
config/ax_lib_sqlite3.m4:36: AX_LIB_SQLITE3 is expanded from...
config/support-rose.m4:3: ROSE_SUPPORT_ROSE_PART_1 is expanded from...
configure.ac:121: the top level])
m4trace:configure.ac:121: -1- AC_SUBST([SQLITE3_CFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([SQLITE3_CFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^SQLITE3_CFLAGS$])
m4trace:configure.ac:121: -1- AC_SUBST([SQLITE3_LDFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([SQLITE3_LDFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^SQLITE3_LDFLAGS$])
m4trace:configure.ac:121: -1- AC_SUBST([SQLITE3_VERSION])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([SQLITE3_VERSION])
m4trace:configure.ac:121: -1- m4_pattern_allow([^SQLITE3_VERSION$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([HAVE_SQLITE3])
m4trace:configure.ac:121: -1- m4_pattern_allow([^HAVE_SQLITE3$])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_SQLITE3], [/* Have the SQLITE3 library */
@%:@undef HAVE_SQLITE3])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USE_SQLITE_DATABASE], [test "$SQLITE3_VERSION" != ""])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_SQLITE_DATABASE_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_SQLITE_DATABASE_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_SQLITE_DATABASE_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_SQLITE_DATABASE_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_SQLITE_DATABASE_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_SQLITE_DATABASE_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_SQLITE_DATABASE_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_SQLITE_DATABASE_FALSE])
m4trace:configure.ac:121: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:207: AC_HELP_STRING is expanded from...
config/ax_lib_mysql.m4:46: AX_LIB_MYSQL is expanded from...
config/support-rose.m4:3: ROSE_SUPPORT_ROSE_PART_1 is expanded from...
configure.ac:121: the top level])
m4trace:configure.ac:121: -1- AC_SUBST([MYSQL_CONFIG])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([MYSQL_CONFIG])
m4trace:configure.ac:121: -1- m4_pattern_allow([^MYSQL_CONFIG$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([HAVE_MYSQL])
m4trace:configure.ac:121: -1- m4_pattern_allow([^HAVE_MYSQL$])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_MYSQL], [/* Define to 1 if MySQL libraries are available */
@%:@undef HAVE_MYSQL])
m4trace:configure.ac:121: -1- AC_SUBST([MYSQL_VERSION])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([MYSQL_VERSION])
m4trace:configure.ac:121: -1- m4_pattern_allow([^MYSQL_VERSION$])
m4trace:configure.ac:121: -1- AC_SUBST([MYSQL_INCLUDE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([MYSQL_INCLUDE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^MYSQL_INCLUDE$])
m4trace:configure.ac:121: -1- AC_SUBST([MYSQL_CFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([MYSQL_CFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^MYSQL_CFLAGS$])
m4trace:configure.ac:121: -1- AC_SUBST([MYSQL_LDFLAGS])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([MYSQL_LDFLAGS])
m4trace:configure.ac:121: -1- m4_pattern_allow([^MYSQL_LDFLAGS$])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USE_MYSQL], [test "$found_mysql" = yes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_MYSQL_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_MYSQL_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_MYSQL_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_MYSQL_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_MYSQL_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_MYSQL_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_MYSQL_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_MYSQL_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST([BACKEND_X10_COMPILER])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BACKEND_X10_COMPILER])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_X10_COMPILER$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_X10_COMPILER_NAME_WITH_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_X10_COMPILER_NAME_WITH_PATH$])
m4trace:configure.ac:121: -1- AH_OUTPUT([BACKEND_X10_COMPILER_NAME_WITH_PATH], [/* Name of backend X10 compiler, including path */
@%:@undef BACKEND_X10_COMPILER_NAME_WITH_PATH])
m4trace:configure.ac:121: -1- AC_SUBST([BACKEND_CXX_COMPILER])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BACKEND_CXX_COMPILER])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_CXX_COMPILER$])
m4trace:configure.ac:121: -1- AC_SUBST([BACKEND_C_COMPILER])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BACKEND_C_COMPILER])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_C_COMPILER$])
m4trace:configure.ac:121: -1- AC_SUBST([BACKEND_FORTRAN_COMPILER])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BACKEND_FORTRAN_COMPILER])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_FORTRAN_COMPILER$])
m4trace:configure.ac:121: -1- AC_SUBST([BACKEND_JAVA_COMPILER])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BACKEND_JAVA_COMPILER])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_JAVA_COMPILER$])
m4trace:configure.ac:121: -1- AC_SUBST([BACKEND_CSHARP_COMPILER])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BACKEND_CSHARP_COMPILER])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_CSHARP_COMPILER$])
m4trace:configure.ac:121: -1- AC_SUBST([BACKEND_ADA_COMPILER])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BACKEND_ADA_COMPILER])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_ADA_COMPILER$])
m4trace:configure.ac:121: -1- AC_SUBST([BACKEND_JOVIAL_COMPILER])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BACKEND_JOVIAL_COMPILER])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_JOVIAL_COMPILER$])
m4trace:configure.ac:121: -1- AC_SUBST([BACKEND_COBOL_COMPILER])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BACKEND_COBOL_COMPILER])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_COBOL_COMPILER$])
m4trace:configure.ac:121: -1- AC_SUBST([BACKEND_MATLAB_COMPILER])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([BACKEND_MATLAB_COMPILER])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_MATLAB_COMPILER$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_FORTRAN_IS_GNU_COMPILER])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_FORTRAN_IS_GNU_COMPILER$])
m4trace:configure.ac:121: -1- AH_OUTPUT([BACKEND_FORTRAN_IS_GNU_COMPILER], [/* Mark that GFORTRAN is used in backend */
@%:@undef BACKEND_FORTRAN_IS_GNU_COMPILER])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_FORTRAN_IS_INTEL_COMPILER])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_FORTRAN_IS_INTEL_COMPILER$])
m4trace:configure.ac:121: -1- AH_OUTPUT([BACKEND_FORTRAN_IS_INTEL_COMPILER], [/* Mark that Intel Fortran is used in backend */
@%:@undef BACKEND_FORTRAN_IS_INTEL_COMPILER])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_FORTRAN_IS_GNU_COMPILER])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_FORTRAN_IS_GNU_COMPILER$])
m4trace:configure.ac:121: -1- AH_OUTPUT([BACKEND_FORTRAN_IS_GNU_COMPILER], [/* Mark that GFORTRAN is not used in backend */
@%:@undef BACKEND_FORTRAN_IS_GNU_COMPILER])
m4trace:configure.ac:121: -1- AC_SUBST([INTEL_FPP_PATH])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([INTEL_FPP_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^INTEL_FPP_PATH$])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_USE_INTEL_FPP])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_INTEL_FPP$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_USE_INTEL_FPP], [/* Mark that Intel FPP is used in backend */
@%:@undef ROSE_USE_INTEL_FPP])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([INTEL_FPP_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^INTEL_FPP_PATH$])
m4trace:configure.ac:121: -1- AH_OUTPUT([INTEL_FPP_PATH], [/* Name of Intel Fortran preprocessor */
@%:@undef INTEL_FPP_PATH])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_FORTRAN_IS_PGI_COMPILER])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_FORTRAN_IS_PGI_COMPILER$])
m4trace:configure.ac:121: -1- AH_OUTPUT([BACKEND_FORTRAN_IS_PGI_COMPILER], [/* Mark that PGI Fortran is used in backend */
@%:@undef BACKEND_FORTRAN_IS_PGI_COMPILER])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_FORTRAN_IS_GNU_COMPILER])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_FORTRAN_IS_GNU_COMPILER$])
m4trace:configure.ac:121: -1- AH_OUTPUT([BACKEND_FORTRAN_IS_GNU_COMPILER], [/* Mark that GFORTRAN is not used in backend */
@%:@undef BACKEND_FORTRAN_IS_GNU_COMPILER])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_FORTRAN_IS_GNU_COMPILER])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_FORTRAN_IS_GNU_COMPILER$])
m4trace:configure.ac:121: -1- AH_OUTPUT([BACKEND_FORTRAN_IS_GNU_COMPILER], [/* Mark that GFORTRAN is not used in backend */
@%:@undef BACKEND_FORTRAN_IS_GNU_COMPILER])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GFORTRAN_VERSION_4_0], [test "x$gfortran_version_4_0" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GFORTRAN_VERSION_4_0_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GFORTRAN_VERSION_4_0_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GFORTRAN_VERSION_4_0_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GFORTRAN_VERSION_4_0_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GFORTRAN_VERSION_4_0_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GFORTRAN_VERSION_4_0_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GFORTRAN_VERSION_4_0_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GFORTRAN_VERSION_4_0_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GFORTRAN_VERSION_4_1], [test "x$gfortran_version_4_1" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GFORTRAN_VERSION_4_1_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GFORTRAN_VERSION_4_1_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GFORTRAN_VERSION_4_1_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GFORTRAN_VERSION_4_1_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GFORTRAN_VERSION_4_1_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GFORTRAN_VERSION_4_1_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GFORTRAN_VERSION_4_1_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GFORTRAN_VERSION_4_1_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GFORTRAN_VERSION_4_2], [test "x$gfortran_version_4_2" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GFORTRAN_VERSION_4_2_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GFORTRAN_VERSION_4_2_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GFORTRAN_VERSION_4_2_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GFORTRAN_VERSION_4_2_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GFORTRAN_VERSION_4_2_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GFORTRAN_VERSION_4_2_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GFORTRAN_VERSION_4_2_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GFORTRAN_VERSION_4_2_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GFORTRAN_VERSION_4_4], [test "x$gfortran_version_4_4" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GFORTRAN_VERSION_4_4_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GFORTRAN_VERSION_4_4_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GFORTRAN_VERSION_4_4_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GFORTRAN_VERSION_4_4_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GFORTRAN_VERSION_4_4_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GFORTRAN_VERSION_4_4_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GFORTRAN_VERSION_4_4_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GFORTRAN_VERSION_4_4_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GFORTRAN_VERSION_4_5], [test "x$gfortran_version_4_5" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GFORTRAN_VERSION_4_5_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GFORTRAN_VERSION_4_5_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GFORTRAN_VERSION_4_5_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GFORTRAN_VERSION_4_5_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GFORTRAN_VERSION_4_5_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GFORTRAN_VERSION_4_5_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GFORTRAN_VERSION_4_5_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GFORTRAN_VERSION_4_5_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GFORTRAN_VERSION_4_6], [test "x$gfortran_version_4_6" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GFORTRAN_VERSION_4_6_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GFORTRAN_VERSION_4_6_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GFORTRAN_VERSION_4_6_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GFORTRAN_VERSION_4_6_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GFORTRAN_VERSION_4_6_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GFORTRAN_VERSION_4_6_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GFORTRAN_VERSION_4_6_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GFORTRAN_VERSION_4_6_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GFORTRAN_VERSION_LATER_4_5], [test "x$gfortran_version_later_4_5" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GFORTRAN_VERSION_LATER_4_5_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GFORTRAN_VERSION_LATER_4_5_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GFORTRAN_VERSION_LATER_4_5_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GFORTRAN_VERSION_LATER_4_5_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GFORTRAN_VERSION_LATER_4_5_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GFORTRAN_VERSION_LATER_4_5_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GFORTRAN_VERSION_LATER_4_5_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GFORTRAN_VERSION_LATER_4_5_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GFORTRAN_VERSION_LATER_4_4], [test "x$gfortran_version_later_4_4" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GFORTRAN_VERSION_LATER_4_4_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GFORTRAN_VERSION_LATER_4_4_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GFORTRAN_VERSION_LATER_4_4_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GFORTRAN_VERSION_LATER_4_4_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GFORTRAN_VERSION_LATER_4_4_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GFORTRAN_VERSION_LATER_4_4_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GFORTRAN_VERSION_LATER_4_4_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GFORTRAN_VERSION_LATER_4_4_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_4_4], [test "x$gcc_version_later_4_4" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_4_4_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_4_4_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_4_4_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_4_4_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_4_4_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_4_4_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_4_4_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_4_4_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_4_5], [test "x$gcc_version_later_4_5" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_4_5_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_4_5_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_4_5_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_4_5_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_4_5_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_4_5_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_4_5_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_4_5_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_4_6], [test "x$gcc_version_later_4_6" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_4_6_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_4_6_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_4_6_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_4_6_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_4_6_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_4_6_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_4_6_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_4_6_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_4_7], [test "x$gcc_version_later_4_7" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_4_7_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_4_7_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_4_7_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_4_7_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_4_7_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_4_7_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_4_7_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_4_7_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_4_8], [test "x$gcc_version_later_4_8" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_4_8_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_4_8_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_4_8_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_4_8_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_4_8_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_4_8_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_4_8_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_4_8_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_4_9], [test "x$gcc_version_later_4_9" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_4_9_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_4_9_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_4_9_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_4_9_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_4_9_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_4_9_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_4_9_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_4_9_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_EQUAL_4_9_1], [test "x$gcc_version_equal_4_9_1" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_EQUAL_4_9_1_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_EQUAL_4_9_1_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_EQUAL_4_9_1_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_EQUAL_4_9_1_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_EQUAL_4_9_1_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_EQUAL_4_9_1_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_EQUAL_4_9_1_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_EQUAL_4_9_1_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_5_1], [test "x$gcc_version_later_5_1" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_5_1_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_5_1_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_5_1_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_5_1_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_5_1_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_5_1_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_5_1_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_5_1_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_5_2], [test "x$gcc_version_later_5_2" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_5_2_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_5_2_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_5_2_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_5_2_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_5_2_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_5_2_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_5_2_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_5_2_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_5_3], [test "x$gcc_version_later_5_3" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_5_3_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_5_3_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_5_3_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_5_3_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_5_3_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_5_3_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_5_3_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_5_3_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_6_0], [test "x$gcc_version_later_6_0" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_6_0_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_6_0_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_6_0_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_6_0_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_6_0_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_6_0_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_6_0_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_6_0_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_6_1], [test "x$gcc_version_later_6_1" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_6_1_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_6_1_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_6_1_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_6_1_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_6_1_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_6_1_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_6_1_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_6_1_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_6_2], [test "x$gcc_version_later_6_2" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_6_2_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_6_2_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_6_2_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_6_2_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_6_2_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_6_2_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_6_2_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_6_2_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_6_3], [test "x$gcc_version_later_6_3" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_6_3_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_6_3_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_6_3_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_6_3_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_6_3_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_6_3_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_6_3_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_6_3_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_6_4], [test "x$gcc_version_later_6_4" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_6_4_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_6_4_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_6_4_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_6_4_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_6_4_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_6_4_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_6_4_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_6_4_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_6_5], [test "x$gcc_version_later_6_5" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_6_5_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_6_5_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_6_5_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_6_5_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_6_5_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_6_5_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_6_5_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_6_5_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_7_1], [test "x$gcc_version_later_7_1" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_7_1_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_7_1_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_7_1_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_7_1_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_7_1_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_7_1_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_7_1_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_7_1_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_7_2], [test "x$gcc_version_later_7_2" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_7_2_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_7_2_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_7_2_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_7_2_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_7_2_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_7_2_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_7_2_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_7_2_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_7_3], [test "x$gcc_version_later_7_3" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_7_3_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_7_3_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_7_3_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_7_3_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_7_3_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_7_3_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_7_3_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_7_3_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_7_4], [test "x$gcc_version_later_7_4" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_7_4_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_7_4_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_7_4_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_7_4_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_7_4_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_7_4_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_7_4_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_7_4_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_7_5], [test "x$gcc_version_later_7_5" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_7_5_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_7_5_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_7_5_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_7_5_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_7_5_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_7_5_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_7_5_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_7_5_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_8_1], [test "x$gcc_version_later_8_1" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_8_1_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_8_1_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_8_1_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_8_1_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_8_1_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_8_1_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_8_1_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_8_1_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_8_2], [test "x$gcc_version_later_8_2" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_8_2_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_8_2_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_8_2_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_8_2_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_8_2_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_8_2_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_8_2_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_8_2_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_8_3], [test "x$gcc_version_later_8_3" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_8_3_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_8_3_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_8_3_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_8_3_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_8_3_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_8_3_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_8_3_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_8_3_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_8_4], [test "x$gcc_version_later_8_4" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_8_4_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_8_4_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_8_4_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_8_4_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_8_4_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_8_4_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_8_4_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_8_4_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_9_1], [test "x$gcc_version_later_9_1" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_9_1_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_9_1_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_9_1_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_9_1_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_9_1_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_9_1_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_9_1_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_9_1_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_9_2], [test "x$gcc_version_later_9_2" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_9_2_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_9_2_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_9_2_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_9_2_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_9_2_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_9_2_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_9_2_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_9_2_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_9_3], [test "x$gcc_version_later_9_3" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_9_3_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_9_3_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_9_3_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_9_3_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_9_3_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_9_3_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_9_3_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_9_3_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_10_1], [test "x$gcc_version_later_10_1" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_10_1_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_10_1_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_10_1_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_10_1_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_10_1_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_10_1_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_10_1_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_10_1_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_10_2], [test "x$gcc_version_later_10_2" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_10_2_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_10_2_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_10_2_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_10_2_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_10_2_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_10_2_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_10_2_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_10_2_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_LATER_10_3], [test "x$gcc_version_later_10_3" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_10_3_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_10_3_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_10_3_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_LATER_10_3_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_LATER_10_3_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_LATER_10_3_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_10_3_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_LATER_10_3_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_CXX_COMPILER_NAME_WITHOUT_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_CXX_COMPILER_NAME_WITHOUT_PATH$])
m4trace:configure.ac:121: -1- AH_OUTPUT([BACKEND_CXX_COMPILER_NAME_WITHOUT_PATH], [/* Name of backend C++ compiler excluding path (used to select code generation
   options). */
@%:@undef BACKEND_CXX_COMPILER_NAME_WITHOUT_PATH])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_C_COMPILER_NAME_WITHOUT_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_C_COMPILER_NAME_WITHOUT_PATH$])
m4trace:configure.ac:121: -1- AH_OUTPUT([BACKEND_C_COMPILER_NAME_WITHOUT_PATH], [/* Name of backend C compiler excluding path (used to select code generation
   options). */
@%:@undef BACKEND_C_COMPILER_NAME_WITHOUT_PATH])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_FORTRAN_COMPILER_NAME_WITHOUT_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_FORTRAN_COMPILER_NAME_WITHOUT_PATH$])
m4trace:configure.ac:121: -1- AH_OUTPUT([BACKEND_FORTRAN_COMPILER_NAME_WITHOUT_PATH], [/* Name of backend Fortran compiler excluding path (used to select code
   generation options). */
@%:@undef BACKEND_FORTRAN_COMPILER_NAME_WITHOUT_PATH])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_CXX_COMPILER_NAME_WITH_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_CXX_COMPILER_NAME_WITH_PATH$])
m4trace:configure.ac:121: -1- AH_OUTPUT([BACKEND_CXX_COMPILER_NAME_WITH_PATH], [/* Name of backend C++ compiler including path (may or may not explicit
   include path; used to call backend). */
@%:@undef BACKEND_CXX_COMPILER_NAME_WITH_PATH])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_C_COMPILER_NAME_WITH_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_C_COMPILER_NAME_WITH_PATH$])
m4trace:configure.ac:121: -1- AH_OUTPUT([BACKEND_C_COMPILER_NAME_WITH_PATH], [/* Name of backend C compiler including path (may or may not explicit include
   path; used to call backend). */
@%:@undef BACKEND_C_COMPILER_NAME_WITH_PATH])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_FORTRAN_COMPILER_NAME_WITH_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_FORTRAN_COMPILER_NAME_WITH_PATH$])
m4trace:configure.ac:121: -1- AH_OUTPUT([BACKEND_FORTRAN_COMPILER_NAME_WITH_PATH], [/* Name of backend Fortran compiler including path (may or may not explicit
   include path; used to call backend). */
@%:@undef BACKEND_FORTRAN_COMPILER_NAME_WITH_PATH])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_JAVA_COMPILER_NAME_WITH_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_JAVA_COMPILER_NAME_WITH_PATH$])
m4trace:configure.ac:121: -1- AH_OUTPUT([BACKEND_JAVA_COMPILER_NAME_WITH_PATH], [/* Name of backend Java compiler including path (may or may not explicit
   include path; used to call backend). */
@%:@undef BACKEND_JAVA_COMPILER_NAME_WITH_PATH])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_CSHARP_COMPILER_NAME_WITH_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_CSHARP_COMPILER_NAME_WITH_PATH$])
m4trace:configure.ac:121: -1- AH_OUTPUT([BACKEND_CSHARP_COMPILER_NAME_WITH_PATH], [/* Name of backend Csharp compiler including path (may or may not explicit
   include path; used to call backend). */
@%:@undef BACKEND_CSHARP_COMPILER_NAME_WITH_PATH])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_ADA_COMPILER_NAME_WITH_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_ADA_COMPILER_NAME_WITH_PATH$])
m4trace:configure.ac:121: -1- AH_OUTPUT([BACKEND_ADA_COMPILER_NAME_WITH_PATH], [/* Name of backend Ada compiler including path (may or may not explicit
   include path; used to call backend). */
@%:@undef BACKEND_ADA_COMPILER_NAME_WITH_PATH])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_JOVIAL_COMPILER_NAME_WITH_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_JOVIAL_COMPILER_NAME_WITH_PATH$])
m4trace:configure.ac:121: -1- AH_OUTPUT([BACKEND_JOVIAL_COMPILER_NAME_WITH_PATH], [/* Name of backend Jovial compiler including path (may or may not explicit
   include path; used to call backend). */
@%:@undef BACKEND_JOVIAL_COMPILER_NAME_WITH_PATH])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_COBOL_COMPILER_NAME_WITH_PATH])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_COBOL_COMPILER_NAME_WITH_PATH$])
m4trace:configure.ac:121: -1- AH_OUTPUT([BACKEND_COBOL_COMPILER_NAME_WITH_PATH], [/* Name of backend Cobol compiler including path (may or may not explicit
   include path; used to call backend). */
@%:@undef BACKEND_COBOL_COMPILER_NAME_WITH_PATH])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_CXX_COMPILER_MAJOR_VERSION_NUMBER])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_CXX_COMPILER_MAJOR_VERSION_NUMBER$])
m4trace:configure.ac:121: -1- AH_OUTPUT([BACKEND_CXX_COMPILER_MAJOR_VERSION_NUMBER], [/* Major version number of backend C++ compiler. */
@%:@undef BACKEND_CXX_COMPILER_MAJOR_VERSION_NUMBER])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_CXX_COMPILER_MINOR_VERSION_NUMBER])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_CXX_COMPILER_MINOR_VERSION_NUMBER$])
m4trace:configure.ac:121: -1- AH_OUTPUT([BACKEND_CXX_COMPILER_MINOR_VERSION_NUMBER], [/* Minor version number of backend C++ compiler. */
@%:@undef BACKEND_CXX_COMPILER_MINOR_VERSION_NUMBER])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_FORTRAN_COMPILER_MAJOR_VERSION_NUMBER])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_FORTRAN_COMPILER_MAJOR_VERSION_NUMBER$])
m4trace:configure.ac:121: -1- AH_OUTPUT([BACKEND_FORTRAN_COMPILER_MAJOR_VERSION_NUMBER], [/* Major version number of backend Fortran compiler. */
@%:@undef BACKEND_FORTRAN_COMPILER_MAJOR_VERSION_NUMBER])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_FORTRAN_COMPILER_MINOR_VERSION_NUMBER])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_FORTRAN_COMPILER_MINOR_VERSION_NUMBER$])
m4trace:configure.ac:121: -1- AH_OUTPUT([BACKEND_FORTRAN_COMPILER_MINOR_VERSION_NUMBER], [/* Minor version number of backend Fortran compiler. */
@%:@undef BACKEND_FORTRAN_COMPILER_MINOR_VERSION_NUMBER])
m4trace:configure.ac:121: -1- _m4_warn([cross], [AC_RUN_IFELSE called without default to allow cross compiling], [../../lib/autoconf/general.m4:2759: AC_RUN_IFELSE is expanded from...
config/choose-backend-compiler.m4:1: CHOOSE_BACKEND_COMPILER is expanded from...
config/support-rose.m4:3: ROSE_SUPPORT_ROSE_PART_1 is expanded from...
configure.ac:121: the top level])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ALTERNATE_BACKEND_C_CROSS_COMPILER], ["$IS_ALTERNATE_BACKEND_C_CROSS_COMPILER"])
m4trace:configure.ac:121: -1- AC_SUBST([ALTERNATE_BACKEND_C_CROSS_COMPILER_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ALTERNATE_BACKEND_C_CROSS_COMPILER_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ALTERNATE_BACKEND_C_CROSS_COMPILER_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ALTERNATE_BACKEND_C_CROSS_COMPILER_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ALTERNATE_BACKEND_C_CROSS_COMPILER_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ALTERNATE_BACKEND_C_CROSS_COMPILER_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ALTERNATE_BACKEND_C_CROSS_COMPILER_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ALTERNATE_BACKEND_C_CROSS_COMPILER_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_ALTERNATE_BACKEND_CXX_COMPILER], [test "x$with_alternate_backend_Cxx_compiler" != "x"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_ALTERNATE_BACKEND_CXX_COMPILER_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_ALTERNATE_BACKEND_CXX_COMPILER_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_ALTERNATE_BACKEND_CXX_COMPILER_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_ALTERNATE_BACKEND_CXX_COMPILER_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_ALTERNATE_BACKEND_CXX_COMPILER_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_ALTERNATE_BACKEND_CXX_COMPILER_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_ALTERNATE_BACKEND_CXX_COMPILER_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_ALTERNATE_BACKEND_CXX_COMPILER_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_ALTERNATE_BACKEND_C_COMPILER], [test "x$with_alternate_backend_C_compiler" != "x"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_ALTERNATE_BACKEND_C_COMPILER_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_ALTERNATE_BACKEND_C_COMPILER_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_ALTERNATE_BACKEND_C_COMPILER_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_ALTERNATE_BACKEND_C_COMPILER_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_ALTERNATE_BACKEND_C_COMPILER_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_ALTERNATE_BACKEND_C_COMPILER_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_ALTERNATE_BACKEND_C_COMPILER_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_ALTERNATE_BACKEND_C_COMPILER_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([USING_GCC_3_4_4_BACKEND_COMPILER], [test "x$BACKEND_C_COMPILER_VERSION" == "x3.4.4"])
m4trace:configure.ac:121: -1- AC_SUBST([USING_GCC_3_4_4_BACKEND_COMPILER_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([USING_GCC_3_4_4_BACKEND_COMPILER_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^USING_GCC_3_4_4_BACKEND_COMPILER_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([USING_GCC_3_4_4_BACKEND_COMPILER_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([USING_GCC_3_4_4_BACKEND_COMPILER_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^USING_GCC_3_4_4_BACKEND_COMPILER_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([USING_GCC_3_4_4_BACKEND_COMPILER_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([USING_GCC_3_4_4_BACKEND_COMPILER_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([USING_GCC_4_0_4_BACKEND_COMPILER], [test "x$BACKEND_C_COMPILER_VERSION" == "x4.0.4"])
m4trace:configure.ac:121: -1- AC_SUBST([USING_GCC_4_0_4_BACKEND_COMPILER_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([USING_GCC_4_0_4_BACKEND_COMPILER_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^USING_GCC_4_0_4_BACKEND_COMPILER_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([USING_GCC_4_0_4_BACKEND_COMPILER_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([USING_GCC_4_0_4_BACKEND_COMPILER_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^USING_GCC_4_0_4_BACKEND_COMPILER_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([USING_GCC_4_0_4_BACKEND_COMPILER_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([USING_GCC_4_0_4_BACKEND_COMPILER_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([USING_XTENSA_BACKEND_COMPILER], [true])
m4trace:configure.ac:121: -1- AC_SUBST([USING_XTENSA_BACKEND_COMPILER_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([USING_XTENSA_BACKEND_COMPILER_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^USING_XTENSA_BACKEND_COMPILER_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([USING_XTENSA_BACKEND_COMPILER_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([USING_XTENSA_BACKEND_COMPILER_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^USING_XTENSA_BACKEND_COMPILER_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([USING_XTENSA_BACKEND_COMPILER_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([USING_XTENSA_BACKEND_COMPILER_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([USING_XTENSA_BACKEND_COMPILER], [false])
m4trace:configure.ac:121: -1- AC_SUBST([USING_XTENSA_BACKEND_COMPILER_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([USING_XTENSA_BACKEND_COMPILER_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^USING_XTENSA_BACKEND_COMPILER_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([USING_XTENSA_BACKEND_COMPILER_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([USING_XTENSA_BACKEND_COMPILER_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^USING_XTENSA_BACKEND_COMPILER_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([USING_XTENSA_BACKEND_COMPILER_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([USING_XTENSA_BACKEND_COMPILER_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_C_COMPILER_SUPPORTS_ASM])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_C_COMPILER_SUPPORTS_ASM$])
m4trace:configure.ac:121: -1- AH_OUTPUT([BACKEND_C_COMPILER_SUPPORTS_ASM], [/* The backend C compiler might not support asm and might require __asm__
   instead (e.g. GNU gcc). */
@%:@undef BACKEND_C_COMPILER_SUPPORTS_ASM])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_C_COMPILER_SUPPORTS_UNDESCORE_ASM])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_C_COMPILER_SUPPORTS_UNDESCORE_ASM$])
m4trace:configure.ac:121: -1- AH_OUTPUT([BACKEND_C_COMPILER_SUPPORTS_UNDESCORE_ASM], [/* The backend C compiler might not support asm and might require __asm__
   instead (e.g. GNU gcc). */
@%:@undef BACKEND_C_COMPILER_SUPPORTS_UNDESCORE_ASM])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_C_COMPILER_SUPPORTS_LONG_STRING_ASM])
m4trace:configure.ac:121: -1- m4_pattern_allow([^BACKEND_C_COMPILER_SUPPORTS_LONG_STRING_ASM$])
m4trace:configure.ac:121: -1- AH_OUTPUT([BACKEND_C_COMPILER_SUPPORTS_LONG_STRING_ASM], [/* The backend C compiler might not support asm and might require __asm__
   instead (e.g. GNU gcc). */
@%:@undef BACKEND_C_COMPILER_SUPPORTS_LONG_STRING_ASM])
m4trace:configure.ac:121: -1- AC_SUBST([GCC_VERSION])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([GCC_VERSION])
m4trace:configure.ac:121: -1- m4_pattern_allow([^GCC_VERSION$])
m4trace:configure.ac:121: -1- AC_SUBST([GCC_MINOR_VERSION])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([GCC_MINOR_VERSION])
m4trace:configure.ac:121: -1- m4_pattern_allow([^GCC_MINOR_VERSION$])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_FRONTEND_COMPILER_DEFAULT_IS_CXX11], [test "x$ac_success" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_FRONTEND_COMPILER_DEFAULT_IS_CXX11_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_FRONTEND_COMPILER_DEFAULT_IS_CXX11_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_FRONTEND_COMPILER_DEFAULT_IS_CXX11_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_FRONTEND_COMPILER_DEFAULT_IS_CXX11_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_FRONTEND_COMPILER_DEFAULT_IS_CXX11_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_FRONTEND_COMPILER_DEFAULT_IS_CXX11_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_FRONTEND_COMPILER_DEFAULT_IS_CXX11_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_FRONTEND_COMPILER_DEFAULT_IS_CXX11_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([HAVE_CXX11])
m4trace:configure.ac:121: -1- m4_pattern_allow([^HAVE_CXX11$])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_CXX11], [/* define if the compiler supports basic C++11 syntax */
@%:@undef HAVE_CXX11])
m4trace:configure.ac:121: -1- AC_SUBST([HAVE_CXX11])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([HAVE_CXX11])
m4trace:configure.ac:121: -1- m4_pattern_allow([^HAVE_CXX11$])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USING_GCC_VERSION_4_8_CXX11], [test "x$gcc_version_4_8" = "xyes" && test "x$rose_frontend_compiler_default_is_cxx11_success" = "xyes"])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_4_8_CXX11_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_4_8_CXX11_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_4_8_CXX11_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USING_GCC_VERSION_4_8_CXX11_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USING_GCC_VERSION_4_8_CXX11_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USING_GCC_VERSION_4_8_CXX11_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_4_8_CXX11_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USING_GCC_VERSION_4_8_CXX11_FALSE])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_FRONTEND_COMPILER_DEFAULT_IS_CXX14], [test "x$ac_success" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_FRONTEND_COMPILER_DEFAULT_IS_CXX14_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_FRONTEND_COMPILER_DEFAULT_IS_CXX14_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_FRONTEND_COMPILER_DEFAULT_IS_CXX14_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_FRONTEND_COMPILER_DEFAULT_IS_CXX14_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_FRONTEND_COMPILER_DEFAULT_IS_CXX14_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_FRONTEND_COMPILER_DEFAULT_IS_CXX14_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_FRONTEND_COMPILER_DEFAULT_IS_CXX14_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_FRONTEND_COMPILER_DEFAULT_IS_CXX14_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([HAVE_CXX14])
m4trace:configure.ac:121: -1- m4_pattern_allow([^HAVE_CXX14$])
m4trace:configure.ac:121: -1- AH_OUTPUT([HAVE_CXX14], [/* define if the compiler supports basic C++14 syntax */
@%:@undef HAVE_CXX14])
m4trace:configure.ac:121: -1- AC_SUBST([HAVE_CXX14])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([HAVE_CXX14])
m4trace:configure.ac:121: -1- m4_pattern_allow([^HAVE_CXX14$])
m4trace:configure.ac:121: -1- AM_CONDITIONAL([ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT], [test "x$enable_fatal_rose_warnings" = xyes])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT_TRUE$])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT_FALSE$])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT_TRUE])
m4trace:configure.ac:121: -1- _AM_SUBST_NOTMAKE([ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT_FALSE])
m4trace:configure.ac:121: -1- AC_DEFINE_TRACE_LITERAL([ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT$])
m4trace:configure.ac:121: -1- AH_OUTPUT([ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT], [/* Support for a list of warnings that will be treated as errors for ROSE
   development */
@%:@undef ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT])
m4trace:configure.ac:121: -1- AC_SUBST([ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT])
m4trace:configure.ac:121: -1- AC_SUBST_TRACE([ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT])
m4trace:configure.ac:121: -1- m4_pattern_allow([^ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT$])
m4trace:configure.ac:124: -1- AC_SUBST([POET_LIB])
m4trace:configure.ac:124: -1- AC_SUBST_TRACE([POET_LIB])
m4trace:configure.ac:124: -1- m4_pattern_allow([^POET_LIB$])
m4trace:configure.ac:124: -1- AC_SUBST([POET_INCL])
m4trace:configure.ac:124: -1- AC_SUBST_TRACE([POET_INCL])
m4trace:configure.ac:124: -1- m4_pattern_allow([^POET_INCL$])
m4trace:configure.ac:124: -1- AC_CONFIG_FILES([src/3rdPartyLibraries/POET/Makefile])
m4trace:configure.ac:124: -1- AC_SUBST([poet_dir])
m4trace:configure.ac:124: -1- AC_SUBST_TRACE([poet_dir])
m4trace:configure.ac:124: -1- m4_pattern_allow([^poet_dir$])
m4trace:configure.ac:124: -1- AM_CONDITIONAL([ROSE_WITH_POET], [test "x$with_poet" = xyes])
m4trace:configure.ac:124: -1- AC_SUBST([ROSE_WITH_POET_TRUE])
m4trace:configure.ac:124: -1- AC_SUBST_TRACE([ROSE_WITH_POET_TRUE])
m4trace:configure.ac:124: -1- m4_pattern_allow([^ROSE_WITH_POET_TRUE$])
m4trace:configure.ac:124: -1- AC_SUBST([ROSE_WITH_POET_FALSE])
m4trace:configure.ac:124: -1- AC_SUBST_TRACE([ROSE_WITH_POET_FALSE])
m4trace:configure.ac:124: -1- m4_pattern_allow([^ROSE_WITH_POET_FALSE$])
m4trace:configure.ac:124: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_POET_TRUE])
m4trace:configure.ac:124: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_POET_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([FGREP])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([FGREP])
m4trace:configure.ac:139: -1- m4_pattern_allow([^FGREP$])
m4trace:configure.ac:139: -1- AC_SUBST([GREP])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([GREP])
m4trace:configure.ac:139: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:139: -1- AC_SUBST([OBJDUMP])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([OBJDUMP])
m4trace:configure.ac:139: -1- m4_pattern_allow([^OBJDUMP$])
m4trace:configure.ac:139: -1- AC_SUBST([OBJDUMP])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([OBJDUMP])
m4trace:configure.ac:139: -1- m4_pattern_allow([^OBJDUMP$])
m4trace:configure.ac:139: -1- AC_SUBST([SED])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([SED])
m4trace:configure.ac:139: -1- m4_pattern_allow([^SED$])
m4trace:configure.ac:139: -1- AC_SUBST([LT_SYS_LIBRARY_PATH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LT_SYS_LIBRARY_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LT_SYS_LIBRARY_PATH$])
m4trace:configure.ac:139: -1- AC_SUBST([CXX])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CXX])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:139: -1- AC_SUBST([CXXFLAGS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CXXFLAGS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXXFLAGS$])
m4trace:configure.ac:139: -1- AC_SUBST([LDFLAGS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LDFLAGS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:139: -1- AC_SUBST([LIBS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LIBS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:139: -1- AC_SUBST([CPPFLAGS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CPPFLAGS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:139: -1- AC_SUBST([CXX])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CXX])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:139: -1- AC_SUBST([ac_ct_CXX])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ac_ct_CXX])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ac_ct_CXX$])
m4trace:configure.ac:139: -1- AC_SUBST([CXXDEPMODE], [depmode=$am_cv_CXX_dependencies_compiler_type])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CXXDEPMODE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXXDEPMODE$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([am__fastdepCXX], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CXX_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:139: -1- AC_SUBST([am__fastdepCXX_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([am__fastdepCXX_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^am__fastdepCXX_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([am__fastdepCXX_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([am__fastdepCXX_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^am__fastdepCXX_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([am__fastdepCXX_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([am__fastdepCXX_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([FRONTEND_CXX_VENDOR_AND_VERSION3])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([FRONTEND_CXX_VENDOR_AND_VERSION3])
m4trace:configure.ac:139: -1- m4_pattern_allow([^FRONTEND_CXX_VENDOR_AND_VERSION3$])
m4trace:configure.ac:139: -1- AC_SUBST([FRONTEND_CXX_VENDOR_AND_VERSION2])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([FRONTEND_CXX_VENDOR_AND_VERSION2])
m4trace:configure.ac:139: -1- m4_pattern_allow([^FRONTEND_CXX_VENDOR_AND_VERSION2$])
m4trace:configure.ac:139: -1- AC_SUBST([BACKEND_CXX_VENDOR_AND_VERSION3])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([BACKEND_CXX_VENDOR_AND_VERSION3])
m4trace:configure.ac:139: -1- m4_pattern_allow([^BACKEND_CXX_VENDOR_AND_VERSION3$])
m4trace:configure.ac:139: -1- AC_SUBST([BACKEND_CXX_VENDOR_AND_VERSION2])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([BACKEND_CXX_VENDOR_AND_VERSION2])
m4trace:configure.ac:139: -1- m4_pattern_allow([^BACKEND_CXX_VENDOR_AND_VERSION2$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([CXX_SPEC_DEF])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXX_SPEC_DEF$])
m4trace:configure.ac:139: -1- AH_OUTPUT([CXX_SPEC_DEF], [/* -D options to hand to EDG C++ front-end. */
@%:@undef CXX_SPEC_DEF])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([USING_INTEL_COMPILER], [test "$BACKEND_CXX_COMPILER_VENDOR" = "intel"])
m4trace:configure.ac:139: -1- AC_SUBST([USING_INTEL_COMPILER_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([USING_INTEL_COMPILER_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USING_INTEL_COMPILER_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([USING_INTEL_COMPILER_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([USING_INTEL_COMPILER_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USING_INTEL_COMPILER_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([USING_INTEL_COMPILER_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([USING_INTEL_COMPILER_FALSE])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([USING_GNU_COMPILER], [test "$BACKEND_CXX_COMPILER_VENDOR" = "gnu"])
m4trace:configure.ac:139: -1- AC_SUBST([USING_GNU_COMPILER_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([USING_GNU_COMPILER_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USING_GNU_COMPILER_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([USING_GNU_COMPILER_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([USING_GNU_COMPILER_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USING_GNU_COMPILER_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([USING_GNU_COMPILER_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([USING_GNU_COMPILER_FALSE])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([USING_CLANG_COMPILER], [test "$BACKEND_CXX_COMPILER_VENDOR" = "clang"])
m4trace:configure.ac:139: -1- AC_SUBST([USING_CLANG_COMPILER_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([USING_CLANG_COMPILER_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USING_CLANG_COMPILER_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([USING_CLANG_COMPILER_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([USING_CLANG_COMPILER_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USING_CLANG_COMPILER_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([USING_CLANG_COMPILER_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([USING_CLANG_COMPILER_FALSE])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USING_ROSE], [test "ROSE_USING_ROSE" != ""])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USING_ROSE_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USING_ROSE_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USING_ROSE_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USING_ROSE_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USING_ROSE_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USING_ROSE_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USING_ROSE_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USING_ROSE_FALSE])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USING_ROSE_TRANSLATOR], [test "$backendCompilerBaseName" = roseTranslator -o "$backendCompilerBaseName" = testTranslator])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USING_ROSE_TRANSLATOR_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USING_ROSE_TRANSLATOR_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USING_ROSE_TRANSLATOR_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USING_ROSE_TRANSLATOR_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USING_ROSE_TRANSLATOR_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USING_ROSE_TRANSLATOR_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USING_ROSE_TRANSLATOR_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USING_ROSE_TRANSLATOR_FALSE])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USING_ROSE_CODE_GENERATION], [test "$ROSE_USING_ROSE_CODE_GENERATION" != ""])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USING_ROSE_CODE_GENERATION_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USING_ROSE_CODE_GENERATION_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USING_ROSE_CODE_GENERATION_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USING_ROSE_CODE_GENERATION_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USING_ROSE_CODE_GENERATION_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USING_ROSE_CODE_GENERATION_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USING_ROSE_CODE_GENERATION_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USING_ROSE_CODE_GENERATION_FALSE])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USING_ROSE_ANALYSIS], [test "$ROSE_USING_ROSE_ANALYSIS" != ""])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USING_ROSE_ANALYSIS_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USING_ROSE_ANALYSIS_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USING_ROSE_ANALYSIS_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USING_ROSE_ANALYSIS_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USING_ROSE_ANALYSIS_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USING_ROSE_ANALYSIS_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USING_ROSE_ANALYSIS_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USING_ROSE_ANALYSIS_FALSE])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USING_ROSE_AST_FILE_IO], [test "$ROSE_USING_ROSE_AST_FILE_IO" != ""])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USING_ROSE_AST_FILE_IO_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USING_ROSE_AST_FILE_IO_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USING_ROSE_AST_FILE_IO_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USING_ROSE_AST_FILE_IO_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USING_ROSE_AST_FILE_IO_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USING_ROSE_AST_FILE_IO_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USING_ROSE_AST_FILE_IO_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USING_ROSE_AST_FILE_IO_FALSE])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([CXX_IS_ROSE_ANALYSIS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXX_IS_ROSE_ANALYSIS$])
m4trace:configure.ac:139: -1- AH_OUTPUT([CXX_IS_ROSE_ANALYSIS], [/* Is this the ROSE Analizer (part of tests to compile ROSE for analysis only
   using ROSE) */
@%:@undef CXX_IS_ROSE_ANALYSIS])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([CXX_IS_ROSE_AST_FILE_IO])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXX_IS_ROSE_AST_FILE_IO$])
m4trace:configure.ac:139: -1- AH_OUTPUT([CXX_IS_ROSE_AST_FILE_IO], [/* Is this the ROSE AST File IO (part of tests to compile ROSE for AST File IO
   only using ROSE) */
@%:@undef CXX_IS_ROSE_AST_FILE_IO])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([CXX_IS_ROSE_CODE_GENERATION])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXX_IS_ROSE_CODE_GENERATION$])
m4trace:configure.ac:139: -1- AH_OUTPUT([CXX_IS_ROSE_CODE_GENERATION], [/* Is this the ROSE Code Generator (part of tests to compile ROSE and generate
   code using ROSE) */
@%:@undef CXX_IS_ROSE_CODE_GENERATION])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([CXX_IS_ROSE_ANALYSIS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXX_IS_ROSE_ANALYSIS$])
m4trace:configure.ac:139: -1- AH_OUTPUT([CXX_IS_ROSE_ANALYSIS], [/* Is this the ROSE Analizer (part of tests to compile ROSE for analysis only
   using ROSE) */
@%:@undef CXX_IS_ROSE_ANALYSIS])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([CXX_IS_ROSE_CODE_GENERATION])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXX_IS_ROSE_CODE_GENERATION$])
m4trace:configure.ac:139: -1- AH_OUTPUT([CXX_IS_ROSE_CODE_GENERATION], [/* Is this the ROSE Code Generator (part of tests to compile ROSE and generate
   code using ROSE) */
@%:@undef CXX_IS_ROSE_CODE_GENERATION])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([CXX_IS_ROSE_ANALYSIS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXX_IS_ROSE_ANALYSIS$])
m4trace:configure.ac:139: -1- AH_OUTPUT([CXX_IS_ROSE_ANALYSIS], [/* Is this the ROSE Analizer (part of tests to compile ROSE for analysis only
   using ROSE) */
@%:@undef CXX_IS_ROSE_ANALYSIS])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([CXX_IS_ROSE_TRANSLATOR])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXX_IS_ROSE_TRANSLATOR$])
m4trace:configure.ac:139: -1- AH_OUTPUT([CXX_IS_ROSE_TRANSLATOR], [/* Is this the ROSE translator (part of tests to compile ROSE using ROSE) */
@%:@undef CXX_IS_ROSE_TRANSLATOR])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([CXX_IS_ROSE_CODE_GENERATION])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXX_IS_ROSE_CODE_GENERATION$])
m4trace:configure.ac:139: -1- AH_OUTPUT([CXX_IS_ROSE_CODE_GENERATION], [/* Is this the ROSE Code Generator (part of tests to compile ROSE and generate
   code using ROSE) */
@%:@undef CXX_IS_ROSE_CODE_GENERATION])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([CXX_IS_ROSE_ANALYSIS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXX_IS_ROSE_ANALYSIS$])
m4trace:configure.ac:139: -1- AH_OUTPUT([CXX_IS_ROSE_ANALYSIS], [/* Is this the ROSE Analizer (part of tests to compile ROSE for analysis only
   using ROSE) */
@%:@undef CXX_IS_ROSE_ANALYSIS])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_CXX_IS_INTEL_COMPILER])
m4trace:configure.ac:139: -1- m4_pattern_allow([^BACKEND_CXX_IS_INTEL_COMPILER$])
m4trace:configure.ac:139: -1- AH_OUTPUT([BACKEND_CXX_IS_INTEL_COMPILER], [/* Is this an Intel compiler being used to compile ROSE generated code */
@%:@undef BACKEND_CXX_IS_INTEL_COMPILER])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_CXX_IS_GNU_COMPILER])
m4trace:configure.ac:139: -1- m4_pattern_allow([^BACKEND_CXX_IS_GNU_COMPILER$])
m4trace:configure.ac:139: -1- AH_OUTPUT([BACKEND_CXX_IS_GNU_COMPILER], [/* Is this a GNU compiler being used to compile ROSE generated code */
@%:@undef BACKEND_CXX_IS_GNU_COMPILER])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([BACKEND_CXX_IS_CLANG_COMPILER])
m4trace:configure.ac:139: -1- m4_pattern_allow([^BACKEND_CXX_IS_CLANG_COMPILER$])
m4trace:configure.ac:139: -1- AH_OUTPUT([BACKEND_CXX_IS_CLANG_COMPILER], [/* Is this a Clang compiler being used to compile ROSE generated code */
@%:@undef BACKEND_CXX_IS_CLANG_COMPILER])
m4trace:configure.ac:139: -1- AC_SUBST([GENERATED_COMPILER_NAME_AND_VERSION_SUFFIX])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([GENERATED_COMPILER_NAME_AND_VERSION_SUFFIX])
m4trace:configure.ac:139: -1- m4_pattern_allow([^GENERATED_COMPILER_NAME_AND_VERSION_SUFFIX$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([OLD_COMPILER_VERSION], [test "$BACKEND_COMPILER_VERSION_NAME" = "GNU" -a \
              "$BACKEND_COMPILER_VERSION_MAJOR_NUMBER" = 3 -a \
              "$BACKEND_COMPILER_VERSION_MINOR_NUMBER" = 4])
m4trace:configure.ac:139: -1- AC_SUBST([OLD_COMPILER_VERSION_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([OLD_COMPILER_VERSION_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^OLD_COMPILER_VERSION_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([OLD_COMPILER_VERSION_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([OLD_COMPILER_VERSION_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^OLD_COMPILER_VERSION_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([OLD_COMPILER_VERSION_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([OLD_COMPILER_VERSION_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([BACKEND_COMPILER_VERSION_NAME])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([BACKEND_COMPILER_VERSION_NAME])
m4trace:configure.ac:139: -1- m4_pattern_allow([^BACKEND_COMPILER_VERSION_NAME$])
m4trace:configure.ac:139: -1- AC_SUBST([BACKEND_COMPILER_VERSION_MAJOR_NUMBER])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([BACKEND_COMPILER_VERSION_MAJOR_NUMBER])
m4trace:configure.ac:139: -1- m4_pattern_allow([^BACKEND_COMPILER_VERSION_MAJOR_NUMBER$])
m4trace:configure.ac:139: -1- AC_SUBST([BACKEND_COMPILER_VERSION_MINOR_NUMBER])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([BACKEND_COMPILER_VERSION_MINOR_NUMBER])
m4trace:configure.ac:139: -1- m4_pattern_allow([^BACKEND_COMPILER_VERSION_MINOR_NUMBER$])
m4trace:configure.ac:139: -1- AC_SUBST([BACKEND_COMPILER_VERSION_PATCHLEVEL_NUMBER])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([BACKEND_COMPILER_VERSION_PATCHLEVEL_NUMBER])
m4trace:configure.ac:139: -1- m4_pattern_allow([^BACKEND_COMPILER_VERSION_PATCHLEVEL_NUMBER$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([C_INCLUDE_STRING])
m4trace:configure.ac:139: -1- m4_pattern_allow([^C_INCLUDE_STRING$])
m4trace:configure.ac:139: -1- AH_OUTPUT([C_INCLUDE_STRING], [/* Include path for backend C compiler. */
@%:@undef C_INCLUDE_STRING])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([CXX_INCLUDE_STRING])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXX_INCLUDE_STRING$])
m4trace:configure.ac:139: -1- AH_OUTPUT([CXX_INCLUDE_STRING], [/* Include path for backend C++ compiler. */
@%:@undef CXX_INCLUDE_STRING])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USE_LONG_MAKE_CHECK_RULE], [test "$with_ROSE_LONG_MAKE_CHECK_RULE" = yes])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_LONG_MAKE_CHECK_RULE_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_LONG_MAKE_CHECK_RULE_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_LONG_MAKE_CHECK_RULE_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_LONG_MAKE_CHECK_RULE_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_LONG_MAKE_CHECK_RULE_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_LONG_MAKE_CHECK_RULE_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_LONG_MAKE_CHECK_RULE_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_LONG_MAKE_CHECK_RULE_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([XML2_CONFIG])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([XML2_CONFIG])
m4trace:configure.ac:139: -1- m4_pattern_allow([^XML2_CONFIG$])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_TRY_RUN' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:2775: AC_TRY_RUN is expanded from...
config/libxml.m4:12: AM_PATH_XML2 is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_TRY_LINK' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:2698: AC_TRY_LINK is expanded from...
config/libxml.m4:12: AM_PATH_XML2 is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- AC_SUBST([XML_CPPFLAGS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([XML_CPPFLAGS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^XML_CPPFLAGS$])
m4trace:configure.ac:139: -1- AC_SUBST([XML_LIBS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([XML_LIBS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^XML_LIBS$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USE_XML], [test "$with_xml" != no])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_XML_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_XML_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_XML_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_XML_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_XML_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_XML_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_XML_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_XML_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_OBJDUMP_PATH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_OBJDUMP_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_OBJDUMP_PATH$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USE_OBJDUMP], [test "$ROSE_OBJDUMP_PATH" != "no"])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_OBJDUMP_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_OBJDUMP_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_OBJDUMP_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_OBJDUMP_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_OBJDUMP_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_OBJDUMP_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_OBJDUMP_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_OBJDUMP_FALSE])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USE_BINARYCONTEXTLOOKUP], [test "$with_xml" != "no" -a "$ROSE_OBJDUMP_PATH" != "no"])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_BINARYCONTEXTLOOKUP_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_BINARYCONTEXTLOOKUP_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_BINARYCONTEXTLOOKUP_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_BINARYCONTEXTLOOKUP_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_BINARYCONTEXTLOOKUP_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_BINARYCONTEXTLOOKUP_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_BINARYCONTEXTLOOKUP_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_BINARYCONTEXTLOOKUP_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_WGET_PATH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_WGET_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WGET_PATH$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USE_WGET], [test "$ROSE_WGET_PATH" != "no"])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_WGET_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_WGET_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_WGET_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_WGET_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_WGET_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_WGET_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_WGET_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_WGET_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_PS2PDF_PATH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_PS2PDF_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_PS2PDF_PATH$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USE_PS2PDF], [test "$ROSE_PS2PDF_PATH" != "no"])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_PS2PDF_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_PS2PDF_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_PS2PDF_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_PS2PDF_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_PS2PDF_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_PS2PDF_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_PS2PDF_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_PS2PDF_FALSE])
m4trace:configure.ac:139: -1- AH_OUTPUT([WORDS_BIGENDIAN], [/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most
   significant byte first (like Motorola and SPARC, unlike Intel). */
#if defined AC_APPLE_UNIVERSAL_BUILD
# if defined __BIG_ENDIAN__
#  define WORDS_BIGENDIAN 1
# endif
#else
# ifndef WORDS_BIGENDIAN
#  undef WORDS_BIGENDIAN
# endif
#endif])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([WORDS_BIGENDIAN])
m4trace:configure.ac:139: -1- m4_pattern_allow([^WORDS_BIGENDIAN$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([AC_APPLE_UNIVERSAL_BUILD])
m4trace:configure.ac:139: -1- m4_pattern_allow([^AC_APPLE_UNIVERSAL_BUILD$])
m4trace:configure.ac:139: -1- AH_OUTPUT([AC_APPLE_UNIVERSAL_BUILD], [/* Define if building universal (internal helper macro) */
@%:@undef AC_APPLE_UNIVERSAL_BUILD])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_BYTESWAP_H], [/* Define to 1 if you have the <byteswap.h> header file. */
@%:@undef HAVE_BYTESWAP_H])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_MACHINE_ENDIAN_H], [/* Define to 1 if you have the <machine/endian.h> header file. */
@%:@undef HAVE_MACHINE_ENDIAN_H])
m4trace:configure.ac:139: -1- AC_SUBST([CXXCPP])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CXXCPP])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:139: -1- AC_SUBST([CPPFLAGS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CPPFLAGS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:139: -1- AC_SUBST([CXXCPP])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CXXCPP])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:139: -1- _m4_warn([cross], [cannot check for file existence when cross compiling], [../../lib/autoconf/general.m4:2788: AC_CHECK_FILE is expanded from...
config/support-valgrind.m4:19: ROSE_SUPPORT_VALGRIND is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- _m4_warn([cross], [cannot check for file existence when cross compiling], [../../lib/autoconf/general.m4:2788: AC_CHECK_FILE is expanded from...
config/support-valgrind.m4:19: ROSE_SUPPORT_VALGRIND is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_WITH_VALGRIND], [test "x$VALGRIND_BIN_PATH" != "x"])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_WITH_VALGRIND_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_WITH_VALGRIND_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WITH_VALGRIND_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_WITH_VALGRIND_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_WITH_VALGRIND_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WITH_VALGRIND_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_VALGRIND_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_VALGRIND_FALSE])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_WITH_VALGRIND_BIN], [test "x$VALGRIND_BIN_PATH" != "x"])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_WITH_VALGRIND_BIN_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_WITH_VALGRIND_BIN_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WITH_VALGRIND_BIN_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_WITH_VALGRIND_BIN_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_WITH_VALGRIND_BIN_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WITH_VALGRIND_BIN_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_VALGRIND_BIN_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_VALGRIND_BIN_FALSE])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_WITH_VALGRIND_INCLUDE], [test "x$VALGRIND_INCLUDE_PATH" != "x"])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_WITH_VALGRIND_INCLUDE_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_WITH_VALGRIND_INCLUDE_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WITH_VALGRIND_INCLUDE_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_WITH_VALGRIND_INCLUDE_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_WITH_VALGRIND_INCLUDE_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WITH_VALGRIND_INCLUDE_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_VALGRIND_INCLUDE_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_VALGRIND_INCLUDE_FALSE])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_WITH_VALGRIND_LIBRARY], [test "x$VALGRIND_LIBRARY_PATH" != "x"])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_WITH_VALGRIND_LIBRARY_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_WITH_VALGRIND_LIBRARY_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WITH_VALGRIND_LIBRARY_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_WITH_VALGRIND_LIBRARY_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_WITH_VALGRIND_LIBRARY_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WITH_VALGRIND_LIBRARY_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_VALGRIND_LIBRARY_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_VALGRIND_LIBRARY_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([VALGRIND_INSTALL_PATH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([VALGRIND_INSTALL_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^VALGRIND_INSTALL_PATH$])
m4trace:configure.ac:139: -1- AC_SUBST([VALGRIND_BIN_PATH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([VALGRIND_BIN_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^VALGRIND_BIN_PATH$])
m4trace:configure.ac:139: -1- AC_SUBST([VALGRIND_INCLUDE_PATH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([VALGRIND_INCLUDE_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^VALGRIND_INCLUDE_PATH$])
m4trace:configure.ac:139: -1- AC_SUBST([VALGRIND_LIBRARY_PATH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([VALGRIND_LIBRARY_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^VALGRIND_LIBRARY_PATH$])
m4trace:configure.ac:139: -1- AC_SUBST([VALGRIND_BINARY])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([VALGRIND_BINARY])
m4trace:configure.ac:139: -1- m4_pattern_allow([^VALGRIND_BINARY$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([USE_VALGRIND], [test "x$VALGRIND_BINARY" != "x" && test "x$VALGRIND_BIN_PATH" != "x"])
m4trace:configure.ac:139: -1- AC_SUBST([USE_VALGRIND_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([USE_VALGRIND_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_VALGRIND_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([USE_VALGRIND_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([USE_VALGRIND_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_VALGRIND_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([USE_VALGRIND_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([USE_VALGRIND_FALSE])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([ROSE_WAVE_DEFAULT])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WAVE_DEFAULT$])
m4trace:configure.ac:139: -1- AH_OUTPUT([ROSE_WAVE_DEFAULT], [/* Use Wave as default in ROSE */
@%:@undef ROSE_WAVE_DEFAULT])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([ROSE_WAVE_DEFAULT])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WAVE_DEFAULT$])
m4trace:configure.ac:139: -1- AH_OUTPUT([ROSE_WAVE_DEFAULT], [/* Simple preprocessor as default in ROSE */
@%:@undef ROSE_WAVE_DEFAULT])
m4trace:configure.ac:139: -1- AC_SUBST([LEX])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LEX])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LEX$])
m4trace:configure.ac:139: -1- AC_SUBST([LEX_OUTPUT_ROOT], [$ac_cv_prog_lex_root])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LEX_OUTPUT_ROOT])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LEX_OUTPUT_ROOT$])
m4trace:configure.ac:139: -1- AC_SUBST([LEXLIB])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LEXLIB])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LEXLIB$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([YYTEXT_POINTER])
m4trace:configure.ac:139: -1- m4_pattern_allow([^YYTEXT_POINTER$])
m4trace:configure.ac:139: -1- AH_OUTPUT([YYTEXT_POINTER], [/* Define to 1 if `lex\' declares `yytext\' as a `char *\' by default, not a
   `char@<:@@:>@\'. */
@%:@undef YYTEXT_POINTER])
m4trace:configure.ac:139: -1- AC_SUBST([LEX])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LEX])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LEX$])
m4trace:configure.ac:139: -1- AC_SUBST([YACC])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([YACC])
m4trace:configure.ac:139: -1- m4_pattern_allow([^YACC$])
m4trace:configure.ac:139: -1- AC_SUBST([YACC])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([YACC])
m4trace:configure.ac:139: -1- m4_pattern_allow([^YACC$])
m4trace:configure.ac:139: -1- AC_SUBST([YFLAGS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([YFLAGS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^YFLAGS$])
m4trace:configure.ac:139: -1- AC_SUBST([YACC])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([YACC])
m4trace:configure.ac:139: -1- m4_pattern_allow([^YACC$])
m4trace:configure.ac:139: -1- AC_SUBST([SET_MAKE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([SET_MAKE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^SET_MAKE$])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_ERROR' is obsolete.
You should run autoupdate.], [../../lib/autoconf/oldnames.m4:34: AC_ERROR is expanded from...
../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
../../lib/autoconf/libs.m4:99: AC_CHECK_LIB is expanded from...
config/support-maple.m4:1: ROSE_SUPPORT_MAPLE is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- AC_SUBST([MAPLE_INCLUDES])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([MAPLE_INCLUDES])
m4trace:configure.ac:139: -1- m4_pattern_allow([^MAPLE_INCLUDES$])
m4trace:configure.ac:139: -1- AC_SUBST([MAPLE_LIBS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([MAPLE_LIBS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^MAPLE_LIBS$])
m4trace:configure.ac:139: -1- AC_SUBST([MAPLE_LIBDIR])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([MAPLE_LIBDIR])
m4trace:configure.ac:139: -1- m4_pattern_allow([^MAPLE_LIBDIR$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([USE_ROSE_MAPLE_SUPPORT])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_ROSE_MAPLE_SUPPORT$])
m4trace:configure.ac:139: -1- AH_OUTPUT([USE_ROSE_MAPLE_SUPPORT], [/* Controls use of ROSE support for Maple Symbolic Algebra Package. */
@%:@undef USE_ROSE_MAPLE_SUPPORT])
m4trace:configure.ac:139: -1- AC_SUBST([maple_path])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([maple_path])
m4trace:configure.ac:139: -1- m4_pattern_allow([^maple_path$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USE_MAPLE], [test ! "$with_maple" = no])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_MAPLE_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_MAPLE_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_MAPLE_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_MAPLE_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_MAPLE_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_MAPLE_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_MAPLE_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_MAPLE_FALSE])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USE_VXWORKS], [test ! "$with_vxworks" = no])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_VXWORKS_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_VXWORKS_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_VXWORKS_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_VXWORKS_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_VXWORKS_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_VXWORKS_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_VXWORKS_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_VXWORKS_FALSE])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([IDA_PRO_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^IDA_PRO_PATH$])
m4trace:configure.ac:139: -1- AH_OUTPUT([IDA_PRO_PATH], [/* Prefix path for use of IDA. */
@%:@undef IDA_PRO_PATH])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([USE_ROSE_IDA_SUPPORT])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_ROSE_IDA_SUPPORT$])
m4trace:configure.ac:139: -1- AH_OUTPUT([USE_ROSE_IDA_SUPPORT], [/* Controls use of IDA support for disassembling. */
@%:@undef USE_ROSE_IDA_SUPPORT])
m4trace:configure.ac:139: -1- AC_SUBST([ida_path])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ida_path])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ida_path$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USE_IDA], [test ! "$with_ida" = no])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_IDA_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_IDA_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_IDA_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_IDA_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_IDA_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_IDA_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_IDA_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_IDA_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([PKG_CONFIG])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([PKG_CONFIG])
m4trace:configure.ac:139: -1- m4_pattern_allow([^PKG_CONFIG$])
m4trace:configure.ac:139: -1- AC_SUBST([LIBFFI_CFLAGS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LIBFFI_CFLAGS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LIBFFI_CFLAGS$])
m4trace:configure.ac:139: -1- AC_SUBST([LIBFFI_LIBS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LIBFFI_LIBS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LIBFFI_LIBS$])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_FFI_H], [/* Define to 1 if you have the <ffi.h> header file. */
@%:@undef HAVE_FFI_H])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([HAVE_FFI_H])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_FFI_H$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USE_LIBFFI], [test ! "$with_libffi" = no])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_LIBFFI_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_LIBFFI_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_LIBFFI_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_LIBFFI_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_LIBFFI_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_LIBFFI_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_LIBFFI_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_LIBFFI_FALSE])
m4trace:configure.ac:139: -1- _m4_warn([cross], [cannot check for file existence when cross compiling], [../../lib/autoconf/general.m4:2788: AC_CHECK_FILE is expanded from...
config/support-aterm.m4:52: ROSE_SUPPORT_ATERM is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_WITH_ATERM], [test "x$ATERM_BIN_PATH" != "x" && test "x$ATERM_LIBRARY_PATH" != "x"])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_WITH_ATERM_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_WITH_ATERM_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WITH_ATERM_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_WITH_ATERM_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_WITH_ATERM_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WITH_ATERM_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_ATERM_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_ATERM_FALSE])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_WITH_ATERM_BIN], [test "x$ATERM_BIN_PATH" != "x"])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_WITH_ATERM_BIN_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_WITH_ATERM_BIN_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WITH_ATERM_BIN_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_WITH_ATERM_BIN_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_WITH_ATERM_BIN_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WITH_ATERM_BIN_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_ATERM_BIN_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_ATERM_BIN_FALSE])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_WITH_ATERM_LIB], [test "x$ATERM_LIBRARY_PATH" != "x"])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_WITH_ATERM_LIB_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_WITH_ATERM_LIB_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WITH_ATERM_LIB_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_WITH_ATERM_LIB_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_WITH_ATERM_LIB_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WITH_ATERM_LIB_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_ATERM_LIB_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_ATERM_LIB_FALSE])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_BUILD_ATERM_SUPPORT], [test "x$ATERM_LIBRARY_PATH" != "x"])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_BUILD_ATERM_SUPPORT_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_BUILD_ATERM_SUPPORT_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_BUILD_ATERM_SUPPORT_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_BUILD_ATERM_SUPPORT_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_BUILD_ATERM_SUPPORT_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_BUILD_ATERM_SUPPORT_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_ATERM_SUPPORT_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_ATERM_SUPPORT_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([ATERM_INSTALL_PATH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ATERM_INSTALL_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ATERM_INSTALL_PATH$])
m4trace:configure.ac:139: -1- AC_SUBST([ATERM_BIN_PATH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ATERM_BIN_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ATERM_BIN_PATH$])
m4trace:configure.ac:139: -1- AC_SUBST([ATERM_LIBRARY_PATH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ATERM_LIBRARY_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ATERM_LIBRARY_PATH$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([ATERM_INSTALL_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ATERM_INSTALL_PATH$])
m4trace:configure.ac:139: -1- AH_OUTPUT([ATERM_INSTALL_PATH], [/* Absolute path of the ATERM installation */
@%:@undef ATERM_INSTALL_PATH])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([ATERM_BIN_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ATERM_BIN_PATH$])
m4trace:configure.ac:139: -1- AH_OUTPUT([ATERM_BIN_PATH], [/* Absolute path of the ATERM installation bin directory */
@%:@undef ATERM_BIN_PATH])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([ATERM_LIBRARY_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ATERM_LIBRARY_PATH$])
m4trace:configure.ac:139: -1- AH_OUTPUT([ATERM_LIBRARY_PATH], [/* Absolute path of the ATERM installation lib directory */
@%:@undef ATERM_LIBRARY_PATH])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([USE_ROSE_ATERM_SUPPORT])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_ROSE_ATERM_SUPPORT$])
m4trace:configure.ac:139: -1- AH_OUTPUT([USE_ROSE_ATERM_SUPPORT], [/* Controls use of ROSE support for ATerm Library. */
@%:@undef USE_ROSE_ATERM_SUPPORT])
m4trace:configure.ac:139: -1- _m4_warn([cross], [cannot check for file existence when cross compiling], [../../lib/autoconf/general.m4:2788: AC_CHECK_FILE is expanded from...
config/support-stratego.m4:51: ROSE_SUPPORT_STRATEGO is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_WITH_STRATEGO], [test "x$STRATEGO_BIN_PATH" != "x" && test "x$STRATEGO_LIBRARY_PATH" != "x"])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_WITH_STRATEGO_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_WITH_STRATEGO_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WITH_STRATEGO_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_WITH_STRATEGO_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_WITH_STRATEGO_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WITH_STRATEGO_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_STRATEGO_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_STRATEGO_FALSE])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_WITH_STRATEGO_BIN], [test "x$STRATEGO_BIN_PATH" != "x"])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_WITH_STRATEGO_BIN_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_WITH_STRATEGO_BIN_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WITH_STRATEGO_BIN_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_WITH_STRATEGO_BIN_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_WITH_STRATEGO_BIN_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WITH_STRATEGO_BIN_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_STRATEGO_BIN_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_STRATEGO_BIN_FALSE])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_WITH_STRATEGO_LIB], [test "x$STRATEGO_LIBRARY_PATH" != "x"])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_WITH_STRATEGO_LIB_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_WITH_STRATEGO_LIB_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WITH_STRATEGO_LIB_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_WITH_STRATEGO_LIB_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_WITH_STRATEGO_LIB_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WITH_STRATEGO_LIB_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_STRATEGO_LIB_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_STRATEGO_LIB_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([STRATEGO_INSTALL_PATH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([STRATEGO_INSTALL_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^STRATEGO_INSTALL_PATH$])
m4trace:configure.ac:139: -1- AC_SUBST([STRATEGO_BIN_PATH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([STRATEGO_BIN_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^STRATEGO_BIN_PATH$])
m4trace:configure.ac:139: -1- AC_SUBST([STRATEGO_LIBRARY_PATH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([STRATEGO_LIBRARY_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^STRATEGO_LIBRARY_PATH$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([STRATEGO_INSTALL_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^STRATEGO_INSTALL_PATH$])
m4trace:configure.ac:139: -1- AH_OUTPUT([STRATEGO_INSTALL_PATH], [/* Absolute path of the STRATEGO installation */
@%:@undef STRATEGO_INSTALL_PATH])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([STRATEGO_BIN_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^STRATEGO_BIN_PATH$])
m4trace:configure.ac:139: -1- AH_OUTPUT([STRATEGO_BIN_PATH], [/* Absolute path of the STRATEGO installation bin directory */
@%:@undef STRATEGO_BIN_PATH])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([STRATEGO_LIBRARY_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^STRATEGO_LIBRARY_PATH$])
m4trace:configure.ac:139: -1- AH_OUTPUT([STRATEGO_LIBRARY_PATH], [/* Absolute path of the STRATEGO installation lib directory */
@%:@undef STRATEGO_LIBRARY_PATH])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([USE_ROSE_STRATEGO_SUPPORT])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_ROSE_STRATEGO_SUPPORT$])
m4trace:configure.ac:139: -1- AH_OUTPUT([USE_ROSE_STRATEGO_SUPPORT], [/* Controls use of ROSE support for Stratego Library. */
@%:@undef USE_ROSE_STRATEGO_SUPPORT])
m4trace:configure.ac:139: -1- AC_SUBST([MINT])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([MINT])
m4trace:configure.ac:139: -1- m4_pattern_allow([^MINT$])
m4trace:configure.ac:139: -1- AC_SUBST([VECTORIZATION])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([VECTORIZATION])
m4trace:configure.ac:139: -1- m4_pattern_allow([^VECTORIZATION$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_WITH_POCC], [test "x$with_pocc" = xyes])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_WITH_POCC_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_WITH_POCC_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WITH_POCC_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_WITH_POCC_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_WITH_POCC_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WITH_POCC_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_POCC_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_POCC_FALSE])
m4trace:configure.ac:139: -1- AC_CONFIG_SUBDIRS([src/3rdPartyLibraries/libharu-2.1.0])
m4trace:configure.ac:139: -1- AC_SUBST([subdirs], ["$subdirs m4_normalize([src/3rdPartyLibraries/libharu-2.1.0])"])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([subdirs])
m4trace:configure.ac:139: -1- m4_pattern_allow([^subdirs$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([ROSE_WITH_LIBHARU])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WITH_LIBHARU$])
m4trace:configure.ac:139: -1- AH_OUTPUT([ROSE_WITH_LIBHARU], [/* libharu enabled */
@%:@undef ROSE_WITH_LIBHARU])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_WITH_LIBHARU], [test "x$with_libharu" = xyes])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_WITH_LIBHARU_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_WITH_LIBHARU_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WITH_LIBHARU_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_WITH_LIBHARU_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_WITH_LIBHARU_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_WITH_LIBHARU_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_LIBHARU_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_LIBHARU_FALSE])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([USE_ROSE_PHP_SUPPORT])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_ROSE_PHP_SUPPORT$])
m4trace:configure.ac:139: -1- AH_OUTPUT([USE_ROSE_PHP_SUPPORT], [/* Controls use of ROSE support for PHP. */
@%:@undef USE_ROSE_PHP_SUPPORT])
m4trace:configure.ac:139: -1- AC_SUBST([php_path])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([php_path])
m4trace:configure.ac:139: -1- m4_pattern_allow([^php_path$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USE_PHP], [test ! "$with_php" = no])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_PHP_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_PHP_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_PHP_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_PHP_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_PHP_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_PHP_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_PHP_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_PHP_FALSE])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([USE_ROSE_LLVM_SUPPORT])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_ROSE_LLVM_SUPPORT$])
m4trace:configure.ac:139: -1- AH_OUTPUT([USE_ROSE_LLVM_SUPPORT], [/* Controls use of ROSE support for LLVM. */
@%:@undef USE_ROSE_LLVM_SUPPORT])
m4trace:configure.ac:139: -1- AC_SUBST([llvm_path])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([llvm_path])
m4trace:configure.ac:139: -1- m4_pattern_allow([^llvm_path$])
m4trace:configure.ac:139: -1- AC_SUBST([LLVM_CONFIG])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LLVM_CONFIG])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LLVM_CONFIG$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USING_LLVM_6_0_0], [test "x$llvm_version_6_0_0" = "xyes"])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USING_LLVM_6_0_0_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USING_LLVM_6_0_0_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USING_LLVM_6_0_0_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USING_LLVM_6_0_0_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USING_LLVM_6_0_0_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USING_LLVM_6_0_0_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USING_LLVM_6_0_0_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USING_LLVM_6_0_0_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([LLVM_CPPFLAGS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LLVM_CPPFLAGS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LLVM_CPPFLAGS$])
m4trace:configure.ac:139: -1- AC_SUBST([LLVM_LDFLAGS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LLVM_LDFLAGS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LLVM_LDFLAGS$])
m4trace:configure.ac:139: -1- AC_SUBST([LLVM_LIBS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LLVM_LIBS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LLVM_LIBS$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USE_LLVM], [test ! "$with_llvm" = no])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_LLVM_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_LLVM_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_LLVM_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_LLVM_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_LLVM_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_LLVM_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_LLVM_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_LLVM_FALSE])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([USE_ROSE_WINDOWS_ANALYSIS_SUPPORT])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_ROSE_WINDOWS_ANALYSIS_SUPPORT$])
m4trace:configure.ac:139: -1- AH_OUTPUT([USE_ROSE_WINDOWS_ANALYSIS_SUPPORT], [/* Wine provides access to Windows header files for analysis of windows
   applications under Linux. */
@%:@undef USE_ROSE_WINDOWS_ANALYSIS_SUPPORT])
m4trace:configure.ac:139: -1- AC_SUBST([wine_path])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([wine_path])
m4trace:configure.ac:139: -1- m4_pattern_allow([^wine_path$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USE_WINDOWS_ANALYSIS_SUPPORT], [test ! "$with_wine" = no])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_WINDOWS_ANALYSIS_SUPPORT_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_WINDOWS_ANALYSIS_SUPPORT_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_WINDOWS_ANALYSIS_SUPPORT_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_WINDOWS_ANALYSIS_SUPPORT_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_WINDOWS_ANALYSIS_SUPPORT_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_WINDOWS_ANALYSIS_SUPPORT_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_WINDOWS_ANALYSIS_SUPPORT_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_WINDOWS_ANALYSIS_SUPPORT_FALSE])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([USE_ROSE_EDG_DEBUGGING_SUPPORT])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_ROSE_EDG_DEBUGGING_SUPPORT$])
m4trace:configure.ac:139: -1- AH_OUTPUT([USE_ROSE_EDG_DEBUGGING_SUPPORT], [/* Controls if EDG Union/Struct debugging support is to be used. */
@%:@undef USE_ROSE_EDG_DEBUGGING_SUPPORT])
m4trace:configure.ac:139: -1- AC_SUBST([edg_union_struct_debugging_value])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([edg_union_struct_debugging_value])
m4trace:configure.ac:139: -1- m4_pattern_allow([^edg_union_struct_debugging_value$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([USE_ROSE_OMNI_OPENMP_SUPPORT])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_ROSE_OMNI_OPENMP_SUPPORT$])
m4trace:configure.ac:139: -1- AH_OUTPUT([USE_ROSE_OMNI_OPENMP_SUPPORT], [/* Controls use of ROSE support for OpenMP Translator targeting Omni RTL. */
@%:@undef USE_ROSE_OMNI_OPENMP_SUPPORT])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([OMNI_OPENMP_LIB_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^OMNI_OPENMP_LIB_PATH$])
m4trace:configure.ac:139: -1- AH_OUTPUT([OMNI_OPENMP_LIB_PATH], [/* Location (unquoted) of the Omni OpenMP run time library. */
@%:@undef OMNI_OPENMP_LIB_PATH])
m4trace:configure.ac:139: -1- AC_SUBST([omni_omp_runtime_support_path])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([omni_omp_runtime_support_path])
m4trace:configure.ac:139: -1- m4_pattern_allow([^omni_omp_runtime_support_path$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USE_OMNI_OPENMP], [test ! "$with_omni_omp_runtime_support" = no])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_OMNI_OPENMP_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_OMNI_OPENMP_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_OMNI_OPENMP_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_OMNI_OPENMP_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_OMNI_OPENMP_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_OMNI_OPENMP_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_OMNI_OPENMP_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_OMNI_OPENMP_FALSE])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([USE_ROSE_GOMP_OPENMP_LIBRARY])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_ROSE_GOMP_OPENMP_LIBRARY$])
m4trace:configure.ac:139: -1- AH_OUTPUT([USE_ROSE_GOMP_OPENMP_LIBRARY], [/* Controls use of ROSE support for OpenMP Translator targeting GCC 4.4 \'s
   GOMP OpenMP RTL. */
@%:@undef USE_ROSE_GOMP_OPENMP_LIBRARY])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([GCC_GOMP_OPENMP_LIB_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^GCC_GOMP_OPENMP_LIB_PATH$])
m4trace:configure.ac:139: -1- AH_OUTPUT([GCC_GOMP_OPENMP_LIB_PATH], [/* Location (unquoted) of the GCC 4.4\'s GOMP OpenMP runtime library. */
@%:@undef GCC_GOMP_OPENMP_LIB_PATH])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([ROSE_INSTALLATION_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_INSTALLATION_PATH$])
m4trace:configure.ac:139: -1- AH_OUTPUT([ROSE_INSTALLATION_PATH], [/* Location (unquoted) of the top directory path to which ROSE is installed.
   */
@%:@undef ROSE_INSTALLATION_PATH])
m4trace:configure.ac:139: -1- AC_SUBST([gomp_omp_runtime_library_path])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([gomp_omp_runtime_library_path])
m4trace:configure.ac:139: -1- m4_pattern_allow([^gomp_omp_runtime_library_path$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([WITH_GOMP_OPENMP_LIB], [test ! "$with_gomp_omp_runtime_library" = no])
m4trace:configure.ac:139: -1- AC_SUBST([WITH_GOMP_OPENMP_LIB_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([WITH_GOMP_OPENMP_LIB_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^WITH_GOMP_OPENMP_LIB_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([WITH_GOMP_OPENMP_LIB_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([WITH_GOMP_OPENMP_LIB_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^WITH_GOMP_OPENMP_LIB_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([WITH_GOMP_OPENMP_LIB_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([WITH_GOMP_OPENMP_LIB_FALSE])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([USE_ROSE_GCC_OMP])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_ROSE_GCC_OMP$])
m4trace:configure.ac:139: -1- AH_OUTPUT([USE_ROSE_GCC_OMP], [/* Use of GCC OpenMP in ROSE. */
@%:@undef USE_ROSE_GCC_OMP])
m4trace:configure.ac:139: -1- AC_SUBST([parallel_ast_traversal_omp_path])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([parallel_ast_traversal_omp_path])
m4trace:configure.ac:139: -1- m4_pattern_allow([^parallel_ast_traversal_omp_path$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USE_GCC_OMP], [test ! "$with_parallel_ast_traversal_omp" = no])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_GCC_OMP_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_GCC_OMP_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_GCC_OMP_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_GCC_OMP_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_GCC_OMP_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_GCC_OMP_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_GCC_OMP_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_GCC_OMP_FALSE])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_MPI], [test "$with_parallel_ast_traversal_mpi" = yes])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_MPI_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_MPI_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_MPI_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_MPI_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_MPI_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_MPI_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_MPI_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_MPI_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([MPICXX])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([MPICXX])
m4trace:configure.ac:139: -1- m4_pattern_allow([^MPICXX$])
m4trace:configure.ac:139: -1- AC_SUBST([ac_ct_MPICXX])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ac_ct_MPICXX])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ac_ct_MPICXX$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_PCH], [test "$with_pch" = yes])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_PCH_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_PCH_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_PCH_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_PCH_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_PCH_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_PCH_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_PCH_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_PCH_FALSE])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([USE_ROSE_RTED_SUPPORT])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_ROSE_RTED_SUPPORT$])
m4trace:configure.ac:139: -1- AH_OUTPUT([USE_ROSE_RTED_SUPPORT], [/* Controls use of ROSE support for RTED library. */
@%:@undef USE_ROSE_RTED_SUPPORT])
m4trace:configure.ac:139: -1- AC_SUBST([rted_path])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([rted_path])
m4trace:configure.ac:139: -1- m4_pattern_allow([^rted_path$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USE_RTED], [test ! "$with_rted" = no])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_RTED_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_RTED_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_RTED_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_RTED_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_RTED_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_RTED_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_RTED_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_RTED_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([XMKMF])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([XMKMF])
m4trace:configure.ac:139: -1- m4_pattern_allow([^XMKMF$])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_LANG_SAVE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:125: AC_LANG_SAVE is expanded from...
../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
../../lib/autoconf/general.m4:2042: AC_CACHE_VAL is expanded from...
../../lib/autoconf/general.m4:2063: AC_CACHE_CHECK is expanded from...
config/mdl_have_opengl_2014.m4:1: AC_FIND_OPENGL is expanded from...
../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
../../lib/autoconf/general.m4:1473: AC_ARG_ENABLE is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_LANG_C' is obsolete.
You should run autoupdate.], [../../lib/autoconf/c.m4:72: AC_LANG_C is expanded from...
../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
../../lib/autoconf/general.m4:2042: AC_CACHE_VAL is expanded from...
../../lib/autoconf/general.m4:2063: AC_CACHE_CHECK is expanded from...
config/mdl_have_opengl_2014.m4:1: AC_FIND_OPENGL is expanded from...
../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
../../lib/autoconf/general.m4:1473: AC_ARG_ENABLE is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_FD_MSG' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:384: AC_FD_MSG is expanded from...
../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
../../lib/autoconf/general.m4:2042: AC_CACHE_VAL is expanded from...
../../lib/autoconf/general.m4:2063: AC_CACHE_CHECK is expanded from...
config/mdl_have_opengl_2014.m4:1: AC_FIND_OPENGL is expanded from...
../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
../../lib/autoconf/general.m4:1473: AC_ARG_ENABLE is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_FD_MSG' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:384: AC_FD_MSG is expanded from...
../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
../../lib/autoconf/general.m4:2042: AC_CACHE_VAL is expanded from...
../../lib/autoconf/general.m4:2063: AC_CACHE_CHECK is expanded from...
config/mdl_have_opengl_2014.m4:1: AC_FIND_OPENGL is expanded from...
../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
../../lib/autoconf/general.m4:1473: AC_ARG_ENABLE is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_FD_MSG' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:384: AC_FD_MSG is expanded from...
../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
../../lib/autoconf/general.m4:2042: AC_CACHE_VAL is expanded from...
../../lib/autoconf/general.m4:2063: AC_CACHE_CHECK is expanded from...
config/mdl_have_opengl_2014.m4:1: AC_FIND_OPENGL is expanded from...
../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
../../lib/autoconf/general.m4:1473: AC_ARG_ENABLE is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_LANG_RESTORE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:134: AC_LANG_RESTORE is expanded from...
../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
../../lib/autoconf/general.m4:2042: AC_CACHE_VAL is expanded from...
../../lib/autoconf/general.m4:2063: AC_CACHE_CHECK is expanded from...
config/mdl_have_opengl_2014.m4:1: AC_FIND_OPENGL is expanded from...
../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
../../lib/autoconf/general.m4:1473: AC_ARG_ENABLE is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- AC_SUBST([GL_CFLAGS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([GL_CFLAGS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^GL_CFLAGS$])
m4trace:configure.ac:139: -1- AC_SUBST([GL_LIBS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([GL_LIBS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^GL_LIBS$])
m4trace:configure.ac:139: -1- AC_SUBST([GLUT_CFLAGS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([GLUT_CFLAGS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^GLUT_CFLAGS$])
m4trace:configure.ac:139: -1- AC_SUBST([GLUT_LIBS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([GLUT_LIBS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^GLUT_LIBS$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USE_OPENGL], [test ! "x$have_GL" = xno -a ! "x$rose_openGL" = xno])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_OPENGL_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_OPENGL_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_OPENGL_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_OPENGL_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_OPENGL_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_OPENGL_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_OPENGL_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_OPENGL_FALSE])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([USE_ROSE_GLUT_SUPPORT], [false])
m4trace:configure.ac:139: -1- AC_SUBST([USE_ROSE_GLUT_SUPPORT_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([USE_ROSE_GLUT_SUPPORT_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_ROSE_GLUT_SUPPORT_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([USE_ROSE_GLUT_SUPPORT_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([USE_ROSE_GLUT_SUPPORT_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_ROSE_GLUT_SUPPORT_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([USE_ROSE_GLUT_SUPPORT_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([USE_ROSE_GLUT_SUPPORT_FALSE])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([USE_ROSE_GLUT_SUPPORT], [true])
m4trace:configure.ac:139: -1- AC_SUBST([USE_ROSE_GLUT_SUPPORT_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([USE_ROSE_GLUT_SUPPORT_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_ROSE_GLUT_SUPPORT_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([USE_ROSE_GLUT_SUPPORT_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([USE_ROSE_GLUT_SUPPORT_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_ROSE_GLUT_SUPPORT_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([USE_ROSE_GLUT_SUPPORT_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([USE_ROSE_GLUT_SUPPORT_FALSE])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([USE_ROSE_GLUT_SUPPORT])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_ROSE_GLUT_SUPPORT$])
m4trace:configure.ac:139: -1- AH_OUTPUT([USE_ROSE_GLUT_SUPPORT], [/* Controls use of ROSE support for GLUT library. */
@%:@undef USE_ROSE_GLUT_SUPPORT])
m4trace:configure.ac:139: -1- AC_SUBST([glut_path])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([glut_path])
m4trace:configure.ac:139: -1- m4_pattern_allow([^glut_path$])
m4trace:configure.ac:139: -1- AC_SUBST([PERL])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([PERL])
m4trace:configure.ac:139: -1- m4_pattern_allow([^PERL$])
m4trace:configure.ac:139: -1- AC_SUBST([INDENT])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([INDENT])
m4trace:configure.ac:139: -1- m4_pattern_allow([^INDENT$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USE_INDENT], [test "x$INDENT" = "xindent"])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_INDENT_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_INDENT_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_INDENT_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_INDENT_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_INDENT_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_INDENT_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_INDENT_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_INDENT_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([TCLSH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([TCLSH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^TCLSH$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USE_TCLSH], [test "x$TCLSH" = "xtclsh"])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_TCLSH_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_TCLSH_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_TCLSH_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_TCLSH_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_TCLSH_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_TCLSH_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_TCLSH_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_TCLSH_FALSE])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([USE_GFORTRAN_IN_ROSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_GFORTRAN_IN_ROSE$])
m4trace:configure.ac:139: -1- AH_OUTPUT([USE_GFORTRAN_IN_ROSE], [/* Mark that GFORTRAN is available */
@%:@undef USE_GFORTRAN_IN_ROSE])
m4trace:configure.ac:139: -1- AC_SUBST([OPEN_FORTRAN_PARSER_PATH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([OPEN_FORTRAN_PARSER_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^OPEN_FORTRAN_PARSER_PATH$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_OFP_CONTAINS_JAVA_FILE], [test "x$ofp_jar_file_contains_java_file" = true])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_OFP_CONTAINS_JAVA_FILE_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_OFP_CONTAINS_JAVA_FILE_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_OFP_CONTAINS_JAVA_FILE_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_OFP_CONTAINS_JAVA_FILE_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_OFP_CONTAINS_JAVA_FILE_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_OFP_CONTAINS_JAVA_FILE_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_OFP_CONTAINS_JAVA_FILE_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_OFP_CONTAINS_JAVA_FILE_FALSE])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([ROSE_OFP_VERSION_NUMBER])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_OFP_VERSION_NUMBER$])
m4trace:configure.ac:139: -1- AH_OUTPUT([ROSE_OFP_VERSION_NUMBER], [/* OFP version number */
@%:@undef ROSE_OFP_VERSION_NUMBER])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([ROSE_OFP_MAJOR_VERSION_NUMBER])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_OFP_MAJOR_VERSION_NUMBER$])
m4trace:configure.ac:139: -1- AH_OUTPUT([ROSE_OFP_MAJOR_VERSION_NUMBER], [/* OFP major version number */
@%:@undef ROSE_OFP_MAJOR_VERSION_NUMBER])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([ROSE_OFP_MINOR_VERSION_NUMBER])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_OFP_MINOR_VERSION_NUMBER$])
m4trace:configure.ac:139: -1- AH_OUTPUT([ROSE_OFP_MINOR_VERSION_NUMBER], [/* OFP minor version number */
@%:@undef ROSE_OFP_MINOR_VERSION_NUMBER])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([ROSE_OFP_PATCH_VERSION_NUMBER])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_OFP_PATCH_VERSION_NUMBER$])
m4trace:configure.ac:139: -1- AH_OUTPUT([ROSE_OFP_PATCH_VERSION_NUMBER], [/* OFP patch version number */
@%:@undef ROSE_OFP_PATCH_VERSION_NUMBER])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_OFP_VERSION_NUMBER])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_OFP_VERSION_NUMBER])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_OFP_VERSION_NUMBER$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_OFP_MAJOR_VERSION_NUMBER])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_OFP_MAJOR_VERSION_NUMBER])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_OFP_MAJOR_VERSION_NUMBER$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_OFP_MINOR_VERSION_NUMBER])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_OFP_MINOR_VERSION_NUMBER])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_OFP_MINOR_VERSION_NUMBER$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_OFP_PATCH_VERSION_NUMBER])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_OFP_PATCH_VERSION_NUMBER])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_OFP_PATCH_VERSION_NUMBER$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_OFP_JAR_FILE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_OFP_JAR_FILE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_OFP_JAR_FILE$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([ROSE_OFP_JAR_FILE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_OFP_JAR_FILE$])
m4trace:configure.ac:139: -1- AH_OUTPUT([ROSE_OFP_JAR_FILE], [/* OFP jar file */
@%:@undef ROSE_OFP_JAR_FILE])
m4trace:configure.ac:139: -1- AC_SUBST([CLASSPATH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CLASSPATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CLASSPATH$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([ROSE_OFP_CLASSPATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_OFP_CLASSPATH$])
m4trace:configure.ac:139: -1- AH_OUTPUT([ROSE_OFP_CLASSPATH], [/* OFP class path for Jave Virtual Machine */
@%:@undef ROSE_OFP_CLASSPATH])
m4trace:configure.ac:139: -1- AC_SUBST([SWIG])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([SWIG])
m4trace:configure.ac:139: -1- m4_pattern_allow([^SWIG$])
m4trace:configure.ac:139: -1- AC_SUBST([SWIG_LIB])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([SWIG_LIB])
m4trace:configure.ac:139: -1- m4_pattern_allow([^SWIG_LIB$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ENABLE_JAVAPORT], [test "$with_javaport" = yes])
m4trace:configure.ac:139: -1- AC_SUBST([ENABLE_JAVAPORT_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ENABLE_JAVAPORT_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ENABLE_JAVAPORT_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ENABLE_JAVAPORT_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ENABLE_JAVAPORT_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ENABLE_JAVAPORT_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ENABLE_JAVAPORT_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ENABLE_JAVAPORT_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([GHCBIN])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([GHCBIN])
m4trace:configure.ac:139: -1- m4_pattern_allow([^GHCBIN$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([USE_HASKELL], [test "$USE_HASKELL" = 1])
m4trace:configure.ac:139: -1- AC_SUBST([USE_HASKELL_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([USE_HASKELL_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_HASKELL_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([USE_HASKELL_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([USE_HASKELL_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_HASKELL_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([USE_HASKELL_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([USE_HASKELL_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([HS_CONFIG_OPTS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([HS_CONFIG_OPTS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HS_CONFIG_OPTS$])
m4trace:configure.ac:139: -1- AC_SUBST([NVCCBIN])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([NVCCBIN])
m4trace:configure.ac:139: -1- m4_pattern_allow([^NVCCBIN$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([USE_CUDA], [test "$USE_CUDA" = 1])
m4trace:configure.ac:139: -1- AC_SUBST([USE_CUDA_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([USE_CUDA_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_CUDA_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([USE_CUDA_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([USE_CUDA_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_CUDA_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([USE_CUDA_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([USE_CUDA_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([SWIPLBIN])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([SWIPLBIN])
m4trace:configure.ac:139: -1- m4_pattern_allow([^SWIPLBIN$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_HAVE_SWI_PROLOG], [test "$ROSE_HAVE_SWI_PROLOG" = 1])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_HAVE_SWI_PROLOG_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_HAVE_SWI_PROLOG_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_HAVE_SWI_PROLOG_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_HAVE_SWI_PROLOG_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_HAVE_SWI_PROLOG_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_HAVE_SWI_PROLOG_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_SWI_PROLOG_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_SWI_PROLOG_FALSE])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([HAVE_Z3])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_Z3$])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_Z3], [/* Define to 1 if you have Z3 libs and headers. */
@%:@undef HAVE_Z3])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([ROSE_HAVE_Z3])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_HAVE_Z3$])
m4trace:configure.ac:139: -1- AH_OUTPUT([ROSE_HAVE_Z3], [/* Define to 1 if you have Z3 libs and headers. */
@%:@undef ROSE_HAVE_Z3])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([HAVE_Z3])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_Z3$])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_Z3], [/* Define to 1 if you have Z3 libs and headers. */
@%:@undef HAVE_Z3])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([ROSE_HAVE_Z3])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_HAVE_Z3$])
m4trace:configure.ac:139: -1- AH_OUTPUT([ROSE_HAVE_Z3], [/* Define to 1 if you have Z3 libs and headers. */
@%:@undef ROSE_HAVE_Z3])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([ROSE_HAVE_Z3_VERSION_H])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_HAVE_Z3_VERSION_H$])
m4trace:configure.ac:139: -1- AH_OUTPUT([ROSE_HAVE_Z3_VERSION_H], [/* Define if z3_version.h exists */
@%:@undef ROSE_HAVE_Z3_VERSION_H])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([ROSE_Z3])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_Z3$])
m4trace:configure.ac:139: -1- AH_OUTPUT([ROSE_Z3], [/* Absolute name of z3 executable, or the empty string. */
@%:@undef ROSE_Z3])
m4trace:configure.ac:139: -1- AC_SUBST([Z3BIN])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([Z3BIN])
m4trace:configure.ac:139: -1- m4_pattern_allow([^Z3BIN$])
m4trace:configure.ac:139: -1- AC_SUBST([Z3_INCLUDE_PATH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([Z3_INCLUDE_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^Z3_INCLUDE_PATH$])
m4trace:configure.ac:139: -1- AC_SUBST([Z3_LIBRARY_PATH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([Z3_LIBRARY_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^Z3_LIBRARY_PATH$])
m4trace:configure.ac:139: -1- AC_SUBST([Z3_PREFIX])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([Z3_PREFIX])
m4trace:configure.ac:139: -1- m4_pattern_allow([^Z3_PREFIX$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([USE_Z3], [test "$USE_Z3" = 1])
m4trace:configure.ac:139: -1- AC_SUBST([USE_Z3_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([USE_Z3_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_Z3_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([USE_Z3_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([USE_Z3_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_Z3_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([USE_Z3_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([USE_Z3_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_Z3_PREFIX])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_Z3_PREFIX])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_Z3_PREFIX$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_HAVE_LIBZ3], [test -n "$Z3_LIBRARY_PATH"])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_HAVE_LIBZ3_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_HAVE_LIBZ3_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_HAVE_LIBZ3_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_HAVE_LIBZ3_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_HAVE_LIBZ3_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_HAVE_LIBZ3_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_LIBZ3_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_LIBZ3_FALSE])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_HAVE_Z3], [test -n "$Z3BIN"])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_HAVE_Z3_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_HAVE_Z3_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_HAVE_Z3_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_HAVE_Z3_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_HAVE_Z3_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_HAVE_Z3_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_Z3_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_Z3_FALSE])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([USE_ROSE_BDDBDDB_SUPPORT])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_ROSE_BDDBDDB_SUPPORT$])
m4trace:configure.ac:139: -1- AH_OUTPUT([USE_ROSE_BDDBDDB_SUPPORT], [/* Controls use of ROSE support for bddbddb (Binary decision diagrams (BDD)
   BDD-Based Deductive DataBase. */
@%:@undef USE_ROSE_BDDBDDB_SUPPORT])
m4trace:configure.ac:139: -1- AC_SUBST([bddbddb_path])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([bddbddb_path])
m4trace:configure.ac:139: -1- m4_pattern_allow([^bddbddb_path$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USE_BDDBDDB], [test ! "$with_bddbddb" = no])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_BDDBDDB_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_BDDBDDB_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_BDDBDDB_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_BDDBDDB_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_BDDBDDB_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_BDDBDDB_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_BDDBDDB_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_BDDBDDB_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([optional_Visualization_subdirs])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([optional_Visualization_subdirs])
m4trace:configure.ac:139: -1- m4_pattern_allow([^optional_Visualization_subdirs$])
m4trace:configure.ac:139: -1- AC_SUBST([FLTK_include_path])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([FLTK_include_path])
m4trace:configure.ac:139: -1- m4_pattern_allow([^FLTK_include_path$])
m4trace:configure.ac:139: -1- AC_SUBST([FLTK_libs_path])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([FLTK_libs_path])
m4trace:configure.ac:139: -1- m4_pattern_allow([^FLTK_libs_path$])
m4trace:configure.ac:139: -1- AC_SUBST([GraphViz_include_path])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([GraphViz_include_path])
m4trace:configure.ac:139: -1- m4_pattern_allow([^GraphViz_include_path$])
m4trace:configure.ac:139: -1- AC_SUBST([GraphViz_libs_path])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([GraphViz_libs_path])
m4trace:configure.ac:139: -1- m4_pattern_allow([^GraphViz_libs_path$])
m4trace:configure.ac:139: -1- AC_SUBST([GLUT_include_path])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([GLUT_include_path])
m4trace:configure.ac:139: -1- m4_pattern_allow([^GLUT_include_path$])
m4trace:configure.ac:139: -1- AC_SUBST([GLUT_libs_path])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([GLUT_libs_path])
m4trace:configure.ac:139: -1- m4_pattern_allow([^GLUT_libs_path$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USE_VISUALIZATION], [(test ! "$with_FLTK_include" = no) || (test ! "$with_FLTK_libs" = no) || (test ! "$with_GraphViz_include" = no) || (test ! "$with_GraphViz_libs" = no)])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_VISUALIZATION_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_VISUALIZATION_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_VISUALIZATION_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_VISUALIZATION_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_VISUALIZATION_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_VISUALIZATION_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_VISUALIZATION_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_VISUALIZATION_FALSE])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USE_PPL], [test "x$enable_ppl" = "xyes"])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_PPL_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_PPL_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_PPL_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_PPL_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_PPL_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_PPL_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_PPL_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_PPL_FALSE])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([ROSE_USE_PPL])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_PPL$])
m4trace:configure.ac:139: -1- AH_OUTPUT([ROSE_USE_PPL], [/* Whether to use Parma Polyhedral Library (PPL) support or not within ROSE */
@%:@undef ROSE_USE_PPL])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_PPL])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_PPL])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_PPL$])
m4trace:configure.ac:139: -1- AC_SUBST([PPL_PATH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([PPL_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^PPL_PATH$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USE_CLOOG], [test "x$enable_cloog" = "xyes"])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_CLOOG_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_CLOOG_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_CLOOG_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_CLOOG_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_CLOOG_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_CLOOG_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_CLOOG_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_CLOOG_FALSE])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([ROSE_USE_CLOOG])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_CLOOG$])
m4trace:configure.ac:139: -1- AH_OUTPUT([ROSE_USE_CLOOG], [/* Whether to use Cloog support or not within ROSE */
@%:@undef ROSE_USE_CLOOG])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_CLOOG])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_CLOOG])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_CLOOG$])
m4trace:configure.ac:139: -1- AC_SUBST([CLOOG_PATH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CLOOG_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CLOOG_PATH$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USE_SCOPLIB], [test "x$enable_scoplib" = "xyes"])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_SCOPLIB_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_SCOPLIB_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_SCOPLIB_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_SCOPLIB_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_SCOPLIB_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_SCOPLIB_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_SCOPLIB_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_SCOPLIB_FALSE])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([ROSE_USE_SCOPLIB])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_SCOPLIB$])
m4trace:configure.ac:139: -1- AH_OUTPUT([ROSE_USE_SCOPLIB], [/* Whether to use ScopLib support or not within ROSE */
@%:@undef ROSE_USE_SCOPLIB])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_SCOPLIB])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_SCOPLIB])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_SCOPLIB$])
m4trace:configure.ac:139: -1- AC_SUBST([SCOPLIB_PATH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([SCOPLIB_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^SCOPLIB_PATH$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USE_CANDL], [test "x$enable_candl" = "xyes"])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_CANDL_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_CANDL_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_CANDL_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_CANDL_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_CANDL_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_CANDL_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_CANDL_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_CANDL_FALSE])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([ROSE_USE_CANDL])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_CANDL$])
m4trace:configure.ac:139: -1- AH_OUTPUT([ROSE_USE_CANDL], [/* Whether to use Candl support or not within ROSE */
@%:@undef ROSE_USE_CANDL])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_CANDL])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_CANDL])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_CANDL$])
m4trace:configure.ac:139: -1- AC_SUBST([CANDL_PATH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CANDL_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CANDL_PATH$])
m4trace:configure.ac:139: -1- AC_SUBST([CUDA_INC_DIR], [$with_cuda_inc])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CUDA_INC_DIR])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CUDA_INC_DIR$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([CUDA_INC_DIR])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CUDA_INC_DIR$])
m4trace:configure.ac:139: -1- AH_OUTPUT([CUDA_INC_DIR], [/* CUDA include directory */
@%:@undef CUDA_INC_DIR])
m4trace:configure.ac:139: -1- AC_SUBST([CUDA_INC_DIR], [$with_cuda_inc])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CUDA_INC_DIR])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CUDA_INC_DIR$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([CUDA_INC_DIR])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CUDA_INC_DIR$])
m4trace:configure.ac:139: -1- AH_OUTPUT([CUDA_INC_DIR], [/* CUDA include directory */
@%:@undef CUDA_INC_DIR])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_HAVE_CUDA_INC], [test "$with_cuda_inc" != ""])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_HAVE_CUDA_INC_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_HAVE_CUDA_INC_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_HAVE_CUDA_INC_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_HAVE_CUDA_INC_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_HAVE_CUDA_INC_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_HAVE_CUDA_INC_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_CUDA_INC_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_CUDA_INC_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([CUDA_LIB_DIR], [$with_cuda_lib])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CUDA_LIB_DIR])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CUDA_LIB_DIR$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([CUDA_LIB_DIR])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CUDA_LIB_DIR$])
m4trace:configure.ac:139: -1- AH_OUTPUT([CUDA_LIB_DIR], [/* CUDA libraries directory */
@%:@undef CUDA_LIB_DIR])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_HAVE_CUDA_LIB], [test "$with_cuda_lib" != ""])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_HAVE_CUDA_LIB_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_HAVE_CUDA_LIB_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_HAVE_CUDA_LIB_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_HAVE_CUDA_LIB_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_HAVE_CUDA_LIB_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_HAVE_CUDA_LIB_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_CUDA_LIB_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_CUDA_LIB_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([CUDA_BIN_DIR], [$with_cuda_bin])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CUDA_BIN_DIR])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CUDA_BIN_DIR$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([CUDA_BIN_DIR])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CUDA_BIN_DIR$])
m4trace:configure.ac:139: -1- AH_OUTPUT([CUDA_BIN_DIR], [/* CUDA binaries directory */
@%:@undef CUDA_BIN_DIR])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_HAVE_CUDA_BIN], [test "$with_cuda_bin" != ""])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_HAVE_CUDA_BIN_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_HAVE_CUDA_BIN_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_HAVE_CUDA_BIN_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_HAVE_CUDA_BIN_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_HAVE_CUDA_BIN_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_HAVE_CUDA_BIN_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_CUDA_BIN_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_CUDA_BIN_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([OPENCL_INC_DIR], [$with_opencl_inc])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([OPENCL_INC_DIR])
m4trace:configure.ac:139: -1- m4_pattern_allow([^OPENCL_INC_DIR$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([OPENCL_INC_DIR])
m4trace:configure.ac:139: -1- m4_pattern_allow([^OPENCL_INC_DIR$])
m4trace:configure.ac:139: -1- AH_OUTPUT([OPENCL_INC_DIR], [/* OpenCL include directory */
@%:@undef OPENCL_INC_DIR])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_HAVE_OPENCL_INC], [test "$with_opencl_inc" != ""])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_HAVE_OPENCL_INC_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_HAVE_OPENCL_INC_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_HAVE_OPENCL_INC_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_HAVE_OPENCL_INC_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_HAVE_OPENCL_INC_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_HAVE_OPENCL_INC_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_OPENCL_INC_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_OPENCL_INC_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([OPENCL_LIB_DIR], [$with_opencl_lib])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([OPENCL_LIB_DIR])
m4trace:configure.ac:139: -1- m4_pattern_allow([^OPENCL_LIB_DIR$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([OPENCL_LIB_DIR])
m4trace:configure.ac:139: -1- m4_pattern_allow([^OPENCL_LIB_DIR$])
m4trace:configure.ac:139: -1- AH_OUTPUT([OPENCL_LIB_DIR], [/* OpenCL libraries directory */
@%:@undef OPENCL_LIB_DIR])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_ERROR' is obsolete.
You should run autoupdate.], [../../lib/autoconf/oldnames.m4:34: AC_ERROR is expanded from...
config/support-accelerator.m4:55: ROSE_CHECK_OPENCL is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_HAVE_OPENCL_LIB], [test "$with_opencl_lib" != ""])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_HAVE_OPENCL_LIB_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_HAVE_OPENCL_LIB_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_HAVE_OPENCL_LIB_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_HAVE_OPENCL_LIB_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_HAVE_OPENCL_LIB_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_HAVE_OPENCL_LIB_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_OPENCL_LIB_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_OPENCL_LIB_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([DOXYINDEXER])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([DOXYINDEXER])
m4trace:configure.ac:139: -1- m4_pattern_allow([^DOXYINDEXER$])
m4trace:configure.ac:139: -1- AC_SUBST([DOXYINDEXER])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([DOXYINDEXER])
m4trace:configure.ac:139: -1- m4_pattern_allow([^DOXYINDEXER$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_HAVE_DOXYGEN], [test "$DOXYGEN" != ""])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_HAVE_DOXYGEN_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_HAVE_DOXYGEN_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_HAVE_DOXYGEN_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_HAVE_DOXYGEN_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_HAVE_DOXYGEN_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_HAVE_DOXYGEN_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_DOXYGEN_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_DOXYGEN_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([DOXYGEN], ["$DOXYGEN"])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([DOXYGEN])
m4trace:configure.ac:139: -1- m4_pattern_allow([^DOXYGEN$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_HAVE_DOXYINDEXER], [test "$DOXYINDEXER" != ""])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_HAVE_DOXYINDEXER_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_HAVE_DOXYINDEXER_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_HAVE_DOXYINDEXER_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_HAVE_DOXYINDEXER_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_HAVE_DOXYINDEXER_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_HAVE_DOXYINDEXER_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_DOXYINDEXER_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_DOXYINDEXER_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([DOXYINDEXER], ["$DOXYINDEXER"])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([DOXYINDEXER])
m4trace:configure.ac:139: -1- m4_pattern_allow([^DOXYINDEXER$])
m4trace:configure.ac:139: -1- AC_SUBST([DOXYGEN_EXTRACT_ALL])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([DOXYGEN_EXTRACT_ALL])
m4trace:configure.ac:139: -1- m4_pattern_allow([^DOXYGEN_EXTRACT_ALL$])
m4trace:configure.ac:139: -1- AC_SUBST([DOXYGEN_EXTRACT_PRIVATE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([DOXYGEN_EXTRACT_PRIVATE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^DOXYGEN_EXTRACT_PRIVATE$])
m4trace:configure.ac:139: -1- AC_SUBST([DOXYGEN_EXTRACT_STATIC])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([DOXYGEN_EXTRACT_STATIC])
m4trace:configure.ac:139: -1- m4_pattern_allow([^DOXYGEN_EXTRACT_STATIC$])
m4trace:configure.ac:139: -1- AC_SUBST([DOXYGEN_INTERNAL_DOCS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([DOXYGEN_INTERNAL_DOCS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^DOXYGEN_INTERNAL_DOCS$])
m4trace:configure.ac:139: -1- AC_SUBST([DOXYGEN_HIDE_UNDOC_MEMBERS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([DOXYGEN_HIDE_UNDOC_MEMBERS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^DOXYGEN_HIDE_UNDOC_MEMBERS$])
m4trace:configure.ac:139: -1- AC_SUBST([DOXYGEN_HIDE_UNDOC_CLASSES])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([DOXYGEN_HIDE_UNDOC_CLASSES])
m4trace:configure.ac:139: -1- m4_pattern_allow([^DOXYGEN_HIDE_UNDOC_CLASSES$])
m4trace:configure.ac:139: -1- AC_SUBST([DOXYGEN_HIDE_FRIEND_COMPOUNDS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([DOXYGEN_HIDE_FRIEND_COMPOUNDS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^DOXYGEN_HIDE_FRIEND_COMPOUNDS$])
m4trace:configure.ac:139: -1- AC_SUBST([DOXYGEN_ENABLED_SECTIONS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([DOXYGEN_ENABLED_SECTIONS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^DOXYGEN_ENABLED_SECTIONS$])
m4trace:configure.ac:139: -1- AC_SUBST([DOXYGEN_ADDED_DIRECTORY_1])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([DOXYGEN_ADDED_DIRECTORY_1])
m4trace:configure.ac:139: -1- m4_pattern_allow([^DOXYGEN_ADDED_DIRECTORY_1$])
m4trace:configure.ac:139: -1- AC_SUBST([DOXYGEN_ADDED_DIRECTORY_2])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([DOXYGEN_ADDED_DIRECTORY_2])
m4trace:configure.ac:139: -1- m4_pattern_allow([^DOXYGEN_ADDED_DIRECTORY_2$])
m4trace:configure.ac:139: -1- AC_SUBST([DOXYGEN_USE_TAG_FILE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([DOXYGEN_USE_TAG_FILE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^DOXYGEN_USE_TAG_FILE$])
m4trace:configure.ac:139: -1- AC_SUBST([CXXCPP])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CXXCPP])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:139: -1- AC_SUBST([CPPFLAGS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CPPFLAGS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:139: -1- AC_SUBST([CXXCPP])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CXXCPP])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `LT_AC_PROG_SED' is obsolete.
You should run autoupdate.], [config/libtool.m4:8295: LT_AC_PROG_SED is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- AC_SUBST([SED])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([SED])
m4trace:configure.ac:139: -1- m4_pattern_allow([^SED$])
m4trace:configure.ac:139: -1- m4_pattern_allow([LT_LIBEXT])
m4trace:configure.ac:139: -1- AC_PROG_LIBTOOL
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_PROG_LIBTOOL' is obsolete.
You should run autoupdate.], [config/libtool.m4:99: AC_PROG_LIBTOOL is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- LT_INIT
m4trace:configure.ac:139: -1- m4_pattern_forbid([^_?LT_[A-Z_]+$])
m4trace:configure.ac:139: -1- m4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])
m4trace:configure.ac:139: -1- AC_REQUIRE_AUX_FILE([ltmain.sh])
m4trace:configure.ac:139: -1- AC_SUBST([LIBTOOL])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LIBTOOL])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LIBTOOL$])
m4trace:configure.ac:139: -1- AC_SUBST([LD])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LD])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LD$])
m4trace:configure.ac:139: -1- AC_SUBST([DUMPBIN])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([DUMPBIN])
m4trace:configure.ac:139: -1- m4_pattern_allow([^DUMPBIN$])
m4trace:configure.ac:139: -1- AC_SUBST([ac_ct_DUMPBIN])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ac_ct_DUMPBIN])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ac_ct_DUMPBIN$])
m4trace:configure.ac:139: -1- AC_SUBST([DUMPBIN])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([DUMPBIN])
m4trace:configure.ac:139: -1- m4_pattern_allow([^DUMPBIN$])
m4trace:configure.ac:139: -1- AC_SUBST([NM])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([NM])
m4trace:configure.ac:139: -1- m4_pattern_allow([^NM$])
m4trace:configure.ac:139: -1- AC_SUBST([LN_S], [$as_ln_s])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LN_S])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LN_S$])
m4trace:configure.ac:139: -1- AC_SUBST([DLLTOOL])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([DLLTOOL])
m4trace:configure.ac:139: -1- m4_pattern_allow([^DLLTOOL$])
m4trace:configure.ac:139: -1- AC_SUBST([DLLTOOL])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([DLLTOOL])
m4trace:configure.ac:139: -1- m4_pattern_allow([^DLLTOOL$])
m4trace:configure.ac:139: -1- AC_SUBST([AR])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([AR])
m4trace:configure.ac:139: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:139: -1- AC_SUBST([ac_ct_AR])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ac_ct_AR])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ac_ct_AR$])
m4trace:configure.ac:139: -1- AC_SUBST([STRIP])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([STRIP])
m4trace:configure.ac:139: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:139: -1- AC_SUBST([RANLIB])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([RANLIB])
m4trace:configure.ac:139: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:139: -1- m4_pattern_allow([LT_OBJDIR])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([LT_OBJDIR])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LT_OBJDIR$])
m4trace:configure.ac:139: -1- AH_OUTPUT([LT_OBJDIR], [/* Define to the sub-directory where libtool stores uninstalled libraries. */
@%:@undef LT_OBJDIR])
m4trace:configure.ac:139: -1- LT_SUPPORTED_TAG([CC])
m4trace:configure.ac:139: -1- AC_SUBST([MANIFEST_TOOL])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([MANIFEST_TOOL])
m4trace:configure.ac:139: -1- m4_pattern_allow([^MANIFEST_TOOL$])
m4trace:configure.ac:139: -1- AC_SUBST([DSYMUTIL])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([DSYMUTIL])
m4trace:configure.ac:139: -1- m4_pattern_allow([^DSYMUTIL$])
m4trace:configure.ac:139: -1- AC_SUBST([NMEDIT])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([NMEDIT])
m4trace:configure.ac:139: -1- m4_pattern_allow([^NMEDIT$])
m4trace:configure.ac:139: -1- AC_SUBST([LIPO])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LIPO])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LIPO$])
m4trace:configure.ac:139: -1- AC_SUBST([OTOOL])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([OTOOL])
m4trace:configure.ac:139: -1- m4_pattern_allow([^OTOOL$])
m4trace:configure.ac:139: -1- AC_SUBST([OTOOL64])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([OTOOL64])
m4trace:configure.ac:139: -1- m4_pattern_allow([^OTOOL64$])
m4trace:configure.ac:139: -1- AC_SUBST([LT_SYS_LIBRARY_PATH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LT_SYS_LIBRARY_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LT_SYS_LIBRARY_PATH$])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_DLFCN_H], [/* Define to 1 if you have the <dlfcn.h> header file. */
@%:@undef HAVE_DLFCN_H])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DLFCN_H])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_DLFCN_H$])
m4trace:configure.ac:139: -1- LT_SUPPORTED_TAG([CXX])
m4trace:configure.ac:139: -1- AC_SUBST([CXXCPP])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CXXCPP])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:139: -1- AC_SUBST([CPPFLAGS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CPPFLAGS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:139: -1- AC_SUBST([CXXCPP])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CXXCPP])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:139: -1- AC_SUBST([LD])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LD])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LD$])
m4trace:configure.ac:139: -1- AC_SUBST([LT_SYS_LIBRARY_PATH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LT_SYS_LIBRARY_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LT_SYS_LIBRARY_PATH$])
m4trace:configure.ac:139: -1- LT_SUPPORTED_TAG([F77])
m4trace:configure.ac:139: -1- AC_SUBST([LT_SYS_LIBRARY_PATH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LT_SYS_LIBRARY_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LT_SYS_LIBRARY_PATH$])
m4trace:configure.ac:139: -1- LT_SUPPORTED_TAG([FC])
m4trace:configure.ac:139: -1- AC_SUBST([LT_SYS_LIBRARY_PATH])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LT_SYS_LIBRARY_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LT_SYS_LIBRARY_PATH$])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_LIBLTDL_CONVENIENCE' is obsolete.
You should run autoupdate.], [config/ltdl.m4:81: AC_LIBLTDL_CONVENIENCE is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- AC_SUBST([LIBLTDL])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LIBLTDL])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LIBLTDL$])
m4trace:configure.ac:139: -1- AC_SUBST([LTDLDEPS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LTDLDEPS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LTDLDEPS$])
m4trace:configure.ac:139: -1- AC_SUBST([LTDLINCL])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LTDLINCL])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LTDLINCL$])
m4trace:configure.ac:139: -1- AC_SUBST([INCLTDL])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([INCLTDL])
m4trace:configure.ac:139: -1- m4_pattern_allow([^INCLTDL$])
m4trace:configure.ac:139: -1- AC_SUBST([LTDLINCL])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LTDLINCL])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LTDLINCL$])
m4trace:configure.ac:139: -1- AC_SUBST([LIBLTDL])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LIBLTDL])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LIBLTDL$])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_LIBTOOL_DLOPEN' is obsolete.
You should run autoupdate.], [config/ltoptions.m4:113: AC_LIBTOOL_DLOPEN is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [AC_LIBTOOL_DLOPEN: Remove this warning and the call to _LT_SET_OPTION when you
put the 'dlopen' option into LT_INIT's first parameter.], [config/ltoptions.m4:113: AC_LIBTOOL_DLOPEN is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_LIB_LTDL' is obsolete.
You should run autoupdate.], [config/ltdl.m4:352: AC_LIB_LTDL is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- AC_SUBST([LIBLTDL])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LIBLTDL])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LIBLTDL$])
m4trace:configure.ac:139: -1- AC_SUBST([LTDLDEPS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LTDLDEPS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LTDLDEPS$])
m4trace:configure.ac:139: -1- AC_SUBST([LTDLINCL])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LTDLINCL])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LTDLINCL$])
m4trace:configure.ac:139: -1- AC_SUBST([INCLTDL])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([INCLTDL])
m4trace:configure.ac:139: -1- m4_pattern_allow([^INCLTDL$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([HAVE_LTDL])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_LTDL$])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_LTDL], [/* Define this if a modern libltdl is already installed */
@%:@undef HAVE_LTDL])
m4trace:configure.ac:139: -1- m4_pattern_allow([LT_MODULE_EXT])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([LT_MODULE_EXT])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LT_MODULE_EXT$])
m4trace:configure.ac:139: -1- AH_OUTPUT([LT_MODULE_EXT], [/* Define to the extension used for runtime loadable modules, say, ".so". */
@%:@undef LT_MODULE_EXT])
m4trace:configure.ac:139: -1- m4_pattern_allow([LT_SHARED_EXT])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([LT_SHARED_EXT])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LT_SHARED_EXT$])
m4trace:configure.ac:139: -1- AH_OUTPUT([LT_SHARED_EXT], [/* Define to the shared library suffix, say, ".dylib". */
@%:@undef LT_SHARED_EXT])
m4trace:configure.ac:139: -1- m4_pattern_allow([LT_SHARED_LIB_MEMBER])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([LT_SHARED_LIB_MEMBER])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LT_SHARED_LIB_MEMBER$])
m4trace:configure.ac:139: -1- AH_OUTPUT([LT_SHARED_LIB_MEMBER], [/* Define to the shared archive member specification, say "(shr.o)". */
@%:@undef LT_SHARED_LIB_MEMBER])
m4trace:configure.ac:139: -1- m4_pattern_allow([LT_MODULE_PATH_VAR])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([LT_MODULE_PATH_VAR])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LT_MODULE_PATH_VAR$])
m4trace:configure.ac:139: -1- AH_OUTPUT([LT_MODULE_PATH_VAR], [/* Define to the name of the environment variable that determines the run-time
   module search path. */
@%:@undef LT_MODULE_PATH_VAR])
m4trace:configure.ac:139: -1- m4_pattern_allow([LT_DLSEARCH_PATH])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([LT_DLSEARCH_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LT_DLSEARCH_PATH$])
m4trace:configure.ac:139: -1- AH_OUTPUT([LT_DLSEARCH_PATH], [/* Define to the system default library search path. */
@%:@undef LT_DLSEARCH_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LT_DLLOADERS$])
m4trace:configure.ac:139: -1- AC_SUBST([LT_DLLOADERS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LT_DLLOADERS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LT_DLLOADERS$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([HAVE_LIBDL])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_LIBDL$])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_LIBDL], [/* Define if you have the libdl library or equivalent. */
@%:@undef HAVE_LIBDL])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([HAVE_LIBDL])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_LIBDL$])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_LIBDL], [/* Define if you have the libdl library or equivalent. */
@%:@undef HAVE_LIBDL])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([HAVE_LIBDL])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_LIBDL$])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_LIBDL], [/* Define if you have the libdl library or equivalent. */
@%:@undef HAVE_LIBDL])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_DLERROR], [/* Define to 1 if you have the `dlerror\' function. */
@%:@undef HAVE_DLERROR])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DLERROR])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_DLERROR$])
m4trace:configure.ac:139: -1- AC_SUBST([LIBADD_DLOPEN])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LIBADD_DLOPEN])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LIBADD_DLOPEN$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([HAVE_SHL_LOAD])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_SHL_LOAD$])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_SHL_LOAD], [/* Define if you have the shl_load function. */
@%:@undef HAVE_SHL_LOAD])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([HAVE_SHL_LOAD])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_SHL_LOAD$])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_SHL_LOAD], [/* Define if you have the shl_load function. */
@%:@undef HAVE_SHL_LOAD])
m4trace:configure.ac:139: -1- AC_SUBST([LIBADD_SHL_LOAD])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LIBADD_SHL_LOAD])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LIBADD_SHL_LOAD$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DYLD])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_DYLD$])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_DYLD], [/* Define if you have the _dyld_func_lookup function. */
@%:@undef HAVE_DYLD])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DECL_CYGWIN_CONV_PATH])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_DECL_CYGWIN_CONV_PATH$])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_DECL_CYGWIN_CONV_PATH], [/* Define to 1 if you have the declaration of `cygwin_conv_path\', and to 0 if
   you don\'t. */
@%:@undef HAVE_DECL_CYGWIN_CONV_PATH])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DLD])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_DLD$])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_DLD], [/* Define if you have the GNU dld library. */
@%:@undef HAVE_DLD])
m4trace:configure.ac:139: -1- AC_SUBST([LIBADD_DLD_LINK])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LIBADD_DLD_LINK])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LIBADD_DLD_LINK$])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LT_DLPREOPEN$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([HAVE_LIBDLLOADER])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_LIBDLLOADER$])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_LIBDLLOADER], [/* Define if libdlloader will be built on this platform */
@%:@undef HAVE_LIBDLLOADER])
m4trace:configure.ac:139: -1- AC_SUBST([LT_DLPREOPEN])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LT_DLPREOPEN])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LT_DLPREOPEN$])
m4trace:configure.ac:139: -1- AC_SUBST([LIBADD_DL])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LIBADD_DL])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LIBADD_DL$])
m4trace:configure.ac:139: -1- AC_SUBST([sys_symbol_underscore])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([sys_symbol_underscore])
m4trace:configure.ac:139: -1- m4_pattern_allow([^sys_symbol_underscore$])
m4trace:configure.ac:139: -1- _m4_warn([syntax], [AC_REQUIRE: `_LT_COMPILER_PIC' was expanded before it was required
http://www.gnu.org/software/autoconf/manual/autoconf.html#Expanded-Before-Required], [config/ltdl.m4:800: LT_FUNC_DLSYM_USCORE is expanded from...
config/ltdl.m4:367: _LTDL_SETUP is expanded from...
config/ltdl.m4:226: LTDL_INIT is expanded from...
config/ltdl.m4:352: AC_LIB_LTDL is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([NEED_USCORE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^NEED_USCORE$])
m4trace:configure.ac:139: -1- AH_OUTPUT([NEED_USCORE], [/* Define if dlsym() requires a leading underscore in symbol names. */
@%:@undef NEED_USCORE])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([LTDL_DLOPEN_DEPLIBS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LTDL_DLOPEN_DEPLIBS$])
m4trace:configure.ac:139: -1- AH_OUTPUT([LTDL_DLOPEN_DEPLIBS], [/* Define if the OS needs help to load dependent libraries for dlopen(). */
@%:@undef LTDL_DLOPEN_DEPLIBS])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_ARGZ_H], [/* Define to 1 if you have the <argz.h> header file. */
@%:@undef HAVE_ARGZ_H])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([HAVE_ARGZ_H])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_ARGZ_H$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([HAVE_ERROR_T])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_ERROR_T$])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_ERROR_T], [/* Define to 1 if the system has the type `error_t\'. */
@%:@undef HAVE_ERROR_T])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([error_t])
m4trace:configure.ac:139: -1- m4_pattern_allow([^error_t$])
m4trace:configure.ac:139: -1- AH_OUTPUT([error_t], [/* Define to a type to use for \'error_t\' if it is not otherwise available. */
@%:@undef error_t])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([__error_t_defined])
m4trace:configure.ac:139: -1- m4_pattern_allow([^__error_t_defined$])
m4trace:configure.ac:139: -1- AH_OUTPUT([__error_t_defined], [/* Define so that glibc/gnulib argp.h does not typedef error_t. */
@%:@undef __error_t_defined])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_ARGZ_ADD], [/* Define to 1 if you have the `argz_add\' function. */
@%:@undef HAVE_ARGZ_ADD])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_ARGZ_APPEND], [/* Define to 1 if you have the `argz_append\' function. */
@%:@undef HAVE_ARGZ_APPEND])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_ARGZ_COUNT], [/* Define to 1 if you have the `argz_count\' function. */
@%:@undef HAVE_ARGZ_COUNT])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_ARGZ_CREATE_SEP], [/* Define to 1 if you have the `argz_create_sep\' function. */
@%:@undef HAVE_ARGZ_CREATE_SEP])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_ARGZ_INSERT], [/* Define to 1 if you have the `argz_insert\' function. */
@%:@undef HAVE_ARGZ_INSERT])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_ARGZ_NEXT], [/* Define to 1 if you have the `argz_next\' function. */
@%:@undef HAVE_ARGZ_NEXT])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_ARGZ_STRINGIFY], [/* Define to 1 if you have the `argz_stringify\' function. */
@%:@undef HAVE_ARGZ_STRINGIFY])
m4trace:configure.ac:139: -1- m4_pattern_allow([^_LT_LIBOBJS$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([HAVE_WORKING_ARGZ])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_WORKING_ARGZ$])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_WORKING_ARGZ], [/* This value is set to 1 to indicate that the system argz facility works */
@%:@undef HAVE_WORKING_ARGZ])
m4trace:configure.ac:139: -1- m4_pattern_allow([^_LT_LIBOBJS$])
m4trace:configure.ac:139: -1- AC_SUBST([LT_ARGZ_H])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LT_ARGZ_H])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LT_ARGZ_H$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([HAVE_PRELOADED_SYMBOLS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_PRELOADED_SYMBOLS$])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_PRELOADED_SYMBOLS], [/* Define if libtool can extract symbol lists from object files. */
@%:@undef HAVE_PRELOADED_SYMBOLS])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([INSTALL_LTDL], [test no != "${enable_ltdl_install-no}"])
m4trace:configure.ac:139: -1- AC_SUBST([INSTALL_LTDL_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([INSTALL_LTDL_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^INSTALL_LTDL_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([INSTALL_LTDL_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([INSTALL_LTDL_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^INSTALL_LTDL_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([INSTALL_LTDL_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([INSTALL_LTDL_FALSE])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([CONVENIENCE_LTDL], [test no != "${enable_ltdl_convenience-no}"])
m4trace:configure.ac:139: -1- AC_SUBST([CONVENIENCE_LTDL_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CONVENIENCE_LTDL_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CONVENIENCE_LTDL_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([CONVENIENCE_LTDL_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CONVENIENCE_LTDL_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CONVENIENCE_LTDL_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([CONVENIENCE_LTDL_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([CONVENIENCE_LTDL_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([LT_CONFIG_H])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LT_CONFIG_H])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LT_CONFIG_H$])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_UNISTD_H], [/* Define to 1 if you have the <unistd.h> header file. */
@%:@undef HAVE_UNISTD_H])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_DL_H], [/* Define to 1 if you have the <dl.h> header file. */
@%:@undef HAVE_DL_H])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_SYS_DL_H], [/* Define to 1 if you have the <sys/dl.h> header file. */
@%:@undef HAVE_SYS_DL_H])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_DLD_H], [/* Define to 1 if you have the <dld.h> header file. */
@%:@undef HAVE_DLD_H])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_MACH_O_DYLD_H], [/* Define to 1 if you have the <mach-o/dyld.h> header file. */
@%:@undef HAVE_MACH_O_DYLD_H])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_DIRENT_H], [/* Define to 1 if you have the <dirent.h> header file. */
@%:@undef HAVE_DIRENT_H])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_CLOSEDIR], [/* Define to 1 if you have the `closedir\' function. */
@%:@undef HAVE_CLOSEDIR])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_OPENDIR], [/* Define to 1 if you have the `opendir\' function. */
@%:@undef HAVE_OPENDIR])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_READDIR], [/* Define to 1 if you have the `readdir\' function. */
@%:@undef HAVE_READDIR])
m4trace:configure.ac:139: -1- m4_pattern_allow([^_LT_LIBOBJS$])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_STRLCAT], [/* Define to 1 if you have the `strlcat\' function. */
@%:@undef HAVE_STRLCAT])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_STRLCPY], [/* Define to 1 if you have the `strlcpy\' function. */
@%:@undef HAVE_STRLCPY])
m4trace:configure.ac:139: -1- m4_pattern_allow([^_LT_LIBOBJS$])
m4trace:configure.ac:139: -1- m4_pattern_allow([LT_LIBEXT])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([LT_LIBEXT])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LT_LIBEXT$])
m4trace:configure.ac:139: -1- AH_OUTPUT([LT_LIBEXT], [/* The archive extension */
@%:@undef LT_LIBEXT])
m4trace:configure.ac:139: -1- m4_pattern_allow([LT_LIBPREFIX])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([LT_LIBPREFIX])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LT_LIBPREFIX$])
m4trace:configure.ac:139: -1- AH_OUTPUT([LT_LIBPREFIX], [/* The archive prefix */
@%:@undef LT_LIBPREFIX])
m4trace:configure.ac:139: -1- AC_SUBST([LTDLOPEN])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([LTDLOPEN])
m4trace:configure.ac:139: -1- m4_pattern_allow([^LTDLOPEN$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([ROSE_SHLIBPATH_VAR])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_SHLIBPATH_VAR$])
m4trace:configure.ac:139: -1- AH_OUTPUT([ROSE_SHLIBPATH_VAR], [/* Variable like LD_LIBRARY_PATH */
@%:@undef ROSE_SHLIBPATH_VAR])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_DLFCN_H], [/* Define to 1 if you have the <dlfcn.h> header file. */
@%:@undef HAVE_DLFCN_H])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DLFCN_H])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_DLFCN_H$])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_LIBDL], [/* Define to 1 if you have the `dl\' library (-ldl). */
@%:@undef HAVE_LIBDL])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([HAVE_LIBDL])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_LIBDL$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DLADDR])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_DLADDR$])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_DLADDR], [/* Whether <dlfcn.h> and -ldl contain dladdr() */
@%:@undef HAVE_DLADDR])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([USE_ROSE_IN_BUILD_TREE_VAR], [test "x$use_rose_in_build_tree_var" = "xyes"])
m4trace:configure.ac:139: -1- AC_SUBST([USE_ROSE_IN_BUILD_TREE_VAR_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([USE_ROSE_IN_BUILD_TREE_VAR_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_ROSE_IN_BUILD_TREE_VAR_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([USE_ROSE_IN_BUILD_TREE_VAR_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([USE_ROSE_IN_BUILD_TREE_VAR_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_ROSE_IN_BUILD_TREE_VAR_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([USE_ROSE_IN_BUILD_TREE_VAR_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([USE_ROSE_IN_BUILD_TREE_VAR_FALSE])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_LANG_SAVE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:125: AC_LANG_SAVE is expanded from...
acmacros/compiler-id.m4:38: BTNG_INFO_CXX_ID_NAMES is expanded from...
acmacros/compiler-id.m4:15: BTNG_INFO_CXX_ID is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_LANG_CPLUSPLUS' is obsolete.
You should run autoupdate.], [../../lib/autoconf/c.m4:252: AC_LANG_CPLUSPLUS is expanded from...
acmacros/compiler-id.m4:38: BTNG_INFO_CXX_ID_NAMES is expanded from...
acmacros/compiler-id.m4:15: BTNG_INFO_CXX_ID is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_FD_CC' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:383: AC_FD_CC is expanded from...
acmacros/configure-log.m4:1: BTNG_AC_LOG is expanded from...
acmacros/compiler-id.m4:38: BTNG_INFO_CXX_ID_NAMES is expanded from...
acmacros/compiler-id.m4:15: BTNG_INFO_CXX_ID is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_FD_CC' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:383: AC_FD_CC is expanded from...
acmacros/configure-log.m4:1: BTNG_AC_LOG is expanded from...
acmacros/compiler-id.m4:38: BTNG_INFO_CXX_ID_NAMES is expanded from...
acmacros/compiler-id.m4:15: BTNG_INFO_CXX_ID is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_FD_CC' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:383: AC_FD_CC is expanded from...
acmacros/configure-log.m4:1: BTNG_AC_LOG is expanded from...
acmacros/compiler-id.m4:38: BTNG_INFO_CXX_ID_NAMES is expanded from...
acmacros/compiler-id.m4:15: BTNG_INFO_CXX_ID is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_FD_CC' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:383: AC_FD_CC is expanded from...
acmacros/configure-log.m4:1: BTNG_AC_LOG is expanded from...
acmacros/compiler-id.m4:38: BTNG_INFO_CXX_ID_NAMES is expanded from...
acmacros/compiler-id.m4:15: BTNG_INFO_CXX_ID is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_FD_CC' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:383: AC_FD_CC is expanded from...
acmacros/configure-log.m4:1: BTNG_AC_LOG is expanded from...
acmacros/compiler-id.m4:38: BTNG_INFO_CXX_ID_NAMES is expanded from...
acmacros/compiler-id.m4:15: BTNG_INFO_CXX_ID is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_FD_CC' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:383: AC_FD_CC is expanded from...
acmacros/configure-log.m4:1: BTNG_AC_LOG is expanded from...
acmacros/compiler-id.m4:38: BTNG_INFO_CXX_ID_NAMES is expanded from...
acmacros/compiler-id.m4:15: BTNG_INFO_CXX_ID is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_FD_CC' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:383: AC_FD_CC is expanded from...
acmacros/configure-log.m4:1: BTNG_AC_LOG is expanded from...
acmacros/compiler-id.m4:38: BTNG_INFO_CXX_ID_NAMES is expanded from...
acmacros/compiler-id.m4:15: BTNG_INFO_CXX_ID is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_FD_CC' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:383: AC_FD_CC is expanded from...
acmacros/configure-log.m4:1: BTNG_AC_LOG is expanded from...
acmacros/compiler-id.m4:38: BTNG_INFO_CXX_ID_NAMES is expanded from...
acmacros/compiler-id.m4:15: BTNG_INFO_CXX_ID is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_LANG_RESTORE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:134: AC_LANG_RESTORE is expanded from...
acmacros/compiler-id.m4:38: BTNG_INFO_CXX_ID_NAMES is expanded from...
acmacros/compiler-id.m4:15: BTNG_INFO_CXX_ID is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_FD_CC' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:383: AC_FD_CC is expanded from...
acmacros/configure-log.m4:1: BTNG_AC_LOG is expanded from...
acmacros/configure-log.m4:3: BTNG_AC_LOG_VAR is expanded from...
acmacros/compiler-id.m4:38: BTNG_INFO_CXX_ID_NAMES is expanded from...
acmacros/compiler-id.m4:15: BTNG_INFO_CXX_ID is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([USE_PURIFY])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_PURIFY$])
m4trace:configure.ac:139: -1- AH_OUTPUT([USE_PURIFY], [/* Support for Purify */
@%:@undef USE_PURIFY])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([USE_PURIFY_API])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_PURIFY_API$])
m4trace:configure.ac:139: -1- AH_OUTPUT([USE_PURIFY_API], [/* Support for Purify API (Compiling with the Purify library). */
@%:@undef USE_PURIFY_API])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([USE_PURIFY_LINKER])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_PURIFY_LINKER$])
m4trace:configure.ac:139: -1- AH_OUTPUT([USE_PURIFY_LINKER], [/* Link-time support for Purify. */
@%:@undef USE_PURIFY_LINKER])
m4trace:configure.ac:139: -1- AC_SUBST([purify_PREFIX])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([purify_PREFIX])
m4trace:configure.ac:139: -1- m4_pattern_allow([^purify_PREFIX$])
m4trace:configure.ac:139: -1- AC_SUBST([purify_INCLUDES])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([purify_INCLUDES])
m4trace:configure.ac:139: -1- m4_pattern_allow([^purify_INCLUDES$])
m4trace:configure.ac:139: -1- AC_SUBST([purify_LIBS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([purify_LIBS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^purify_LIBS$])
m4trace:configure.ac:139: -1- AC_SUBST([purify_BIN])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([purify_BIN])
m4trace:configure.ac:139: -1- m4_pattern_allow([^purify_BIN$])
m4trace:configure.ac:139: -1- AC_SUBST([PURIFY_OPTIONS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([PURIFY_OPTIONS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^PURIFY_OPTIONS$])
m4trace:configure.ac:139: -1- AC_SUBST([AUX_LINKER])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([AUX_LINKER])
m4trace:configure.ac:139: -1- m4_pattern_allow([^AUX_LINKER$])
m4trace:configure.ac:139: -1- AC_SUBST([CCLD])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CCLD])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CCLD$])
m4trace:configure.ac:139: -1- AC_SUBST([CXXLD])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CXXLD])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXXLD$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([USE_INSURE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_INSURE$])
m4trace:configure.ac:139: -1- AH_OUTPUT([USE_INSURE], [/* Link-time support for Insure. */
@%:@undef USE_INSURE])
m4trace:configure.ac:139: -1- AC_SUBST([insure_PREFIX])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([insure_PREFIX])
m4trace:configure.ac:139: -1- m4_pattern_allow([^insure_PREFIX$])
m4trace:configure.ac:139: -1- AC_SUBST([insure_LIBS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([insure_LIBS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^insure_LIBS$])
m4trace:configure.ac:139: -1- AC_SUBST([insure_BIN])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([insure_BIN])
m4trace:configure.ac:139: -1- m4_pattern_allow([^insure_BIN$])
m4trace:configure.ac:139: -1- AC_SUBST([INSURE_OPTIONS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([INSURE_OPTIONS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^INSURE_OPTIONS$])
m4trace:configure.ac:139: -1- AC_SUBST([AUX_LINKER])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([AUX_LINKER])
m4trace:configure.ac:139: -1- m4_pattern_allow([^AUX_LINKER$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([ROSE_USE_INSURE], [test "x$enable_insure" = "xyes"])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_INSURE_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_INSURE_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_INSURE_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([ROSE_USE_INSURE_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([ROSE_USE_INSURE_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^ROSE_USE_INSURE_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_INSURE_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([ROSE_USE_INSURE_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([CCLD])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CCLD])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CCLD$])
m4trace:configure.ac:139: -1- AC_SUBST([CXXLD])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CXXLD])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXXLD$])
m4trace:configure.ac:139: -1- AC_SUBST([Axx_INCLUDES])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([Axx_INCLUDES])
m4trace:configure.ac:139: -1- m4_pattern_allow([^Axx_INCLUDES$])
m4trace:configure.ac:139: -1- AC_SUBST([Axx_LIBS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([Axx_LIBS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^Axx_LIBS$])
m4trace:configure.ac:139: -1- AC_SUBST([Pxx_INCLUDES])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([Pxx_INCLUDES])
m4trace:configure.ac:139: -1- m4_pattern_allow([^Pxx_INCLUDES$])
m4trace:configure.ac:139: -1- AC_SUBST([Pxx_LIBS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([Pxx_LIBS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^Pxx_LIBS$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([AXXPXX_SPECIFIC_TESTS], [test ! "$with_AxxPxx" = no])
m4trace:configure.ac:139: -1- AC_SUBST([AXXPXX_SPECIFIC_TESTS_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([AXXPXX_SPECIFIC_TESTS_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^AXXPXX_SPECIFIC_TESTS_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([AXXPXX_SPECIFIC_TESTS_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([AXXPXX_SPECIFIC_TESTS_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^AXXPXX_SPECIFIC_TESTS_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([AXXPXX_SPECIFIC_TESTS_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([AXXPXX_SPECIFIC_TESTS_FALSE])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([USE_GCJ], [test "$with_gcj" = yes])
m4trace:configure.ac:139: -1- AC_SUBST([USE_GCJ_TRUE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([USE_GCJ_TRUE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_GCJ_TRUE$])
m4trace:configure.ac:139: -1- AC_SUBST([USE_GCJ_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([USE_GCJ_FALSE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^USE_GCJ_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([USE_GCJ_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([USE_GCJ_FALSE])
m4trace:configure.ac:139: -1- AC_SUBST([RT_LIBS])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([RT_LIBS])
m4trace:configure.ac:139: -1- m4_pattern_allow([^RT_LIBS$])
m4trace:configure.ac:139: -1- AC_DEFINE_TRACE_LITERAL([HAVE_EXPLICIT_TEMPLATE_INSTANTIATION])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_EXPLICIT_TEMPLATE_INSTANTIATION$])
m4trace:configure.ac:139: -1- AH_OUTPUT([HAVE_EXPLICIT_TEMPLATE_INSTANTIATION], [/* Use explicit template instantiation. */
@%:@undef HAVE_EXPLICIT_TEMPLATE_INSTANTIATION])
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_FD_CC' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:383: AC_FD_CC is expanded from...
acmacros/configure-log.m4:1: BTNG_AC_LOG is expanded from...
config/support-rose.m4:869: ROSE_SUPPORT_ROSE_PART_2 is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- AC_SUBST([CXX_STATIC_LIB_UPDATE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CXX_STATIC_LIB_UPDATE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXX_STATIC_LIB_UPDATE$])
m4trace:configure.ac:139: -1- AC_SUBST([CXX_SHARED_LIB_UPDATE])
m4trace:configure.ac:139: -1- AC_SUBST_TRACE([CXX_SHARED_LIB_UPDATE])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXX_SHARED_LIB_UPDATE$])
m4trace:configure.ac:140: -1- AC_DEFINE_TRACE_LITERAL([SAGE_TRANSFORM])
m4trace:configure.ac:140: -1- m4_pattern_allow([^SAGE_TRANSFORM$])
m4trace:configure.ac:140: -1- AH_OUTPUT([SAGE_TRANSFORM], [/* Control use of SAGE within EDG. */
@%:@undef SAGE_TRANSFORM])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_DIRENT_H], [/* Define to 1 if you have the <dirent.h> header file, and it defines `DIR\'.
   */
@%:@undef HAVE_DIRENT_H])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_SYS_NDIR_H], [/* Define to 1 if you have the <sys/ndir.h> header file, and it defines `DIR\'.
   */
@%:@undef HAVE_SYS_NDIR_H])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_SYS_DIR_H], [/* Define to 1 if you have the <sys/dir.h> header file, and it defines `DIR\'.
   */
@%:@undef HAVE_SYS_DIR_H])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_NDIR_H], [/* Define to 1 if you have the <ndir.h> header file, and it defines `DIR\'. */
@%:@undef HAVE_NDIR_H])
m4trace:configure.ac:140: -1- AC_DEFINE_TRACE_LITERAL([STDC_HEADERS])
m4trace:configure.ac:140: -1- m4_pattern_allow([^STDC_HEADERS$])
m4trace:configure.ac:140: -1- AH_OUTPUT([STDC_HEADERS], [/* Define to 1 if you have the ANSI C header files. */
@%:@undef STDC_HEADERS])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_LIMITS_H], [/* Define to 1 if you have the <limits.h> header file. */
@%:@undef HAVE_LIMITS_H])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_SYS_TIME_H], [/* Define to 1 if you have the <sys/time.h> header file. */
@%:@undef HAVE_SYS_TIME_H])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_UNISTD_H], [/* Define to 1 if you have the <unistd.h> header file. */
@%:@undef HAVE_UNISTD_H])
m4trace:configure.ac:140: -1- AC_DEFINE_TRACE_LITERAL([off_t])
m4trace:configure.ac:140: -1- m4_pattern_allow([^off_t$])
m4trace:configure.ac:140: -1- AH_OUTPUT([off_t], [/* Define to `long int\' if <sys/types.h> does not define. */
@%:@undef off_t])
m4trace:configure.ac:140: -1- AC_DEFINE_TRACE_LITERAL([size_t])
m4trace:configure.ac:140: -1- m4_pattern_allow([^size_t$])
m4trace:configure.ac:140: -1- AH_OUTPUT([size_t], [/* Define to `unsigned int\' if <sys/types.h> does not define. */
@%:@undef size_t])
m4trace:configure.ac:140: -1- AC_DEFINE_TRACE_LITERAL([TM_IN_SYS_TIME])
m4trace:configure.ac:140: -1- m4_pattern_allow([^TM_IN_SYS_TIME$])
m4trace:configure.ac:140: -1- AH_OUTPUT([TM_IN_SYS_TIME], [/* Define to 1 if your <sys/time.h> declares `struct tm\'. */
@%:@undef TM_IN_SYS_TIME])
m4trace:configure.ac:140: -1- AH_OUTPUT([__CHAR_UNSIGNED__], [/* Define to 1 if type `char\' is unsigned and you are not using gcc.  */
#ifndef __CHAR_UNSIGNED__
# undef __CHAR_UNSIGNED__
#endif])
m4trace:configure.ac:140: -1- AC_DEFINE_TRACE_LITERAL([__CHAR_UNSIGNED__])
m4trace:configure.ac:140: -1- m4_pattern_allow([^__CHAR_UNSIGNED__$])
m4trace:configure.ac:140: -1- _m4_warn([obsolete], [The macro `AC_C_LONG_DOUBLE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/types.m4:452: AC_C_LONG_DOUBLE is expanded from...
config/EDG.m4:1: SETUP_EDG is expanded from...
config/support-rose.m4:1738: ROSE_SUPPORT_ROSE_PART_3 is expanded from...
configure.ac:140: the top level])
m4trace:configure.ac:140: -1- AC_DEFINE_TRACE_LITERAL([HAVE_LONG_DOUBLE_WIDER])
m4trace:configure.ac:140: -1- m4_pattern_allow([^HAVE_LONG_DOUBLE_WIDER$])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_LONG_DOUBLE_WIDER], [/* Define to 1 if the type `long double\' works and has more range or precision
   than `double\'. */
@%:@undef HAVE_LONG_DOUBLE_WIDER])
m4trace:configure.ac:140: -1- AC_DEFINE_TRACE_LITERAL([HAVE_LONG_DOUBLE])
m4trace:configure.ac:140: -1- m4_pattern_allow([^HAVE_LONG_DOUBLE$])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_LONG_DOUBLE], [/* Define to 1 if the type `long double\' works and has more range or precision
   than `double\'. */
@%:@undef HAVE_LONG_DOUBLE])
m4trace:configure.ac:140: -1- AC_DEFINE_TRACE_LITERAL([SIZEOF_CHAR])
m4trace:configure.ac:140: -1- m4_pattern_allow([^SIZEOF_CHAR$])
m4trace:configure.ac:140: -1- AH_OUTPUT([SIZEOF_CHAR], [/* The size of `char\', as computed by sizeof. */
@%:@undef SIZEOF_CHAR])
m4trace:configure.ac:140: -1- AC_DEFINE_TRACE_LITERAL([SIZEOF_SHORT])
m4trace:configure.ac:140: -1- m4_pattern_allow([^SIZEOF_SHORT$])
m4trace:configure.ac:140: -1- AH_OUTPUT([SIZEOF_SHORT], [/* The size of `short\', as computed by sizeof. */
@%:@undef SIZEOF_SHORT])
m4trace:configure.ac:140: -1- AC_DEFINE_TRACE_LITERAL([SIZEOF_INT])
m4trace:configure.ac:140: -1- m4_pattern_allow([^SIZEOF_INT$])
m4trace:configure.ac:140: -1- AH_OUTPUT([SIZEOF_INT], [/* The size of `int\', as computed by sizeof. */
@%:@undef SIZEOF_INT])
m4trace:configure.ac:140: -1- AC_DEFINE_TRACE_LITERAL([SIZEOF_LONG])
m4trace:configure.ac:140: -1- m4_pattern_allow([^SIZEOF_LONG$])
m4trace:configure.ac:140: -1- AH_OUTPUT([SIZEOF_LONG], [/* The size of `long\', as computed by sizeof. */
@%:@undef SIZEOF_LONG])
m4trace:configure.ac:140: -1- AC_DEFINE_TRACE_LITERAL([SIZEOF_FLOAT])
m4trace:configure.ac:140: -1- m4_pattern_allow([^SIZEOF_FLOAT$])
m4trace:configure.ac:140: -1- AH_OUTPUT([SIZEOF_FLOAT], [/* The size of `float\', as computed by sizeof. */
@%:@undef SIZEOF_FLOAT])
m4trace:configure.ac:140: -1- AC_DEFINE_TRACE_LITERAL([SIZEOF_DOUBLE])
m4trace:configure.ac:140: -1- m4_pattern_allow([^SIZEOF_DOUBLE$])
m4trace:configure.ac:140: -1- AH_OUTPUT([SIZEOF_DOUBLE], [/* The size of `double\', as computed by sizeof. */
@%:@undef SIZEOF_DOUBLE])
m4trace:configure.ac:140: -1- AC_DEFINE_TRACE_LITERAL([SIZEOF_VOID_P])
m4trace:configure.ac:140: -1- m4_pattern_allow([^SIZEOF_VOID_P$])
m4trace:configure.ac:140: -1- AH_OUTPUT([SIZEOF_VOID_P], [/* The size of `void *\', as computed by sizeof. */
@%:@undef SIZEOF_VOID_P])
m4trace:configure.ac:140: -1- AC_DEFINE_TRACE_LITERAL([SIZEOF_LONG_DOUBLE])
m4trace:configure.ac:140: -1- m4_pattern_allow([^SIZEOF_LONG_DOUBLE$])
m4trace:configure.ac:140: -1- AH_OUTPUT([SIZEOF_LONG_DOUBLE], [/* The size of `long double\', as computed by sizeof. */
@%:@undef SIZEOF_LONG_DOUBLE])
m4trace:configure.ac:140: -1- AC_DEFINE_TRACE_LITERAL([SIZEOF_LONG_LONG])
m4trace:configure.ac:140: -1- m4_pattern_allow([^SIZEOF_LONG_LONG$])
m4trace:configure.ac:140: -1- AH_OUTPUT([SIZEOF_LONG_LONG], [/* The size of `long long\', as computed by sizeof. */
@%:@undef SIZEOF_LONG_LONG])
m4trace:configure.ac:140: -1- AC_SUBST([LIB@&t@OBJS], ["$LIB@&t@OBJS memcmp.$ac_objext"])
m4trace:configure.ac:140: -1- AC_SUBST_TRACE([LIB@&t@OBJS])
m4trace:configure.ac:140: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:140: -1- AC_LIBSOURCE([memcmp.c])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_STDLIB_H], [/* Define to 1 if you have the <stdlib.h> header file. */
@%:@undef HAVE_STDLIB_H])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_UNISTD_H], [/* Define to 1 if you have the <unistd.h> header file. */
@%:@undef HAVE_UNISTD_H])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_SYS_PARAM_H], [/* Define to 1 if you have the <sys/param.h> header file. */
@%:@undef HAVE_SYS_PARAM_H])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_GETPAGESIZE], [/* Define to 1 if you have the `getpagesize\' function. */
@%:@undef HAVE_GETPAGESIZE])
m4trace:configure.ac:140: -1- AC_DEFINE_TRACE_LITERAL([HAVE_GETPAGESIZE])
m4trace:configure.ac:140: -1- m4_pattern_allow([^HAVE_GETPAGESIZE$])
m4trace:configure.ac:140: -1- AC_DEFINE_TRACE_LITERAL([HAVE_MMAP])
m4trace:configure.ac:140: -1- m4_pattern_allow([^HAVE_MMAP$])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_MMAP], [/* Define to 1 if you have a working `mmap\' system call. */
@%:@undef HAVE_MMAP])
m4trace:configure.ac:140: -1- _m4_warn([obsolete], [The macro `AC_FUNC_SETVBUF_REVERSED' is obsolete.  Remove it and all references to SETVBUF_REVERSED.], [../../lib/autoconf/functions.m4:1712: AC_FUNC_SETVBUF_REVERSED is expanded from...
config/EDG.m4:1: SETUP_EDG is expanded from...
config/support-rose.m4:1738: ROSE_SUPPORT_ROSE_PART_3 is expanded from...
configure.ac:140: the top level])
m4trace:configure.ac:140: -1- _m4_warn([obsolete], [The macro `AC_TYPE_SIGNAL' is obsolete.
You should run autoupdate.], [../../lib/autoconf/types.m4:746: AC_TYPE_SIGNAL is expanded from...
config/EDG.m4:1: SETUP_EDG is expanded from...
config/support-rose.m4:1738: ROSE_SUPPORT_ROSE_PART_3 is expanded from...
configure.ac:140: the top level])
m4trace:configure.ac:140: -1- AC_DEFINE_TRACE_LITERAL([RETSIGTYPE])
m4trace:configure.ac:140: -1- m4_pattern_allow([^RETSIGTYPE$])
m4trace:configure.ac:140: -1- AH_OUTPUT([RETSIGTYPE], [/* Define as the return type of signal handlers (`int\' or `void\'). */
@%:@undef RETSIGTYPE])
m4trace:configure.ac:140: -1- AC_DEFINE_TRACE_LITERAL([HAVE_STRCOLL])
m4trace:configure.ac:140: -1- m4_pattern_allow([^HAVE_STRCOLL$])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_STRCOLL], [/* Define to 1 if you have the `strcoll\' function and it is properly defined.
   */
@%:@undef HAVE_STRCOLL])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_VPRINTF], [/* Define to 1 if you have the `vprintf\' function. */
@%:@undef HAVE_VPRINTF])
m4trace:configure.ac:140: -1- AC_DEFINE_TRACE_LITERAL([HAVE_VPRINTF])
m4trace:configure.ac:140: -1- m4_pattern_allow([^HAVE_VPRINTF$])
m4trace:configure.ac:140: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DOPRNT])
m4trace:configure.ac:140: -1- m4_pattern_allow([^HAVE_DOPRNT$])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_DOPRNT], [/* Define to 1 if you don\'t have `vprintf\' but do have `_doprnt.\' */
@%:@undef HAVE_DOPRNT])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_GETCWD], [/* Define to 1 if you have the `getcwd\' function. */
@%:@undef HAVE_GETCWD])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_GETWD], [/* Define to 1 if you have the `getwd\' function. */
@%:@undef HAVE_GETWD])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_MKTIME], [/* Define to 1 if you have the `mktime\' function. */
@%:@undef HAVE_MKTIME])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_STRCSPN], [/* Define to 1 if you have the `strcspn\' function. */
@%:@undef HAVE_STRCSPN])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_STRERROR], [/* Define to 1 if you have the `strerror\' function. */
@%:@undef HAVE_STRERROR])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_STRFTIME], [/* Define to 1 if you have the `strftime\' function. */
@%:@undef HAVE_STRFTIME])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_STRSPN], [/* Define to 1 if you have the `strspn\' function. */
@%:@undef HAVE_STRSPN])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_STRSTR], [/* Define to 1 if you have the `strstr\' function. */
@%:@undef HAVE_STRSTR])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_STRTOD], [/* Define to 1 if you have the `strtod\' function. */
@%:@undef HAVE_STRTOD])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_STRTOL], [/* Define to 1 if you have the `strtol\' function. */
@%:@undef HAVE_STRTOL])
m4trace:configure.ac:140: -1- AH_OUTPUT([HAVE_STRTOUL], [/* Define to 1 if you have the `strtoul\' function. */
@%:@undef HAVE_STRTOUL])
m4trace:configure.ac:140: -1- AC_SUBST([OBJ])
m4trace:configure.ac:140: -1- AC_SUBST_TRACE([OBJ])
m4trace:configure.ac:140: -1- m4_pattern_allow([^OBJ$])
m4trace:configure.ac:140: -1- AC_SUBST([EXE])
m4trace:configure.ac:140: -1- AC_SUBST_TRACE([EXE])
m4trace:configure.ac:140: -1- m4_pattern_allow([^EXE$])
m4trace:configure.ac:140: -1- AC_DEFINE_TRACE_LITERAL([USING_PURIFY])
m4trace:configure.ac:140: -1- m4_pattern_allow([^USING_PURIFY$])
m4trace:configure.ac:140: -1- AH_OUTPUT([USING_PURIFY], [/* Support for PURIFY debugging software. */
@%:@undef USING_PURIFY])
m4trace:configure.ac:140: -1- AC_DEFINE_TRACE_LITERAL([CHECKING])
m4trace:configure.ac:140: -1- m4_pattern_allow([^CHECKING$])
m4trace:configure.ac:140: -1- AH_OUTPUT([CHECKING], [/* Internal EDG specific consistency tests. */
@%:@undef CHECKING])
m4trace:configure.ac:140: -1- AC_SUBST([GEN_BE])
m4trace:configure.ac:140: -1- AC_SUBST_TRACE([GEN_BE])
m4trace:configure.ac:140: -1- m4_pattern_allow([^GEN_BE$])
m4trace:configure.ac:140: -1- AC_SUBST([build_triplet_without_redhat])
m4trace:configure.ac:140: -1- AC_SUBST_TRACE([build_triplet_without_redhat])
m4trace:configure.ac:140: -1- m4_pattern_allow([^build_triplet_without_redhat$])
m4trace:configure.ac:141: -1- AH_OUTPUT([inline], [/* Define to `__inline__\' or `__inline\' if that\'s what the C compiler
   calls it, or to nothing if \'inline\' is not supported under any name.  */
#ifndef __cplusplus
#undef inline
#endif])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([TIME_WITH_SYS_TIME])
m4trace:configure.ac:141: -1- m4_pattern_allow([^TIME_WITH_SYS_TIME$])
m4trace:configure.ac:141: -1- AH_OUTPUT([TIME_WITH_SYS_TIME], [/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
@%:@undef TIME_WITH_SYS_TIME])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_SYS_TIME_H], [/* Define to 1 if you have the <sys/time.h> header file. */
@%:@undef HAVE_SYS_TIME_H])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_C_ASM_H], [/* Define to 1 if you have the <c_asm.h> header file. */
@%:@undef HAVE_C_ASM_H])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_INTRINSICS_H], [/* Define to 1 if you have the <intrinsics.h> header file. */
@%:@undef HAVE_INTRINSICS_H])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_MACH_MACH_TIME_H], [/* Define to 1 if you have the <mach/mach_time.h> header file. */
@%:@undef HAVE_MACH_MACH_TIME_H])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([HAVE_HRTIME_T])
m4trace:configure.ac:141: -1- m4_pattern_allow([^HAVE_HRTIME_T$])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_HRTIME_T], [/* Define to 1 if hrtime_t is defined in <sys/time.h> */
@%:@undef HAVE_HRTIME_T])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_GETHRTIME], [/* Define to 1 if you have the `gethrtime\' function. */
@%:@undef HAVE_GETHRTIME])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_READ_REAL_TIME], [/* Define to 1 if you have the `read_real_time\' function. */
@%:@undef HAVE_READ_REAL_TIME])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_TIME_BASE_TO_TIME], [/* Define to 1 if you have the `time_base_to_time\' function. */
@%:@undef HAVE_TIME_BASE_TO_TIME])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_CLOCK_GETTIME], [/* Define to 1 if you have the `clock_gettime\' function. */
@%:@undef HAVE_CLOCK_GETTIME])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_MACH_ABSOLUTE_TIME], [/* Define to 1 if you have the `mach_absolute_time\' function. */
@%:@undef HAVE_MACH_ABSOLUTE_TIME])
m4trace:configure.ac:141: -1- _m4_warn([obsolete], [The macro `AC_TRY_LINK' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:2698: AC_TRY_LINK is expanded from...
config/support-rose.m4:1765: ROSE_SUPPORT_ROSE_PART_4 is expanded from...
configure.ac:141: the top level])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([HAVE__RTC])
m4trace:configure.ac:141: -1- m4_pattern_allow([^HAVE__RTC$])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE__RTC], [/* Define if you have the UNICOS _rtc() intrinsic. */
@%:@undef HAVE__RTC])
m4trace:configure.ac:141: -1- AC_SUBST([top_pwd])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([top_pwd])
m4trace:configure.ac:141: -1- m4_pattern_allow([^top_pwd$])
m4trace:configure.ac:141: -1- AC_SUBST([absolute_path_srcdir])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([absolute_path_srcdir])
m4trace:configure.ac:141: -1- m4_pattern_allow([^absolute_path_srcdir$])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([ROSE_SOURCE_TREE_PATH])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_SOURCE_TREE_PATH$])
m4trace:configure.ac:141: -1- AH_OUTPUT([ROSE_SOURCE_TREE_PATH], [/* Location of ROSE Source Tree. */
@%:@undef ROSE_SOURCE_TREE_PATH])
m4trace:configure.ac:141: -1- AC_SUBST([res_top_src])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([res_top_src])
m4trace:configure.ac:141: -1- m4_pattern_allow([^res_top_src$])
m4trace:configure.ac:141: -1- AC_SUBST([INCLUDE_COMPASS_MAKEFILE_INC])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([INCLUDE_COMPASS_MAKEFILE_INC])
m4trace:configure.ac:141: -1- m4_pattern_allow([^INCLUDE_COMPASS_MAKEFILE_INC$])
m4trace:configure.ac:141: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:207: AC_HELP_STRING is expanded from...
config/enable-rosehpct.m4:21: ACROSE_ENABLE_ROSEHPCT is expanded from...
config/support-rose.m4:1765: ROSE_SUPPORT_ROSE_PART_4 is expanded from...
configure.ac:141: the top level])
m4trace:configure.ac:141: -1- AC_SUBST([ROSEHPCT_DEP_INCLUDES])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSEHPCT_DEP_INCLUDES])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSEHPCT_DEP_INCLUDES$])
m4trace:configure.ac:141: -1- AC_SUBST([ROSEHPCT_DEP_LIBS])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSEHPCT_DEP_LIBS])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSEHPCT_DEP_LIBS$])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([ROSE_BUILD_ROSEHPCT], [test x"${acrose_enable_rosehpct}" = xyes])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_BUILD_ROSEHPCT_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_BUILD_ROSEHPCT_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_BUILD_ROSEHPCT_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_BUILD_ROSEHPCT_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_BUILD_ROSEHPCT_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_BUILD_ROSEHPCT_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_ROSEHPCT_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_BUILD_ROSEHPCT_FALSE])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([ROSE_COMPILE_TREE_PATH])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_COMPILE_TREE_PATH$])
m4trace:configure.ac:141: -1- AH_OUTPUT([ROSE_COMPILE_TREE_PATH], [/* Location of ROSE Compile Tree. */
@%:@undef ROSE_COMPILE_TREE_PATH])
m4trace:configure.ac:141: -1- AC_SUBST([QROSE_PREFIX])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([QROSE_PREFIX])
m4trace:configure.ac:141: -1- m4_pattern_allow([^QROSE_PREFIX$])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([ROSE_USE_QROSE], [test "x$with_QRose" != xno])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_USE_QROSE_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_USE_QROSE_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_USE_QROSE_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_USE_QROSE_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_USE_QROSE_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_USE_QROSE_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_USE_QROSE_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_USE_QROSE_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST([QT_INCLUDES])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([QT_INCLUDES])
m4trace:configure.ac:141: -1- m4_pattern_allow([^QT_INCLUDES$])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([ROSE_USE_QT], [test "$with_qt" != no])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_USE_QT_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_USE_QT_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_USE_QT_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_USE_QT_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_USE_QT_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_USE_QT_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_USE_QT_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_USE_QT_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST([QT_LDFLAGS])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([QT_LDFLAGS])
m4trace:configure.ac:141: -1- m4_pattern_allow([^QT_LDFLAGS$])
m4trace:configure.ac:141: -1- AC_SUBST([USING_WINDOWS])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([USING_WINDOWS])
m4trace:configure.ac:141: -1- m4_pattern_allow([^USING_WINDOWS$])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([QROSE_USE_MINGW32], [test $USING_MINGW32 = 1])
m4trace:configure.ac:141: -1- AC_SUBST([QROSE_USE_MINGW32_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([QROSE_USE_MINGW32_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^QROSE_USE_MINGW32_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([QROSE_USE_MINGW32_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([QROSE_USE_MINGW32_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^QROSE_USE_MINGW32_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([QROSE_USE_MINGW32_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([QROSE_USE_MINGW32_FALSE])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([QROSE_USE_WINDOWS], [test $USING_WINDOWS = 1])
m4trace:configure.ac:141: -1- AC_SUBST([QROSE_USE_WINDOWS_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([QROSE_USE_WINDOWS_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^QROSE_USE_WINDOWS_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([QROSE_USE_WINDOWS_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([QROSE_USE_WINDOWS_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^QROSE_USE_WINDOWS_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([QROSE_USE_WINDOWS_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([QROSE_USE_WINDOWS_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST([MOC])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([MOC])
m4trace:configure.ac:141: -1- m4_pattern_allow([^MOC$])
m4trace:configure.ac:141: -1- AC_SUBST([RCC])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([RCC])
m4trace:configure.ac:141: -1- m4_pattern_allow([^RCC$])
m4trace:configure.ac:141: -1- AC_SUBST([UIC])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([UIC])
m4trace:configure.ac:141: -1- m4_pattern_allow([^UIC$])
m4trace:configure.ac:141: -1- AC_SUBST([QT_VERSION])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([QT_VERSION])
m4trace:configure.ac:141: -1- m4_pattern_allow([^QT_VERSION$])
m4trace:configure.ac:141: -1- AC_SUBST([QT_VERSION_MAJOR])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([QT_VERSION_MAJOR])
m4trace:configure.ac:141: -1- m4_pattern_allow([^QT_VERSION_MAJOR$])
m4trace:configure.ac:141: -1- AC_SUBST([QT_VERSION_MINOR])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([QT_VERSION_MINOR])
m4trace:configure.ac:141: -1- m4_pattern_allow([^QT_VERSION_MINOR$])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([ROSE_WITH_ROSEQT], [test x"$with_roseQt" != x"no"])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_WITH_ROSEQT_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_WITH_ROSEQT_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_WITH_ROSEQT_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_WITH_ROSEQT_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_WITH_ROSEQT_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_WITH_ROSEQT_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_ROSEQT_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_ROSEQT_FALSE])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([ROSE_USE_QT], [test x"$with_qt" != x"no"])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_USE_QT_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_USE_QT_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_USE_QT_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_USE_QT_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_USE_QT_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_USE_QT_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_USE_QT_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_USE_QT_FALSE])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([HAVE_BOOST_IOSTREAMS])
m4trace:configure.ac:141: -1- m4_pattern_allow([^HAVE_BOOST_IOSTREAMS$])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_BOOST_IOSTREAMS], [/* define if the Boost::IOStreams library is available */
@%:@undef HAVE_BOOST_IOSTREAMS])
m4trace:configure.ac:141: -1- AC_SUBST([BOOST_IOSTREAMS_LIB])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([BOOST_IOSTREAMS_LIB])
m4trace:configure.ac:141: -1- m4_pattern_allow([^BOOST_IOSTREAMS_LIB$])
m4trace:configure.ac:141: -1- AC_SUBST([BOOST_IOSTREAMS_LIB])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([BOOST_IOSTREAMS_LIB])
m4trace:configure.ac:141: -1- m4_pattern_allow([^BOOST_IOSTREAMS_LIB$])
m4trace:configure.ac:141: -1- AC_SUBST([BOOST_IOSTREAMS_LIB])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([BOOST_IOSTREAMS_LIB])
m4trace:configure.ac:141: -1- m4_pattern_allow([^BOOST_IOSTREAMS_LIB$])
m4trace:configure.ac:141: -1- _m4_warn([syntax], [AC_LANG_CONFTEST: no AC_LANG_SOURCE call detected in body], [../../lib/autoconf/lang.m4:193: AC_LANG_CONFTEST is expanded from...
../../lib/autoconf/general.m4:2601: _AC_COMPILE_IFELSE is expanded from...
../../lib/autoconf/general.m4:2617: AC_COMPILE_IFELSE is expanded from...
../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
../../lib/autoconf/general.m4:2042: AC_CACHE_VAL is expanded from...
../../lib/autoconf/general.m4:2063: AC_CACHE_CHECK is expanded from...
config/ax_boost_serialization.m4:32: AX_BOOST_SERIALIZATION is expanded from...
config/support-binary.m4:32: ROSE_SUPPORT_BINARY is expanded from...
config/support-rose.m4:1765: ROSE_SUPPORT_ROSE_PART_4 is expanded from...
configure.ac:141: the top level])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([HAVE_BOOST_SERIALIZATION])
m4trace:configure.ac:141: -1- m4_pattern_allow([^HAVE_BOOST_SERIALIZATION$])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_BOOST_SERIALIZATION], [/* define if the boost::serialization headers are available */
@%:@undef HAVE_BOOST_SERIALIZATION])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([HAVE_BOOST_SERIALIZATION_LIB])
m4trace:configure.ac:141: -1- m4_pattern_allow([^HAVE_BOOST_SERIALIZATION_LIB$])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_BOOST_SERIALIZATION_LIB], [/* define if the libboost_serialization is available */
@%:@undef HAVE_BOOST_SERIALIZATION_LIB])
m4trace:configure.ac:141: -1- AC_SUBST([BOOST_SERIALIZATION_LIB])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([BOOST_SERIALIZATION_LIB])
m4trace:configure.ac:141: -1- m4_pattern_allow([^BOOST_SERIALIZATION_LIB$])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([HAVE_BOOST_SERIALIZATION_LIB])
m4trace:configure.ac:141: -1- m4_pattern_allow([^HAVE_BOOST_SERIALIZATION_LIB$])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_BOOST_SERIALIZATION_LIB], [/* define if the libboost_serialization is available */
@%:@undef HAVE_BOOST_SERIALIZATION_LIB])
m4trace:configure.ac:141: -1- AC_SUBST([BOOST_SERIALIZATION_LIB])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([BOOST_SERIALIZATION_LIB])
m4trace:configure.ac:141: -1- m4_pattern_allow([^BOOST_SERIALIZATION_LIB$])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([HAVE_BOOST_SERIALIZATION_LIB])
m4trace:configure.ac:141: -1- m4_pattern_allow([^HAVE_BOOST_SERIALIZATION_LIB$])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_BOOST_SERIALIZATION_LIB], [/* define if the libboost_serialization is available */
@%:@undef HAVE_BOOST_SERIALIZATION_LIB])
m4trace:configure.ac:141: -1- AC_SUBST([BOOST_SERIALIZATION_LIB])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([BOOST_SERIALIZATION_LIB])
m4trace:configure.ac:141: -1- m4_pattern_allow([^BOOST_SERIALIZATION_LIB$])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([ROSE_HAVE_BOOST_SERIALIZATION_LIB], [test "$BOOST_SERIALIZATION_LIB" != "" ])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_HAVE_BOOST_SERIALIZATION_LIB_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_HAVE_BOOST_SERIALIZATION_LIB_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_BOOST_SERIALIZATION_LIB_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_HAVE_BOOST_SERIALIZATION_LIB_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_HAVE_BOOST_SERIALIZATION_LIB_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_BOOST_SERIALIZATION_LIB_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_BOOST_SERIALIZATION_LIB_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_BOOST_SERIALIZATION_LIB_FALSE])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([ROSE_HAVE_LIBMAGIC])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBMAGIC$])
m4trace:configure.ac:141: -1- AH_OUTPUT([ROSE_HAVE_LIBMAGIC], [/* Defined when libmagic is available. */
@%:@undef ROSE_HAVE_LIBMAGIC])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([ROSE_HAVE_LIBMAGIC])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBMAGIC$])
m4trace:configure.ac:141: -1- AH_OUTPUT([ROSE_HAVE_LIBMAGIC], [/* Defined when libmagic is available. */
@%:@undef ROSE_HAVE_LIBMAGIC])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_LIBMAGIC_PREFIX])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_LIBMAGIC_PREFIX])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_LIBMAGIC_PREFIX$])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([ROSE_HAVE_LIBMAGIC], [test -n "$ROSE_HAVE_LIBMAGIC"])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_HAVE_LIBMAGIC_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_HAVE_LIBMAGIC_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBMAGIC_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_HAVE_LIBMAGIC_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_HAVE_LIBMAGIC_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBMAGIC_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_LIBMAGIC_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_LIBMAGIC_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_YICES])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_YICES])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_YICES$])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([ROSE_HAVE_LIBYICES])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBYICES$])
m4trace:configure.ac:141: -1- AH_OUTPUT([ROSE_HAVE_LIBYICES], [/* Defined when the Yices SMT-Solver library is present and should be used. */
@%:@undef ROSE_HAVE_LIBYICES])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_YICES])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_YICES])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_YICES$])
m4trace:configure.ac:141: -1- _m4_warn([cross], [cannot check for file existence when cross compiling], [../../lib/autoconf/general.m4:2788: AC_CHECK_FILE is expanded from...
config/support-yices.m4:2: ROSE_SUPPORT_YICES is expanded from...
config/support-binary.m4:32: ROSE_SUPPORT_BINARY is expanded from...
config/support-rose.m4:1765: ROSE_SUPPORT_ROSE_PART_4 is expanded from...
configure.ac:141: the top level])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([ROSE_HAVE_LIBYICES])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBYICES$])
m4trace:configure.ac:141: -1- AH_OUTPUT([ROSE_HAVE_LIBYICES], [/* Defined when the Yices SMT-Solver library is present and should be used. */
@%:@undef ROSE_HAVE_LIBYICES])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([ROSE_YICES])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_YICES$])
m4trace:configure.ac:141: -1- AH_OUTPUT([ROSE_YICES], [/* Absolute name of yices executable, or the empty string. */
@%:@undef ROSE_YICES])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_YICES])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_YICES])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_YICES$])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_YICES_PREFIX])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_YICES_PREFIX])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_YICES_PREFIX$])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([ROSE_HAVE_LIBYICES], [test -n "$ROSE_HAVE_LIBYICES"])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_HAVE_LIBYICES_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_HAVE_LIBYICES_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBYICES_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_HAVE_LIBYICES_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_HAVE_LIBYICES_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBYICES_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_LIBYICES_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_LIBYICES_FALSE])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([ROSE_HAVE_YICES], [test -n "$ROSE_YICES"])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_HAVE_YICES_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_HAVE_YICES_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_YICES_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_HAVE_YICES_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_HAVE_YICES_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_YICES_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_YICES_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_YICES_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_YAML_PREFIX])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_YAML_PREFIX])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_YAML_PREFIX$])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([ROSE_HAVE_LIBYAML], [test -n "$ROSE_HAVE_LIBYAML"])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_HAVE_LIBYAML_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_HAVE_LIBYAML_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBYAML_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_HAVE_LIBYAML_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_HAVE_LIBYAML_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBYAML_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_LIBYAML_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_LIBYAML_FALSE])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([ROSE_HAVE_LIBYAML])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBYAML$])
m4trace:configure.ac:141: -1- AH_OUTPUT([ROSE_HAVE_LIBYAML], [/* Defined when libyaml-cpp is available */
@%:@undef ROSE_HAVE_LIBYAML])
m4trace:configure.ac:141: -1- _m4_warn([cross], [cannot check for file existence when cross compiling], [../../lib/autoconf/general.m4:2788: AC_CHECK_FILE is expanded from...
config/support-readline.m4:3: ROSE_SUPPORT_LIBREADLINE is expanded from...
config/support-binary.m4:32: ROSE_SUPPORT_BINARY is expanded from...
config/support-rose.m4:1765: ROSE_SUPPORT_ROSE_PART_4 is expanded from...
configure.ac:141: the top level])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([ROSE_WITH_LIBREADLINE], [test "$LIBREADLINE_INCLUDE_PATH" != "" && test "$LIBREADLINE_LIBRARY_PATH" != ""])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_WITH_LIBREADLINE_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_WITH_LIBREADLINE_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_WITH_LIBREADLINE_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_WITH_LIBREADLINE_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_WITH_LIBREADLINE_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_WITH_LIBREADLINE_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_LIBREADLINE_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_LIBREADLINE_FALSE])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([ROSE_WITH_LIBREADLINE_INCLUDE], [test "$LIBREADLINE_INCLUDE_PATH" != ""])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_WITH_LIBREADLINE_INCLUDE_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_WITH_LIBREADLINE_INCLUDE_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_WITH_LIBREADLINE_INCLUDE_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_WITH_LIBREADLINE_INCLUDE_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_WITH_LIBREADLINE_INCLUDE_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_WITH_LIBREADLINE_INCLUDE_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_LIBREADLINE_INCLUDE_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_WITH_LIBREADLINE_INCLUDE_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST([LIBREADLINE_INSTALL_PATH])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([LIBREADLINE_INSTALL_PATH])
m4trace:configure.ac:141: -1- m4_pattern_allow([^LIBREADLINE_INSTALL_PATH$])
m4trace:configure.ac:141: -1- AC_SUBST([LIBREADLINE_INCLUDE_PATH])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([LIBREADLINE_INCLUDE_PATH])
m4trace:configure.ac:141: -1- m4_pattern_allow([^LIBREADLINE_INCLUDE_PATH$])
m4trace:configure.ac:141: -1- AC_SUBST([LIBREADLINE_LIBRARY_PATH])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([LIBREADLINE_LIBRARY_PATH])
m4trace:configure.ac:141: -1- m4_pattern_allow([^LIBREADLINE_LIBRARY_PATH$])
m4trace:configure.ac:141: -1- AC_SUBST([LIBREADLINE_LIBS])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([LIBREADLINE_LIBS])
m4trace:configure.ac:141: -1- m4_pattern_allow([^LIBREADLINE_LIBS$])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([ROSE_HAVE_LIBREADLINE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBREADLINE$])
m4trace:configure.ac:141: -1- AH_OUTPUT([ROSE_HAVE_LIBREADLINE], [/* Defined if the readline library and headers are available. */
@%:@undef ROSE_HAVE_LIBREADLINE])
m4trace:configure.ac:141: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:207: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1473: AC_ARG_ENABLE is expanded from...
config/support-i386.m4:4: ROSE_SUPPORT_I386 is expanded from...
config/support-binary.m4:32: ROSE_SUPPORT_BINARY is expanded from...
config/support-rose.m4:1765: ROSE_SUPPORT_ROSE_PART_4 is expanded from...
configure.ac:141: the top level])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([ENABLE_I386], [test "$ac_cv_enable_i386" != no])
m4trace:configure.ac:141: -1- AC_SUBST([ENABLE_I386_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ENABLE_I386_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ENABLE_I386_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([ENABLE_I386_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ENABLE_I386_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ENABLE_I386_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ENABLE_I386_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ENABLE_I386_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST([CFLAGS32])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([CFLAGS32])
m4trace:configure.ac:141: -1- m4_pattern_allow([^CFLAGS32$])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([USE_ROSE_SAT_SUPPORT])
m4trace:configure.ac:141: -1- m4_pattern_allow([^USE_ROSE_SAT_SUPPORT$])
m4trace:configure.ac:141: -1- AH_OUTPUT([USE_ROSE_SAT_SUPPORT], [/* Controls use of ROSE support for internal Satisfiability (SAT) Solver. */
@%:@undef USE_ROSE_SAT_SUPPORT])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([ROSE_USE_SAT], [test ! "$with_sat" = no])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_USE_SAT_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_USE_SAT_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_USE_SAT_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_USE_SAT_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_USE_SAT_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_USE_SAT_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_USE_SAT_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_USE_SAT_FALSE])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([USE_ROSE_INTEL_PIN_SUPPORT])
m4trace:configure.ac:141: -1- m4_pattern_allow([^USE_ROSE_INTEL_PIN_SUPPORT$])
m4trace:configure.ac:141: -1- AH_OUTPUT([USE_ROSE_INTEL_PIN_SUPPORT], [/* Controls use of ROSE support for Intel Pin Dynamic Instrumentation Package.
   */
@%:@undef USE_ROSE_INTEL_PIN_SUPPORT])
m4trace:configure.ac:141: -1- AC_SUBST([IntelPin_path])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([IntelPin_path])
m4trace:configure.ac:141: -1- m4_pattern_allow([^IntelPin_path$])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([ROSE_USE_INTEL_PIN], [test ! "$with_IntelPin" = no])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_USE_INTEL_PIN_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_USE_INTEL_PIN_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_USE_INTEL_PIN_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_USE_INTEL_PIN_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_USE_INTEL_PIN_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_USE_INTEL_PIN_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_USE_INTEL_PIN_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_USE_INTEL_PIN_FALSE])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([ROSE_HAVE_LIBELF])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBELF$])
m4trace:configure.ac:141: -1- AH_OUTPUT([ROSE_HAVE_LIBELF], [/* Defined when libelf is available. */
@%:@undef ROSE_HAVE_LIBELF])
m4trace:configure.ac:141: -1- _m4_warn([cross], [cannot check for file existence when cross compiling], [../../lib/autoconf/general.m4:2788: AC_CHECK_FILE is expanded from...
config/support-elf.m4:2: ROSE_SUPPORT_ELF is expanded from...
config/support-binary.m4:32: ROSE_SUPPORT_BINARY is expanded from...
config/support-rose.m4:1765: ROSE_SUPPORT_ROSE_PART_4 is expanded from...
configure.ac:141: the top level])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([ROSE_HAVE_LIBELF])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBELF$])
m4trace:configure.ac:141: -1- AH_OUTPUT([ROSE_HAVE_LIBELF], [/* Defined when libelf is available. */
@%:@undef ROSE_HAVE_LIBELF])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([ROSE_HAVE_LIBELF], [test -n "$ROSE_HAVE_LIBELF"])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_HAVE_LIBELF_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_HAVE_LIBELF_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBELF_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_HAVE_LIBELF_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_HAVE_LIBELF_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBELF_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_LIBELF_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_LIBELF_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST([LIBELF_PREFIX])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([LIBELF_PREFIX])
m4trace:configure.ac:141: -1- m4_pattern_allow([^LIBELF_PREFIX$])
m4trace:configure.ac:141: -1- AC_SUBST([LIBELF_CPPFLAGS])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([LIBELF_CPPFLAGS])
m4trace:configure.ac:141: -1- m4_pattern_allow([^LIBELF_CPPFLAGS$])
m4trace:configure.ac:141: -1- AC_SUBST([LIBELF_LDFLAGS])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([LIBELF_LDFLAGS])
m4trace:configure.ac:141: -1- m4_pattern_allow([^LIBELF_LDFLAGS$])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([ROSE_HAVE_LIBDWARF])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBDWARF$])
m4trace:configure.ac:141: -1- AH_OUTPUT([ROSE_HAVE_LIBDWARF], [/* Defined when libdwarf is available. */
@%:@undef ROSE_HAVE_LIBDWARF])
m4trace:configure.ac:141: -1- _m4_warn([cross], [cannot check for file existence when cross compiling], [../../lib/autoconf/general.m4:2788: AC_CHECK_FILE is expanded from...
config/support-dwarf.m4:2: ROSE_SUPPORT_DWARF is expanded from...
config/support-binary.m4:32: ROSE_SUPPORT_BINARY is expanded from...
config/support-rose.m4:1765: ROSE_SUPPORT_ROSE_PART_4 is expanded from...
configure.ac:141: the top level])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([ROSE_HAVE_LIBDWARF])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBDWARF$])
m4trace:configure.ac:141: -1- AH_OUTPUT([ROSE_HAVE_LIBDWARF], [/* Defined when libdwarf is available. */
@%:@undef ROSE_HAVE_LIBDWARF])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([ROSE_HAVE_LIBDWARF], [test -n "$ROSE_HAVE_LIBDWARF"])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_HAVE_LIBDWARF_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_HAVE_LIBDWARF_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBDWARF_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_HAVE_LIBDWARF_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_HAVE_LIBDWARF_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBDWARF_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_LIBDWARF_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_LIBDWARF_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST([LIBDWARF_PREFIX])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([LIBDWARF_PREFIX])
m4trace:configure.ac:141: -1- m4_pattern_allow([^LIBDWARF_PREFIX$])
m4trace:configure.ac:141: -1- AC_SUBST([LIBDWARF_CPPFLAGS])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([LIBDWARF_CPPFLAGS])
m4trace:configure.ac:141: -1- m4_pattern_allow([^LIBDWARF_CPPFLAGS$])
m4trace:configure.ac:141: -1- AC_SUBST([LIBDWARF_LDFLAGS])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([LIBDWARF_LDFLAGS])
m4trace:configure.ac:141: -1- m4_pattern_allow([^LIBDWARF_LDFLAGS$])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([ROSE_USE_ETHER])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_USE_ETHER$])
m4trace:configure.ac:141: -1- AH_OUTPUT([ROSE_USE_ETHER], [/* Defined if Ether from Georgia Tech is available. */
@%:@undef ROSE_USE_ETHER])
m4trace:configure.ac:141: -1- AC_SUBST([ETHER_PREFIX])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ETHER_PREFIX])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ETHER_PREFIX$])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([ROSE_USE_ETHER], [test "$with_ether" != "no"])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_USE_ETHER_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_USE_ETHER_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_USE_ETHER_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_USE_ETHER_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_USE_ETHER_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_USE_ETHER_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_USE_ETHER_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_USE_ETHER_FALSE])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([ROSE_HAVE_LIBGCRYPT])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBGCRYPT$])
m4trace:configure.ac:141: -1- AH_OUTPUT([ROSE_HAVE_LIBGCRYPT], [/* Defined when libgcrypt is available. */
@%:@undef ROSE_HAVE_LIBGCRYPT])
m4trace:configure.ac:141: -1- _m4_warn([cross], [cannot check for file existence when cross compiling], [../../lib/autoconf/general.m4:2788: AC_CHECK_FILE is expanded from...
config/support-gcrypt.m4:1: ROSE_SUPPORT_LIBGCRYPT is expanded from...
config/support-binary.m4:32: ROSE_SUPPORT_BINARY is expanded from...
config/support-rose.m4:1765: ROSE_SUPPORT_ROSE_PART_4 is expanded from...
configure.ac:141: the top level])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([ROSE_HAVE_LIBGCRYPT])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBGCRYPT$])
m4trace:configure.ac:141: -1- AH_OUTPUT([ROSE_HAVE_LIBGCRYPT], [/* Defined when libgcrypt is available. */
@%:@undef ROSE_HAVE_LIBGCRYPT])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([ROSE_HAVE_LIBGCRYPT], [test -n "$ROSE_HAVE_LIBGCRYPT"])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_HAVE_LIBGCRYPT_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_HAVE_LIBGCRYPT_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBGCRYPT_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_HAVE_LIBGCRYPT_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_HAVE_LIBGCRYPT_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBGCRYPT_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_LIBGCRYPT_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_LIBGCRYPT_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST([LIBGCRYPT_PREFIX])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([LIBGCRYPT_PREFIX])
m4trace:configure.ac:141: -1- m4_pattern_allow([^LIBGCRYPT_PREFIX$])
m4trace:configure.ac:141: -1- AC_SUBST([LIBGCRYPT_CPPFLAGS])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([LIBGCRYPT_CPPFLAGS])
m4trace:configure.ac:141: -1- m4_pattern_allow([^LIBGCRYPT_CPPFLAGS$])
m4trace:configure.ac:141: -1- AC_SUBST([LIBGCRYPT_LDFLAGS])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([LIBGCRYPT_LDFLAGS])
m4trace:configure.ac:141: -1- m4_pattern_allow([^LIBGCRYPT_LDFLAGS$])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([ROSE_HAVE_DLIB])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_DLIB$])
m4trace:configure.ac:141: -1- AH_OUTPUT([ROSE_HAVE_DLIB], [/* Defined if dlib is available. */
@%:@undef ROSE_HAVE_DLIB])
m4trace:configure.ac:141: -1- AC_SUBST([DLIB_PREFIX])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([DLIB_PREFIX])
m4trace:configure.ac:141: -1- m4_pattern_allow([^DLIB_PREFIX$])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([ROSE_HAVE_DLIB], [test "$with_dlib" != "no"])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_HAVE_DLIB_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_HAVE_DLIB_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_DLIB_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_HAVE_DLIB_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_HAVE_DLIB_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_DLIB_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_DLIB_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_DLIB_FALSE])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_PTHREAD_H], [/* Define to 1 if you have the <pthread.h> header file. */
@%:@undef HAVE_PTHREAD_H])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([HAVE_PTHREAD_H])
m4trace:configure.ac:141: -1- m4_pattern_allow([^HAVE_PTHREAD_H$])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_ASM_LDT_H], [/* Define to 1 if you have the <asm/ldt.h> header file. */
@%:@undef HAVE_ASM_LDT_H])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_ELF_H], [/* Define to 1 if you have the <elf.h> header file. */
@%:@undef HAVE_ELF_H])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_LINUX_TYPES_H], [/* Define to 1 if you have the <linux/types.h> header file. */
@%:@undef HAVE_LINUX_TYPES_H])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_LINUX_DIRENT_H], [/* Define to 1 if you have the <linux/dirent.h> header file. */
@%:@undef HAVE_LINUX_DIRENT_H])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_LINUX_UNISTD_H], [/* Define to 1 if you have the <linux/unistd.h> header file. */
@%:@undef HAVE_LINUX_UNISTD_H])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_SYS_TYPES_H], [/* Define to 1 if you have the <sys/types.h> header file. */
@%:@undef HAVE_SYS_TYPES_H])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_SYS_MMAN_H], [/* Define to 1 if you have the <sys/mman.h> header file. */
@%:@undef HAVE_SYS_MMAN_H])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_SYS_STAT_H], [/* Define to 1 if you have the <sys/stat.h> header file. */
@%:@undef HAVE_SYS_STAT_H])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_SYS_UIO_H], [/* Define to 1 if you have the <sys/uio.h> header file. */
@%:@undef HAVE_SYS_UIO_H])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_SYS_WAIT_H], [/* Define to 1 if you have the <sys/wait.h> header file. */
@%:@undef HAVE_SYS_WAIT_H])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_SYS_UTSNAME_H], [/* Define to 1 if you have the <sys/utsname.h> header file. */
@%:@undef HAVE_SYS_UTSNAME_H])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_SYS_IOCTL_H], [/* Define to 1 if you have the <sys/ioctl.h> header file. */
@%:@undef HAVE_SYS_IOCTL_H])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_SYS_SYSINFO_H], [/* Define to 1 if you have the <sys/sysinfo.h> header file. */
@%:@undef HAVE_SYS_SYSINFO_H])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_SYS_SOCKET_H], [/* Define to 1 if you have the <sys/socket.h> header file. */
@%:@undef HAVE_SYS_SOCKET_H])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_TERMIOS_H], [/* Define to 1 if you have the <termios.h> header file. */
@%:@undef HAVE_TERMIOS_H])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_GRP_H], [/* Define to 1 if you have the <grp.h> header file. */
@%:@undef HAVE_GRP_H])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_SYSCALL_H], [/* Define to 1 if you have the <syscall.h> header file. */
@%:@undef HAVE_SYSCALL_H])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_SYS_PERSONALITY_H], [/* Define to 1 if you have the <sys/personality.h> header file. */
@%:@undef HAVE_SYS_PERSONALITY_H])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_PIPE2], [/* Define to 1 if you have the `pipe2\' function. */
@%:@undef HAVE_PIPE2])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([HAVE_PIPE2])
m4trace:configure.ac:141: -1- m4_pattern_allow([^HAVE_PIPE2$])
m4trace:configure.ac:141: -2- AC_DEFINE_TRACE_LITERAL([HAVE_USER_DESC])
m4trace:configure.ac:141: -2- m4_pattern_allow([^HAVE_USER_DESC$])
m4trace:configure.ac:141: -2- AH_OUTPUT([HAVE_USER_DESC], [/* Defined if the user_desc type is declared in <asm/ldt.h> */
@%:@undef HAVE_USER_DESC])
m4trace:configure.ac:141: -1- _m4_warn([obsolete], [The macro `AC_CHECKING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:2277: AC_CHECKING is expanded from...
config/support-libpqxx.m4:2: ROSE_SUPPORT_LIBPQXX is expanded from...
config/support-binary.m4:32: ROSE_SUPPORT_BINARY is expanded from...
config/support-rose.m4:1765: ROSE_SUPPORT_ROSE_PART_4 is expanded from...
configure.ac:141: the top level])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([ROSE_HAVE_LIBPQXX])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBPQXX$])
m4trace:configure.ac:141: -1- AH_OUTPUT([ROSE_HAVE_LIBPQXX], [/* Defined if the pqxx library is available */
@%:@undef ROSE_HAVE_LIBPQXX])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_LIBPQXX_PREFIX])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_LIBPQXX_PREFIX])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_LIBPQXX_PREFIX$])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([ROSE_HAVE_LIBPQXX], [test -n "$ROSE_HAVE_LIBPQXX"])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_HAVE_LIBPQXX_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_HAVE_LIBPQXX_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBPQXX_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_HAVE_LIBPQXX_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_HAVE_LIBPQXX_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_LIBPQXX_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_LIBPQXX_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_LIBPQXX_FALSE])
m4trace:configure.ac:141: -2- _m4_warn([obsolete], [The macro `AC_ERROR' is obsolete.
You should run autoupdate.], [../../lib/autoconf/oldnames.m4:34: AC_ERROR is expanded from...
config/support-binary.m4:32: ROSE_SUPPORT_BINARY is expanded from...
config/support-rose.m4:1765: ROSE_SUPPORT_ROSE_PART_4 is expanded from...
configure.ac:141: the top level])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([ROSE_USE_TEST_SMT_SOLVER], [test ! "$TEST_SMT_SOLVER" = ""])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_USE_TEST_SMT_SOLVER_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_USE_TEST_SMT_SOLVER_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_USE_TEST_SMT_SOLVER_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_USE_TEST_SMT_SOLVER_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_USE_TEST_SMT_SOLVER_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_USE_TEST_SMT_SOLVER_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_USE_TEST_SMT_SOLVER_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_USE_TEST_SMT_SOLVER_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST([TEST_SMT_SOLVER])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([TEST_SMT_SOLVER])
m4trace:configure.ac:141: -1- m4_pattern_allow([^TEST_SMT_SOLVER$])
m4trace:configure.ac:141: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:207: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1492: AC_ARG_WITH is expanded from...
config/support-capstone.m4:2: ROSE_SUPPORT_CAPSTONE is expanded from...
config/support-binary.m4:32: ROSE_SUPPORT_BINARY is expanded from...
config/support-rose.m4:1765: ROSE_SUPPORT_ROSE_PART_4 is expanded from...
configure.ac:141: the top level])
m4trace:configure.ac:141: -1- _m4_warn([obsolete], [The macro `AC_CHECKING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:2277: AC_CHECKING is expanded from...
config/support-capstone.m4:2: ROSE_SUPPORT_CAPSTONE is expanded from...
config/support-binary.m4:32: ROSE_SUPPORT_BINARY is expanded from...
config/support-rose.m4:1765: ROSE_SUPPORT_ROSE_PART_4 is expanded from...
configure.ac:141: the top level])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([ROSE_HAVE_CAPSTONE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_CAPSTONE$])
m4trace:configure.ac:141: -1- AH_OUTPUT([ROSE_HAVE_CAPSTONE], [/* Defined if the Capstone library is available */
@%:@undef ROSE_HAVE_CAPSTONE])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_CAPSTONE_PREFIX])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_CAPSTONE_PREFIX])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_CAPSTONE_PREFIX$])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([ROSE_HAVE_CAPSTONE], [test -n "$ROSE_HAVE_CAPSTONE"])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_HAVE_CAPSTONE_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_HAVE_CAPSTONE_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_CAPSTONE_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_HAVE_CAPSTONE_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_HAVE_CAPSTONE_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_HAVE_CAPSTONE_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_CAPSTONE_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_HAVE_CAPSTONE_FALSE])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([ROSE_ENABLE_PYTHON_API])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_ENABLE_PYTHON_API$])
m4trace:configure.ac:141: -1- AH_OUTPUT([ROSE_ENABLE_PYTHON_API], [/* Define if you want a Python API */
@%:@undef ROSE_ENABLE_PYTHON_API])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([ROSE_ENABLE_PYTHON_API], [test "$enabled" = yes])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_ENABLE_PYTHON_API_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_ENABLE_PYTHON_API_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_ENABLE_PYTHON_API_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_ENABLE_PYTHON_API_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_ENABLE_PYTHON_API_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_ENABLE_PYTHON_API_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_ENABLE_PYTHON_API_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_ENABLE_PYTHON_API_FALSE])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_NUMA_H], [/* Define to 1 if you have the <numa.h> header file. */
@%:@undef HAVE_NUMA_H])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([HAVE_NUMA_H])
m4trace:configure.ac:141: -1- m4_pattern_allow([^HAVE_NUMA_H$])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([HAVE_NUMA_H])
m4trace:configure.ac:141: -1- m4_pattern_allow([^HAVE_NUMA_H$])
m4trace:configure.ac:141: -1- AH_OUTPUT([HAVE_NUMA_H], [/* Support for libnuma a NUMA memory allocation library for many-core
   optimizations */
@%:@undef HAVE_NUMA_H])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([ROSE_USE_LIBNUMA], [test "x$found_libnuma" = xyes])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_USE_LIBNUMA_TRUE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_USE_LIBNUMA_TRUE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_USE_LIBNUMA_TRUE$])
m4trace:configure.ac:141: -1- AC_SUBST([ROSE_USE_LIBNUMA_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([ROSE_USE_LIBNUMA_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ROSE_USE_LIBNUMA_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_USE_LIBNUMA_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ROSE_USE_LIBNUMA_FALSE])
m4trace:configure.ac:141: -1- AC_SUBST([PACKAGE_VERSION_NUMERIC])
m4trace:configure.ac:141: -1- AC_SUBST_TRACE([PACKAGE_VERSION_NUMERIC])
m4trace:configure.ac:141: -1- m4_pattern_allow([^PACKAGE_VERSION_NUMERIC$])
m4trace:configure.ac:141: -1- AC_DEFINE_TRACE_LITERAL([CONFIG_ROSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^CONFIG_ROSE$])
m4trace:configure.ac:141: -1- AH_OUTPUT([CONFIG_ROSE], [/* Always defined and used for checking whether global CPP namespace is
   polluted */
@%:@undef CONFIG_ROSE])
m4trace:configure.ac:142: -1- AC_CONFIG_SUBDIRS([libltdl])
m4trace:configure.ac:142: -1- AC_SUBST([subdirs], ["$subdirs m4_normalize([libltdl])"])
m4trace:configure.ac:142: -1- AC_SUBST_TRACE([subdirs])
m4trace:configure.ac:142: -1- m4_pattern_allow([^subdirs$])
m4trace:configure.ac:142: -1- _AM_COND_IF([ROSE_HAS_EDG_SOURCE])
m4trace:configure.ac:142: -1- AC_CONFIG_FILES([
src/frontend/CxxFrontend/EDG/Makefile
src/frontend/CxxFrontend/EDG/EDG_4.12/Makefile
src/frontend/CxxFrontend/EDG/EDG_4.12/misc/Makefile
src/frontend/CxxFrontend/EDG/EDG_4.12/src/Makefile
src/frontend/CxxFrontend/EDG/EDG_4.12/src/disp/Makefile
src/frontend/CxxFrontend/EDG/EDG_4.12/lib/Makefile
src/frontend/CxxFrontend/EDG/EDG_5.0/Makefile
src/frontend/CxxFrontend/EDG/EDG_5.0/misc/Makefile
src/frontend/CxxFrontend/EDG/EDG_5.0/src/Makefile
src/frontend/CxxFrontend/EDG/EDG_5.0/src/disp/Makefile
src/frontend/CxxFrontend/EDG/EDG_5.0/lib/Makefile
src/frontend/CxxFrontend/EDG/EDG_6.0/Makefile
src/frontend/CxxFrontend/EDG/EDG_6.0/misc/Makefile
src/frontend/CxxFrontend/EDG/EDG_6.0/src/Makefile
src/frontend/CxxFrontend/EDG/EDG_6.0/src/disp/Makefile
src/frontend/CxxFrontend/EDG/EDG_6.0/lib/Makefile
src/frontend/CxxFrontend/EDG/EDG_6.1/Makefile
src/frontend/CxxFrontend/EDG/EDG_6.1/misc/Makefile
src/frontend/CxxFrontend/EDG/EDG_6.1/src/Makefile
src/frontend/CxxFrontend/EDG/EDG_6.1/src/disp/Makefile
src/frontend/CxxFrontend/EDG/EDG_6.1/lib/Makefile
src/frontend/CxxFrontend/EDG/edgRose/Makefile
])
m4trace:configure.ac:142: -1- _AM_COND_ENDIF([ROSE_HAS_EDG_SOURCE])
m4trace:configure.ac:143: -1- AC_SUBST([OPTIONAL_PROJECTS])
m4trace:configure.ac:143: -1- AC_SUBST_TRACE([OPTIONAL_PROJECTS])
m4trace:configure.ac:143: -1- m4_pattern_allow([^OPTIONAL_PROJECTS$])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/AMReX-Translation/Makefile])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/AMReX-Translation/AmrexF2Cxx.sh:projects/AMReX-Translation/AmrexF2Cxx.sh], [chmod ugo+x projects/AMReX-Translation/AmrexF2Cxx.sh])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/AMReX-Translation/support/include/amrex.hpp:projects/AMReX-Translation/support/include/amrex.hpp])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/AMReX-Translation/support/blueprint/empty_cxx_amrex.cc:projects/AMReX-Translation/support/blueprint/empty_cxx_amrex.cc])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/BinaryAnalysisTools/Makefile])
m4trace:configure.ac:143: -1- AC_DEFINE_TRACE_LITERAL([ROSE_USE_WT])
m4trace:configure.ac:143: -1- m4_pattern_allow([^ROSE_USE_WT$])
m4trace:configure.ac:143: -1- AH_OUTPUT([ROSE_USE_WT], [/* Defined if the web toolkit Wt is available. */
@%:@undef ROSE_USE_WT])
m4trace:configure.ac:143: -1- AC_SUBST([WT_PREFIX])
m4trace:configure.ac:143: -1- AC_SUBST_TRACE([WT_PREFIX])
m4trace:configure.ac:143: -1- m4_pattern_allow([^WT_PREFIX$])
m4trace:configure.ac:143: -1- AM_CONDITIONAL([ROSE_USE_WT], [test "$with_wt" != "no"])
m4trace:configure.ac:143: -1- AC_SUBST([ROSE_USE_WT_TRUE])
m4trace:configure.ac:143: -1- AC_SUBST_TRACE([ROSE_USE_WT_TRUE])
m4trace:configure.ac:143: -1- m4_pattern_allow([^ROSE_USE_WT_TRUE$])
m4trace:configure.ac:143: -1- AC_SUBST([ROSE_USE_WT_FALSE])
m4trace:configure.ac:143: -1- AC_SUBST_TRACE([ROSE_USE_WT_FALSE])
m4trace:configure.ac:143: -1- m4_pattern_allow([^ROSE_USE_WT_FALSE$])
m4trace:configure.ac:143: -1- _AM_SUBST_NOTMAKE([ROSE_USE_WT_TRUE])
m4trace:configure.ac:143: -1- _AM_SUBST_NOTMAKE([ROSE_USE_WT_FALSE])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/CodeProperties/Makefile])
m4trace:configure.ac:143: -1- AM_CONDITIONAL([ROSE_ENABLE_PROJECT_CODE_PROPERTIES], [test "$rose_enable_project_code_properties" = yes])
m4trace:configure.ac:143: -1- AC_SUBST([ROSE_ENABLE_PROJECT_CODE_PROPERTIES_TRUE])
m4trace:configure.ac:143: -1- AC_SUBST_TRACE([ROSE_ENABLE_PROJECT_CODE_PROPERTIES_TRUE])
m4trace:configure.ac:143: -1- m4_pattern_allow([^ROSE_ENABLE_PROJECT_CODE_PROPERTIES_TRUE$])
m4trace:configure.ac:143: -1- AC_SUBST([ROSE_ENABLE_PROJECT_CODE_PROPERTIES_FALSE])
m4trace:configure.ac:143: -1- AC_SUBST_TRACE([ROSE_ENABLE_PROJECT_CODE_PROPERTIES_FALSE])
m4trace:configure.ac:143: -1- m4_pattern_allow([^ROSE_ENABLE_PROJECT_CODE_PROPERTIES_FALSE$])
m4trace:configure.ac:143: -1- _AM_SUBST_NOTMAKE([ROSE_ENABLE_PROJECT_CODE_PROPERTIES_TRUE])
m4trace:configure.ac:143: -1- _AM_SUBST_NOTMAKE([ROSE_ENABLE_PROJECT_CODE_PROPERTIES_FALSE])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/CodeThorn/Makefile
		projects/CodeThorn/src/Makefile])
m4trace:configure.ac:143: -1- AM_CONDITIONAL([ROSE_ENABLE_PROJECT_CODETHORN], [test "$rose_enable_project_CodeThorn" = yes])
m4trace:configure.ac:143: -1- AC_SUBST([ROSE_ENABLE_PROJECT_CODETHORN_TRUE])
m4trace:configure.ac:143: -1- AC_SUBST_TRACE([ROSE_ENABLE_PROJECT_CODETHORN_TRUE])
m4trace:configure.ac:143: -1- m4_pattern_allow([^ROSE_ENABLE_PROJECT_CODETHORN_TRUE$])
m4trace:configure.ac:143: -1- AC_SUBST([ROSE_ENABLE_PROJECT_CODETHORN_FALSE])
m4trace:configure.ac:143: -1- AC_SUBST_TRACE([ROSE_ENABLE_PROJECT_CODETHORN_FALSE])
m4trace:configure.ac:143: -1- m4_pattern_allow([^ROSE_ENABLE_PROJECT_CODETHORN_FALSE$])
m4trace:configure.ac:143: -1- _AM_SUBST_NOTMAKE([ROSE_ENABLE_PROJECT_CODETHORN_TRUE])
m4trace:configure.ac:143: -1- _AM_SUBST_NOTMAKE([ROSE_ENABLE_PROJECT_CODETHORN_FALSE])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/MatlabTranslation/Makefile])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/MatlabTranslation/src/Makefile])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/MatlabTranslation/tests/Makefile])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/MatlabTranslation/M2Cxx.sh:projects/MatlabTranslation/M2Cxx.sh], [chmod ugo+x projects/MatlabTranslation/M2Cxx.sh])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/MatlabTranslation/support/armadillo/builtins.h:projects/MatlabTranslation/support/armadillo/builtins.h])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/MatlabTranslation/support/armadillo/fastnumerics.h:projects/MatlabTranslation/support/armadillo/fastnumerics.h])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/MatlabTranslation/support/armadillo/Matrix.h:projects/MatlabTranslation/support/armadillo/Matrix.h])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/MatlabTranslation/support/cxx-stub/builtins.h:projects/MatlabTranslation/support/cxx-stub/builtins.h])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/MatlabTranslation/support/cxx-stub/fastnumerics.h:projects/MatlabTranslation/support/cxx-stub/fastnumerics.h])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/MatlabTranslation/support/cxx-stub/Matrix.h:projects/MatlabTranslation/support/cxx-stub/Matrix.h])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/MatlabTranslation/support/matlab/builtins.m:projects/MatlabTranslation/support/matlab/builtins.m])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/MatlabTranslation/support/blueprint/Makefile.default:projects/MatlabTranslation/support/blueprint/Makefile.default])
m4trace:configure.ac:143: -1- AC_DEFINE_TRACE_LITERAL([ROSE_MATLAB_USE_ARMADILLO])
m4trace:configure.ac:143: -1- m4_pattern_allow([^ROSE_MATLAB_USE_ARMADILLO$])
m4trace:configure.ac:143: -1- AH_OUTPUT([ROSE_MATLAB_USE_ARMADILLO], [/* Defined if the Armadillo library is available. */
@%:@undef ROSE_MATLAB_USE_ARMADILLO])
m4trace:configure.ac:143: -1- AC_SUBST([ARMA_PREFIX])
m4trace:configure.ac:143: -1- AC_SUBST_TRACE([ARMA_PREFIX])
m4trace:configure.ac:143: -1- m4_pattern_allow([^ARMA_PREFIX$])
m4trace:configure.ac:143: -1- AM_CONDITIONAL([ROSE_MATLAB_USE_ARMADILLO], [test "$with_armadillo" != "no"])
m4trace:configure.ac:143: -1- AC_SUBST([ROSE_MATLAB_USE_ARMADILLO_TRUE])
m4trace:configure.ac:143: -1- AC_SUBST_TRACE([ROSE_MATLAB_USE_ARMADILLO_TRUE])
m4trace:configure.ac:143: -1- m4_pattern_allow([^ROSE_MATLAB_USE_ARMADILLO_TRUE$])
m4trace:configure.ac:143: -1- AC_SUBST([ROSE_MATLAB_USE_ARMADILLO_FALSE])
m4trace:configure.ac:143: -1- AC_SUBST_TRACE([ROSE_MATLAB_USE_ARMADILLO_FALSE])
m4trace:configure.ac:143: -1- m4_pattern_allow([^ROSE_MATLAB_USE_ARMADILLO_FALSE$])
m4trace:configure.ac:143: -1- _AM_SUBST_NOTMAKE([ROSE_MATLAB_USE_ARMADILLO_TRUE])
m4trace:configure.ac:143: -1- _AM_SUBST_NOTMAKE([ROSE_MATLAB_USE_ARMADILLO_FALSE])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/MatrixTesting/Makefile
    projects/MatrixTesting/src/Makefile])
m4trace:configure.ac:143: -1- AC_DEFINE_TRACE_LITERAL([ROSE_USE_WT])
m4trace:configure.ac:143: -1- m4_pattern_allow([^ROSE_USE_WT$])
m4trace:configure.ac:143: -1- AH_OUTPUT([ROSE_USE_WT], [/* Defined if the web toolkit Wt is available. */
@%:@undef ROSE_USE_WT])
m4trace:configure.ac:143: -1- AC_SUBST([WT_PREFIX])
m4trace:configure.ac:143: -1- AC_SUBST_TRACE([WT_PREFIX])
m4trace:configure.ac:143: -1- m4_pattern_allow([^WT_PREFIX$])
m4trace:configure.ac:143: -1- AM_CONDITIONAL([ROSE_USE_WT], [test "$with_wt" != "no"])
m4trace:configure.ac:143: -1- AC_SUBST([ROSE_USE_WT_TRUE])
m4trace:configure.ac:143: -1- AC_SUBST_TRACE([ROSE_USE_WT_TRUE])
m4trace:configure.ac:143: -1- m4_pattern_allow([^ROSE_USE_WT_TRUE$])
m4trace:configure.ac:143: -1- AC_SUBST([ROSE_USE_WT_FALSE])
m4trace:configure.ac:143: -1- AC_SUBST_TRACE([ROSE_USE_WT_FALSE])
m4trace:configure.ac:143: -1- m4_pattern_allow([^ROSE_USE_WT_FALSE$])
m4trace:configure.ac:143: -1- _AM_SUBST_NOTMAKE([ROSE_USE_WT_TRUE])
m4trace:configure.ac:143: -1- _AM_SUBST_NOTMAKE([ROSE_USE_WT_FALSE])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/OpenK/Makefile
                 projects/OpenK/knowledgeBuilder/Makefile])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/Rose-To-LLVM/Makefile
		projects/Rose-To-LLVM/src/Makefile
		projects/Rose-To-LLVM/tests/Makefile
		projects/Rose-To-LLVM/src/rosetollvm/Makefile])
m4trace:configure.ac:143: -1- AM_CONDITIONAL([ROSE_ENABLE_PROJECT_Rose_To_LLVM], [test "$rose_enable_project_Rose_To_LLVM" = yes])
m4trace:configure.ac:143: -1- AC_SUBST([ROSE_ENABLE_PROJECT_Rose_To_LLVM_TRUE])
m4trace:configure.ac:143: -1- AC_SUBST_TRACE([ROSE_ENABLE_PROJECT_Rose_To_LLVM_TRUE])
m4trace:configure.ac:143: -1- m4_pattern_allow([^ROSE_ENABLE_PROJECT_Rose_To_LLVM_TRUE$])
m4trace:configure.ac:143: -1- AC_SUBST([ROSE_ENABLE_PROJECT_Rose_To_LLVM_FALSE])
m4trace:configure.ac:143: -1- AC_SUBST_TRACE([ROSE_ENABLE_PROJECT_Rose_To_LLVM_FALSE])
m4trace:configure.ac:143: -1- m4_pattern_allow([^ROSE_ENABLE_PROJECT_Rose_To_LLVM_FALSE$])
m4trace:configure.ac:143: -1- _AM_SUBST_NOTMAKE([ROSE_ENABLE_PROJECT_Rose_To_LLVM_TRUE])
m4trace:configure.ac:143: -1- _AM_SUBST_NOTMAKE([ROSE_ENABLE_PROJECT_Rose_To_LLVM_FALSE])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/RTC2/Makefile])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/RTC2/src/Makefile])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/RTC2/tests/Makefile])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/RTC2/tests/chk.sh:projects/RTC2/tests/chk.sh], [chmod ugo+x projects/RTC2/tests/chk.sh])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/scalarization/Makefile
		projects/scalarization/src/Makefile
		projects/scalarization/tests/Makefile])
m4trace:configure.ac:143: -1- AM_CONDITIONAL([ROSE_ENABLE_PROJECT_SCALARIZATION], [test "$rose_enable_project_scalarization" = yes])
m4trace:configure.ac:143: -1- AC_SUBST([ROSE_ENABLE_PROJECT_SCALARIZATION_TRUE])
m4trace:configure.ac:143: -1- AC_SUBST_TRACE([ROSE_ENABLE_PROJECT_SCALARIZATION_TRUE])
m4trace:configure.ac:143: -1- m4_pattern_allow([^ROSE_ENABLE_PROJECT_SCALARIZATION_TRUE$])
m4trace:configure.ac:143: -1- AC_SUBST([ROSE_ENABLE_PROJECT_SCALARIZATION_FALSE])
m4trace:configure.ac:143: -1- AC_SUBST_TRACE([ROSE_ENABLE_PROJECT_SCALARIZATION_FALSE])
m4trace:configure.ac:143: -1- m4_pattern_allow([^ROSE_ENABLE_PROJECT_SCALARIZATION_FALSE$])
m4trace:configure.ac:143: -1- _AM_SUBST_NOTMAKE([ROSE_ENABLE_PROJECT_SCALARIZATION_TRUE])
m4trace:configure.ac:143: -1- _AM_SUBST_NOTMAKE([ROSE_ENABLE_PROJECT_SCALARIZATION_FALSE])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/simulator2/Makefile])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/SnippetTools/Makefile])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/TALCDataLayout/Makefile
		projects/TALCDataLayout/src/Makefile
		projects/TALCDataLayout/src/haopt/Makefile
		projects/TALCDataLayout/src/main/Makefile
		projects/TALCDataLayout/src/meta/Makefile
		projects/TALCDataLayout/src/modules/Makefile
		projects/TALCDataLayout/src/runtime/Makefile
		projects/TALCDataLayout/src/utilities/Makefile
		projects/TALCDataLayout/tests/Makefile])
m4trace:configure.ac:143: -1- AM_CONDITIONAL([ROSE_ENABLE_PROJECT_TALCDATALAYOUT], [test "$rose_enable_project_talcdatalayout" = yes])
m4trace:configure.ac:143: -1- AC_SUBST([ROSE_ENABLE_PROJECT_TALCDATALAYOUT_TRUE])
m4trace:configure.ac:143: -1- AC_SUBST_TRACE([ROSE_ENABLE_PROJECT_TALCDATALAYOUT_TRUE])
m4trace:configure.ac:143: -1- m4_pattern_allow([^ROSE_ENABLE_PROJECT_TALCDATALAYOUT_TRUE$])
m4trace:configure.ac:143: -1- AC_SUBST([ROSE_ENABLE_PROJECT_TALCDATALAYOUT_FALSE])
m4trace:configure.ac:143: -1- AC_SUBST_TRACE([ROSE_ENABLE_PROJECT_TALCDATALAYOUT_FALSE])
m4trace:configure.ac:143: -1- m4_pattern_allow([^ROSE_ENABLE_PROJECT_TALCDATALAYOUT_FALSE$])
m4trace:configure.ac:143: -1- _AM_SUBST_NOTMAKE([ROSE_ENABLE_PROJECT_TALCDATALAYOUT_TRUE])
m4trace:configure.ac:143: -1- _AM_SUBST_NOTMAKE([ROSE_ENABLE_PROJECT_TALCDATALAYOUT_FALSE])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/traceAnalysis/Makefile])
m4trace:configure.ac:143: -1- AM_CONDITIONAL([ROSE_ENABLE_PROJECT_TRACE_ANALYSIS], [test "$rose_enable_project_trace_analysis" = yes])
m4trace:configure.ac:143: -1- AC_SUBST([ROSE_ENABLE_PROJECT_TRACE_ANALYSIS_TRUE])
m4trace:configure.ac:143: -1- AC_SUBST_TRACE([ROSE_ENABLE_PROJECT_TRACE_ANALYSIS_TRUE])
m4trace:configure.ac:143: -1- m4_pattern_allow([^ROSE_ENABLE_PROJECT_TRACE_ANALYSIS_TRUE$])
m4trace:configure.ac:143: -1- AC_SUBST([ROSE_ENABLE_PROJECT_TRACE_ANALYSIS_FALSE])
m4trace:configure.ac:143: -1- AC_SUBST_TRACE([ROSE_ENABLE_PROJECT_TRACE_ANALYSIS_FALSE])
m4trace:configure.ac:143: -1- m4_pattern_allow([^ROSE_ENABLE_PROJECT_TRACE_ANALYSIS_FALSE$])
m4trace:configure.ac:143: -1- _AM_SUBST_NOTMAKE([ROSE_ENABLE_PROJECT_TRACE_ANALYSIS_TRUE])
m4trace:configure.ac:143: -1- _AM_SUBST_NOTMAKE([ROSE_ENABLE_PROJECT_TRACE_ANALYSIS_FALSE])
m4trace:configure.ac:143: -1- AC_CONFIG_FILES([projects/ZFPTool/Makefile
		projects/ZFPTool/src/Makefile
		projects/ZFPTool/tests/Makefile])
m4trace:configure.ac:143: -1- AM_CONDITIONAL([ROSE_ENABLE_PROJECT_SCALARIZATION], [test "$rose_enable_project_ZFPTool" = yes])
m4trace:configure.ac:143: -1- AC_SUBST([ROSE_ENABLE_PROJECT_SCALARIZATION_TRUE])
m4trace:configure.ac:143: -1- AC_SUBST_TRACE([ROSE_ENABLE_PROJECT_SCALARIZATION_TRUE])
m4trace:configure.ac:143: -1- m4_pattern_allow([^ROSE_ENABLE_PROJECT_SCALARIZATION_TRUE$])
m4trace:configure.ac:143: -1- AC_SUBST([ROSE_ENABLE_PROJECT_SCALARIZATION_FALSE])
m4trace:configure.ac:143: -1- AC_SUBST_TRACE([ROSE_ENABLE_PROJECT_SCALARIZATION_FALSE])
m4trace:configure.ac:143: -1- m4_pattern_allow([^ROSE_ENABLE_PROJECT_SCALARIZATION_FALSE$])
m4trace:configure.ac:143: -1- _AM_SUBST_NOTMAKE([ROSE_ENABLE_PROJECT_SCALARIZATION_TRUE])
m4trace:configure.ac:143: -1- _AM_SUBST_NOTMAKE([ROSE_ENABLE_PROJECT_SCALARIZATION_FALSE])
m4trace:configure.ac:144: -1- AC_CONFIG_FILES([
Makefile
config/Makefile
docs/Makefile
docs/Rose/Makefile
docs/Rose/ROSE_DemoGuide.tex
docs/Rose/ROSE_DeveloperInstructions.tex
docs/Rose/ROSE_Exam.tex
docs/Rose/ROSE_InstallationInstructions.tex
docs/Rose/Tutorial/Makefile
docs/Rose/Tutorial/gettingStarted.tex
docs/Rose/Tutorial/tutorial.tex
docs/Rose/footer.html
docs/Rose/gettingStarted.tex
docs/Rose/leftmenu.html
docs/Rose/manual.tex
docs/Rose/rose-install-demo.cfg
docs/Rose/rose.cfg
docs/Rose/roseQtWidgets.doxygen
docs/Rose/sage.cfg
docs/testDoxygen/Makefile
docs/testDoxygen/test.cfg
exampleTranslators/AstCopyReplTester/Makefile
exampleTranslators/DOTGenerator/Makefile
exampleTranslators/Makefile
exampleTranslators/PDFGenerator/Makefile
exampleTranslators/defaultTranslator/Makefile
exampleTranslators/documentedExamples/AstRewriteExamples/Makefile
exampleTranslators/documentedExamples/Makefile
exampleTranslators/documentedExamples/dataBaseExamples/Makefile
exampleTranslators/documentedExamples/simpleTranslatorExamples/Makefile
exampleTranslators/documentedExamples/simpleTranslatorExamples/exampleMakefile
LicenseInformation/Makefile
projects/ArithmeticMeasureTool/Makefile
projects/BinaryCloneDetection/Makefile
projects/BinaryCloneDetection/compression/Makefile
projects/BinaryCloneDetection/semantic/Makefile
projects/BinaryCloneDetection/syntactic/Makefile
projects/BinaryCloneDetection/syntactic/gui/Makefile
projects/CertSecureCodeProject/Makefile
projects/CloneDetection/Makefile
projects/RaaS/Makefile
projects/RaaS/src/Makefile
projects/RaaS/include/nlohmann/Makefile
projects/RaaS/examples/demo/Makefile
projects/RaaS/examples/demo/compile_commands.json
projects/CompilationDB/Makefile
projects/CompilationDB/scripts/Makefile
projects/CompilationDB/examples/demo/Makefile
projects/CompilationDB/examples/demo/compile_commands.json
projects/CompilationDB/examples/kripke/Makefile
projects/CompilationDB/examples/doxygen/Makefile
projects/CompilationDB/static/js/Makefile
projects/CompilationDB/static/css/Makefile
projects/EditDistanceMetric/Makefile
projects/Fortran_to_C/Makefile
projects/Fortran_to_C/src/Makefile
projects/Fortran_to_C/tests/Makefile
projects/HeaderFilesInclusion/HeaderFilesGraphGenerator/Makefile
projects/HeaderFilesInclusion/HeaderFilesNotIncludedList/Makefile
projects/HeaderFilesInclusion/Makefile
projects/MPI_Tools/MPICodeMotion/Makefile
projects/MPI_Tools/MPIDeterminismAnalysis/Makefile
projects/MPI_Tools/Makefile
projects/Makefile
projects/ManyCoreRuntime/Makefile
projects/ManyCoreRuntime/docs/Makefile
projects/MapleDSL/Makefile
projects/QtDesignerPlugins/Makefile
projects/RTED/CppRuntimeSystem/DebuggerQt/Makefile
projects/RTED/CppRuntimeSystem/Makefile
projects/RTED/Makefile
projects/RoseBlockLevelTracing/Makefile
projects/RoseBlockLevelTracing/src/Makefile
projects/RoseQt/AstViewer/Makefile
projects/RoseQt/Makefile
projects/SMTPathFeasibility/Makefile
projects/ShiftCalculus4/Makefile
projects/TemplateAnalysis/Makefile
projects/TemplateAnalysis/include/ROSE/Analysis/Template/Makefile
projects/TemplateAnalysis/include/ROSE/proposed/Makefile
projects/TemplateAnalysis/include/nlohmann/Makefile
projects/TemplateAnalysis/lib/ROSE/Analysis/Template/Makefile
projects/TemplateAnalysis/lib/ROSE/proposed/Makefile
projects/TemplateAnalysis/src/Makefile
projects/TemplateAnalysis/examples/Makefile
projects/TemplateAnalysis/examples/inspect-autovar/Makefile
projects/TileK/Makefile
projects/TileK/doc/Makefile
projects/TileK/doc/dlx.doxy
projects/TileK/doc/index.html
projects/TileK/doc/klt-rtl.doxy
projects/TileK/doc/klt.doxy
projects/TileK/doc/mdcg.doxy
projects/TileK/doc/mfb.doxy
projects/TileK/doc/tilek-basic.doxy
projects/TileK/doc/tilek-cuda.doxy
projects/TileK/doc/tilek-opencl.doxy
projects/TileK/doc/tilek-rtl-basic.doxy
projects/TileK/doc/tilek-rtl-cuda.doxy
projects/TileK/doc/tilek-rtl-opencl.doxy
projects/TileK/doc/tilek-rtl-threads.doxy
projects/TileK/doc/tilek-threads.doxy
projects/TileK/include/DLX/TileK/Makefile
projects/TileK/include/RTL/Host/Makefile
projects/TileK/include/RTL/Kernel/CUDA/Makefile
projects/TileK/include/RTL/Kernel/OpenCL/Makefile
projects/TileK/lib/Makefile
projects/TileK/src/Makefile
projects/TileK/tests/accelerator/CUDA/Makefile
projects/TileK/tests/accelerator/Makefile
projects/TileK/tests/accelerator/OpenCL/Makefile
projects/TileK/tests/basic/Makefile
projects/TileK/tests/rtl/Makefile
projects/TileK/tests/threads/Makefile
projects/UpcTranslation/Makefile
projects/UpcTranslation/tests/Makefile
projects/Viz/Makefile
projects/Viz/examples/Makefile
projects/Viz/include/Makefile
projects/Viz/include/Viz/Makefile
projects/Viz/include/Viz/Traversals/Makefile
projects/Viz/lib/Makefile
projects/Viz/src/Makefile
projects/Viz/tools/Makefile
projects/amrShiftDSLcompiler/AMRShift/Makefile
projects/amrShiftDSLcompiler/Makefile
projects/arrayDSLcompiler/Makefile
projects/POET_ROSE/Makefile
projects/POET_ROSE/test/Makefile
projects/POET_ROSE/manycore-stencil/Makefile
projects/POET_ROSE/manycore-stencil/include/Makefile
projects/POET_ROSE/manycore-stencil/benchmarks/Makefile
projects/arrayOptimization/Makefile
projects/arrayOptimization/test/Makefile
projects/autoParallelization/Makefile
projects/autoParallelization/tests/Makefile
projects/autoParallelization/difftests/Makefile
projects/autoTuning/Makefile
projects/autoTuning/doc/Makefile
projects/autoTuning/tests/Makefile
projects/compass/Makefile
projects/compass/src/Makefile
projects/compass/src/compassSupport/Makefile
projects/compass/src/util/C-API/Makefile
projects/compass/src/util/MPIAbstraction/Makefile
projects/compass/src/util/MPIAbstraction/alt-mpi-headers/Makefile
projects/compass/src/util/MPIAbstraction/alt-mpi-headers/mpich-1.2.7p1/Makefile
projects/compass/src/util/MPIAbstraction/alt-mpi-headers/mpich-1.2.7p1/include/Makefile
projects/compass/src/util/MPIAbstraction/alt-mpi-headers/mpich-1.2.7p1/include/mpi2c++/Makefile
projects/compass/src/util/Makefile
projects/compass/tools/Makefile
projects/compass/tools/compass/Makefile
projects/compass/tools/compass/buildInterpreter/Makefile
projects/compass/tools/compass/doc/Makefile
projects/compass/tools/compass/doc/compass.tex
projects/compass/tools/compass/gui/Makefile
projects/compass/tools/compass/gui2/Makefile
projects/compass/tools/compass/tests/Compass_C_tests/Makefile
projects/compass/tools/compass/tests/Compass_Cxx_tests/Makefile
projects/compass/tools/compass/tests/Compass_OpenMP_tests/Makefile
projects/compass/tools/compass/tests/Makefile
projects/compass/tools/compassVerifier/Makefile
projects/compass/tools/sampleCompassSubset/Makefile
projects/dsl_infrastructure/Makefile
projects/extractMPISkeleton/Makefile
projects/extractMPISkeleton/src/Makefile
projects/extractMPISkeleton/tests/Makefile
projects/fuse/Makefile
projects/fuse/src/Makefile
projects/fuse/tests/Makefile
projects/interpreter/Makefile
projects/palette/Makefile
projects/pragmaParsing/Makefile
projects/xgenTranslator/Makefile
python/Makefile
python/Rose/Makefile
python/Rose/BinaryAnalysis/Makefile
python/Rose/BinaryAnalysis/Partitioner2/Makefile
python/Rose/BinaryAnalysis/Unparser/Makefile
scripts/Makefile
src/3rdPartyLibraries/MSTL/Makefile
src/3rdPartyLibraries/Makefile
src/3rdPartyLibraries/antlr-jars/Makefile
src/3rdPartyLibraries/flang-parser/Makefile
src/3rdPartyLibraries/fortran-parser/Makefile
src/3rdPartyLibraries/java-parser/Makefile
src/3rdPartyLibraries/qrose/Components/Common/Makefile
src/3rdPartyLibraries/qrose/Components/Common/icons/Makefile
src/3rdPartyLibraries/qrose/Components/Makefile
src/3rdPartyLibraries/qrose/Components/QueryBox/Makefile
src/3rdPartyLibraries/qrose/Components/SourceBox/Makefile
src/3rdPartyLibraries/qrose/Components/TreeBox/Makefile
src/3rdPartyLibraries/qrose/Framework/Makefile
src/3rdPartyLibraries/qrose/Makefile
src/3rdPartyLibraries/qrose/QRoseLib/Makefile
src/3rdPartyLibraries/qrose/Widgets/Makefile
src/Makefile
src/ROSETTA/Makefile
src/ROSETTA/src/Makefile
src/backend/Makefile
src/frontend/BinaryFormats/Makefile
src/frontend/BinaryLoader/Makefile
src/frontend/CxxFrontend/Clang/Makefile
src/frontend/CxxFrontend/Makefile
src/frontend/DLX/Makefile
src/frontend/DLX/include/DLX/Core/Makefile
src/frontend/DLX/lib/core/Makefile
src/frontend/Disassemblers/Makefile
src/frontend/ECJ_ROSE_Connection/Makefile
src/frontend/Experimental_General_Language_Support/Makefile
src/frontend/Experimental_General_Language_Support/ATerm/Makefile
src/frontend/Experimental_OpenFortranParser_ROSE_Connection/Makefile
src/frontend/Experimental_Flang_ROSE_Connection/Makefile
src/frontend/Experimental_Csharp_ROSE_Connection/Makefile
src/frontend/Experimental_Ada_ROSE_Connection/Makefile
src/frontend/Experimental_Jovial_ROSE_Connection/Makefile
src/frontend/Experimental_Cobol_ROSE_Connection/Makefile
src/frontend/Experimental_Matlab_ROSE_Connection/Makefile
src/frontend/Makefile
src/frontend/OpenFortranParser_SAGE_Connection/Makefile
src/frontend/PHPFrontend/Makefile
src/frontend/Partitioner2/Makefile
src/frontend/PythonFrontend/Makefile
src/frontend/SageIII/GENERATED_CODE_DIRECTORY_Cxx_Grammar/Makefile
src/frontend/SageIII/Makefile
src/frontend/SageIII/astFileIO/Makefile
src/frontend/SageIII/astFixup/Makefile
src/frontend/SageIII/astFromString/Makefile
src/frontend/SageIII/astHiddenTypeAndDeclarationLists/Makefile
src/frontend/SageIII/astMerge/Makefile
src/frontend/SageIII/astPostProcessing/Makefile
src/frontend/SageIII/astTokenStream/Makefile
src/frontend/SageIII/astVisualization/Makefile
src/frontend/SageIII/includeDirectivesProcessing/Makefile
src/frontend/SageIII/sage.docs
src/frontend/SageIII/sageInterface/Makefile
src/frontend/SageIII/virtualCFG/Makefile
src/frontend/X10_ROSE_Connection/Makefile
src/midend/KLT/Makefile
src/midend/KLT/include/KLT/Core/Makefile
src/midend/KLT/include/KLT/DLX/Makefile
src/midend/KLT/include/KLT/MDCG/Makefile
src/midend/KLT/include/KLT/RTL/Makefile
src/midend/KLT/lib/core/Makefile
src/midend/KLT/lib/mdcg/Makefile
src/midend/KLT/lib/rtl/Makefile
src/midend/MDCG/Makefile
src/midend/MDCG/include/MDCG/Model/Makefile
src/midend/MDCG/include/MDCG/Tools/Makefile
src/midend/MDCG/lib/model/Makefile
src/midend/MDCG/lib/tools/Makefile
src/midend/MFB/Makefile
src/midend/MFB/include/MFB/KLT/Makefile
src/midend/MFB/include/MFB/Makefile
src/midend/MFB/include/MFB/Sage/Makefile
src/midend/MFB/lib/klt/Makefile
src/midend/MFB/lib/sage/Makefile
src/midend/MFB/lib/utils/Makefile
src/midend/Makefile
src/midend/BinaryAnalysis/Makefile
src/midend/programAnalysis/Makefile
src/midend/programAnalysis/ssaUnfilteredCfg/Makefile
src/midend/programAnalysis/staticSingleAssignment/Makefile
src/midend/programAnalysis/systemDependenceGraph/Makefile
src/midend/programTransformation/extractFunctionArgumentsNormalization/Makefile
src/midend/programTransformation/loopProcessing/Makefile
src/midend/programTransformation/singleStatementToBlockNormalization/Makefile
src/roseExtensions/Makefile
src/roseExtensions/dataStructureTraversal/Makefile
src/roseExtensions/failSafe/Makefile
src/roseExtensions/highLevelGrammar/Makefile
src/roseExtensions/qtWidgets/AsmInstructionBar/Makefile
src/roseExtensions/qtWidgets/AsmView/Makefile
src/roseExtensions/qtWidgets/AstBrowserWidget/Makefile
src/roseExtensions/qtWidgets/AstGraphWidget/Makefile
src/roseExtensions/qtWidgets/AstProcessing/Makefile
src/roseExtensions/qtWidgets/BeautifiedAst/Makefile
src/roseExtensions/qtWidgets/FlopCounter/Makefile
src/roseExtensions/qtWidgets/InstructionCountAnnotator/Makefile
src/roseExtensions/qtWidgets/KiviatView/Makefile
src/roseExtensions/qtWidgets/Makefile
src/roseExtensions/qtWidgets/MetricFilter/Makefile
src/roseExtensions/qtWidgets/MetricsConfig/Makefile
src/roseExtensions/qtWidgets/MetricsKiviat/Makefile
src/roseExtensions/qtWidgets/NodeInfoWidget/Makefile
src/roseExtensions/qtWidgets/ProjectManager/Makefile
src/roseExtensions/qtWidgets/PropertyTreeWidget/Makefile
src/roseExtensions/qtWidgets/QCodeEditWidget/Makefile
src/roseExtensions/qtWidgets/QCodeEditWidget/QCodeEdit/Makefile
src/roseExtensions/qtWidgets/QCodeEditWidget/QCodeEdit/document/Makefile
src/roseExtensions/qtWidgets/QCodeEditWidget/QCodeEdit/qnfa/Makefile
src/roseExtensions/qtWidgets/QCodeEditWidget/QCodeEdit/widgets/Makefile
src/roseExtensions/qtWidgets/QtGradientEditor/Makefile
src/roseExtensions/qtWidgets/RoseCodeEdit/Makefile
src/roseExtensions/qtWidgets/RoseFileSelector/Makefile
src/roseExtensions/qtWidgets/SrcBinView/Makefile
src/roseExtensions/qtWidgets/TaskSystem/Makefile
src/roseExtensions/qtWidgets/TreeModel/Makefile
src/roseExtensions/qtWidgets/WidgetCreator/Makefile
src/roseExtensions/qtWidgets/util/Makefile
src/roseExtensions/roseHPCToolkit/Makefile
src/roseExtensions/roseHPCToolkit/docs/Makefile
src/roseExtensions/roseHPCToolkit/include/Makefile
src/roseExtensions/roseHPCToolkit/include/rosehpct/Makefile
src/roseExtensions/roseHPCToolkit/include/rosehpct/gprof/Makefile
src/roseExtensions/roseHPCToolkit/include/rosehpct/profir/Makefile
src/roseExtensions/roseHPCToolkit/include/rosehpct/profir2sage/Makefile
src/roseExtensions/roseHPCToolkit/include/rosehpct/sage/Makefile
src/roseExtensions/roseHPCToolkit/include/rosehpct/util/Makefile
src/roseExtensions/roseHPCToolkit/include/rosehpct/xml-xercesc/Makefile
src/roseExtensions/roseHPCToolkit/include/rosehpct/xml/Makefile
src/roseExtensions/roseHPCToolkit/include/rosehpct/xml2profir/Makefile
src/roseExtensions/roseHPCToolkit/src/Makefile
src/roseExtensions/roseHPCToolkit/src/gprof/Makefile
src/roseExtensions/roseHPCToolkit/src/profir/Makefile
src/roseExtensions/roseHPCToolkit/src/profir2sage/Makefile
src/roseExtensions/roseHPCToolkit/src/sage/Makefile
src/roseExtensions/roseHPCToolkit/src/util/Makefile
src/roseExtensions/roseHPCToolkit/src/xml-xercesc/Makefile
src/roseExtensions/roseHPCToolkit/src/xml/Makefile
src/roseExtensions/roseHPCToolkit/src/xml2profir/Makefile
src/roseExtensions/sqlite3x/Makefile
src/roseIndependentSupport/Makefile
src/roseIndependentSupport/dot2gml/Makefile
src/roseSupport/Makefile
src/util/Makefile
src/util/commandlineProcessing/Makefile
src/util/graphs/Makefile
src/util/Sawyer/Makefile
src/util/stringSupport/Makefile
src/util/support/Makefile
stamp-h
tests/Makefile
tests/nonsmoke/ExamplesForTestWriters/Makefile
tests/nonsmoke/Makefile
tests/nonsmoke/acceptance/Makefile
tests/nonsmoke/functional/BinaryAnalysis/Dwarf_tests/Makefile
tests/nonsmoke/functional/BinaryAnalysis/Makefile
tests/nonsmoke/functional/BinaryAnalysis/Pin_tests/Makefile
tests/nonsmoke/functional/BinaryAnalysis/libraryIdentification_tests/Makefile
tests/nonsmoke/functional/BinaryAnalysis/Concolic/Makefile
tests/nonsmoke/functional/CompileTests/A++Code/Makefile
tests/nonsmoke/functional/CompileTests/A++Tests/Makefile
tests/nonsmoke/functional/CompileTests/C_tests/Makefile
tests/nonsmoke/functional/CompileTests/C_subset_of_Cxx_tests/Makefile
tests/nonsmoke/functional/CompileTests/C89_std_c89_tests/Makefile
tests/nonsmoke/functional/CompileTests/C99_tests/Makefile
tests/nonsmoke/functional/CompileTests/C11_tests/Makefile
tests/nonsmoke/functional/CompileTests/CudaTests/Makefile
tests/nonsmoke/functional/CompileTests/Cxx_tests/Makefile
tests/nonsmoke/functional/CompileTests/Cxx03_tests/Makefile
tests/nonsmoke/functional/CompileTests/Cxx11_tests/Makefile
tests/nonsmoke/functional/CompileTests/Cxx14_tests/Makefile
tests/nonsmoke/functional/CompileTests/Cxx17_tests/Makefile
tests/nonsmoke/functional/CompileTests/Cxx20_tests/Makefile
tests/nonsmoke/functional/CompileTests/ElsaTestCases/Makefile
tests/nonsmoke/functional/CompileTests/ElsaTestCases/ctests/Makefile
tests/nonsmoke/functional/CompileTests/ElsaTestCases/gnu/Makefile
tests/nonsmoke/functional/CompileTests/ElsaTestCases/kandr/Makefile
tests/nonsmoke/functional/CompileTests/ElsaTestCases/std/Makefile
tests/nonsmoke/functional/CompileTests/ExpressionTemplateExample_tests/Makefile
tests/nonsmoke/functional/CompileTests/FailSafe_tests/Makefile
tests/nonsmoke/functional/CompileTests/Fortran_tests/LANL_POP/Makefile
tests/nonsmoke/functional/CompileTests/Fortran_tests/Makefile
tests/nonsmoke/functional/CompileTests/Fortran_tests/experimental_frontend_tests/Makefile
tests/nonsmoke/functional/CompileTests/Fortran_tests/gfortranTestSuite/Makefile
tests/nonsmoke/functional/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg/Makefile
tests/nonsmoke/functional/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.fortran-torture/Makefile
tests/nonsmoke/functional/CompileTests/Java_tests/Makefile
tests/nonsmoke/functional/CompileTests/Java_tests/unit_tests/Makefile
tests/nonsmoke/functional/CompileTests/experimental_csharp_tests/Makefile
tests/nonsmoke/functional/CompileTests/experimental_ada_tests/Makefile
tests/nonsmoke/functional/CompileTests/experimental_fortran_tests/Makefile
tests/nonsmoke/functional/CompileTests/experimental_jovial_tests/Makefile
tests/nonsmoke/functional/CompileTests/experimental_cobol_tests/Makefile
tests/nonsmoke/functional/CompileTests/experimental_matlab_tests/Makefile
tests/nonsmoke/functional/CompileTests/Makefile
tests/nonsmoke/functional/CompileTests/MicrosoftWindows_C_tests/Makefile
tests/nonsmoke/functional/CompileTests/MicrosoftWindows_Cxx_tests/Makefile
tests/nonsmoke/functional/CompileTests/MicrosoftWindows_Java_tests/Makefile
tests/nonsmoke/functional/CompileTests/MicrosoftWindows_tests/Makefile
tests/nonsmoke/functional/CompileTests/OpenClTests/Makefile
tests/nonsmoke/functional/CompileTests/OpenACC_tests/Makefile
tests/nonsmoke/functional/CompileTests/OpenACC_tests/fortran/Makefile
tests/nonsmoke/functional/CompileTests/OpenMP_tests/Makefile
tests/nonsmoke/functional/CompileTests/OpenMP_tests/cvalidation/Makefile
tests/nonsmoke/functional/CompileTests/OpenMP_tests/fortran/Makefile
tests/nonsmoke/functional/CompileTests/OvertureCode/Makefile
tests/nonsmoke/functional/CompileTests/P++Tests/Makefile
tests/nonsmoke/functional/CompileTests/PythonExample_tests/Makefile
tests/nonsmoke/functional/CompileTests/Python_tests/Makefile
tests/nonsmoke/functional/CompileTests/RoseExample_tests/Makefile
tests/nonsmoke/functional/CompileTests/STL_tests/Makefile
tests/nonsmoke/functional/CompileTests/UPC_tests/Makefile
tests/nonsmoke/functional/CompileTests/UnparseHeadersTests/Makefile
tests/nonsmoke/functional/CompileTests/UnparseHeadersUsingTokenStream_tests/Makefile
tests/nonsmoke/functional/CompileTests/boost_tests/Makefile
tests/nonsmoke/functional/CompileTests/colorAST_tests/Makefile
tests/nonsmoke/functional/CompileTests/copyAST_tests/Makefile
tests/nonsmoke/functional/CompileTests/frontend_integration/Makefile
tests/nonsmoke/functional/CompileTests/hiddenTypeAndDeclarationListTests/Makefile
tests/nonsmoke/functional/CompileTests/mergeAST_tests/Makefile
tests/nonsmoke/functional/CompileTests/mixLanguage_tests/Makefile
tests/nonsmoke/functional/CompileTests/nameQualificationAndTypeElaboration_tests/Makefile
tests/nonsmoke/functional/CompileTests/sizeofOperation_tests/Makefile
tests/nonsmoke/functional/CompileTests/sourcePosition_tests/Makefile
tests/nonsmoke/functional/CompileTests/staticCFG_tests/Makefile
tests/nonsmoke/functional/CompileTests/systemc_tests/Makefile
tests/nonsmoke/functional/CompileTests/vxworks_tests/Makefile
tests/nonsmoke/functional/CompileTests/uninitializedField_tests/Makefile
tests/nonsmoke/functional/CompileTests/unparseToString_tests/Makefile
tests/nonsmoke/functional/CompileTests/virtualCFG_tests/Makefile
tests/nonsmoke/functional/CompileTests/x10_tests/Makefile
tests/nonsmoke/functional/CompileTests/unparse_template_from_ast/Makefile
tests/nonsmoke/functional/CompilerOptionsTests/Makefile
tests/nonsmoke/functional/CompilerOptionsTests/collectAllCommentsAndDirectives_tests/Makefile
tests/nonsmoke/functional/CompilerOptionsTests/preinclude_tests/Makefile
tests/nonsmoke/functional/CompilerOptionsTests/testCpreprocessorOption/Makefile
tests/nonsmoke/functional/CompilerOptionsTests/testFileNamesAndExtensions/Makefile
tests/nonsmoke/functional/CompilerOptionsTests/testForSpuriousOutput/Makefile
tests/nonsmoke/functional/CompilerOptionsTests/testGenerateSourceFileNames/Makefile
tests/nonsmoke/functional/CompilerOptionsTests/testGnuOptions/Makefile
tests/nonsmoke/functional/CompilerOptionsTests/testHeaderFileOutput/Makefile
tests/nonsmoke/functional/CompilerOptionsTests/testIncludeOptions/Makefile
tests/nonsmoke/functional/CompilerOptionsTests/testOutputFileOption/Makefile
tests/nonsmoke/functional/CompilerOptionsTests/testWave/Makefile
tests/nonsmoke/functional/CompilerOptionsTests/tokenStream_tests/Makefile
tests/nonsmoke/functional/Makefile
tests/nonsmoke/functional/moveDeclarationTool/Makefile
tests/nonsmoke/functional/PerformanceTests/Makefile
tests/nonsmoke/functional/RunTests/A++Tests/Makefile
tests/nonsmoke/functional/RunTests/AstDeleteTests/Makefile
tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/Makefile
tests/nonsmoke/functional/RunTests/FortranTests/Makefile
tests/nonsmoke/functional/RunTests/Makefile
tests/nonsmoke/functional/RunTests/PythonTests/Makefile
tests/nonsmoke/functional/UnitTests/Makefile
tests/nonsmoke/functional/UnitTests/Rose/Makefile
tests/nonsmoke/functional/UnitTests/Rose/SageBuilder/Makefile
tests/nonsmoke/functional/Utility/Makefile
tests/nonsmoke/functional/roseTests/Makefile
tests/nonsmoke/functional/roseTests/PHPTests/Makefile
tests/nonsmoke/functional/roseTests/ROSETTA/Makefile
tests/nonsmoke/functional/roseTests/abstractMemoryObjectTests/Makefile
tests/nonsmoke/functional/roseTests/astFileIOTests/Makefile
tests/nonsmoke/functional/roseTests/astInliningTests/Makefile
tests/nonsmoke/functional/roseTests/astInterfaceTests/Makefile
tests/nonsmoke/functional/roseTests/astInterfaceTests/typeEquivalenceTests/Makefile
tests/nonsmoke/functional/roseTests/astInterfaceTests/unitTests/Makefile
tests/nonsmoke/functional/roseTests/astLValueTests/Makefile
tests/nonsmoke/functional/roseTests/astMergeTests/Makefile
tests/nonsmoke/functional/roseTests/astOutliningTests/Makefile
tests/nonsmoke/functional/roseTests/astPerformanceTests/Makefile
tests/nonsmoke/functional/roseTests/astProcessingTests/Makefile
tests/nonsmoke/functional/roseTests/astQueryTests/Makefile
tests/nonsmoke/functional/roseTests/astRewriteTests/Makefile
tests/nonsmoke/functional/roseTests/astSnippetTests/Makefile
tests/nonsmoke/functional/roseTests/astSymbolTableTests/Makefile
tests/nonsmoke/functional/roseTests/astTokenStreamTests/Makefile
tests/nonsmoke/functional/roseTests/fileLocation_tests/Makefile
tests/nonsmoke/functional/roseTests/graph_tests/Makefile
tests/nonsmoke/functional/roseTests/loopProcessingTests/Makefile
tests/nonsmoke/functional/roseTests/mergeTraversal_tests/Makefile
tests/nonsmoke/functional/roseTests/ompLoweringTests/Makefile
tests/nonsmoke/functional/roseTests/ompLoweringTests/fortran/Makefile
tests/nonsmoke/functional/roseTests/programAnalysisTests/Makefile
tests/nonsmoke/functional/roseTests/programAnalysisTests/defUseAnalysisTests/Makefile
tests/nonsmoke/functional/roseTests/programAnalysisTests/generalDataFlowAnalysisTests/Makefile
tests/nonsmoke/functional/roseTests/programAnalysisTests/ssa_UnfilteredCfg_Test/Makefile
tests/nonsmoke/functional/roseTests/programAnalysisTests/staticInterproceduralSlicingTests/Makefile
tests/nonsmoke/functional/roseTests/programAnalysisTests/staticSingleAssignmentTests/Makefile
tests/nonsmoke/functional/roseTests/programAnalysisTests/systemDependenceGraphTests/Makefile
tests/nonsmoke/functional/roseTests/programAnalysisTests/testCallGraphAnalysis/Makefile
tests/nonsmoke/functional/roseTests/programAnalysisTests/typeTraitTests/Makefile
tests/nonsmoke/functional/roseTests/programAnalysisTests/variableLivenessTests/Makefile
tests/nonsmoke/functional/roseTests/programAnalysisTests/variableRenamingTests/Makefile
tests/nonsmoke/functional/roseTests/programTransformationTests/Makefile
tests/nonsmoke/functional/roseTests/programTransformationTests/extractFunctionArgumentsTest/Makefile
tests/nonsmoke/functional/roseTests/programTransformationTests/singleStatementToBlockNormalization/Makefile
tests/nonsmoke/functional/roseTests/roseHPCToolkitTests/Makefile
tests/nonsmoke/functional/roseTests/roseHPCToolkitTests/data/01/ANALYSIS/Makefile
tests/nonsmoke/functional/roseTests/roseHPCToolkitTests/data/01/Makefile
tests/nonsmoke/functional/roseTests/roseHPCToolkitTests/data/01/PROFILE/Makefile
tests/nonsmoke/functional/roseTests/roseHPCToolkitTests/data/01/PROGRAM/Makefile
tests/nonsmoke/functional/roseTests/roseHPCToolkitTests/data/02/Makefile
tests/nonsmoke/functional/roseTests/roseHPCToolkitTests/data/02/PROFILE/Makefile
tests/nonsmoke/functional/roseTests/roseHPCToolkitTests/data/02/struct_ls/Makefile
tests/nonsmoke/functional/roseTests/roseHPCToolkitTests/data/03/Makefile
tests/nonsmoke/functional/roseTests/roseHPCToolkitTests/data/03/PROFILE/Makefile
tests/nonsmoke/functional/roseTests/roseHPCToolkitTests/data/03/struct_ls/Makefile
tests/nonsmoke/functional/roseTests/roseHPCToolkitTests/data/Makefile
tests/nonsmoke/functional/roseTests/varDeclNorm/Makefile
tests/nonsmoke/functional/testSupport/Makefile
tests/nonsmoke/functional/testSupport/gtest/Makefile
tests/nonsmoke/functional/translatorTests/Makefile
tests/nonsmoke/specimens/Makefile
tests/nonsmoke/specimens/binary/Makefile
tests/nonsmoke/specimens/c++/Makefile
tests/nonsmoke/specimens/c/Makefile
tests/nonsmoke/specimens/fortran/Makefile
tests/nonsmoke/specimens/java/Makefile
tests/nonsmoke/unit/Makefile
tests/nonsmoke/unit/SageInterface/Makefile
tests/roseTests/Makefile
tests/roseTests/ompLoweringTests/Makefile
tests/roseTests/programAnalysisTests/Makefile
tests/roseTests/programAnalysisTests/typeTraitTests/Makefile
tests/smoke/ExamplesForTestWriters/Makefile
tests/smoke/Makefile
tests/smoke/functional/BinaryAnalysis/Makefile
tests/smoke/functional/Fortran/Makefile
tests/smoke/functional/Makefile
tests/smoke/specimens/Makefile
tests/smoke/specimens/binary/Makefile
tests/smoke/specimens/c++/Makefile
tests/smoke/specimens/c/Makefile
tests/smoke/specimens/fortran/Makefile
tests/smoke/specimens/java/Makefile
tests/smoke/unit/BinaryAnalysis/Makefile
tests/smoke/unit/Boost/Makefile
tests/smoke/unit/Makefile
tests/smoke/unit/Sawyer/Makefile
tests/smoke/unit/Utility/Makefile
tools/Makefile
tools/BinaryAnalysis/Makefile
tools/globalVariablesInLambdas/Makefile
tools/classMemberVariablesInLambdas/Makefile
tools/checkFortranInterfaces/Makefile
tutorial/Makefile
tutorial/binaryAnalysis/Makefile
tutorial/exampleMakefile
tutorial/intelPin/Makefile
tutorial/outliner/Makefile
tutorial/roseHPCT/Makefile
])
m4trace:configure.ac:152: -1- AC_DEFINE_TRACE_LITERAL([ROSE_CONFIG_TOKEN])
m4trace:configure.ac:152: -1- m4_pattern_allow([^ROSE_CONFIG_TOKEN$])
m4trace:configure.ac:152: -1- AH_OUTPUT([ROSE_CONFIG_TOKEN], [/* Encapsulates some important configuration details for Rose::initialize */
@%:@undef ROSE_CONFIG_TOKEN])
m4trace:configure.ac:160: -1- AC_SUBST([LIB@&t@OBJS], [$ac_libobjs])
m4trace:configure.ac:160: -1- AC_SUBST_TRACE([LIB@&t@OBJS])
m4trace:configure.ac:160: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:160: -1- AC_SUBST([LTLIBOBJS], [$ac_ltlibobjs])
m4trace:configure.ac:160: -1- AC_SUBST_TRACE([LTLIBOBJS])
m4trace:configure.ac:160: -1- m4_pattern_allow([^LTLIBOBJS$])
m4trace:configure.ac:160: -1- AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])
m4trace:configure.ac:160: -1- AC_SUBST([am__EXEEXT_TRUE])
m4trace:configure.ac:160: -1- AC_SUBST_TRACE([am__EXEEXT_TRUE])
m4trace:configure.ac:160: -1- m4_pattern_allow([^am__EXEEXT_TRUE$])
m4trace:configure.ac:160: -1- AC_SUBST([am__EXEEXT_FALSE])
m4trace:configure.ac:160: -1- AC_SUBST_TRACE([am__EXEEXT_FALSE])
m4trace:configure.ac:160: -1- m4_pattern_allow([^am__EXEEXT_FALSE$])
m4trace:configure.ac:160: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_TRUE])
m4trace:configure.ac:160: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_FALSE])
m4trace:configure.ac:160: -1- m4_pattern_allow([^LT_CONFIG_H$])
m4trace:configure.ac:160: -1- AC_SUBST([ltdl_LIBOBJS], [$_ltdl_libobjs])
m4trace:configure.ac:160: -1- AC_SUBST_TRACE([ltdl_LIBOBJS])
m4trace:configure.ac:160: -1- m4_pattern_allow([^ltdl_LIBOBJS$])
m4trace:configure.ac:160: -1- AC_SUBST([ltdl_LTLIBOBJS], [$_ltdl_ltlibobjs])
m4trace:configure.ac:160: -1- AC_SUBST_TRACE([ltdl_LTLIBOBJS])
m4trace:configure.ac:160: -1- m4_pattern_allow([^ltdl_LTLIBOBJS$])
m4trace:configure.ac:160: -1- AC_SUBST_TRACE([top_builddir])
m4trace:configure.ac:160: -1- AC_SUBST_TRACE([top_build_prefix])
m4trace:configure.ac:160: -1- AC_SUBST_TRACE([srcdir])
m4trace:configure.ac:160: -1- AC_SUBST_TRACE([abs_srcdir])
m4trace:configure.ac:160: -1- AC_SUBST_TRACE([top_srcdir])
m4trace:configure.ac:160: -1- AC_SUBST_TRACE([abs_top_srcdir])
m4trace:configure.ac:160: -1- AC_SUBST_TRACE([builddir])
m4trace:configure.ac:160: -1- AC_SUBST_TRACE([abs_builddir])
m4trace:configure.ac:160: -1- AC_SUBST_TRACE([abs_top_builddir])
m4trace:configure.ac:160: -1- AC_SUBST_TRACE([INSTALL])
m4trace:configure.ac:160: -1- AC_SUBST_TRACE([MKDIR_P])
m4trace:configure.ac:160: -1- AC_REQUIRE_AUX_FILE([ltmain.sh])
